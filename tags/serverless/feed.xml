<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>serverless, on Will Schenk</title><link>https://willschenk.com/tags/serverless/</link><description>Recent content in serverless, on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/serverless/feed.xml" rel="self" type="application/rss+xml"/><item><title>Setting up redis and nat-connector with FaasD</title><link>https://willschenk.com/articles/2021/setting_up_services_with_faasd/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/setting_up_services_with_faasd/</guid><description>Lets look at how we expand our faasd server to include a couple of services. We&amp;#39;ll first add a redis server and some simple ruby code to add a counter, and then we&amp;#39;ll build and add the nats-connector to be able publish and subscribe to events. About /var/lib/faasd/docker-compose.yaml This looks like a docker-compose file, and I believe that it actually does use the same code that parses the file of that name, but it doesn&amp;#39;t use docker to set up the containers.</description></item><item><title>Installing faasd</title><link>https://willschenk.com/articles/2021/installing_faasd/</link><pubDate>Mon, 08 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/installing_faasd/</guid><description>Recently I came across an article on faasd, and I thought I&amp;#39;d give it a try and see how easy it is to use. Server templating is an easy way to create a server with DNS, and following the whole disposability principals, we&amp;#39;ll whip something up and see how it goes. What is faasd? Functions as a service are a way to easily package up simple functions as an API, with a minimal amount of overhead.</description></item><item><title>Effigy, a distributed social data layer</title><link>https://willschenk.com/articles/2020/effigy_social_data_layer/</link><pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/effigy_social_data_layer/</guid><description>I grew up in the world of BBSes, Usenet, and, to some extent, UUCP before that. This was fun â€“ a world wide network all built up by volunteers sharing. Since we are all carrying supercomputers around now with massive idle storage and bandwidth, let&amp;#39;s think about how we can recreate some of that fun, independent data sharing with modern web technologies, specifically Websockets and WebRTC. All you need is the computer that you already have with you.</description></item></channel></rss>