<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>activerecord, on Will Schenk</title><link>https://willschenk.com/tags/activerecord/</link><description>Recent content in activerecord, on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 10 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/activerecord/feed.xml" rel="self" type="application/rss+xml"/><item><title>Database Migrations</title><link>https://willschenk.com/articles/2021/database_migrations/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/database_migrations/</guid><description>Keeping track of database changes over time is best done using database migrations stored in a code repository. I&amp;#39;m working on something where programs in different languages will be access the same database, so here we are going to look at 3 different solutions to track changes that aren&amp;#39;t tied to a specific framework. We&amp;#39;re going to setup a postgres database – with pgadmin so we can see what&amp;#39;s going on – and then do the same execersizes with 3 different ways to manage changes.</description></item></channel></rss>