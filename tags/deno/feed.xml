<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>deno on Will Schenk</title><link>https://willschenk.com/tags/deno/</link><description>Recent content in deno on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 17 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/deno/feed.xml" rel="self" type="application/rss+xml"/><item><title>Setting up digital ocean spaces to upload</title><link>https://willschenk.com/articles/2021/setting_up_digital_ocean_spaces_to_upload/</link><pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/setting_up_digital_ocean_spaces_to_upload/</guid><description>Setup the space Config and keys First go and create a new space. Then generate a new spaces accesskey. Then create a .env file that contains the following variables. AWS_ACCESS_KEY_ID From digital ocean AWS_SECRET_ACCESS_KEY From digitial ocean AWS_END_POINT From the settings tab of your space BUCKET_NAME Name of the bucket My end point is nyc3.</description></item><item><title>SQLite in the browser</title><link>https://willschenk.com/articles/2021/sq_lite_in_the_browser/</link><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/sq_lite_in_the_browser/</guid><description>I&amp;#39;m getting more interested in SQLite as a database, keeping everything in memory to the process itself. When do we actually need to have a multi-process solution for a website? How much can we really do within a single process? One type of architecture I&amp;#39;m exploring is to have a zillion little sqlite files that are shipped around as needed, rather than providing an API to parse them out have one way where we can generate a bunch of effectively static assets of the structured data and then having the visualization happen on the client side.</description></item><item><title>Playing with deno</title><link>https://willschenk.com/articles/2020/deno/</link><pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/deno/</guid><description>Deno is a new V8 based TypeScript and JavaScript programming language that works like a command line web browser. It was written by the creaters of NodeJS and seeks to fix some of the issues with Node around it&amp;rsquo;s security model and pacakge management. Lets look at building a simple webservice using redis.
Install deno If you are in OSX you can use homebrew or install from a shell installer:</description></item></channel></rss>