<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nextjs, on Will Schenk</title><link>https://willschenk.com/tags/nextjs/</link><description>Recent content in nextjs, on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/nextjs/feed.xml" rel="self" type="application/rss+xml"/><item><title>Receiving CloudEvents with NextJS</title><link>https://willschenk.com/articles/2021/receiving_cloud_events_with_next_js/</link><pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/receiving_cloud_events_with_next_js/</guid><description>Need to receive cloudevents from your NextJS app? Me too! You need next-runtime. Install npm i next-runtime cloudevents In pages/indes.ts And then: import { handle, json } from &amp;#39;next-runtime&amp;#39;; import { HTTP } from &amp;#39;cloudevents&amp;#39;; export const getServerSideProps = handle({ async post({ req }) { console.log( req.body ) console.log( req.headers ) const receivedEvent = HTTP.toEvent({headers: req.headers, body: req.body }) console.log( receivedEvent ) return json({ message: &amp;#39;Thanks for your submission!</description></item><item><title>NextJS with Prisma on Kubernetes</title><link>https://willschenk.com/articles/2021/next_js_with_prisma/</link><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/next_js_with_prisma/</guid><description>Now that we have our cluster up and running, lets look at how to build and deploy a NextJS app on it, including the database. Create a NextJS app We&amp;#39;ll scaffold out a TypeScript app. npx create-next-app@latest --typescript myapp cd myapp npm run dev Fireup a local data docker run -e POSTGRES_PASSWORD=awesome_password -p 5432:5432 postgres Install prisma We&amp;#39;ll add the npm packages to our project.</description></item></channel></rss>