<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Will Schenk</title><link>https://willschenk.com/tags/golang/</link><description>Recent content in golang on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 10 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/golang/feed.xml" rel="self" type="application/rss+xml"/><item><title>Building a slimmer go Docker container</title><link>https://willschenk.com/articles/2019/building_a_slimmer_go_docker_container/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/building_a_slimmer_go_docker_container/</guid><description>&lt;p>Go binaries are self contained, which means that they don&amp;rsquo;t need anything special installed in the environment to deploy them. When people make &lt;code>Dockerfiles&lt;/code> to build go projects, they often include the the golang compilers and build tools, which isn&amp;rsquo;t necessary for running the container. I&amp;rsquo;m going to use &lt;a href="https://github.com/somarat/healer">healer&lt;/a> Docker container that &amp;ldquo;Automatically heal docker containers that report themselves unhealthy&amp;rdquo; as an example of reducing the image size from 648MB to 17MB.&lt;/p></description></item></channel></rss>