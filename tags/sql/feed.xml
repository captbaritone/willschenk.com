<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sql on Will Schenk</title><link>https://willschenk.com/tags/sql/</link><description>Recent content in sql on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 17 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/sql/feed.xml" rel="self" type="application/rss+xml"/><item><title>SQL in Org-Mode</title><link>https://willschenk.com/articles/2021/sql_in_org_mode/</link><pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/sql_in_org_mode/</guid><description>I do a lot of sql, and I do a lot of org-mode. Lets put them together. Native SQLite In org-babel-load-languages turn on sqlite. (You can use customize for this if you don&amp;#39;t have another method in use.) Then you have a source block that looks like _#+begin_src sqlite :db test.db :colnames yes create table if not exists greeting(one varchar(10), two varchar(10)); insert into greeting values( &amp;#39;Hello&amp;#39;, &amp;#39;world!</description></item><item><title>Using Askgit</title><link>https://willschenk.com/articles/2020/using_askgit/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/using_askgit/</guid><description>askgit provides a sql interface to your git repository. Let&amp;#39;s install it and see what we can figure out about the repo. Installing Following the instructions on the website, we can build the go binary with: go get -v -tags=sqlite_vtable github.com/augmentable-dev/askgit This will download the package, the dependencies, and compile everything into an executable. If you can&amp;#39;t figure out where it&amp;#39;s installed, check that you have GOPATH set correctly, and it will end up in $GOPATH/bin.</description></item><item><title>Dateslice: Writing rails extensions</title><link>https://willschenk.com/articles/2014/dateslice-writing-rails-extensions/</link><pubDate>Sun, 07 Dec 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/dateslice-writing-rails-extensions/</guid><description>Ruby on Rails is a very modular framework since the merging with Merb in 2008. The opinionated conventions are implemented under using techniques that let you jump in and build your own components, picking and choosing different parts that let you build Rails apps in the same straightforward way you would if using the official modules.
Let&amp;rsquo;s go through the dateslices gem which I wrote to extend active record so that we could better interact with the group by sql command when dealing with dates.</description></item></channel></rss>