<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cli on Will Schenk</title><link>https://willschenk.com/tags/cli/</link><description>Recent content in cli on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/cli/feed.xml" rel="self" type="application/rss+xml"/><item><title>Wrapping a executable in a function</title><link>https://willschenk.com/articles/2021/wrapping_a_executable_in_a_function/</link><pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/wrapping_a_executable_in_a_function/</guid><description>Lets look at how to wrap a command line program into a function. We&amp;#39;ll assume that you already have an OpenFaaS service running somewhere. First create the template faas new --lang dockerfile myfunction Calling the function I&amp;#39;m going to write a command in ruby so I&amp;#39;ll include things from the ruby:3.0.1 base image. The main thing here is that I&amp;#39;m copying the script into /usr/local/bin and I&amp;#39;m changing the fprocess ENV variable to be xargs gitinfo.</description></item></channel></rss>