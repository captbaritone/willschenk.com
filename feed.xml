<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Will Schenk</title><link>https://willschenk.com/</link><description>Recent content on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 15 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/feed.xml" rel="self" type="application/rss+xml"/><item><title>Emacs Blog Writing and Navigation Mode</title><link>https://willschenk.com/articles/2021/emacs_blogging_mode/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/emacs_blogging_mode/</guid><description>
&lt;p>
This blog is basically my labnotes where I explore different parts of
technology. Almost all of my coding related activity starts off in
this repo, while I explore different things to see how they work. I
have a lot of things in drafts, and I wanted to learn how to build a
simple emacs interface to let me navigate around my file system.
&lt;/p>
&lt;p>
I couldn&amp;#39;t find any good documentation on how to do anything with
&lt;code class="verbatim">tabulated-list-mode&lt;/code> so I spend the evening poking around and seeing
how it works. Here you go.
&lt;/p>
&lt;p>
The final file is &lt;a href="blog.el">blog.el&lt;/a>
&lt;/p>
&lt;h2 id="headline-1">
My basic directory structure
&lt;/h2>
&lt;p>
I have my repo checked out at &lt;code class="verbatim">~/willschenk.com&lt;/code>, and I put all my work
in &lt;code class="verbatim">content/articles&lt;/code> and then the year. So this file is called
&lt;code class="verbatim">/home/wschenk/willschenk.com/content/articles/2021/emacs_blogging_mode/index.org&lt;/code>
&lt;/p>
&lt;p>
Sometimes the &lt;code class="verbatim">org&lt;/code> file is at the top level directory, and in the past
I wrote in &lt;code class="verbatim">md&lt;/code> files so I want to make sure that they come through as
well.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="c1">;; set the directory&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">blog-mode-base-dir&lt;/span> &lt;span class="s">&amp;#34;/home/wschenk/willschenk.com/content/articles&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="ss">&amp;#39;transient&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
How &lt;code class="verbatim">tabulated-list-mode&lt;/code> works
&lt;/h2>
&lt;p>
The basic idea is that
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
You create a derived mode from &lt;code class="verbatim">tabulated-list-mode&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
This defines the column headers in &lt;code class="verbatim">tabulated-list-format&lt;/code>, and some
other stuff
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
You create a function that
&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
Creates a new buffer
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Switches to your derived mode
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Sets &lt;code class="verbatim">tabluated-list-entries&lt;/code>, which is a list of lists, the first
element being the key and the following elements are the data
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Calles &lt;code class="verbatim">(tabulated-list-print t)&lt;/code> which displays the data
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>
You create a mode map that lets you add functions, the selected &lt;code class="verbatim">key&lt;/code>
is returned by &lt;code class="verbatim">tabulated-list-get-id&lt;/code>.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
One tricky thing to figure out is how to create the data. It looks like
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span> &lt;span class="nv">key1&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nv">col1&lt;/span> &lt;span class="nv">col2&lt;/span> &lt;span class="nv">col3&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span> &lt;span class="nv">key2&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nv">col1&lt;/span> &lt;span class="nv">col2&lt;/span> &lt;span class="nv">col3&lt;/span>&lt;span class="p">]))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which you can create using &lt;code class="verbatim">(list key1 (vector col1 col2 col3))&lt;/code> if you
want to actually use the values that &lt;code class="verbatim">col1&lt;/code> points to rather than the
symbol &lt;code class="verbatim">col1&lt;/code> itself. Yay lisp!
&lt;/p>
&lt;p>
Let&amp;#39;s get started.
&lt;/p>
&lt;h2 id="headline-3">
Looking at the front matter
&lt;/h2>
&lt;p>
This function takes a file, and passes it through &lt;code class="verbatim">awk&lt;/code> to parse the
front matter. We will basically call this 4 times for each file to
pull out the &lt;code class="verbatim">title&lt;/code>, &lt;code class="verbatim">date&lt;/code>, &lt;code class="verbatim">draft&lt;/code>, and &lt;code class="verbatim">tags&lt;/code>.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">pattern&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">result&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">car&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">process-lines&lt;/span> &lt;span class="s">&amp;#34;awk&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;-F: &amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="nv">pattern&lt;/span> &lt;span class="s">&amp;#34; {print $2}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="nv">result&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">replace-regexp-in-string&lt;/span> &lt;span class="s">&amp;#34;\&amp;#34;&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="nv">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Also, I&amp;#39;m removing any quotes around the results.
&lt;/p>
&lt;h2 id="headline-4">
Parse a &lt;code class="verbatim">.org&lt;/code> file
&lt;/h2>
&lt;p>
This takes a file, and pulls out the attributes. I&amp;#39;m assuming that
the first ones it find is actually the top matter, we ignore all other
matches other than the first.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-parse-org&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">title&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/\\+title/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">date&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/\\+date/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">draft&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/\\+draft/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tags&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/\\+tags/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span> &lt;span class="nv">file&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">vector&lt;/span> &lt;span class="nv">title&lt;/span> &lt;span class="nv">draft&lt;/span> &lt;span class="nv">date&lt;/span> &lt;span class="nv">tags&lt;/span>&lt;span class="p">))))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="c1">;; parse an org-file test&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">org-test&lt;/span> &lt;span class="s">&amp;#34;/home/wschenk/willschenk.com/content/articles/2021/setting_up_emacs_for_typescript_development.org&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-org&lt;/span> &lt;span class="nv">org-test&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-5">
Parsing an &lt;code class="verbatim">md&lt;/code> file
&lt;/h2>
&lt;p>
Depending upon what sort of front matter you use, you may need to
adjust the regex. All my old markdown files are using &lt;code class="verbatim">yaml&lt;/code> and not
&lt;code class="verbatim">toml&lt;/code>, so your mileage may vary.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">
&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-parse-md&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">title&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/^title/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">date&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/^date/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">draft&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/^draft/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tags&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-file-peek&lt;/span> &lt;span class="s">&amp;#34;/^tags/&amp;#34;&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span> &lt;span class="nv">file&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">vector&lt;/span> &lt;span class="nv">title&lt;/span> &lt;span class="nv">draft&lt;/span> &lt;span class="nv">date&lt;/span> &lt;span class="nv">tags&lt;/span>&lt;span class="p">))))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="c1">;; parse a md file test&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">md-test&lt;/span> &lt;span class="s">&amp;#34;/home/wschenk/willschenk.com/content/articles/2020/styling_tables_with_hugo.md&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-md&lt;/span> &lt;span class="nv">md-test&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-6">
Figure out if its a directory or not
&lt;/h2>
&lt;p>
For short posts that don&amp;#39;t have any tangling or other sub objects, my
&lt;code class="verbatim">org&lt;/code> files live in the year directory. For others, it&amp;#39;s either going
to be &lt;code class="verbatim">index.md&lt;/code> or &lt;code class="verbatim">index.org&lt;/code> so if we get a directory lets see which
one is in there.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-parse-directory&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">directory&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">md&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="nv">directory&lt;/span> &lt;span class="s">&amp;#34;/index.md&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">org&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="nv">directory&lt;/span> &lt;span class="s">&amp;#34;/index.org&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-exists-p&lt;/span> &lt;span class="nv">md&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-md&lt;/span> &lt;span class="nv">md&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-exists-p&lt;/span> &lt;span class="nv">org&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-org&lt;/span> &lt;span class="nv">org&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">nil&lt;/span>&lt;span class="p">))))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="c1">;; What can we figure out from a directory test&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">dir-test&lt;/span> &lt;span class="s">&amp;#34;/home/wschenk/willschenk.com/content/articles/2021/gist_in_emacs&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-directory&lt;/span> &lt;span class="nv">dir-test&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-7">
Figure out which parser to delegate to
&lt;/h2>
&lt;p>
Given a file name or a directory, figure out which parse method knows
how to make sense of it.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-parse&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-directory-p&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-directory&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">ex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">file-name-extension&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">string=&lt;/span> &lt;span class="nv">ex&lt;/span> &lt;span class="s">&amp;#34;md&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-md&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">string=&lt;/span> &lt;span class="nv">ex&lt;/span> &lt;span class="s">&amp;#34;org&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse-org&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">message&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="s">&amp;#34;Unknown extension &amp;#34;&lt;/span> &lt;span class="nv">ex&lt;/span>&lt;span class="p">)))))))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="c1">;; another test&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse&lt;/span> &lt;span class="nv">org-test&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-8">
Scan through all of the files and then parse them
&lt;/h2>
&lt;p>
I&amp;#39;m again shelling out to the &lt;code class="verbatim">find&lt;/code> command with &lt;code class="verbatim">-maxdepth&lt;/code> of &lt;code class="verbatim">2&lt;/code> to give
me a list of the files and/or directories that contain blog posts.
For each of the files, I&amp;#39;m parsing them to get the data in tab form
that the mode knows how to deal with.
&lt;/p>
&lt;p>
&lt;code class="verbatim">dolist&lt;/code> was fun to figure out.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-refresh-data&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">blog-mode-entries&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">dolist&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">file&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">process-lines&lt;/span> &lt;span class="s">&amp;#34;find&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-base-dir&lt;/span> &lt;span class="s">&amp;#34;-maxdepth&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;-print&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">entry&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="nv">entry&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">push&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-parse&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">blog-mode-entries&lt;/span>&lt;span class="p">)))))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-refresh-data&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-9">
Set up the mode itself
&lt;/h2>
&lt;p>
We create a derived mode called &lt;code class="verbatim">blog-mode&lt;/code> from &lt;code class="verbatim">tabulated-list-mode&lt;/code>.
In it we set the columns, padding, sort order (on date) and
explicitely tell it to use our mode map, &lt;code class="verbatim">blog-mode-map&lt;/code> defined below.
It&amp;#39;s unclear why it doesn&amp;#39;t pick it up automatically, but I needed to
call it out specifically.
&lt;/p>
&lt;p>
We also create a &lt;code class="verbatim">blog-list&lt;/code> function which is our entry point. This
creates and opens a new buffer, switches it to &lt;code class="verbatim">blog-mode&lt;/code>, loads in our
data, and then tells it to display. &lt;code class="verbatim">tabulated-list-entries&lt;/code> is local
to the buffer, by the by, so you can have multiple modes using the
same variable.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">define-derived-mode&lt;/span> &lt;span class="nv">blog-mode&lt;/span> &lt;span class="nv">tabulated-list-mode&lt;/span> &lt;span class="s">&amp;#34;blog-mode&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;Major mode Blog Mode, to edit hugo blogs&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-format&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="s">&amp;#34;Title&amp;#34;&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Draft&amp;#34;&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Date&amp;#34;&lt;/span> &lt;span class="mi">11&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Tags&amp;#34;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)])&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-padding&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-sort-key&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">cons&lt;/span> &lt;span class="s">&amp;#34;Date&amp;#34;&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">use-local-map&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tabulated-list-init-header&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-list&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">pop-to-buffer&lt;/span> &lt;span class="s">&amp;#34;*Blog Mode*&amp;#34;&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-refresh-data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-entries&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">-non-nil&lt;/span> &lt;span class="nv">blog-mode-entries&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tabulated-list-print&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-10">
Create the mode map
&lt;/h2>
&lt;p>
Here I&amp;#39;m defining some functions that are specific to our mode.
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">?&lt;/code>&lt;/td>
&lt;td>Help&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">o&lt;/code>&lt;/td>
&lt;td>Open the selected file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">r&lt;/code>&lt;/td>
&lt;td>Refresh lists&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">d&lt;/code>&lt;/td>
&lt;td>Only show drafts&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">p&lt;/code>&lt;/td>
&lt;td>Only show published posts&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">a&lt;/code>&lt;/td>
&lt;td>Show all posts&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">c&lt;/code>&lt;/td>
&lt;td>Create a new post&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">s&lt;/code>&lt;/td>
&lt;td>Start the hugo process&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
For fun I also created a &lt;code class="verbatim">transient&lt;/code> popup which shows all of this.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defvar&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="no">nil&lt;/span> &lt;span class="s">&amp;#34;keymap for blog-mode&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">make-sparse-keymap&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;?&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-help&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;o&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-open&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;&amp;lt;return&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-open&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-drafts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;p&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-published&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-refresh-all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-make-draft&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;s&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-start-hugo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">define-key&lt;/span> &lt;span class="nv">blog-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;RET&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-mode-open&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">transient-define-prefix&lt;/span> &lt;span class="nv">blog-mode-help&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="s">&amp;#34;Help transient for blog mode.&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;Blog mode help&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;o&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;Open&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-open&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;d&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;Drafts&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-drafts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;All&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;p&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;Published&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-published&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;r&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;Refresh&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-refresh-all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;c&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;Create post&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-make-draft&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;s&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;Start hugo&amp;#34;&lt;/span> &lt;span class="nv">blog-mode-start-hugo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">])&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-11">
Actions: open
&lt;/h2>
&lt;p>
I set the key to be the filename, so &lt;code class="verbatim">(find-file
(tabulated-list-get-id))&lt;/code> opens the file.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-open&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">find-file&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">tabulated-list-get-id&lt;/span>&lt;span class="p">)))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-12">
Actions: All/Published/Drafts
&lt;/h2>
&lt;p>
These functions filter the &lt;code class="verbatim">blog-mode-entries&lt;/code> variable to filter what
is displayed. I&amp;#39;m not sure how I feel about calling
&lt;code class="verbatim">tabulated-list-print&lt;/code> each time but it seems to work.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-refresh-all&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">progn&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">blog-mode-refresh-data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-entries&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">-non-nil&lt;/span> &lt;span class="nv">blog-mode-entries&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tabulated-list-print&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-all&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">progn&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-entries&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">-non-nil&lt;/span> &lt;span class="nv">blog-mode-entries&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tabulated-list-print&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-drafts&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">progn&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-entries&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">-filter&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">lambda&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">string=&lt;/span> &lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">aref&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">car&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">cdr&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">-non-nil&lt;/span> &lt;span class="nv">blog-mode-entries&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tabulated-list-print&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-published&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">progn&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tabulated-list-entries&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">-filter&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">lambda&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">string=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">aref&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">car&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">cdr&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="nv">blog-mode-entries&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tabulated-list-print&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-13">
Actions: create a new post
&lt;/h2>
&lt;p>
I like my urls to be the same as the title, so the first function here
normalizes the title to fit in the filesystem. I&amp;#39;ve forgotten where I
copied this code from, by thank you internet.
&lt;/p>
&lt;p>
I have two types of posts. &amp;#34;mini&amp;#34; which just means its a standalone
file, and a full post, which is in a directory. I also turn on
automatic &lt;code class="verbatim">org-babel-tangle&lt;/code> on save, which I set as a local org
variable.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">string-title-to-filename&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="s">&amp;#34;FooBar =&amp;gt; foo_bar&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">case-fold-search&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">str&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">replace-regexp-in-string&lt;/span> &lt;span class="s">&amp;#34;\\([a-z0-9]\\)\\([A-Z]\\)&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;\\1_\\2&amp;#34;&lt;/span> &lt;span class="nv">str&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">str&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">replace-regexp-in-string&lt;/span> &lt;span class="s">&amp;#34;\\([A-Z]+\\)\\([A-Z][a-z]\\)&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;\\1_\\2&amp;#34;&lt;/span> &lt;span class="nv">str&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">str&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">replace-regexp-in-string&lt;/span> &lt;span class="s">&amp;#34;-&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;_&amp;#34;&lt;/span> &lt;span class="nv">str&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">; FOO-BAR =&amp;gt; FOO_BAR&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">str&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">replace-regexp-in-string&lt;/span> &lt;span class="s">&amp;#34;_+&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;_&amp;#34;&lt;/span> &lt;span class="nv">str&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">str&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">replace-regexp-in-string&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span> &lt;span class="s">&amp;#34;_&amp;#34;&lt;/span> &lt;span class="nv">str&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">downcase&lt;/span> &lt;span class="nv">str&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-make-draft&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="s">&amp;#34;Little function to create a org file inside of the blog&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">mini&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">yes-or-no-p&lt;/span> &lt;span class="s">&amp;#34;Mini post? &amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">title&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">read-from-minibuffer&lt;/span> &lt;span class="s">&amp;#34;Title: &amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">year&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">format-time-string&lt;/span> &lt;span class="s">&amp;#34;%Y&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">filename&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">string-title-to-filename&lt;/span> &lt;span class="nv">title&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">rootpath&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="nv">blog-mode-base-dir&lt;/span> &lt;span class="s">&amp;#34;/&amp;#34;&lt;/span> &lt;span class="nv">year&lt;/span> &lt;span class="s">&amp;#34;/&amp;#34;&lt;/span> &lt;span class="nv">filename&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">path&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="nv">mini&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="nv">rootpath&lt;/span> &lt;span class="s">&amp;#34;.org&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="nv">rootpath&lt;/span> &lt;span class="s">&amp;#34;/index.org&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">set-buffer&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">find-file&lt;/span> &lt;span class="nv">path&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">insert&lt;/span> &lt;span class="s">&amp;#34;#+title: &amp;#34;&lt;/span> &lt;span class="nv">title&lt;/span> &lt;span class="s">&amp;#34;\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">insert&lt;/span> &lt;span class="s">&amp;#34;#+date: &amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">format-time-string&lt;/span> &lt;span class="s">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="s">&amp;#34;\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">insert&lt;/span> &lt;span class="s">&amp;#34;#+draft: true\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">unless&lt;/span> &lt;span class="nv">mini&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">insert&lt;/span> &lt;span class="s">&amp;#34;\n* References\n# Local Variables:\n# eval: (add-hook &amp;#39;after-save-hook (lambda ()(org-babel-tangle)) nil t)\n# End:\n&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-14">
Action: Start hugo
&lt;/h2>
&lt;p>
This is probably too particular for my machine, since I run hugo
inside of a docker container so I need to start it with a script, but
this function starts hugo if it isn&amp;#39;t running, then waits 5 seconds to
call &lt;code class="verbatim">xdg-open&lt;/code> to bring it up in the browser.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">blog-mode-start-hugo&lt;/span> &lt;span class="p">()&lt;/span>
&lt;span class="s">&amp;#34;Starts up a hugo watch process&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">default-directory&lt;/span> &lt;span class="s">&amp;#34;/home/wschenk/willschenk.com&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">height&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">frame-total-lines&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">name&lt;/span> &lt;span class="s">&amp;#34;*shell hugo process&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">delete-other-windows&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">split-window-vertically&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">-&lt;/span> &lt;span class="nv">height&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">other-window&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">switch-to-buffer&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">unless&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">get-buffer-process&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">async-shell-command&lt;/span> &lt;span class="s">&amp;#34;cd /home/wschenk/willschenk.com;./dev.sh&amp;#34;&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">async-shell-command&lt;/span> &lt;span class="s">&amp;#34;sleep 5;xdg-open http://localhost:1313&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">get-buffer&lt;/span> &lt;span class="s">&amp;#34;*hugo web opener*&amp;#34;&lt;/span>&lt;span class="p">))))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-15">
Plug it in
&lt;/h2>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nv">global-set-key&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;C-c d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;blog-list&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-16">
Conclusion
&lt;/h2>
&lt;p>
I couldn&amp;#39;t find any good tutorials on how to write an emacs mode to
interact with my system, so I thought I should write one. I think
there&amp;#39;s probably something on YouTube but it didn&amp;#39;t show up in any
search algorithms so hopefully this is helpful.
&lt;/p>
&lt;h2 id="headline-17">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://pagefault.se/post/lets-build-docker-mode-part-1/">https://pagefault.se/post/lets-build-docker-mode-part-1/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/File-Name-Components.html#File-Name-Components">https://www.gnu.org/software/emacs/manual/html_node/elisp/File-Name-Components.html#File-Name-Components&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="http://lgmoneda.github.io/2017/03/15/elisp-summary.html#loops">http://lgmoneda.github.io/2017/03/15/elisp-summary.html#loops&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="http://ergoemacs.org/emacs/elisp_vector.html">http://ergoemacs.org/emacs/elisp_vector.html&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://stackoverflow.com/questions/2234860/lisp-filter-out-results-from-list-not-matching-predicate">https://stackoverflow.com/questions/2234860/lisp-filter-out-results-from-list-not-matching-predicate&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://vallyscode.github.io/posts/tabulated-list-mode/">https://vallyscode.github.io/posts/tabulated-list-mode/&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>asdf as environment manager</title><link>https://willschenk.com/articles/2021/asdf_as_environment_manager/</link><pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/asdf_as_environment_manager/</guid><description>
&lt;p>
I&amp;#39;ve switch to using &lt;a href="https://asdf-vm.com/">asdf&lt;/a> to manage my computers version of different
programming environments. This is both a more unified approach to
using both &lt;code class="verbatim">nvm&lt;/code> and &lt;code class="verbatim">rbenv&lt;/code>, since it handles a lot more programming
languages, but the implementation is also faster.
&lt;/p>
&lt;h2 id="headline-1">
Installing &lt;code class="verbatim">asdf&lt;/code>
&lt;/h2>
&lt;p>
Go to the &lt;a href="https://asdf-vm.com/#/core-manage-asdf">asdf getting started page&lt;/a> to get the latest version:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.0&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then add this to your &lt;code class="verbatim">~/.bashrc&lt;/code>:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">. &lt;span class="nv">$HOME&lt;/span>/.asdf/asdf.sh&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Add a plugin
&lt;/h2>
&lt;p>
Different languages are supported using plugins, so first we need to
install a plugin. For example:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">asdf plugin add deno&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-3">
Updating plugins
&lt;/h2>
&lt;p>
&lt;code class="verbatim">asdf&lt;/code> itself has the code to manage the environment directories and
keeping track of the packages. The &lt;code class="verbatim">plugins&lt;/code> know all about a specific
environment. So if you want to get the latest version of, say, deno,
you need to update the plugin because that&amp;#39;s where the build
instructions live.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">asdf plugin update --all&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-4">
Installing a version
&lt;/h2>
&lt;p>
This will list all available versions for a specific environment:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">asdf list all deno&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We can install the latest with:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">asdf install deno latest&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
∗ Downloading and installing deno...
Archive: /home/wschenk/.asdf/installs/deno/1.8.1/bin/deno.zip
inflating: /home/wschenk/.asdf/installs/deno/1.8.1/bin/deno
The installation was successful!
&lt;/pre>
&lt;p>
We can install a specific version with:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">asdf install deno 1.6.3&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
∗ Downloading and installing deno...
Archive: /home/wschenk/.asdf/installs/deno/1.6.3/bin/deno.zip
inflating: /home/wschenk/.asdf/installs/deno/1.6.3/bin/deno
The installation was successful!
&lt;/pre>
&lt;h2 id="headline-5">
Selecting a version to use
&lt;/h2>
&lt;p>
There are 3 different scopes for usage:
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">global&lt;/code>&lt;/td>
&lt;td>written into &lt;code class="verbatim">~/.tool-version&lt;/code>, the default unless overridden&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">shell&lt;/code>&lt;/td>
&lt;td>the version that the current shell defaults to&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">local&lt;/code>&lt;/td>
&lt;td>written into $PWD/.tool-version, overridden by directory&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
In our case, I&amp;#39;m going to do
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">asdf global deno 1.6.3&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">deno --version&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
deno 1.6.3 (release, x86_64-unknown-linux-gnu)
v8 8.8.294
typescript 4.1.3
&lt;/pre>
&lt;h2 id="headline-6">
Conclusion
&lt;/h2>
&lt;p>
There seems to be a lot less shell overhead when using &lt;code class="verbatim">asdf&lt;/code> vs &lt;code class="verbatim">rbenv&lt;/code>
and all the other ones, so I found that in practice it really sped up
my system when running something that created a lot of subshells
(&lt;code class="verbatim">./configure&lt;/code> for example.)
&lt;/p></description></item><item><title>Database Migrations</title><link>https://willschenk.com/articles/2021/database_migrations/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/database_migrations/</guid><description>
&lt;p>
Keeping track of database changes over time is best done using
database migrations stored in a code repository. I&amp;#39;m working on
something where programs in different languages will be access the
same database, so here we are going to look at 3 different solutions
to track changes that aren&amp;#39;t tied to a specific framework.
&lt;/p>
&lt;p>
We&amp;#39;re going to setup a postgres database – with &lt;code class="verbatim">pgadmin&lt;/code> so we can see
what&amp;#39;s going on – and then do the same execersizes with 3 different
ways to manage changes.
&lt;/p>
&lt;h2 id="headline-1">
Setup the databases
&lt;/h2>
&lt;p>
Lets get our test environment up and running:
&lt;/p>
&lt;p>
Using &lt;code class="verbatim">docker-compose.yaml&lt;/code>:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">postgres&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>postgres&lt;span class="p">:&lt;/span>&lt;span class="m">13.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">POSTGRES_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>awesome_password&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5432:5432&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- postgres&lt;span class="p">:&lt;/span>/var/lib/postgresql/data&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pgadmin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>dpage/pgadmin4&lt;span class="p">:&lt;/span>&lt;span class="m">5.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PGADMIN_DEFAULT_EMAIL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>admin@example.com&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PGADMIN_DEFAULT_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>SuperSecret&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GUNICORN_ACCESS_LOGFILE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/dev/&lt;span class="kc">null&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;4000:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- postgres&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- pgadmin&lt;span class="p">:&lt;/span>/var/lib/pgadmin&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">postgres&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>pgadmin&lt;span class="p">:&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose up&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And finally create the test databases:
&lt;/p>
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">docker-compose run --rm postgres psql -h postgres -U postgres
postgres=# create database nodetest;
create database nodetest;
CREATE DATABASE
postgres=# create database rubytest;
create database rubytest;
CREATE DATABASE
postgres=# create database gotest;
create database gotest;
CREATE DATABASE
postgres=# \q&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We have out three databases now, so it&amp;#39;s time to run through the contenders!
&lt;/p>
&lt;h2 id="headline-2">
Node: &lt;code class="verbatim">db-migrate&lt;/code>
&lt;/h2>
&lt;p>
First we&amp;#39;ll create a node project to load the &lt;code class="verbatim">db-migrate&lt;/code> module with
the postgres adapter. I try very hard not to install things globally,
so this will happen within a project.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> npm init -y
npm install db-migrate db-migrate-pg&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we need to create a &lt;code class="verbatim">database.json&lt;/code> file, which tells &lt;code class="verbatim">db-migrate&lt;/code> how
to connect to the database.
&lt;/p>
&lt;div class="src src-json">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json"> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;dev&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;driver&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;pg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;awesome_password&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;nodetest&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;5432&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-3">
Creating a table
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> ./node_modules/.bin/db-migrate create create_urls&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then open up the created migration in the &lt;code class="verbatim">migrations&lt;/code> folder, and change the &lt;code class="verbatim">up&lt;/code> function to be:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript"> &lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">up&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createTable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;urls&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;int&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">primaryKey&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">full_name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">length&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">200&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">added&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;date&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">active&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;boolean&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;true&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> ./node_modules/.bin/db-migrate up&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-4">
Renaming a column
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./node_modules/.bin/db-migrate create rename_url_column
&lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> Created migration at /home/wschenk/willschenk.com/content/article&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then in the new migration:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">up&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">renameColumn&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;urls&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;full_name&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;url&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">down&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">renameColumn&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;urls&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;url&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;full_name&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then do the migration again:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> ./node_modules/.bin/db-migrate up&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-5">
Thoughts
&lt;/h3>
&lt;p>
Probably I&amp;#39;m being foolish by not installing this globally, but there
you go. You can choose to have &lt;code class="verbatim">db-migrate&lt;/code> use SQL files or write the
changes in javascript. Doing it in JavaScript gives you options to
switch databases, to use SQLite for example in development. In
practice this is is rarely done, but its a nice option.
&lt;/p>
&lt;p>
I found the documentation of &lt;code class="verbatim">db-migrate&lt;/code> to be unhelpful. It could use
more examples and I was a bit bewildered at first even though it
turned out to be straightforward to get working.
&lt;/p>
&lt;h2 id="headline-6">
Ruby: &lt;code class="verbatim">ActiveRecord&lt;/code>
&lt;/h2>
&lt;p>
Lets see how to use &lt;a href="https://edgeguides.rubyonrails.org/active_record_basics.html">ActiveRecord&lt;/a> to handle migrations, but without
using rails.
&lt;/p>
&lt;p>
First we need to make sure that we have a ruby environment with the
correct gems installed:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> bundle init
bundle add &lt;span class="s2">&amp;#34;activerecord&amp;#34;&lt;/span> --version &lt;span class="s2">&amp;#34;6.1.3&amp;#34;&lt;/span>
bundle add rake&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we setup our &lt;code class="verbatim">database.yml&lt;/code>:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">adapter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;postgresql&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">encoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>utf&lt;span class="m">-8&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">database&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;rubytest&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>postgres&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>awesome_password&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And we can make a &lt;code class="verbatim">Rakefile&lt;/code> to give us a similar usage pattern as you&amp;#39;d
get with rails:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="c1"># From https://gist.github.com/Rhoxio/ee9a855088c53d447f2eb888bd9d09a4&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s2">&amp;#34;active_record&amp;#34;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s2">&amp;#34;fileutils&amp;#34;&lt;/span>
&lt;span class="no">FileUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkdir_p&lt;/span> &lt;span class="s2">&amp;#34;db/migrate&amp;#34;&lt;/span>
&lt;span class="n">namespace&lt;/span> &lt;span class="ss">:db&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">db_config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">YAML&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="nb">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;database.yml&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">db_config_admin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">db_config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">merge&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;database&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;postgres&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;schema_search_path&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;public&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;Create the database&amp;#34;&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:create&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">establish_connection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">db_config_admin&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_database&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">db_config&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Database created.&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;Migrate the database&amp;#34;&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:migrate&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">establish_connection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">db_config&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Tasks&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">DatabaseTasks&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">migrate&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;db:schema&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Database migrated.&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;Drop the database&amp;#34;&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:drop&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">establish_connection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">db_config_admin&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">drop_database&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">db_config&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Database deleted.&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;Reset the database&amp;#34;&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:reset&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:drop&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:create&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:migrate&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s1">&amp;#39;Create a db/schema.rb file that is portable against any DB supported by AR&amp;#39;&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:schema&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">establish_connection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">db_config&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;active_record/schema_dumper&amp;#39;&lt;/span>
&lt;span class="n">filename&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;db/schema.rb&amp;#34;&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w:utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">SchemaDumper&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">namespace&lt;/span> &lt;span class="ss">:g&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;Generate migration&amp;#34;&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:migration&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">ARGV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="k">raise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Specify name: rake g:migration your_migration&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">timestamp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;%Y%m%d%H%M%S&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expand_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;../db/migrate/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">timestamp&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.rb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">__FILE__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">migration_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;_&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="ss">:capitalize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;w&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span> &lt;span class="s">&amp;lt;&amp;lt;-EOF
&lt;/span>&lt;span class="s">&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="c1">#{migration_class} &amp;lt; ActiveRecord::Migration[6.0]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">up&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">down&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="no">EOF&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Migration &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> created&amp;#34;&lt;/span>
&lt;span class="nb">abort&lt;/span> &lt;span class="c1"># needed stop other tasks&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This is a handy task runner also, so you could stick more tasks in
there as time goes on. Here you can see the ones that are defined.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">rake -T&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-7">
Creating a table
&lt;/h3>
&lt;p>
Create the template:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">rake g:migration create_users&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then fill out the migration itself:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">CreateUser&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Migration&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">up&lt;/span>
&lt;span class="n">create_table&lt;/span> &lt;span class="ss">:urls&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="ss">:full_name&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datetime&lt;/span> &lt;span class="ss">:added&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">boolean&lt;/span> &lt;span class="ss">:active&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">default&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">down&lt;/span>
&lt;span class="n">drop_table&lt;/span> &lt;span class="ss">:urls&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And finally run it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> rake db:migrate&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-8">
Renaming a column
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">rake g:migration rename_url_column&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And edit the resulting migration:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">class&lt;/span> &lt;span class="nc">RenameUrlColumn&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Migration&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">up&lt;/span>
&lt;span class="n">rename_column&lt;/span> &lt;span class="ss">:urls&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:full_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:url&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">down&lt;/span>
&lt;span class="n">rename_column&lt;/span> &lt;span class="ss">:urls&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:full_name&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then run it:
&lt;/p>
&lt;h3 id="headline-9">
Schema dump
&lt;/h3>
&lt;p>
The rakefile will also extract what it knows about the database and
put it in the &lt;code class="verbatim">db/schema.rb&lt;/code> file, which ends up like:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Schema&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">define&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">version&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2021_03_10_205953&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="c1"># These are extensions that must be enabled in order to support this database&lt;/span>
&lt;span class="n">enable_extension&lt;/span> &lt;span class="s2">&amp;#34;plpgsql&amp;#34;&lt;/span>
&lt;span class="n">create_table&lt;/span> &lt;span class="s2">&amp;#34;urls&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">force&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:cascade&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="s2">&amp;#34;url&amp;#34;&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datetime&lt;/span> &lt;span class="s2">&amp;#34;added&amp;#34;&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">boolean&lt;/span> &lt;span class="s2">&amp;#34;active&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">default&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which is handy if you are used to rails. The &lt;code class="verbatim">rake db:reset&lt;/code> function
is also pretty handy.
&lt;/p>
&lt;h3 id="headline-10">
Thoughts
&lt;/h3>
&lt;p>
This is the style that I&amp;#39;m more used to, so I&amp;#39;m biased. However one
thing I really like is that it will create the database for you if
need it, and &lt;code class="verbatim">db:reset&lt;/code> often comes in handy. Feels much more user
friendly than the node version does.
&lt;/p>
&lt;h2 id="headline-11">
Go: &lt;code class="verbatim">golang-migrate&lt;/code>
&lt;/h2>
&lt;p>
Another interesting option is to use the &lt;code class="verbatim">migrate&lt;/code> tool which is written
in go. This can be run as a standalone cli (so similar to &lt;code class="verbatim">db-migrate&lt;/code>
in that respect) but also embedded in your go programs, running on
startup perhaps as needed.
&lt;/p>
&lt;p>
This also packaged up as a docker image, so we don&amp;#39;t need it install
anything locally if we don&amp;#39;t want to, which I don&amp;#39;t, so lets create a
quick script &lt;code class="verbatim">migrate&lt;/code> to run the command:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="c1">#!/bin/bash&lt;/span>
mkdir -p migrations
docker run --rm -it --user &lt;span class="k">$(&lt;/span>id -u&lt;span class="k">)&lt;/span>:&lt;span class="k">$(&lt;/span>id -g&lt;span class="k">)&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -v &lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>/migrations:/migrations &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --network host &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> migrate/migrate &lt;span class="nv">$@&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You could also just &lt;a href="https://github.com/golang-migrate/migrate/tree/master/cmd/migrate">install the CLI&lt;/a>.
&lt;/p>
&lt;p>
The rest here is adapted from the &lt;a href="https://github.com/golang-migrate/migrate/blob/master/database/postgres/TUTORIAL.md">Postgres tutorial&lt;/a>.
&lt;/p>
&lt;h3 id="headline-12">
Create a table
&lt;/h3>
&lt;p>
First we generate our templates:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> migrate create -ext sql -dir /migrations -seq create_urls&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then in put our sql in the generated file
&lt;code class="verbatim">migrations/000001_create_urls.up.sql&lt;/code>:
&lt;/p>
&lt;div class="src src-sql">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql"> &lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="n">urls&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="nb">serial&lt;/span> &lt;span class="k">PRIMARY&lt;/span> &lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">full_name&lt;/span> &lt;span class="nb">VARCHAR&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">added&lt;/span> &lt;span class="k">timestamp&lt;/span> &lt;span class="k">without&lt;/span> &lt;span class="n">time&lt;/span> &lt;span class="k">zone&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">active&lt;/span> &lt;span class="nb">boolean&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="k">true&lt;/span>
&lt;span class="p">);&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
To run the migration itself we are going to pass the database connect
string as an environment variable first, and then run the migration:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">POSTGRESQL_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;postgres://postgres:awesome_password@localhost:5432/gotest?sslmode=disable&amp;#39;&lt;/span>
migrate -database &lt;span class="si">${&lt;/span>&lt;span class="nv">POSTGRESQL_URL&lt;/span>&lt;span class="si">}&lt;/span> -path /migrations up
1/u create_urls &lt;span class="o">(&lt;/span>55.866946ms&lt;span class="o">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-13">
Renaming a column
&lt;/h3>
&lt;p>
Create our template:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> migrate create -ext sql -dir /migrations -seq rename_fullname_to_url&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Slap the sql into the new file:
&lt;/p>
&lt;div class="src src-sql">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql"> &lt;span class="k">alter&lt;/span> &lt;span class="k">table&lt;/span> &lt;span class="n">urls&lt;/span> &lt;span class="k">rename&lt;/span> &lt;span class="k">column&lt;/span> &lt;span class="n">full_name&lt;/span> &lt;span class="k">to&lt;/span> &lt;span class="n">url&lt;/span>&lt;span class="p">;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And run:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> migrate -database &lt;span class="si">${&lt;/span>&lt;span class="nv">POSTGRESQL_URL&lt;/span>&lt;span class="si">}&lt;/span> -path /migrations up&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-14">
Thoughts
&lt;/h3>
&lt;p>
This feels like the cleanest &amp;#34;standalone&amp;#34; tool. Writing database
specific sql feels like a bit of a throwback but honestly at a certain
point you&amp;#39;ll need to get into that level on control. The docker image
is only &lt;code class="verbatim">35.1MB&lt;/code> and anything with node or ruby is generally in the 100s
of MB, which is probably fine overall but feels a bit excessive for
something this seemingly simple.
&lt;/p>
&lt;h2 id="headline-15">
Conclusion
&lt;/h2>
&lt;p>
I like the &lt;code class="verbatim">Rakefile&lt;/code> based solution the best, since it gives me both
more functionality out of the box (db create and reset, schema
definitions), it&amp;#39;s a good place to add other tasks, and, let&amp;#39;s
acknowledge it, I&amp;#39;m the most familiar with it.
&lt;/p>
&lt;p>
Of the three, the go one feels the most &amp;#34;serious&amp;#34; and feels like where
I&amp;#39;ll end up in the long run, so if you were to pick one I&amp;#39;d in general
recommend that.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> docker-compose down&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-16">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://github.com/db-migrate/node-db-migrate">https://github.com/db-migrate/node-db-migrate&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://db-migrate.readthedocs.io/en/latest/Getting%20Started/usage/">https://db-migrate.readthedocs.io/en/latest/Getting%20Started/usage/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://itnext.io/updating-an-sql-database-schema-using-node-js-6c58173a455a">https://itnext.io/updating-an-sql-database-schema-using-node-js-6c58173a455a&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.devdungeon.com/content/ruby-activerecord-without-rails-tutorial#toc-9">https://www.devdungeon.com/content/ruby-activerecord-without-rails-tutorial#toc-9&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gist.github.com/Rhoxio/ee9a855088c53d447f2eb888bd9d09a4">https://gist.github.com/Rhoxio/ee9a855088c53d447f2eb888bd9d09a4&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/golang-migrate/migrate/blob/master/database/postgres/TUTORIAL.md">https://github.com/golang-migrate/migrate/blob/master/database/postgres/TUTORIAL.md&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Installing emacs on buster</title><link>https://willschenk.com/articles/2021/installing_emacs_on_buster/</link><pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/installing_emacs_on_buster/</guid><description>
&lt;p>
I&amp;#39;ve already &lt;a href="https://willschenk.com/articles/2020/upgrading_emacs_on_debian/">written about installing emacs-snapshot&lt;/a> on debian buster, here are two additional ways. The first is to use flatpak, and the other is to build from source.
&lt;/p>
&lt;h2 id="headline-1">
Flatpack
&lt;/h2>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install flatpak
sudo apt install gnome-software-plugin-flatpak
sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo flatpak install flathub org.gnu.emacs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And running it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">flatpak run org.gnu.emacs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You can then pin it in your dock and you are good to go.
&lt;/p>
&lt;h2 id="headline-2">
From Source
&lt;/h2>
&lt;p>
For buster debian, make sure you have the deb-src lines in your &lt;code class="verbatim">/etc/apt/sources.list&lt;/code>
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">deb http://deb.debian.org/debian buster main contrib non-free
deb-src http://deb.debian.org/debian buster main contrib non-free
deb http://deb.debian.org/debian-security/ buster/updates main contrib non-free
deb-src http://deb.debian.org/debian-security/ buster/updates main contrib non-free
deb http://deb.debian.org/debian buster-updates main contrib non-free
deb-src http://deb.debian.org/debian buster-updates main contrib non-free&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then lets add the dependancies and pull down the emacs source code:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> sudo apt update
&lt;span class="c1"># Make sure you have the builddeps&lt;/span>
sudo apt build-dep emacs25
&lt;span class="c1"># Also install native json parsing&lt;/span>
sudo apt-get install libjansson4 libjansson-dev libmagickcore-dev
&lt;span class="c1"># Download the monster&lt;/span>
git clone --depth &lt;span class="m">1&lt;/span> --branch emacs-27 https://git.savannah.gnu.org/git/emacs.git&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we can run &lt;code class="verbatim">./authgen.sh&lt;/code> and &lt;code class="verbatim">./configure&lt;/code>:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nb">cd&lt;/span> emacs
./autogen.sh
./configure
make&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You can test this out by running:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> src/emacs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Or just install it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> sudo make install&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-3">
&lt;code class="verbatim">.desktop&lt;/code> file:
&lt;/h3>
&lt;p>
This is what I have in my &lt;code class="verbatim">~/.local/share/applications/emacs.desktop&lt;/code>:
&lt;/p>
&lt;div class="src src-ini">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="k">[Desktop Entry]&lt;/span>
&lt;span class="na">Version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1.0&lt;/span>
&lt;span class="na">Name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Emacs 27&lt;/span>
&lt;span class="na">GenericName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Text Editor&lt;/span>
&lt;span class="na">Comment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">View and edit files&lt;/span>
&lt;span class="na">MimeType&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">text/english;text/plain;text/x-makefile;text/x-c++hdr;text/x-c++src;text/x-chdr;text/x-csrc;text/x-java;text/x-moc;text/x-pascal;text/x-tcl;text/x-tex;application/x-shellscript;text/x-c;text/x-c++;&lt;/span>
&lt;span class="na">Exec&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/usr/local/bin/emacs %F&lt;/span>
&lt;span class="na">TryExec&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">emacs&lt;/span>
&lt;span class="na">Icon&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">emacs&lt;/span>
&lt;span class="na">StartWMClass&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">emacs&lt;/span>
&lt;span class="na">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Application&lt;/span>
&lt;span class="na">Terminal&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">false&lt;/span>
&lt;span class="na">Categories&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Utility;Development;TextEditor;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-4">
Native json support test
&lt;/h2>
&lt;p>
The whole point of this for me was to see if we have native json
support. We can test this with:
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">functionp&lt;/span> &lt;span class="ss">&amp;#39;json-serialize&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">message&lt;/span> &lt;span class="s">&amp;#34;Native JSON is available&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">message&lt;/span> &lt;span class="s">&amp;#34;Native JSON is *not* available&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Native JSON is available
&lt;/pre>
&lt;h2 id="headline-5">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://flatpak.org/setup/Debian/">https://flatpak.org/setup/Debian/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.masteringemacs.org/article/speed-up-emacs-libjansson-native-elisp-compilation">https://www.masteringemacs.org/article/speed-up-emacs-libjansson-native-elisp-compilation&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.emacswiki.org/emacs/EmacsSnapshotAndDebian">https://www.emacswiki.org/emacs/EmacsSnapshotAndDebian&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://wiki.debian.org/SourcesList">https://wiki.debian.org/SourcesList&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Setting up redis and nat-connector with FaasD</title><link>https://willschenk.com/articles/2021/setting_up_services_with_faasd/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/setting_up_services_with_faasd/</guid><description>
&lt;p>
Lets look at how we expand our &lt;code class="verbatim">faasd&lt;/code> server to include a couple of
services. We&amp;#39;ll first add a redis server and some simple ruby code to
add a counter, and then we&amp;#39;ll build and add the &lt;code class="verbatim">nats-connector&lt;/code> to be
able publish and subscribe to events.
&lt;/p>
&lt;h2 id="headline-1">
About &lt;code class="verbatim">/var/lib/faasd/docker-compose.yaml&lt;/code>
&lt;/h2>
&lt;p>
This looks like a &lt;code class="verbatim">docker-compose&lt;/code> file, and I believe that it actually
does use the same code that parses the file of that name, but it
doesn&amp;#39;t use &lt;code class="verbatim">docker&lt;/code> to set up the containers. This is what &lt;code class="verbatim">faasd&lt;/code> does.
The biggest difference I&amp;#39;ve noticed is how it treats networking. The
short of it is that you need to use the ip address of the main faasd
gateway to access the servers, not the name of the service in the
file. So, instead of pointing your client to &lt;code class="verbatim">redis&lt;/code> or &lt;code class="verbatim">gateway&lt;/code> you
point them to &lt;code class="verbatim">10.62.0.1&lt;/code>.
&lt;/p>
&lt;h2 id="headline-2">
Redis
&lt;/h2>
&lt;h3 id="headline-3">
Setting up Redis
&lt;/h3>
&lt;p>
First thing is we need to log into our faasd server, and create the
storage directory with the right user.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo mkdir -p /var/lib/faasd/redis/data
sudo chown -R 1000:1000 /var/lib/faasd/redis/data&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we need to add the redis instance in &lt;code class="verbatim">/var/lib/faasd/docker-compose.yaml&lt;/code>:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">redis&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>docker.io/library/redis&lt;span class="p">:&lt;/span>&lt;span class="m">6.0.10&lt;/span>-alpine&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># we assume cwd == /var/lib/faasd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./redis/data&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/data&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">cap_add&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- CAP_NET_RAW&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">entrypoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/usr/local/bin/redis-server&lt;span class="w"> &lt;/span>--appendonly&lt;span class="w"> &lt;/span>yes&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1000&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;10.62.0.1:6379:6379&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Note that if you get a &amp;#34;Background saving error&amp;#34; this is probably
because you have an open redis port and &lt;a href="https://github.com/docker-library/redis/issues/44#issuecomment-274287156">someone is scanning you&lt;/a>.
&lt;/p>
&lt;p>
The &lt;code class="verbatim">10.62.0.1&lt;/code> is the default network that &lt;code class="verbatim">faasd&lt;/code> sets up.
&lt;/p>
&lt;p>
Then we restart:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo systemctl daemon-reload
sudo systemctl restart faasd&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We can look at the logs using:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo journalctl -t openfaas:redis -f&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-4">
Writing our function
&lt;/h3>
&lt;p>
Back on our machine, lets create a simple ruby function that
increments and returns the value from redis.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">faas-cli new counter --lang ruby&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Inside of the counter directory, we need to add the redis gem:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> counter
bundler add redis&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And now we can write our handler:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;redis&amp;#39;&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Handler&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">host&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;redis_host&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">incr&lt;/span> &lt;span class="s2">&amp;#34;test_key&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And inside of our &lt;code class="verbatim">counter.yml&lt;/code> file we can add the following
environment variable so we don&amp;#39;t hard code the address of the redis
instance in our container.
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">counter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">lang&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ruby&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./counter&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>wschenk/counter&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">redis_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10.62.0.1&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You&amp;#39;ll want to replace that &lt;code class="verbatim">wschenk&lt;/code> with your docker user.
&lt;/p>
&lt;p>
Then we can load it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">faas-cli up --filter counter&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And run it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> &lt;span class="p">|&lt;/span> faas-cli invoke counter&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And you should see a number go up and up!
&lt;/p>
&lt;h2 id="headline-5">
Publishing and subscribing to messages
&lt;/h2>
&lt;p>
The &lt;a href="https://github.com/openfaas/nats-connector">nats-connector&lt;/a> is a way to have functions called when messages are
sent to certain topics in your nats instance. Lets see how that
works.
&lt;/p>
&lt;h3 id="headline-6">
Installing the &lt;code class="verbatim">nats-connector&lt;/code>:
&lt;/h3>
&lt;p>
I couldn&amp;#39;t find the latest version of &lt;code class="verbatim">nats-connector&lt;/code> on docker, so
here&amp;#39;s how to build it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/openfaas/nats-connector
&lt;span class="nb">cd&lt;/span> nats-connector
docker build . -t wschenk/nats-connector:0.2.4
docker push wschenk/nats-connector:0.2.4&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Pretty simple. (Change &lt;code class="verbatim">wschenk&lt;/code> to be your username.)
&lt;/p>
&lt;h3 id="headline-7">
Setting up &lt;code class="verbatim">docker-compose.yaml&lt;/code>
&lt;/h3>
&lt;p>
Back on your &lt;code class="verbatim">faads&lt;/code> server, lets first open up &lt;code class="verbatim">nats&lt;/code> to our functions
and then add in the &lt;code class="verbatim">nats-connector&lt;/code>:
&lt;/p>
&lt;p>
&lt;em>This section should already be there&lt;/em>:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">nats&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>docker.io/library/nats-streaming&lt;span class="p">:&lt;/span>&lt;span class="m">0.11.2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;/nats-streaming-server&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;-m&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;8222&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--store=memory&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--cluster_id=faas-cluster&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;10.62.0.1:4222:4222&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;10.62.0.1:8222:8222&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then add:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">nats-connector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>docker.io/wschenk/nats-connector&lt;span class="p">:&lt;/span>&lt;span class="m">0.2.4&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">upstream_timeout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1m2s&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gateway_url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;http://gateway:8080&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">topics&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;nats-test,topic-foo,&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">print_response&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">print_body_response&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">basic_auth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">secret_mount_path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/run/secrets/&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">topic_delimiter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">asynchronous_invocation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;false&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># we assume cwd == /var/lib/faasd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./secrets/basic-auth-user&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/run/secrets/basic-auth-user&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./secrets/basic-auth-password&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/run/secrets/basic-auth-password&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">cap_add&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- CAP_NET_RAW&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- nats&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- gateway&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Be sure to change the image name to your build, if you don&amp;#39;t want to
use mine.
&lt;/p>
&lt;h3 id="headline-8">
Publish
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">faas-cli new publishtest --lang ruby --append stack.yml
&lt;span class="nb">cd&lt;/span> publishtest
bundle add nats-pure&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then a simple handler
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;nats/io/client&amp;#39;&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Handler&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Trying to connect to &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;nats_host&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">nats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">NATS&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">IO&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="n">nats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;nats_host&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Connected to &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">nats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connected_server&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Sending message&amp;#34;&lt;/span>
&lt;span class="n">nats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;nats-test&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;You done?&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Flushing&amp;#34;&lt;/span>
&lt;span class="n">nats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">flush&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">nats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">close&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then in &lt;code class="verbatim">stack.yml&lt;/code>:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">publishtest&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">lang&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ruby&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./publishtest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>wschenk/publishtest&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">nats_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10.62.0.1&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-9">
Receive
&lt;/h3>
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">faas-cli new receivetest --lang ruby --append stack.yml&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And inside of &lt;code class="verbatim">stack.yml&lt;/code> add an annotations section
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">receivetest&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">lang&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ruby&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./receivetest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>wschenk/receivetest&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">topic&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;nats-test&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We don&amp;#39;t need to do anything particular with this handler, we just
want to look at the logs to see if it gets triggered.
&lt;/p>
&lt;h3 id="headline-10">
Running
&lt;/h3>
&lt;p>
On your dev machine:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">faas-cli up&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then on the &lt;code class="verbatim">faasd&lt;/code> server:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">journalctl -f&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
(Or if you want to be more targeted:)
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">journalctl -t openfaas-fn:receivetest -f&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And on your client machine:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> &lt;span class="p">|&lt;/span> faas-cli invoke publishtest&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-11">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://github.com/openfaas/faasd">https://github.com/openfaas/faasd&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gumroad.com/l/serverless-for-everyone-else">https://gumroad.com/l/serverless-for-everyone-else&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/docker-library/redis/issues/128">https://github.com/docker-library/redis/issues/128&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/docker-library/redis/issues/44#issuecomment-274287156">https://github.com/docker-library/redis/issues/44#issuecomment-274287156&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/openfaas/nats-connector">https://github.com/openfaas/nats-connector&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://twitter.com/alexellisuk/status/1318841881439199233/photo/1">https://twitter.com/alexellisuk/status/1318841881439199233/photo/1&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Uploading Blobs</title><link>https://willschenk.com/articles/2021/uploading_blobs/</link><pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/uploading_blobs/</guid><description>
&lt;p>
I want a simple service I can deploy that lets me store blobs. I want
it to return the hash of the stored object which I will use to load it
again.
&lt;/p>
&lt;p>
First we will write a simple go service that will do everything in
memory, and then we will build a nginx config that has the webserver
stream it to disk, so we don&amp;#39;t have a lot of memory being used.
&lt;/p>
&lt;h2 id="headline-1">
Simple go service
&lt;/h2>
&lt;p>
This is a simple http server that
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Creates a &lt;code class="verbatim">blobs&lt;/code> directory
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Serves &lt;code class="verbatim">/get&lt;/code> requests out of that directory
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Receives a file paramater named &lt;code class="verbatim">file&lt;/code> on &lt;code class="verbatim">/put&lt;/code> and stores it as it&amp;#39;s
md5 hash. It returns that hash.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Or it gets a body and just stores it.
&lt;/p>
&lt;h3 id="headline-2">
Server code
&lt;/h3>
&lt;/li>
&lt;/ol>
&lt;div class="src src-go">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;crypto/md5&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;strings&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">putHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Proccessing file upload&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">contentType&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HasPrefix&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;multipart/form-data&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">contentType&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">uploadFile&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">handlePost&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">uploadFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Processing file upload&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="c1">// Set upload limit
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseMultipartForm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error Retrieving the File&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">defer&lt;/span> &lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Uploaded File: %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content type : %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;File Size : %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Size&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;MIME Header : %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// read all of the contents of our uploaded file into a
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// byte array
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fileBytes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">md5string&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fileBytes&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;blobs/%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">fileBytes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0666&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Return the key
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">handlePost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Storing raw post&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">defer&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">md5string&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;blobs/%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0666&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Return the key
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">mkdir_p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">IsNotExist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Creating &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">errDir&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MkdirAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0755&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">errDir&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">mkdir_p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;blobs&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fs&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FileServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Dir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;./blobs&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/get/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StripPrefix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/get/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HandleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/put&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">putHandler&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Starting server on port 8080&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;:8080&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-3">
Server code orig
&lt;/h3>
&lt;p>
In &lt;code class="verbatim">simple/server.go&lt;/code>:
&lt;/p>
&lt;div class="src src-go">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;crypto/md5&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">uploadFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Proccessing file upload&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Set upload limit
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseMultipartForm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error Retrieving the File&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">defer&lt;/span> &lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Uploaded File: %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content type : %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;File Size : %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Size&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;MIME Header : %+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// read all of the contents of our uploaded file into a
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// byte array
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fileBytes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">md5string&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fileBytes&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;blobs/%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">fileBytes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0666&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Return the key
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">mkdir_p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">IsNotExist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Creating &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">errDir&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MkdirAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0755&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">errDir&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">mkdir_p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;blobs&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fs&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FileServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Dir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;./blobs&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/get/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StripPrefix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/get/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HandleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/put&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">uploadFile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Starting server on port 8080&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;:8080&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-4">
Testing
&lt;/h3>
&lt;p>
First start it up:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">go run server.go&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then upload the file using curl &lt;code class="verbatim">-F&lt;/code>. We need to name the parameter
&lt;code class="verbatim">file&lt;/code> and use the &lt;code class="verbatim">@&lt;/code> syntax to push the file contents.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -F &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;@/home/wschenk/mobiledownloads/talk.pdf&amp;#34;&lt;/span> http://localhost:8080/put&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
a03a16aa4ed93c7194c03bb3d759ba23
&lt;/pre>
&lt;p>
Which returns the has, then we can download it
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> KEY is &lt;span class="si">${&lt;/span>&lt;span class="nv">KEY&lt;/span>&lt;span class="si">}&lt;/span>
curl -o /tmp/talk.pdf http://localhost:8080/get/&lt;span class="si">${&lt;/span>&lt;span class="nv">KEY&lt;/span>&lt;span class="si">}&lt;/span>
ls -l /tmp/talk.pdf
md5sum /tmp/talk.pdf&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
KEY is a03a16aa4ed93c7194c03bb3d759ba23
-rw-r--r-- 1 wschenk wschenk 2227748 Feb 16 09:19 /tmp/talk.pdf
a03a16aa4ed93c7194c03bb3d759ba23 /tmp/talk.pdf
&lt;/pre>
&lt;h3 id="headline-5">
Dockerizing
&lt;/h3>
&lt;p>
First we don&amp;#39;t want to put the blobs into our docker image, so create
a &lt;code class="verbatim">.dockerignore&lt;/code>:
&lt;/p>
&lt;div class="src src-.dockerignore">
&lt;pre>&lt;code class="language-.dockerignore" data-lang=".dockerignore">blobs/&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
Then a simple &lt;code class="verbatim">Dockerfile&lt;/code>:
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> golang:1.15.8-alpine3.13 as builder&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> server.go .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> go build server.go&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> alpine:3.13&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>builder /go/server .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 8080&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;./server&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then build it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker build . -t simpleblobserver&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And run it
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run -it --rm -p 8080:8080 simpleblobserver&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-6">
NGINX uploader
&lt;/h2>
&lt;p>
This works fine, but it also requires loading everything into memory.
&lt;/p>
&lt;p>
We can use nginx and the &lt;code class="verbatim">nginx-upload-module&lt;/code> to have the webserver
stream it directly to disk, and once this is done it will call our
handler which will move it over to the &lt;code class="verbatim">blobs&lt;/code> directory. This module
also computes the &lt;code class="verbatim">md5&lt;/code> for us, so that&amp;#39;s nice an easy. But setting it
up is more complicated, and we&amp;#39;ll need to use &lt;code class="verbatim">docker-compose.yml&lt;/code> to
wire everything together.
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
&lt;code class="verbatim">docker-compose.yml&lt;/code> to wire it all together
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
nginx &lt;code class="verbatim">Dockerfile&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">default.conf&lt;/code> to configure the module
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
go mover &lt;code class="verbatim">Dockerfile&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
mover code
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
Let go!
&lt;/p>
&lt;h3 id="headline-7">
&lt;code class="verbatim">docker-compose.yml&lt;/code>
&lt;/h3>
&lt;p>
We&amp;#39;ll define two services, which share a file system at &lt;code class="verbatim">/blobs&lt;/code>
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>.&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">dockerfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>Dockerfile.nginx&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./blobs&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/blobs&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;8080:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mover&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>.&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">dockerfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>Dockerfile.mover&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./blobs&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/blobs&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;9090:8080&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-8">
nginx Dockerfile
&lt;/h3>
&lt;p>
First we create a &lt;code class="verbatim">Dockerfile.nginx&lt;/code> to download the source for both
&lt;code class="verbatim">nginx&lt;/code> and &lt;code class="verbatim">nginx-upload-module&lt;/code>, build then, add it to the main
&lt;code class="verbatim">nginx.conf&lt;/code> file:
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> nginx:1.19.6-alpine AS builder&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /usr/src&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># For latest build deps, see https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/Dockerfile&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apk add --no-cache --virtual .build-deps &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> gcc &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> libc-dev &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> make &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> openssl-dev &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> pcre-dev &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> zlib-dev &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> linux-headers &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> curl &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> gnupg &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> libxslt-dev &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> gd-dev &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> geoip-dev &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> git&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Download sources&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> wget &lt;span class="s2">&amp;#34;http://nginx.org/download/nginx-&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">NGINX_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.tar.gz&amp;#34;&lt;/span> -O nginx.tar.gz&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> git clone --depth &lt;span class="m">1&lt;/span> https://github.com/vkholodkov/nginx-upload-module&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Reuse same cli arguments as the nginx:alpine image used to build&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> &lt;span class="nv">CONFARGS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>nginx -V 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> sed -n -e &lt;span class="s1">&amp;#39;s/^.*arguments: //p&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> tar -zxC /usr/src -f nginx.tar.gz &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nv">MODDIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">/nginx-upload-module&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="nb">cd&lt;/span> /usr/src/nginx-&lt;span class="nv">$NGINX_VERSION&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> ./configure --with-compat &lt;span class="nv">$CONFARGS&lt;/span> --add-dynamic-module&lt;span class="o">=&lt;/span>&lt;span class="nv">$MODDIR&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> make &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> nginx:1.19.6-alpine&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Add the module to the main nginx configuration&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>builder /usr/local/nginx/modules/ngx_http_upload_module.so /usr/local/nginx/modules/ngx_http_upload_module.so&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> &lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;load_module /usr/local/nginx/modules/ngx_http_upload_module.so;\n&lt;/span>&lt;span class="k">$(&lt;/span>cat /etc/nginx/nginx.conf&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt; /etc/nginx/nginx.conf&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> default.conf /etc/nginx/conf.d/default.conf&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 80&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">STOPSIGNAL&lt;/span>&lt;span class="s"> SIGTERM&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;nginx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-g&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;daemon off;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-9">
nginx &lt;code class="verbatim">default.config&lt;/code>
&lt;/h3>
&lt;p>
Couple of things of note in this &lt;code class="verbatim">default.conf&lt;/code> file:
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">client_max_body_size&lt;/code>&lt;/td>
&lt;td>set to 2 gigs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">/get&lt;/code>&lt;/td>
&lt;td>serves from &lt;code class="verbatim">/blobs&lt;/code> directly&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">/put&lt;/code>&lt;/td>
&lt;td>Stores stuff into &lt;code class="verbatim">/blobs/upload&lt;/code> and calls &lt;code class="verbatim">/mover&lt;/code> on success&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>error 415&lt;/td>
&lt;td>just post to /mover&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nginx&lt;/td>
&lt;td>computes the mp5 hash&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"> server {
listen 80;
server_name localhost;
client_max_body_size 2000m;
#charset koi8-r;
#access_log /var/log/nginx/host.access.log main;
location / {
root /usr/share/nginx/html;
index index.html index.htm;
}
#error_page 404 /404.html;
# redirect server error pages to the static page /50x.html
#
error_page 500 502 503 504 /50x.html;
location = /50x.html {
root /usr/share/nginx/html;
}
location /get {
rewrite /get/(.*) /$1 break;
root /blobs;
}
location /put {
error_page 415 = /mover;
# Pass altered request body to this location
upload_pass /mover;
# Store files to this directory
# The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
upload_store /blobs/upload 1;
# Allow uploaded files to be read only by user
upload_store_access user:r;
# Set specified fields in request body
upload_set_form_field &amp;#34;${upload_field_name}_name&amp;#34; $upload_file_name;
upload_set_form_field &amp;#34;${upload_field_name}_content_type&amp;#34; $upload_content_type;
upload_set_form_field &amp;#34;${upload_field_name}_path&amp;#34; $upload_tmp_path;
# Inform backend about hash and size of a file
upload_aggregate_form_field &amp;#34;${upload_field_name}_md5&amp;#34; $upload_file_md5;
upload_aggregate_form_field &amp;#34;${upload_field_name}_size&amp;#34; $upload_file_size;
upload_pass_form_field &amp;#34;^submit$|^description$&amp;#34;;
}
location /mover {
proxy_pass http://mover:8080;
}
}&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-10">
mover &lt;code class="verbatim">Dockerfile.mover&lt;/code>
&lt;/h3>
&lt;p>
This is a simple dockerfile that builds our go binary, and then just
copies it over.
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile"> FROM golang:1.15.8-alpine3.13 as builder&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> COPY mover.go .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> RUN go build mover.go&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> FROM alpine:3.13&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> WORKDIR /app&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> COPY --from&lt;span class="o">=&lt;/span>builder /go/mover .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> EXPOSE &lt;span class="m">8080&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span> CMD &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;./mover&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-11">
mover go code
&lt;/h3>
&lt;p>
All this really is doing is to look at the header and move the file
around to the right path.
&lt;/p>
&lt;div class="src src-go">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;crypto/md5&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;net/http/httputil&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;strings&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">formHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">contentType&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Content-Type %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">contentType&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HasPrefix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">contentType&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;multipart/form-data&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">moveFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">saveFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">moveFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseMultipartForm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Save a copy of this request for debugging.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">requestDump&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">httputil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DumpRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">requestDump&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseForm&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;ParseForm() err: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;POST request successful&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Filename : %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file_name&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content Type : %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file_content_type&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;MD5 : %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file_md5&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Size : %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file_size&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Path : %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file_path&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">md5&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file_md5&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file_path&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/blobs/%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">saveFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Storing raw post&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">defer&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">md5string&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;blobs/%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0666&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Return the key
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">md5string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HandleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">formHandler&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HandleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/mover&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">formHandler&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Starting server at port 8080&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;:8080&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-12">
Setup
&lt;/h3>
&lt;p>
We don&amp;#39;t really need this, but it&amp;#39;s a good idea to make sure that the
blobs don&amp;#39;t go over as part of the build.
&lt;/p>
&lt;p>
&lt;code class="verbatim">.dockerignore&lt;/code>:
&lt;/p>
&lt;div class="src src-dockerignore">
&lt;pre>&lt;code class="language-dockerignore" data-lang="dockerignore">blobs/&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
Lets create the &lt;code class="verbatim">blobs&lt;/code> folder, the &lt;code class="verbatim">upload&lt;/code> subdirectories, and make sure
that docker and read and write them:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p blobs/upload/&lt;span class="o">{&lt;/span>0..9&lt;span class="o">}&lt;/span>
chmod -R &lt;span class="m">777&lt;/span> blobs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then start it all up with:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose up&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-13">
Testing
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -F &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;@/home/wschenk/mobiledownloads/talk.pdf&amp;#34;&lt;/span> http://localhost:8080/put&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
a03a16aa4ed93c7194c03bb3d759ba23
&lt;/pre>
&lt;p>
Which returns the has, then we can download it
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> KEY is &lt;span class="si">${&lt;/span>&lt;span class="nv">KEY&lt;/span>&lt;span class="si">}&lt;/span>
curl -o /tmp/talk.pdf http://localhost:8080/get/&lt;span class="si">${&lt;/span>&lt;span class="nv">KEY&lt;/span>&lt;span class="si">}&lt;/span>
ls -l /tmp/talk.pdf
md5sum /tmp/talk.pdf&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
KEY is a03a16aa4ed93c7194c03bb3d759ba23
-rw-r--r-- 1 wschenk wschenk 2227748 Feb 16 11:31 /tmp/talk.pdf
a03a16aa4ed93c7194c03bb3d759ba23 /tmp/talk.pdf
&lt;/pre>
&lt;h2 id="headline-14">
Client examples
&lt;/h2>
&lt;h3 id="headline-15">
Bash posting data
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -d &lt;span class="s2">&amp;#34;This is my string&amp;#34;&lt;/span> http://localhost:8080/put&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
c2a9ce57e8df081b4baad80d81868bbb
&lt;/pre>
&lt;h3 id="headline-16">
Bash posting file
&lt;/h3>
&lt;p>
We&amp;#39;ve already seen this:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -F &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;@/home/wschenk/mobiledownloads/talk.pdf&amp;#34;&lt;/span> http://localhost:8080/put&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
a03a16aa4ed93c7194c03bb3d759ba23
&lt;/pre>
&lt;h3 id="headline-17">
Ruby posting data
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/ruby_data.rb&lt;/code>:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;net/http&amp;#39;&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Net&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">HTTP&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="s1">&amp;#39;This is my string&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
c2a9ce57e8df081b4baad80d81868bbb
&lt;/pre>
&lt;h3 id="headline-18">
Ruby posting data as a file
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/ruby_data_as_file.rb&lt;/code>:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;net/http&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">write_string_blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">host&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">req&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Net&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">HTTP&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_form&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">[[&lt;/span>&lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;This is my string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">filename&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">]]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;multipart/form-data&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Net&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">HTTP&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hostname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">write_string_blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;this is my data&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
c2a9ce57e8df081b4baad80d81868bbb
&lt;/pre>
&lt;h3 id="headline-19">
Ruby posting file
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/ruby_file.rb&lt;/code>:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;net/http&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">write_file_blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">host&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">req&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Net&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">HTTP&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_form&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">[[&lt;/span>&lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;multipart/form-data&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Net&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">HTTP&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hostname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">write_file_blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/home/wschenk/mobiledownloads/talk.pdf&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
a03a16aa4ed93c7194c03bb3d759ba23
&lt;/pre>
&lt;h3 id="headline-20">
node posting data
&lt;/h3>
&lt;p>
Requires &lt;code class="verbatim">node-fetch&lt;/code> npm package.
&lt;/p>
&lt;p>
&lt;code class="verbatim">client/node_string.js&lt;/code>:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">fetch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;node-fetch&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;This is my string&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-21">
node posting string as file
&lt;/h3>
&lt;p>
Requires &lt;code class="verbatim">node-fetch&lt;/code> and &lt;code class="verbatim">form-data&lt;/code> packages:
&lt;/p>
&lt;p>
&lt;code class="verbatim">client/node_string_as_file.js&lt;/code>:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">fetch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;node-fetch&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">FormData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;form-data&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">write_string_blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">form&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FormData&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">filename&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">credentials&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;include&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">form&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">options&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ok&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">write_string_blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;This is my string&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>
&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-22">
node posting file
&lt;/h3>
&lt;p>
First we need to install some libraries:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm init -y
npm add node-fetch form-data&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">fetch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;node-fetch&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">FormData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;form-data&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;path&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">write_file_blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">filename&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">form&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FormData&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">buffer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filename&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">filename&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">basename&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">filename&lt;/span> &lt;span class="p">)}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">credentials&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;include&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">form&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">options&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ok&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">write_file_blob&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;/home/wschenk/mobiledownloads/talk.pdf&amp;#39;&lt;/span>
&lt;span class="p">).&lt;/span>
&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">rej&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">rej&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-23">
Deno posting string
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/deno_string.ts&lt;/code>:
&lt;/p>
&lt;div class="src src-typescript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript"> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;This is my string&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-24">
Deno posting string as file
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/deno_string_as_file.ts&lt;/code>:
&lt;/p>
&lt;div class="src src-typescript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">form&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FormData&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">blob&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Blob&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;This is my string&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">blob&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;testfilename&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">body&lt;/span>: &lt;span class="kt">form&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-25">
Deno posting file
&lt;/h3>
&lt;div class="src src-typescript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">form&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FormData&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">Deno&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFile&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/home/wschenk/mobiledownloads/talk.pdf&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">blob&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Blob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">blob&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;testfilename&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">body&lt;/span>: &lt;span class="kt">form&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/put&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-26">
go posting string
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/go_string.go&lt;/code>:
&lt;/p>
&lt;div class="src src-go">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;strings&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">write_string_blob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uri&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">body&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">client&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">uri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;application/octet-stream&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">resp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">md5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">write_string_blob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;http://localhost:8080/put&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;This is my string&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">md5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-27">
go posting string as file
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/go_string_as_file.go&lt;/code>:
&lt;/p>
&lt;div class="src src-go">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;mime/multipart&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">write_string_as_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uri&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">body&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">writer&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">multipart&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">part&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">CreateFormFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;filename&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">part&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">client&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">uri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormDataContentType&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">resp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">md5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">write_string_as_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;http://localhost:8080/put&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;This is my string&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">md5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-28">
go posting file
&lt;/h3>
&lt;p>
&lt;code class="verbatim">client/go_string_as_file.go&lt;/code>:
&lt;/p>
&lt;div class="src src-go">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;mime/multipart&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">write_file_blob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uri&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">path&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">body&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fileContents&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Stat&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">writer&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">multipart&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">part&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">CreateFormFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Name&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">part&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fileContents&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">client&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">uri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FormDataContentType&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">resp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">resp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">md5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">write_file_blob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;http://localhost:8080/put&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;/home/wschenk/mobiledownloads/talk.pdf&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">md5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-29">
Final thoughts
&lt;/h2>
&lt;p>
The reason that I wrote this is so that I could easily share large
blobs of data between cloud functions without the overhead of
installing a S3 clone or trying to jam stuff into Redis.
&lt;/p>
&lt;h2 id="headline-30">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://gist.github.com/hermanbanken/96f0ff298c162a522ddbba44cad31081">https://gist.github.com/hermanbanken/96f0ff298c162a522ddbba44cad31081&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://vsoch.github.io/2018/django-nginx-upload/">https://vsoch.github.io/2018/django-nginx-upload/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.yanxurui.cc/posts/server/2017-03-21-NGINX-as-a-file-server/">https://www.yanxurui.cc/posts/server/2017-03-21-NGINX-as-a-file-server/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://golang.org/pkg/net/http/httputil/">https://golang.org/pkg/net/http/httputil/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gist.github.com/pinkhominid/e6f53706e0dd8cf34f2bd94c3aa357c5">https://gist.github.com/pinkhominid/e6f53706e0dd8cf34f2bd94c3aa357c5&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gist.github.com/mattetti/5914158/f4d1393d83ebedc682a3c8e7bdc6b49670083b84">https://gist.github.com/mattetti/5914158/f4d1393d83ebedc682a3c8e7bdc6b49670083b84&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Building static OpenFaas templates</title><link>https://willschenk.com/articles/2021/building_an_openfaas_template/</link><pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/building_an_openfaas_template/</guid><description>
&lt;p>
I&amp;#39;ve been playing with OpenFaaS recently and it&amp;#39;s a very accessable
way to starting building cloud first services. I wanted to see what I
could cram in there, so I built a few templates that would let me host
a static site. One that is just html, and another than can be built
with something like &lt;code class="verbatim">create-react-app&lt;/code>.
&lt;/p>
&lt;h2 id="headline-1">
Static
&lt;/h2>
&lt;p>
Create the &lt;code class="verbatim">template&lt;/code> directory:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p template/static&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then add a &lt;code class="verbatim">template/static/template.yml&lt;/code> file:
&lt;/p>
&lt;div class="src src-yml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>static&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">handler_folder&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>public&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then add a &lt;code class="verbatim">template/static/Dockerfile&lt;/code> to do the build:
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> --platform=${TARGETPLATFORM:-linux/amd64} openfaas/of-watchdog:0.7.2 as watchdog&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> --platform=${TARGETPLATFORM:-linux/amd64} alpine:3.10 AS runtime&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /home/app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>watchdog /fwatchdog .&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">mode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;static&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">static_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/home/app/public&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">HEALTHCHECK --interval=3s &lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="err">-e&lt;/span> &lt;span class="err">/tmp/.lock&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;./fwatchdog&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Serving at root
&lt;/h2>
&lt;p>
Setting up the &lt;code class="verbatim">Caddyfile&lt;/code>:
&lt;/p>
&lt;div class="src src-caddyfile">
&lt;pre>&lt;code class="language-caddyfile" data-lang="caddyfile">{
email &amp;#34;email@example.com&amp;#34;
}
hostname.example.com {
@proxy path /ui/* /system/* /function/*
handle @proxy {
reverse_proxy localhost:8080
}
handle {
uri replace / /function/static/ 1
reverse_proxy localhost:8080
}
}&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
This will proxy &lt;code class="verbatim">/ui/*&lt;/code>, &lt;code class="verbatim">/system/*&lt;/code>, and &lt;code class="verbatim">/function/*&lt;/code> to the OpenFaaS
gateway, and everything else it will (internally) rewrite to
&lt;code class="verbatim">/function/static/&lt;/code>, which will get forwarded our static handler. So
when you deploy the function make sure you name it that!
&lt;/p>
&lt;h2 id="headline-3">
React
&lt;/h2>
&lt;p>
First we need to create our &lt;code class="verbatim">template&lt;/code> directory:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p template/react&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
First we need to create a &lt;code class="verbatim">template/react/template.yml&lt;/code> file
&lt;/p>
&lt;div class="src src-yml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>react&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">handler_folder&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>react&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
&lt;code class="verbatim">node_modules&lt;/code>, my least favorite thing in the world, needs to get
excluded, so lets create &lt;code class="verbatim">template/react/.dockerignore&lt;/code>. The &lt;code class="verbatim">react&lt;/code> here
must be the same as the &lt;code class="verbatim">handler_folder&lt;/code> above.
&lt;/p>
&lt;div class="src src-yml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">react/node_modules&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>react/build&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we add the &lt;code class="verbatim">Dockerfile&lt;/code> to build everything:
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> --platform=${TARGETPLATFORM:-linux/amd64} node:12-alpine as build&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ARG&lt;/span> TARGETPLATFORM&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ARG&lt;/span> BUILDPLATFORM&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apk --no-cache add curl ca-certificates &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> addgroup -S app &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> adduser -S -g app app&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Turn down the verbosity to default level.&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> NPM_CONFIG_LOGLEVEL warn&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> mkdir -p /home/app&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Build the react production build&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /home/app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> react/package.json react/yarn.lock ./&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># This ordering means the yarn installation is cached for the outer&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># react handler.&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> yarn&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> react .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> yarn build&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> --platform=${TARGETPLATFORM:-linux/amd64} openfaas/of-watchdog:0.7.2 as watchdog&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> alpine:3.10 AS runtime&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /home/app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>build /home/app/build public&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>watchdog /fwatchdog .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">mode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;static&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">static_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/home/app/public&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">HEALTHCHECK --interval=3s &lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="err">-e&lt;/span> &lt;span class="err">/tmp/.lock&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;./fwatchdog&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-4">
Testing React
&lt;/h3>
&lt;p>
First we will create the function itself, and then populate it using
&lt;code class="verbatim">npx create-react-app testappreact&lt;/code>. This will write it into the &amp;#34;handler&amp;#34;
directory.
&lt;/p>
&lt;p>
We will also remove the &lt;code class="verbatim">.git&lt;/code> repo that &lt;code class="verbatim">create-react-app&lt;/code> sets up.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> faas-cli new --lang react testappreact
npx create-react-app testappreact
rm -rf testappreact/.git&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
I recommend using relative links, by adding &lt;code class="verbatim">&amp;#34;homepage&amp;#34;: &amp;#34;./&amp;#34;&lt;/code> in the
generated &lt;code class="verbatim">package.json&lt;/code> file.
&lt;/p>
&lt;p>
Then we can build and deploy using
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">faas-cli up -f testappreact.yml&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And visit your server to see what you see!
&lt;/p>
&lt;h3 id="headline-5">
Testing Vue app
&lt;/h3>
&lt;p>
Just for fun, lets make it build a vue app.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> faas-cli new --lang react testappvue
vue create testappvue
rm -rf testappvue/.git&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
In order to get vue apps to have relative paths, you need to create a
&lt;code class="verbatim">vue.config.js&lt;/code> file to set it:
&lt;/p>
&lt;div class="src src-js">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">publicPath&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And since &lt;code class="verbatim">vue&lt;/code> builds in the &lt;code class="verbatim">dist&lt;/code> directory, we need to modify the
build script inside of &lt;code class="verbatim">package.json&lt;/code> to rename the file after it&amp;#39;s
built:
&lt;/p>
&lt;div class="src src-js">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="s2">&amp;#34;build&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;vue-cli-service build &amp;amp;&amp;amp; mv dist build&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then, we can build and deploy:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> faas-cli up -f testappvue.yml&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
It&amp;#39;s a little hacky but it seems to work alright!
&lt;/p>
&lt;h2 id="headline-6">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://github.com/openfaas/faas-cli/blob/master/guide/TEMPLATE.md">https://github.com/openfaas/faas-cli/blob/master/guide/TEMPLATE.md&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://docs.openfaas.com/reference/yaml/#yaml-template-stack-configuration">https://docs.openfaas.com/reference/yaml/#yaml-template-stack-configuration&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://medium.com/js-dojo/how-to-solve-vue-js-prod-build-assets-relative-path-problem-71f91138dd79">https://medium.com/js-dojo/how-to-solve-vue-js-prod-build-assets-relative-path-problem-71f91138dd79&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/matipan/openfaas-hugo-template">https://github.com/matipan/openfaas-hugo-template&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docker One Liners</title><link>https://willschenk.com/articles/2021/docker_one_liners/</link><pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/docker_one_liners/</guid><description>
&lt;p>
I use docker in my workflow as an application and environment manager.
I switch between multiple physical computers a lot, and like to have
things self contained within work spaces that I can move from one
computer to another easily, normally using `git`. Here are a few
tricks that I use to have the lightest touch on my local installation
as possible.
&lt;/p>
&lt;h2 id="headline-1">
Orientation
&lt;/h2>
&lt;p>
If you want to install a specific set of software, you use a
`Dockerfile` to create an `image`. If the `image` is already on
docker hub, you don&amp;#39;t need to write a Dockerfile.
&lt;/p>
&lt;p>
Images are used to create containers, which are images that have
started up. They could then be stopped and restarted if you need to,
but they have long running state. Starting a container with `–rm`
means that it cleans itself up after it ends, which is often what I
want; go away after my attention wanders off.
&lt;/p>
&lt;p>
Volumes – either docker managed or a directory exposed on the local
file system – is a way for the storage that a container uses to be
more durable. If you are running something &amp;#34;for real&amp;#34; you probably
want to keep the data somewhere &amp;#34;outside&amp;#34; of the container so that if
it goes away, or you update to a different image, you still have the
data. I don&amp;#39;t really use this feature.
&lt;/p>
&lt;h2 id="headline-2">
Transient vs Semi-permanent vs Permanent
&lt;/h2>
&lt;p>
My usage of Docker can either be to poke at a piece of software, play
around with it for a bit longer, or use it more seriously. One gets a
transient container that deletes on shutdown, the next gets a name and
sticks around, and the final one has long term storage outside of the
container.
&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Idea&lt;/th>
&lt;th>Pattern&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Poke&lt;/td>
&lt;td>`docker run -it –rm`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Play&lt;/td>
&lt;td>`docker run -it –name something`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Use&lt;/td>
&lt;td>`docker run -d –name something -v storage:storage`&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="headline-3">
Bash template for semi-permanent
&lt;/h2>
&lt;p>
In my projects I have a file called `LOCALSERVERS` that I run to make
sure that the right containers are installed and started up when I
start developing. The pattern is to create one if it doesn&amp;#39;t exist,
and then start it if it&amp;#39;s not started. These containers are meant to
stick around at least until I move on to other projects.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>docker container ls -a &lt;span class="p">|&lt;/span> grep pg-postgis &lt;span class="p">|&lt;/span> wc -l&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> Creating pg-postgis container
docker run --name pg-postgis -d -p 5432:5432 mdillon/postgis
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>docker ps &lt;span class="p">|&lt;/span> grep pg-postgis &lt;span class="p">|&lt;/span> wc -l&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> Starting pg-postgis container
docker start pg-postgis
&lt;span class="k">fi&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-4">
Docker-compose
&lt;/h2>
&lt;p>
When you have a bunch of interelated services, using
&lt;code class="verbatim">docker-compose.yml&lt;/code> is a great way to set things up. Especially if you
have volumes to attach and keep around. It&amp;#39;s worth mentioning that
this is super useful, even if it doesn&amp;#39;t fit into the &amp;#39;one-liner&amp;#39;
limitation.
&lt;/p>
&lt;h2 id="headline-5">
Postgis
&lt;/h2>
&lt;p>
Lets startup a postgres container that has postgis extensions
installed:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> docker run --name postgis -d -p 5432:5432 mdillon/postgis&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-6">
Pgadmin
&lt;/h2>
&lt;p>
Need a web interface to run SQL commands?
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run -p 4000:80 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --name pgadmin &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -e &lt;span class="s1">&amp;#39;PGADMIN_DEFAULT_EMAIL=wschenk@gmail.com&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -e &lt;span class="s1">&amp;#39;PGADMIN_DEFAULT_PASSWORD=SuperSecret&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -d dpage/pgadmin4&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-7">
Dive
&lt;/h2>
&lt;p>
Explore your built images:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --rm -it &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -v /var/run/docker.sock:/var/run/docker.sock &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> wagoodman/dive:latest &amp;lt;image&amp;gt;&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-8">
Redis
&lt;/h2>
&lt;p>
Easy temporary redis instance.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --rm -it redis&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-9">
Web Proxy
&lt;/h2>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> docker run --rm -it -p 8080:8080 -p 8081:8081 mitmproxy/mitmproxy mitmweb --web-host 0.0.0.0&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-10">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://docs.docker.com/get-docker/">Installing Docker&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://hub.docker.com/r/mdillon/postgis/">mdillon/postgis&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.pgadmin.org/download/pgadmin-4-container/">PgAdmin Container&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/wagoodman/dive">Dive&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://redis.io/">Redis&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Interacting With Git via HTTP</title><link>https://willschenk.com/articles/2021/interacting_with_git_via_http/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/interacting_with_git_via_http/</guid><description>
&lt;p>
Git continually impresses me. I&amp;#39;ve gone down a bit of a rabbit hole
with how it works, and it&amp;#39;s just a delight. I want to find a good way
to see if a git repo changed, and I wonder if there&amp;#39;s a way to do this
using http directly, and there is.
&lt;/p>
&lt;h2 id="headline-1">
Investgation
&lt;/h2>
&lt;p>
First thing I did was to setup a proxy and run a git clone through it
so I could see what the url is.
&lt;/p>
&lt;h3 id="headline-2">
First setup a proxy
&lt;/h3>
&lt;p>
This will create a web proxy on &lt;code class="verbatim">localhost:8080&lt;/code> with a ui on
&lt;code class="verbatim">localhost:8081&lt;/code>. Once you kill this container everything cleans up.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> docker run --rm -it -p 8080:8080 -p 8081:8081 mitmproxy/mitmproxy mitmweb --web-host 0.0.0.0&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Open up &lt;a href="http://localhost:8081">http://localhost:8081&lt;/a> to check it out.
&lt;/p>
&lt;h3 id="headline-3">
Setup the test environment
&lt;/h3>
&lt;p>
Since I&amp;#39;m going to be messing with my git config global state, lets
just spin up a throw away container so I don&amp;#39;t need to worry about it
after. Also, install &lt;code class="verbatim">git&lt;/code> in the environment.
&lt;/p>
&lt;p>
We&amp;#39;ll also set the &lt;code class="verbatim">-global&lt;/code> config variables for &lt;code class="verbatim">http.proxy&lt;/code> and
&lt;code class="verbatim">http.sslVerify&lt;/code> to allow the mitm proxy to be accepted.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> docker run --rm -it --network host debian:10
&lt;span class="c1"># You should be in the container now&lt;/span>
apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y git
git config --global http.proxy http://localhost:8080
git config --global http.sslVerify false&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-4">
Then clone
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/wschenk/willschenk.com/&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we can see that
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>request url&lt;/td>
&lt;td>GET &lt;a href="https://github.com/wschenk/willschenk.com/info/refs?service=git-upload-pack">https://github.com/wschenk/willschenk.com/info/refs?service=git-upload-pack&lt;/a> HTTP/2.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>user agent&lt;/td>
&lt;td>git/2.20.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>accepts&lt;/td>
&lt;td>&lt;strong>&lt;strong>/&lt;/strong>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
And it returns a binary file format of type
&lt;code class="verbatim">application/x-git-upload-pack-advertisement&lt;/code>
&lt;/p>
&lt;p>
We can kill our docker containers, and save the file to start parsing!
&lt;/p>
&lt;p>
Note that github anyway looks at the user agent to determine what to
serve, not the &lt;code class="verbatim">Accept&lt;/code> header:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -H &lt;span class="s2">&amp;#34;Accept: */*&amp;#34;&lt;/span> https://github.com/wschenk/willschenk.com/info/refs?service&lt;span class="o">=&lt;/span>git-upload-pack&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Not Found
&lt;/pre>
&lt;p>
So use &lt;code class="verbatim">-A&lt;/code> to download the data.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> curl -A &lt;span class="s2">&amp;#34;git/2.20.1&amp;#34;&lt;/span> --output ref.bin https://github.com/wschenk/willschenk.com/info/refs?service&lt;span class="o">=&lt;/span>git-upload-pack
ls -l ref.bin&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
-rw-r--r-- 1 wschenk wschenk 2223 Feb 11 16:55 ref.bin
&lt;/pre>
&lt;h2 id="headline-5">
Parsing the file
&lt;/h2>
&lt;p>
Now that we have this binary file, we need to figure out how to read
it. Basically, file contains records with 4 byte headers telling how
long the each message is. We read the header, then those number of
bytes afterwards (hex count).
&lt;/p>
&lt;p>
The first record also contains a null byte, which is a list of
capabitilities that the git server supports. One thing that&amp;#39;s
interesting here is &lt;code class="verbatim">symref=HEAD:refs/head/master&lt;/code> which is what tells
you what &lt;code class="verbatim">HEAD&lt;/code> is pointing to. We&amp;#39;ll look for that and seperate out
and print that line if needed.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="c1"># Adapted from page 543 of Building Git&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">recv_packet&lt;/span> &lt;span class="n">input&lt;/span>
&lt;span class="n">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="sr">/[0-9a-f]{4}/&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kp">nil&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">input&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/\n$/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;ref.bin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;rb&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">eof?&lt;/span>
&lt;span class="n">packet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">recv_packet&lt;/span> &lt;span class="n">input&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">packet&lt;/span>
&lt;span class="n">line&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">packet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\0&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">options&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which returns
&lt;/p>
&lt;pre class="example half-height-scroll"># service=git-upload-pack
multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want no-done symref=HEAD:refs/heads/master filter object-format=sha1 agent=git/github-g2ff1cad44179
847ea6126ee5f8ec5c4ad24e51b527face7a2979 HEAD
8fa8f73e7afa4564d6fb9d3788b71d06b705a98a refs/heads/askgit
e6a7c3f659b0da619ca3a9093084c57bd75705ca refs/heads/edit-effigy
614fa2058304444b2bcbbc963829c99252ecbb8e refs/heads/gh-pages
aaeb84f5c985786ed5905356325f37f5a7f136f2 refs/heads/hugo
b8dfbe29de07d79f115f5814df0981c592046e78 refs/heads/look-gemfiles
847ea6126ee5f8ec5c4ad24e51b527face7a2979 refs/heads/master
514bd4d82776edbb973576315fe5a479821a8fd7 refs/heads/tailwindedit
3c2ca082e7b8331a127afae2dec968d7cebc2ddf refs/meta/_netlify_cms
041b7a90c63d744418df2634d85d6f2d8974a9c8 refs/pull/1/head
03cee5d1d11a75e03b374c6d7600095332d4d178 refs/pull/10/head
e710ce9b944db4d418638ccaac4ade28b6f05bf8 refs/pull/11/head
d30312612ecdda3f46bc617c7167254ed6adcd6a refs/pull/12/head
25be0d44efb3cd2d890c5cbd151a84fb302efb16 refs/pull/13/head
5e8f6760d36c9a2cb6be656b68d82dc63ce91b61 refs/pull/14/head
e6a7c3f659b0da619ca3a9093084c57bd75705ca refs/pull/15/head
52b9dd7146cee391519307f64fa3b7039e54a2dc refs/pull/16/head
b93d017621b4324a5267b58cbd52a2b9ae2e2c0f refs/pull/17/head
8fa8f73e7afa4564d6fb9d3788b71d06b705a98a refs/pull/18/head
b8dfbe29de07d79f115f5814df0981c592046e78 refs/pull/19/head
a6bac7782c04514fe084449b27ec8eba9c794f7e refs/pull/2/head
d265bda5243b1ee0991cd241f52f7f9e908d1c72 refs/pull/20/head
dd032eab146ab1a8d15a406806f35da9a14f4842 refs/pull/3/head
54297948071e5531b1c0550b7e80f7af2b310db4 refs/pull/4/head
a3d591c21779b5ff9ecf5ee75f1e88ba37f9f11e refs/pull/5/head
4ff3703c2166bd4d7f5b123f90bb22da526dd3bc refs/pull/6/head
514bd4d82776edbb973576315fe5a479821a8fd7 refs/pull/7/head
2bbb09950d485304907850438cb381ddedc68aeb refs/pull/8/head
9eae9ff2e6f708ba605813ed4bb7bd6f3b8fbf23 refs/pull/9/head
9a843f070f3f11e09c689ba5c159fb261236029d refs/tags/middleman
&lt;/pre>
&lt;h2 id="headline-6">
Next steps
&lt;/h2>
&lt;p>
This solves my use case because I can now compare the references to
the previously seen versions, and if they&amp;#39;ve changed do something
else. I would really recommend looking in deeper to see how the
object transfer protocol is implemented, it&amp;#39;s pretty amazing how git
is put together.
&lt;/p>
&lt;h2 id="headline-7">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://git-scm.com/book/en/v2/Git-Internals-Transfer-Protocols">https://git-scm.com/book/en/v2/Git-Internals-Transfer-Protocols&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://git-scm.com/docs/protocol-common">https://git-scm.com/docs/protocol-common&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://shop.jcoglan.com/building-git/">https://shop.jcoglan.com/building-git/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gist.github.com/evantoli/f8c23a37eb3558ab8765">https://gist.github.com/evantoli/f8c23a37eb3558ab8765&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Installing faasd</title><link>https://willschenk.com/articles/2021/installing_faasd/</link><pubDate>Mon, 08 Feb 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/installing_faasd/</guid><description>
&lt;p>
Recently I came across &lt;a href="https://releasecandidate.dev/posts/2021/discovery-faasd-and-openfaas/">an article&lt;/a> on faasd, and I thought I&amp;#39;d give it
a try and see how easy it is to use. &lt;a href="https://willschenk.com/articles/2020/server_templating_with_terraform/">Server templating&lt;/a> is an easy way
to create a server with DNS, and following the whole &lt;a href="https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/">disposability&lt;/a>
principals, we&amp;#39;ll whip something up and see how it goes.
&lt;/p>
&lt;h2 id="headline-1">
What is &lt;a href="https://github.com/openfaas/faasd">faasd&lt;/a>?
&lt;/h2>
&lt;p>
Functions as a service are a way to easily package up simple functions
as an API, with a minimal amount of overhead. Firing up a whole rails
project, configuring a server or spinning up a heroku instance,
kubernetes cluster, etc may be overkill for a simple proof of concept,
and that proof of concept may be enough to last you a long time. AWS
Lambda is the more common form of serverless functions, but that means
you have to sign up for the whole AWS console, which I can barely
understand. faasd is a very stripped down platform that you can run
on your VPS or even a RaspberryPI, which will let you throw up
something simple without having to, you know, deploy kubernetes.
&lt;/p>
&lt;h2 id="headline-2">
Set up the server
&lt;/h2>
&lt;p>
We first need to setup a clean server. I&amp;#39;m going to use debian since I
always do, but the installation instructions say to use Ubuntu.
&lt;/p>
&lt;div class="src src-terraform">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-terraform" data-lang="terraform">&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;dnsimple_record&amp;#34; &amp;#34;faas&amp;#34;&lt;/span> {
&lt;span class="na"> domain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">dnsimple_domain&lt;/span>
&lt;span class="na"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;faas&amp;#34;&lt;/span>
&lt;span class="na"> value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">digitalocean_droplet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">faas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">ipv&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="err">_address&lt;/span>
&lt;span class="na"> type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>
&lt;span class="na"> ttl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3600&lt;/span>
}
&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;digitalocean_droplet&amp;#34; &amp;#34;faas&amp;#34;&lt;/span> {
&lt;span class="na"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;faas&amp;#34;&lt;/span>&lt;span class="c1">
&lt;/span>&lt;span class="c1"># image = &amp;#34;ubuntu-18-04-x64&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="na"> image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;debian-10-x64&amp;#34;&lt;/span>
&lt;span class="na"> size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;s-2vcpu-2gb&amp;#34;&lt;/span>
&lt;span class="na"> monitoring&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">true&lt;/span>
&lt;span class="na"> region&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">do_region&lt;/span>
&lt;span class="na"> ssh_keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">ssh_fingerprint&lt;/span>
&lt;span class="p">]&lt;/span>
}&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then &lt;code class="verbatim">terraform apply&lt;/code> to create it.
&lt;/p>
&lt;h2 id="headline-3">
Install &lt;code class="verbatim">faasd&lt;/code>
&lt;/h2>
&lt;p>
Ssh into your server as root and run the following commands:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">LETSENCRYPT_EMAIL&lt;/span>&lt;span class="o">=&lt;/span>wschenk@gmail.com &lt;span class="c1"># Change to yours&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">FAASD_DOMAIN&lt;/span>&lt;span class="o">=&lt;/span>faas.willschenk.com &lt;span class="c1"># Change to yours&lt;/span>
apt-get install -y git
&lt;span class="nb">cd&lt;/span> /tmp
git clone https://github.com/openfaas/faasd --depth&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="nb">cd&lt;/span> faasd
./hack/install.sh
cat /var/lib/faasd/secrets/basic-auth-password
echo&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
The last line will print out the auth password which you will need for
the ui and to use the cli.
&lt;/p>
&lt;p>
We can run this on the remote server using:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh root@faas.willschenk.com &amp;lt; install.sh&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Just visit your domain to see the UI. The username is &lt;code class="verbatim">admin&lt;/code> and the
password was printed out by the previous command.
&lt;/p>
&lt;h2 id="headline-4">
Install &lt;code class="verbatim">faas-cli&lt;/code>
&lt;/h2>
&lt;p>
My server is &lt;code class="verbatim">faas.willschenk.com&lt;/code> so lets first install the cli tool,
and then point it to it.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> curl -sSL https://cli.openfaas.com &lt;span class="p">|&lt;/span> sudo sh
&lt;span class="nb">export&lt;/span> &lt;span class="nv">OPENFAAS_URL&lt;/span>&lt;span class="o">=&lt;/span>https://faas.willschenk.com
ssh root@faas.willschenk.com cat /var/lib/faasd/secrets/basic-auth-password &lt;span class="p">|&lt;/span> faas-cli login --username admin --password-stdin&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We can then deploy our first function by
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> faas-cli store deploy nodeinfo&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And run it with:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> curl https://faas.willschenk.com/function/nodeinfo&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Hostname: localhost
Arch: x64
CPUs: 2
Total mem: 1998MB
Platform: linux
Uptime: 269013
&lt;/pre>
&lt;p>
Nice and easy. A list of functions available from the store can be found with
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> faas-cli store list&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-5">
Templates and registries
&lt;/h2>
&lt;p>
The basic idea is that we pull down one of the templates, code it up,
and then push it up to our server. The way that it works is that we
build the container, push it to a registry, and then tell our &lt;code class="verbatim">faasd&lt;/code>
server to pull that container from a registry and deploy it.
&lt;/p>
&lt;p>
To get a list of available templates:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> faas-cli template store list&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-6">
Writing a node12 function
&lt;/h2>
&lt;p>
We&amp;#39;ll ceate a new one (I&amp;#39;m taking this code from the &lt;a href=" https://gumroad.com/l/serverless-for-everyone-else">serverless for
everyone else&lt;/a> book) and we are doing to push it to docker hub. I&amp;#39;m
already logged in as &lt;code class="verbatim">wschenk&lt;/code> so that&amp;#39;s what I&amp;#39;m setting the
&lt;code class="verbatim">OPENFAAS_PREFIX&lt;/code> to.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">OPENFAAS_PREFIX&lt;/span>&lt;span class="o">=&lt;/span>wschenk
faas-cli new --lang node12 starbot&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Lets install the &lt;code class="verbatim">axios&lt;/code> package.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nb">cd&lt;/span> starbot
npm install --save axios&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then lets change the &lt;code class="verbatim">starbot/handler.js&lt;/code> to
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">axios&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;axios&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://api.open-notify.org/astros.json&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`There are currently &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> astronauts in space.`&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">context&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s2">&amp;#34;Content-type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">succeed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we deploy the function
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> faas-cli up -f starbot.yml&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And we can run it with:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl https://faas.willschenk.com/function/starbot&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
There are currently 7 astronauts in space.
&lt;/pre>
&lt;p>
Nice!
&lt;/p>
&lt;h2 id="headline-7">
Command as a cloud function
&lt;/h2>
&lt;p>
Lets look at how to package up a command as a function.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">faas-cli new --lang dockerfile fortune&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we edit the &lt;code class="verbatim">fortune/Dockerfile&lt;/code>. Add we are adding here is &lt;code class="verbatim">RUN
apk add fortune&lt;/code> and setting the &lt;code class="verbatim">fprocess&lt;/code> to &lt;code class="verbatim">fortune&lt;/code>.
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> ghcr.io/openfaas/classic-watchdog:0.1.4 as watchdog&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> alpine:3.12&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> mkdir -p /home/app&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apk add fortune&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>watchdog /fwatchdog /usr/bin/fwatchdog&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> chmod +x /usr/bin/fwatchdog&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Add non root user&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> addgroup -S app &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> adduser app -S -G app&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> chown app /home/app&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /home/app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="s"> app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Populate example here - i.e. &amp;#34;cat&amp;#34;, &amp;#34;sha512sum&amp;#34; or &amp;#34;node index.js&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">fprocess&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;fortune&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Set to true to see request in function logs&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">write_debug&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;false&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 8080&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">HEALTHCHECK --interval=3s &lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="err">-e&lt;/span> &lt;span class="err">/tmp/.lock&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;fwatchdog&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then you can build and deploy with
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">faas-cli up -f fortune.yml&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which now is available as:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl https://faas.willschenk.com/function/fortune&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
When I get real bored, I like to drive downtown and get a great
parking spot, then sit in my car and count how many people ask me if
I&amp;#39;m leaving.
-- Steven Wright
&lt;/pre>
&lt;p>
The whole process took me under a minute for the first time that I did
it, so that&amp;#39;s super cool.
&lt;/p>
&lt;h2 id="headline-8">
Monitoring
&lt;/h2>
&lt;p>
&lt;code class="verbatim">OpenFaas&lt;/code> uses what they call the &lt;a href="https://docs.openfaas.com/deployment/#plonk-stack">PLONK Stack&lt;/a>, which is a goofy but fun
name, but the &lt;code class="verbatim">P&lt;/code> stands for &lt;a href="https://prometheus.io/">Prometheus&lt;/a>. Lets see how that works.
&lt;/p>
&lt;p>
First we setup a ssh tunnel so we can connect to the local prometheus
instance.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> ssh -L 9090:127.0.0.1:9090 root@faas.willschenk.com&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Once this tunnel is up, we can connect to &lt;a href="https://localhost:9090">Prometheus locally&lt;/a>.
&lt;/p>
&lt;h3 id="headline-9">
Grafana
&lt;/h3>
&lt;p>
Now on your faas server, edit &lt;code class="verbatim">/var/lib/faasd/docker-compose.yaml&lt;/code> to
add the grafana service.
&lt;/p>
&lt;div class="src src-yml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="w"> &lt;/span>&lt;span class="k">grafana&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>docker.io/grafana/grafana&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- GF_AUTH_ANONYMOUS_ORG_ROLE=Admin&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- GF_AUTH_ANONYMOUS_ENABLED=&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- GF_AUTH_BASIC_ENABLED=&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># we assume cwd == /var/lib/faasd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./grafana/&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/etc/grafana/provisioning/&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">cap_add&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- CAP_NET_RAW&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- prometheus&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;127.0.0.1:3000:3000&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We need to create the &lt;code class="verbatim">grafana&lt;/code> directory and restart everything:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> mkdir -p /var/lib/faasd/grafana/
systemctl daemon-reload &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl restart faasd&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Finally on our local machine we need to open up an ssh tunnel to
grafana so we can access. In my case:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> ssh -L 3000:127.0.0.1:3000 root@faas.willschenk.com&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Add your prometheus datasource, pointing to &lt;code class="verbatim">http://prometheus:9090&lt;/code> and
you are good to start adding panels.
&lt;/p>
&lt;h2 id="headline-10">
In closing
&lt;/h2>
&lt;p>
This makes it really easy to quickly spin something up. Getting
logging and monitoring built in &amp;#34;for free&amp;#34; is a huge leg up on
spinning up your own solutions. I&amp;#39;ve haven&amp;#39;t jumped too much into the
kubernetes bandwagon, but this makes it so simple to expose a tiny bit
of functionality in a way that seems so easy to maintain.
&lt;/p>
&lt;p>
If you usecase is about gluing a couple of things together this is
really pretty fascinating!
&lt;/p>
&lt;h2 id="headline-11">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://releasecandidate.dev/posts/2021/discovery-faasd-and-openfaas/">https://releasecandidate.dev/posts/2021/discovery-faasd-and-openfaas/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gumroad.com/l/serverless-for-everyone-else">https://gumroad.com/l/serverless-for-everyone-else&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/openfaas/faas-cli">https://github.com/openfaas/faas-cli&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/openfaas/faas">https://github.com/openfaas/faas&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.youtube.com/watch?v=ZnZJXI377ak">https://www.youtube.com/watch?v=ZnZJXI377ak&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Logging with an HTTP Proxy</title><link>https://willschenk.com/articles/2021/logging_with_an_http_proxy/</link><pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2021/logging_with_an_http_proxy/</guid><description>
&lt;p>
I miss having Chrome dev tools when writing node applications, since I
often want to see what exactly the network traffic. Here&amp;#39;s a way to
easily setup a man in the middle proxy to look at all the traffic your
application is generating.
&lt;/p>
&lt;h2 id="headline-1">
Run the docker instance
&lt;/h2>
&lt;p>
First we first up the proxy with the web interface:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> docker run --rm -it -p 8080:8080 -p 8081:8081 mitmproxy/mitmproxy mitmweb --web-host 0.0.0.0&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Node ENV Variables
&lt;/h2>
&lt;p>
Then we set the proxy environment variable, and for node specifically,
tell it to not worry about self-signed certificates:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTP_PROXY&lt;/span>&lt;span class="o">=&lt;/span>http://localhost:8080
&lt;span class="nb">export&lt;/span> &lt;span class="nv">NODE_TLS_REJECT_UNAUTHORIZED&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we run our script:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> node outdated.js&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then go visit &lt;a href="http://localhost:8081">http://localhost:8081&lt;/a> to see all of the requests that were made.
&lt;/p>
&lt;p>
Simple and easy.
&lt;/p></description></item><item><title>rails uuid primary key</title><link>https://willschenk.com/articles/2020/rails_uuid_primary_keys/</link><pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/rails_uuid_primary_keys/</guid><description>
&lt;p>
Exposing primary keys externally just sort of invites people to poke around in your system. Lets configure rails to use &lt;code class="verbatim">uuid&lt;/code> instead.
&lt;/p>
&lt;h2 id="headline-1">
Create a postgres rails app
&lt;/h2>
&lt;p>
We are going to be relying upon the &lt;code class="verbatim">pgcrypto&lt;/code> postgres extension, so
lets go ahead a create a postgres based rails application.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">rails new testapp -d&lt;span class="o">=&lt;/span>postgresql
&lt;span class="nb">cd&lt;/span> testapp&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we tell our generators that we want our primary key type to be &lt;code class="verbatim">:uuid&lt;/code>:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># config/initializers/generators.rb&lt;/span>
&lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generators&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">g&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">orm&lt;/span> &lt;span class="ss">:active_record&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">primary_key_type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:uuid&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And we need to change the sort order, since when using integer id&amp;#39;s
for the primary key rails uses that. We&amp;#39;ll tell it to use &lt;code class="verbatim">created_at&lt;/code>
instead:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># app/models/application_record.rb&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">ApplicationRecord&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>
&lt;span class="nb">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">abstract_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="c1"># Sort records by date of creation instead of primary key&lt;/span>
&lt;span class="nb">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">implicit_order_column&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:created_at&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Create your first migration
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">rails g model post title content:text&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And make sure that we add to the &lt;code class="verbatim">change&lt;/code> method of the migration!
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">enable_extension&lt;/span> &lt;span class="s1">&amp;#39;pgcrypto&amp;#39;&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="n">extension_enabled?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pgcrypto&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Start postgres and test it out
&lt;/h2>
&lt;p>
Lets create a throwaway postgres container to see how things are working
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run -it --rm -p 5432:5432 -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>password postgres:13.1&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This will delete itself when you close out of it.
&lt;/p>
&lt;p>
We&amp;#39;ll need to create a simple &lt;code class="verbatim">config/database.yml&lt;/code> file to connect to it:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="ss">default&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">default&lt;/span>
&lt;span class="ss">adapter&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">postgresql&lt;/span>
&lt;span class="ss">encoding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">unicode&lt;/span>
&lt;span class="ss">host&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">localhost&lt;/span>
&lt;span class="ss">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">postgres&lt;/span>
&lt;span class="ss">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">password&lt;/span>
&lt;span class="ss">pool&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;lt;%=&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;RAILS_MAX_THREADS&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">%&amp;gt;&lt;/span>
&lt;span class="ss">development&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">default&lt;/span>
&lt;span class="ss">database&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">testapp_development&lt;/span>
&lt;span class="nb">test&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">default&lt;/span>
&lt;span class="ss">database&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">testapp_test&lt;/span>
&lt;span class="ss">production&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">default&lt;/span>
&lt;span class="ss">database&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">testapp_production&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then we create and migrate:
&lt;/p>
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">rake db:create:all
rake db:migrate&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And now we can test it out:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="err">$&lt;/span> &lt;span class="n">rails&lt;/span> &lt;span class="n">c&lt;/span>
&lt;span class="no">Running&lt;/span> &lt;span class="n">via&lt;/span> &lt;span class="no">Spring&lt;/span> &lt;span class="n">preloader&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">process&lt;/span> &lt;span class="mi">3134&lt;/span>
&lt;span class="no">Loading&lt;/span> &lt;span class="n">development&lt;/span> &lt;span class="n">environment&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">Rails&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">irb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="mo">001&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span> &lt;span class="ss">title&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;First post&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">BEGIN&lt;/span>
&lt;span class="no">Post&lt;/span> &lt;span class="no">Create&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">INSERT&lt;/span> &lt;span class="no">INTO&lt;/span> &lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;created_at&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;updated_at&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="vg">$1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">RETURNING&lt;/span> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="o">[[&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;First post&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;created_at&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;2020-11-22 16:36:20.826249&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;updated_at&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;2020-11-22 16:36:20.826249&amp;#34;&lt;/span>&lt;span class="o">]]&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">COMMIT&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="c1">#&amp;lt;Post id: &amp;#34;4c3f20d0-a17b-473d-99f1-9824ba5207c2&amp;#34;, title: &amp;#34;First post&amp;#34;, content: nil, created_at: &amp;#34;2020-11-22 16:36:20&amp;#34;, updated_at: &amp;#34;2020-11-22 16:36:20&amp;#34;&amp;gt;&lt;/span>
&lt;span class="n">irb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="mo">002&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span> &lt;span class="ss">title&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Second post&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">BEGIN&lt;/span>
&lt;span class="no">Post&lt;/span> &lt;span class="no">Create&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">INSERT&lt;/span> &lt;span class="no">INTO&lt;/span> &lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;created_at&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;updated_at&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="vg">$1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">RETURNING&lt;/span> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="o">[[&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Second post&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;created_at&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;2020-11-22 16:36:27.499092&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;updated_at&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;2020-11-22 16:36:27.499092&amp;#34;&lt;/span>&lt;span class="o">]]&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">COMMIT&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="c1">#&amp;lt;Post id: &amp;#34;2c1da815-dfe4-48e5-bdb7-13a573035825&amp;#34;, title: &amp;#34;Second post&amp;#34;, content: nil, created_at: &amp;#34;2020-11-22 16:36:27&amp;#34;, updated_at: &amp;#34;2020-11-22 16:36:27&amp;#34;&amp;gt;&lt;/span>
&lt;span class="n">irb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="mo">003&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last&lt;/span>
&lt;span class="no">Post&lt;/span> &lt;span class="no">Load&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">SELECT&lt;/span> &lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">*&lt;/span> &lt;span class="no">FROM&lt;/span> &lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span> &lt;span class="no">ORDER&lt;/span> &lt;span class="no">BY&lt;/span> &lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;created_at&amp;#34;&lt;/span> &lt;span class="no">DESC&lt;/span> &lt;span class="no">LIMIT&lt;/span> &lt;span class="vg">$1&lt;/span> &lt;span class="o">[[&lt;/span>&lt;span class="s2">&amp;#34;LIMIT&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">]]&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="c1">#&amp;lt;Post id: &amp;#34;2c1da815-dfe4-48e5-bdb7-13a573035825&amp;#34;, title: &amp;#34;Second post&amp;#34;, content: nil, created_at: &amp;#34;2020-11-22 16:36:27&amp;#34;, updated_at: &amp;#34;2020-11-22 16:36:27&amp;#34;&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
The sql for the &lt;code class="verbatim">Post.last&lt;/code> command is &lt;code class="verbatim">SELECT &amp;#34;posts&amp;#34;.* FROM &amp;#34;posts&amp;#34;
ORDER BY &amp;#34;posts&amp;#34;.&amp;#34;created_at&amp;#34; DESC LIMIT $1&lt;/code> which is using the
&lt;code class="verbatim">created_at&lt;/code> column.
&lt;/p>
&lt;h2 id="headline-3">
But this doesn&amp;#39;t support sqlite
&lt;/h2>
&lt;p>
The &lt;code class="verbatim">uuid&lt;/code> column type isn&amp;#39;t supported by sqlite. I think it&amp;#39;s better
to test on the same database type as production, and with docker it&amp;#39;s
easy to throw things up and tear them down, etc. but caveat.
&lt;/p>
&lt;h2 id="headline-4">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://pawelurbanek.com/uuid-order-rails">UUID Primary Key in Rails 6 with PostgreSQL and Active Record&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://itnext.io/using-uuids-to-your-rails-6-application-6438f4eeafdf">Using UUIDs to your new Rails 6 application&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Tailwind and Rails</title><link>https://willschenk.com/articles/2020/tailwind_and_rails/</link><pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/tailwind_and_rails/</guid><description>
&lt;p>
Tailwind is a really nice set of CSS utility classes that let you
style up a page staying largely in one file at a time. Rails has it&amp;#39;s
own wild way of dealing with javascript, so lets go through how to
make them play well together.
&lt;/p>
&lt;h2 id="headline-1">
Install tailwindcss
&lt;/h2>
&lt;p>
Make sure that you have node 12.13 or higher:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">node -v&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If not, then upgrade node.
&lt;/p>
&lt;p>
Inside of your rails project, install &lt;code class="verbatim">tailwind&lt;/code>. We need to use the
&lt;a href="https://tailwindcss.com/docs/installation#post-css-7-compatibility-build">PostCSS 7 compatibility build&lt;/a> at this time since not all of our
plugins are updated.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">yarn add tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we create a directory &lt;code class="verbatim">app/javascript/stylesheets&lt;/code> that we will
have tailwind use. Create a file
&lt;code class="verbatim">app/javascript/stylesheets/application.scss&lt;/code> and import the tailwind
components. If you need to extract and apply different components you
can do it here.
&lt;/p>
&lt;div class="src src-css">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">@&lt;/span>&lt;span class="k">import&lt;/span> &lt;span class="s2">&amp;#34;tailwindcss/base&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">import&lt;/span> &lt;span class="s2">&amp;#34;tailwindcss/components&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">//&lt;/span> &lt;span class="nt">You&lt;/span> &lt;span class="nt">can&lt;/span> &lt;span class="nt">add&lt;/span> &lt;span class="nt">your&lt;/span> &lt;span class="nt">own&lt;/span> &lt;span class="nt">custom&lt;/span> &lt;span class="nt">components&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nt">styles&lt;/span> &lt;span class="nt">here&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">import&lt;/span> &lt;span class="s2">&amp;#34;tailwindcss/utilities&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Finally, we need to add &lt;code class="verbatim">tailwindcss&lt;/code> to the &lt;code class="verbatim">postcss&lt;/code> pipeline. In &lt;code class="verbatim">postcss.config.js&lt;/code>:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tailwindcss&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;autoprefixer&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;postcss-import&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;postcss-flexbugs-fixes&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;postcss-preset-env&amp;#39;&lt;/span>&lt;span class="p">)({&lt;/span>
&lt;span class="nx">autoprefixer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">flexbox&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;no-2009&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">stage&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Configuring webpacker
&lt;/h2>
&lt;p>
First we need to tell &lt;code class="verbatim">app/javascript/packs/application.js&lt;/code> to use the
new sass sheet:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// Put this at the end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;stylesheets/application.scss&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then add the &lt;code class="verbatim">stylesheet_pack_tag&lt;/code> to your layout
&lt;/p>
&lt;p>
In &lt;code class="verbatim">app/views/layouts/application.html.erb&lt;/code>:
&lt;/p>
&lt;div class="src src-html">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="c">&amp;lt;!-- This refers to app/javascript/stylesheets/application.scss--&amp;gt;&lt;/span>
&lt;span class="err">&amp;lt;&lt;/span>%= stylesheet_pack_tag &amp;#39;application&amp;#39;, &amp;#39;data-turbolinks-track&amp;#39;: &amp;#39;reload&amp;#39; %&amp;gt;&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then update the &lt;code class="verbatim">body&lt;/code> style with a little tailwind goodness, so we can test it out:
&lt;/p>
&lt;div class="src src-html">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-gray-100 text-white-900 w-3/4 mx-auto p-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which we can do by creating a simple route:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">rails g controller home index&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And in &lt;code class="verbatim">config/routes.rb&lt;/code> add a
&lt;/p>
&lt;p>
Which will let you see the generated javascript in real life by
starting up rails and going to &lt;a href="http://localhost:3000">http://localhost:3000&lt;/a>
&lt;/p>
&lt;h2 id="headline-3">
Setting up production purging
&lt;/h2>
&lt;p>
We&amp;#39;re going to &lt;a href="https://tailwindcss.com/docs/controlling-file-size">follow tailwind purgecss directions&lt;/a> and create a
&lt;code class="verbatim">tailwind.config.js&lt;/code> file.
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">purge&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.erb&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.vue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.jsx&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">theme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="nx">variants&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Add in any additional filetypes depending upon which templating system
you are using.
&lt;/p>
&lt;h2 id="headline-4">
Customizing the theme
&lt;/h2>
&lt;p>
Tailwind has a lot of ways to &lt;a href="https://tailwindcss.com/docs/theme">change the theme&lt;/a>, but lets walk through how to add a different font for the site.
&lt;/p>
&lt;p>
First we&amp;#39;ll add a font via npm, from the &lt;a href="https://fontsource.github.io/search-directory">fontsource&lt;/a> project.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">yarn add fontsource-dosis&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then, we need to tell webpacker to include it, which is driven off of
&lt;code class="verbatim">app/assets/javascripts/pack/application.js&lt;/code>. Add the required require:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fontsource-dosis&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we are need to tell &lt;code class="verbatim">tailwind&lt;/code> to use this new font. First we import the default theme, and then we&amp;#39;ll add our new &lt;code class="verbatim">fontFamily&lt;/code> to the front:
&lt;/p>
&lt;div class="src src-javascript">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">defaultTheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;tailwindcss/defaultTheme&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">purge&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">content&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.erb&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.vue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;./app/**/*.jsx&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">]},&lt;/span>
&lt;span class="nx">theme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">extend&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fontFamily&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">sans&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Dosis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">defaultTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fontFamily&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sans&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">variants&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Note that rails is only checking to see if the &lt;code class="verbatim">application.js&lt;/code> file has
changed inside of the &lt;code class="verbatim">app/assets&lt;/code> folder, so if you make a change to
the &lt;code class="verbatim">tailwind.config.js&lt;/code> file you need to touch &lt;code class="verbatim">application.js&lt;/code> to
trigger a rebuild.
&lt;/p>
&lt;h2 id="headline-5">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://web-crunch.com/posts/how-to-install-tailwind-css-using-ruby-on-rails">https://web-crunch.com/posts/how-to-install-tailwind-css-using-ruby-on-rails&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://rubyyagi.com/tailwind-css-on-rails-6-intro/">https://rubyyagi.com/tailwind-css-on-rails-6-intro/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://tailwindcss.com/docs/theme">https://tailwindcss.com/docs/theme&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Rails in Docker</title><link>https://willschenk.com/articles/2020/rails_in_docker/</link><pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/rails_in_docker/</guid><description>
&lt;p>
In &lt;a href="https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/">leveraging disposability for exploration&lt;/a> we looked at how to build
software without having it installed on your local computer. Lets go
through how to setup and develop a rails application with this
process.
&lt;/p>
&lt;h2 id="headline-1">
&lt;code class="verbatim">docker-compose.yml&lt;/code> all the way down
&lt;/h2>
&lt;p>
We&amp;#39;re going to create our app by adding things to a &lt;code class="verbatim">docker-compose.yml&lt;/code>
file as needed. Lets create the first one, which will contain our
rails container as well as a volume for keeping track of all the gems.
&lt;/p>
&lt;p>
We are going to have a few sections:
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
&lt;code class="verbatim">args&lt;/code> where we pass in the user_id and group_id of the user that the
docker container is going to use. This should be the same as the
user id in the host operation system, so files that are created by
in the container in the bound volume have the right owners.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">volumes&lt;/code> where we mount the &lt;code class="verbatim">gratitude&lt;/code> directory into the container,
and a &lt;code class="verbatim">gratitude-gems&lt;/code> volume that we use to cache the bundled gems
outside of the container. This makes upgrading gems that much
faster when you are rebuilding the docker container so you don&amp;#39;t
need to download them everytime.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">ports&lt;/code> to expose the rails server.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;code class="verbatim">docker-compose.yml&lt;/code>:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>.&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${USER_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${GROUP_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/app/gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>volume&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>gratitude-gems&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/usr/local/bundle&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>gratitude-gems&lt;span class="p">:&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we build a &lt;code class="verbatim">Dockerfile&lt;/code> to run the rails app. We base it off of the
&lt;code class="verbatim">ruby:2.7&lt;/code> image, add the user id, install node, and then install &lt;code class="verbatim">rails&lt;/code>
and &lt;code class="verbatim">bundler&lt;/code>. All other dependancies will be specified with the
&lt;code class="verbatim">Gemfile&lt;/code> inside of the project once we create it.
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> ruby:2.7&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ARG&lt;/span> USER_ID&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ARG&lt;/span> GROUP_ID&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> addgroup --gid &lt;span class="nv">$GROUP_ID&lt;/span> user &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> adduser --disabled-password --gecos &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> --uid &lt;span class="nv">$USER_ID&lt;/span> --gid &lt;span class="nv">$GROUP_ID&lt;/span> user&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app/gratitude&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># nodejs and yarn&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg &lt;span class="p">|&lt;/span> apt-key add -&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;deb https://dl.yarnpkg.com/debian/ stable main&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> tee /etc/apt/sources.list.d/yarn.list&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> curl -sL https://deb.nodesource.com/setup_15.x &lt;span class="p">|&lt;/span> bash -&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y nodejs yarn&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># install rails&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> gem install rails bundler&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 3000&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> chown -R &lt;span class="nv">$USER_ID&lt;/span> /usr/local/bundle&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="s"> $USER_ID&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> bundle &lt;span class="nb">exec&lt;/span> rails server -b 0.0.0.0&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we can bring all this up by doing:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p gratitude &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> docker-compose up --build&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This will give the error that &lt;code class="verbatim">Could not locate Gemfile or .bundle/
directory&lt;/code> which makes sense since there&amp;#39;s no source code. So lets
make it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose run gratitude bash
&lt;span class="nb">cd&lt;/span> /app
rails new gratitude&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This will take a bit of time to build all of the native versions.
Once this is done though, &lt;code class="verbatim">ctrl-d&lt;/code> to exit out of the shell and try
&lt;code class="verbatim">docker-compose up&lt;/code> again.
&lt;/p>
&lt;p>
Go to &lt;a href="http://localhost:3000">http://localhost:3000&lt;/a>
&lt;/p>
&lt;p>
&amp;#34;Yay!&amp;#34;, it says, &amp;#34;You&amp;#39;re on Rails!&amp;#34;
&lt;/p>
&lt;p>
&lt;code class="verbatim">ctrl-c&lt;/code> to exit out.
&lt;/p>
&lt;h2 id="headline-2">
Add a environment file
&lt;/h2>
&lt;p>
The next thing that we&amp;#39;ll want to do is to add an environment file of
somekind. Right now we&amp;#39;re only going to use it to store the
&lt;code class="verbatim">RAILS_MASTER_KEY&lt;/code>, which is what is used to decrypt
&lt;code class="verbatim">config/credentials.yml.enc&lt;/code>. We will then remove the &lt;code class="verbatim">config/master.key&lt;/code>
file from the repo.
&lt;/p>
&lt;p>
&lt;em>Look into &lt;code class="verbatim">config/master.key&lt;/code> to find your value!&lt;/em>
&lt;/p>
&lt;p>
Create a file called &lt;code class="verbatim">.env&lt;/code>:
&lt;/p>
&lt;div class="src src-env">
&lt;pre>&lt;code class="language-env" data-lang="env">RAILS_MASTER_KEY=a43a4d582cd7d044bed9297c9e6fb797&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
Keep this save! You should them make sure that you don&amp;#39;t accidently
check this file into the repository. Keep it safe in a password
manager.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> .env &amp;gt;&amp;gt; .gitignore&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now we need to adjust the &lt;code class="verbatim">docker-compose.yml&lt;/code> file to include this
environment variable:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>.&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${USER_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${GROUP_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/app/gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>volume&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>gratitude-gems&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/usr/local/bundle&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- .env&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>gratitude-gems&lt;span class="p">:&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You can then delete the file &lt;code class="verbatim">gratitude/config/master.key&lt;/code>.
&lt;/p>
&lt;h2 id="headline-3">
Changing that landing page
&lt;/h2>
&lt;p>
Running commands with &lt;code class="verbatim">docker-compose run gratitude&lt;/code> is a bit wordy, so
lets create a small bash script that will do it for us. Call it &lt;code class="verbatim">r&lt;/code> or
something.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>docker-compose run --rm gratitude &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then a quick &lt;code class="verbatim">chmod +x r&lt;/code> and you should be good to go.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./r rails generate controller index home&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then we can update the &lt;code class="verbatim">config/routes.rb&lt;/code> file to use this:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">draw&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">root&lt;/span> &lt;span class="s1">&amp;#39;index#home&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-4">
Adding &lt;code class="verbatim">postgres&lt;/code> and &lt;code class="verbatim">pgadmin&lt;/code>
&lt;/h2>
&lt;p>
Let&amp;#39;s write up &lt;code class="verbatim">postgres&lt;/code> into the system and create out first model.
First we need to add a couple of sections to the &lt;code class="verbatim">docker-compose.yml&lt;/code>
file.
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Add a &lt;code class="verbatim">postgres&lt;/code> service.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Add a &lt;code class="verbatim">pgadmin&lt;/code> service.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Make the &lt;code class="verbatim">gratitude&lt;/code> service depend upon &lt;code class="verbatim">postgres&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Add a volume to keep the database around and the &lt;code class="verbatim">pgadmin&lt;/code> stuff around.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">postgres&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>postgres&lt;span class="p">:&lt;/span>&lt;span class="m">13.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">POSTGRES_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>awesome_password&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5432:5432&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- gratitude-postgres&lt;span class="p">:&lt;/span>/var/lib/postgresql/data&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pgadmin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>dpage/pgadmin4&lt;span class="p">:&lt;/span>&lt;span class="m">4.28&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PGADMIN_DEFAULT_EMAIL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>admin@example.com&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PGADMIN_DEFAULT_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>SuperSecret&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GUNICORN_ACCESS_LOGFILE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/dev/&lt;span class="kc">null&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;4000:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- postgres&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- gratitude-pgadmin&lt;span class="p">:&lt;/span>/var/lib/pgadmin&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>.&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${USER_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${GROUP_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- postgres&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/app/gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>volume&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>gratitude-gems&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/usr/local/bundle&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- .env&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude-gems&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude-postgres&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>gratitude-pgadmin&lt;span class="p">:&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Add the &lt;code class="verbatim">pg&lt;/code> gem:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./r bundle add pg&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And finally we need to tell rails where to find that database. First
we add to our &lt;code class="verbatim">.env&lt;/code> file:
&lt;/p>
&lt;div class="src src-.env">
&lt;pre>&lt;code class="language-.env" data-lang=".env">DATABASE_URL=postgresql://postgres:awesome_password@postgres:5432/gratitude?encoding=utf8&amp;amp;pool=5&amp;amp;timeout=5000&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
Now we can create a simple model
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./r rails g scaffold project name:string repo:string&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then we can set it up and start it up:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./r rake db:reset
./r rake db:migrate
docker-compose up&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And see the glory that is &lt;a href="http://localhost:3000/projects">http://localhost:3000/projects&lt;/a>
&lt;/p>
&lt;h2 id="headline-5">
Adding in &lt;code class="verbatim">redis&lt;/code> and &lt;code class="verbatim">sidekiq&lt;/code>
&lt;/h2>
&lt;p>
Another common set of things in the environment is &lt;code class="verbatim">redis&lt;/code> and &lt;code class="verbatim">sidekiq&lt;/code>.
These are both additions to the &lt;code class="verbatim">docker-compose.yml&lt;/code> file. One is an
entry for the &lt;code class="verbatim">redis&lt;/code> service (and it&amp;#39;s added volume) and the other is a
another container, with the same &lt;code class="verbatim">Dockerfile&lt;/code> as the rails app, but with
a slightly different command. Lets look at adding that now.
&lt;/p>
&lt;p>
First we need to add some gems
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./r bundle add sidekiq
./r bundle add redis-rails&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Lets configure sidekiq and the redis cache in &lt;code class="verbatim">config/initializers/sidekiq.rb&lt;/code>:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cache_store&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:redis_store&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;CACHE_URL&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="ss">namespace&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;gratitude::cache&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">active_job&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queue_adapter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:sidekiq&lt;/span>
&lt;span class="no">Sidekiq&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configure_server&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">url&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;JOB_WORKER_URL&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And in our good old &lt;code class="verbatim">.env&lt;/code>, point to our new fancy redis server:
&lt;/p>
&lt;div class="src src-env">
&lt;pre>&lt;code class="language-env" data-lang="env">REDIS_URL=redis://redis:6379/0
CACHE_URL=redis://redis:6379/0
JOB_WORKER_URL=redis://redis:6379/0&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
And the add everything to &lt;code class="verbatim">docker-compose.yml&lt;/code>:
&lt;/p>
&lt;div class="src src-yaml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">postgres&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>postgres&lt;span class="p">:&lt;/span>&lt;span class="m">13.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">POSTGRES_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>awesome_password&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5432:5432&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- gratitude-postgres&lt;span class="p">:&lt;/span>/var/lib/postgresql/data&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pgadmin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>dpage/pgadmin4&lt;span class="p">:&lt;/span>&lt;span class="m">4.28&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PGADMIN_DEFAULT_EMAIL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>admin@example.com&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PGADMIN_DEFAULT_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>SuperSecret&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GUNICORN_ACCESS_LOGFILE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/dev/&lt;span class="kc">null&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;4000:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- postgres&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- gratitude-pgadmin&lt;span class="p">:&lt;/span>/var/lib/pgadmin&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">redis&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">redis&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>redis&lt;span class="p">:&lt;/span>&lt;span class="m">6.0.9&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;6379:6379&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- gratitude-redis&lt;span class="p">:&lt;/span>/var/lib/redis/data&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>.&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${USER_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${GROUP_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- postgres&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- redis&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/app/gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>volume&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>gratitude-gems&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/usr/local/bundle&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- .env&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">sidekiq&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>.&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${USER_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP_ID&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;${GROUP_ID:-1000}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bundle&lt;span class="w"> &lt;/span>exec&lt;span class="w"> &lt;/span>sidekiq&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- postgres&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- redis&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>bind&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>./gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/app/gratitude&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>volume&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">source&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>gratitude-gems&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/usr/local/bundle&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">env_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- .env&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude-gems&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude-postgres&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">gratitude-pgadmin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>gratitude-redis&lt;span class="p">:&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And if you want to have a nice &lt;code class="verbatim">sidekiq&lt;/code> admin, add the following to your &lt;code class="verbatim">config/routes.rb&lt;/code> file:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;sidekiq/web&amp;#39;&lt;/span>
&lt;span class="n">mount&lt;/span> &lt;span class="no">Sidekiq&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Web&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;/sidekiq&amp;#39;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-6">
Finally
&lt;/h2>
&lt;p>
And when you are done with whatever you are doing:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker-compose down
Stopping rails_in_docker_gratitude_1 ... &lt;span class="k">done&lt;/span>
Stopping rails_in_docker_sidekiq_1 ... &lt;span class="k">done&lt;/span>
Stopping rails_in_docker_redis_1 ... &lt;span class="k">done&lt;/span>
Stopping rails_in_docker_pgadmin_1 ... &lt;span class="k">done&lt;/span>
Stopping rails_in_docker_postgres_1 ... &lt;span class="k">done&lt;/span>
Removing rails_in_docker_gratitude_1 ... &lt;span class="k">done&lt;/span>
Removing rails_in_docker_sidekiq_1 ... &lt;span class="k">done&lt;/span>
Removing rails_in_docker_redis_1 ... &lt;span class="k">done&lt;/span>
Removing rails_in_docker_pgadmin_1 ... &lt;span class="k">done&lt;/span>
Removing rails_in_docker_postgres_1 ... &lt;span class="k">done&lt;/span>
Removing network rails_in_docker_default&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Everything but the volumes are removed. If you really want to get
aggressive you can &lt;code class="verbatim">docker system df -v&lt;/code> which will show you everything
that&amp;#39;s on your system, and you can blow everything away (less the
volumes) but using &lt;code class="verbatim">docker system prune --all&lt;/code> – be sure to &lt;a href="https://docs.docker.com/engine/reference/commandline/system_prune/">read the
documentation first!&lt;/a>.
&lt;/p>
&lt;h2 id="headline-7">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/">Leveraging disposability for exploration&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://semaphoreci.com/community/tutorials/dockerizing-a-ruby-on-rails-application">dockerizing a rails application&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://guides.rubyonrails.org/getting_started.html">Rails Getting Started&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://docs.docker.com/engine/reference/commandline/system_prune/">&lt;code class="verbatim">docker system prune&lt;/code> documentation&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/nodesource/distributions/blob/master/README.md">NodeSource Binary Distributions&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Release code diffs</title><link>https://willschenk.com/articles/2020/release_code_diffs/</link><pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/release_code_diffs/</guid><description>
&lt;p>
When tracking and upgrading software you want to have an idea of what
changed. Looking at the readme is helpful, and projects that &lt;a href="https://keepachangelog.com/en/1.0.0/">keep a
changelog&lt;/a> are polite and friendly, but it&amp;#39;s nice to actually get down
to it and see what the changes actually are.
&lt;/p>
&lt;h2 id="headline-1">
Loading the repo and finding the tags
&lt;/h2>
&lt;p>
We first need to look at where the code is from. In &lt;a href="https://willschenk.com/articles/2020/looking_at_gemfiles/">looking at
gemfiles&lt;/a> we found how to see what gem you are currently working with,
and in &lt;a href="https://willschenk.com/articles/2020/looking_at_packagejson/">looking and package.json&lt;/a> we did the same for &lt;code class="verbatim">npm&lt;/code>. The logic in
the same once we have
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Repo
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Original tag
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
New tag
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
For testing purposes, we are assuming that you&amp;#39;ve pulled this
information out from your package manager and we know that
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>Package&lt;/td>
&lt;td>middleman&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repository&lt;/td>
&lt;td>&lt;a href="https://github.com/middleman/middleman">https://github.com/middleman/middleman&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Original Version&lt;/td>
&lt;td>4.3.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>New version&lt;/td>
&lt;td>4.3.9&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
We&amp;#39;ll start by cloning or updating the repo into a directory. In this
case, the repo will go into &lt;code class="verbatim">/tmp/middleman/repo&lt;/code>. Our analysis will go
in &lt;code class="verbatim">/tmp/middleman&lt;/code>.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;pp&amp;#39;&lt;/span>
&lt;span class="no">WORKDIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;/tmp&amp;#39;&lt;/span>
&lt;span class="n">repo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;https://github.com/middleman/middleman&amp;#39;&lt;/span>
&lt;span class="n">current_version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;4.3.3&amp;#39;&lt;/span>
&lt;span class="n">new_version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;4.3.9&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">load_repo&lt;/span> &lt;span class="n">repo&lt;/span>
&lt;span class="n">dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">repo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/.*\//&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">repo_dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">WORKDIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/repo&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exists?&lt;/span> &lt;span class="n">repo_dir&lt;/span>
&lt;span class="nb">system&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;cd &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo_dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">;git pull origin master&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">system&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;mkdir -p &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">WORKDIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">system&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;cd &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">WORKDIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">;git clone &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> repo&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">repo_dir&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">repo_dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_repo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">repo&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Repo directory: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo_dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Repo directory: /tmp/middleman/repo
&lt;/pre>
&lt;h2 id="headline-2">
Tags
&lt;/h2>
&lt;p>
Now that we have the repo, we need to find the tags in the project.
We&amp;#39;ll pull down a list of all the tags in the project.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">latest_tags&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`cd &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo_dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">;git tag --sort=-v:refname`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lines&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chomp&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;latest_tag : &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">latest_tags&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
latest_tag : v5.0.0.rc.1
&lt;/pre>
&lt;h3 id="headline-3">
Semver
&lt;/h3>
&lt;p>
Lets parse the tags to see if they are version numbers, if they are
prereleases, and be able to tell if there is a high patch version that
matches our criteria.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;bundler/inline&amp;#39;&lt;/span>
&lt;span class="n">gemfile&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">source&lt;/span> &lt;span class="s1">&amp;#39;https://rubygems.org&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;semver2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;3.4.2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">require&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;semver&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">tag_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">latest_tags&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">tag&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="no">SemVer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse_rubygems&lt;/span> &lt;span class="n">tag&lt;/span> &lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We can filter through the versions to find only those without any
prerelease info (like &lt;code class="verbatim">.rc.1&lt;/code> or &lt;code class="verbatim">.beta-2&lt;/code> that are canditidate releases)
and print out what the current latest is:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">releases&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tag_info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prerelease&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;latest_release : &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
latest_release : v4.3.10
&lt;/pre>
&lt;p>
Now we can write some methods to match our versions to tags:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_tag&lt;/span> &lt;span class="n">tag_info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">latest_tags&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">version_string&lt;/span>
&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">SemVer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse_rubygems&lt;/span> &lt;span class="n">version_string&lt;/span>
&lt;span class="n">tag_info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each_with_index&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">tag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">tag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">version&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">latest_tags&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">current_tag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">find_tag&lt;/span> &lt;span class="n">tag_info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">latest_tags&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">current_version&lt;/span>
&lt;span class="n">new_tag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">find_tag&lt;/span> &lt;span class="n">tag_info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">latest_tags&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_version&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">current_tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Couldn&amp;#39;t find current_version &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">current_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">new_tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Couldn&amp;#39;t find new_version &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">new_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">current_tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">new_tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;current_tag: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">current_tag&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;new_tag : &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">new_tag&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
current_tag: v4.3.3
new_tag : v4.3.9
&lt;/pre>
&lt;p>
We can also look to see what is the latest patch release for the same
major and minor version that we&amp;#39;re running. According to &lt;code class="verbatim">semver&lt;/code>
standards – and it&amp;#39;s not totally clear how strictly these are
followed or even if they make sense – patch releases should be bug
fixes only and totally compatible.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_latest_patch&lt;/span> &lt;span class="n">tag_info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">version_string&lt;/span>
&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">SemVer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse_rubygems&lt;/span> &lt;span class="n">version_string&lt;/span>
&lt;span class="n">tag_info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">tag&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">tag&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">major&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">version&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">major&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">minor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">version&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">minor&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">highest_patch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">find_latest_patch&lt;/span> &lt;span class="n">tag_info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_tag&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;most compatible patch: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">highest_patch&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
most compatible patch: v4.3.10
&lt;/pre>
&lt;h2 id="headline-4">
Change information
&lt;/h2>
&lt;p>
Now that we have identified the tags, we can start to ask questions
about what happened between those two results. We&amp;#39;ll use the &lt;code class="verbatim">git log&lt;/code>
command, which is amazingly powerful and super cool.
&lt;/p>
&lt;p>
&lt;em>Super cool&lt;/em>. You heard me.
&lt;/p>
&lt;p>
These are the formatting options that we&amp;#39;ll be using:
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>Option&lt;/td>
&lt;td>Description&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%aI&lt;/code>&lt;/td>
&lt;td>Commit time&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%h&lt;/code>&lt;/td>
&lt;td>Hash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%ae&lt;/code>&lt;/td>
&lt;td>Author email&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%an&lt;/code>&lt;/td>
&lt;td>Author name&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%s&lt;/code>&lt;/td>
&lt;td>Summary&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
We&amp;#39;re going to output a log of the changes that happened between the
tags. We&amp;#39;ll have to do some crazy &lt;code class="verbatim">regex&lt;/code> to pull out the fields.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">git_cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;git log --reverse --pretty=&amp;#39;format:%aI|%h|%ae|%an|%s&amp;#39; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">current_tag&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">..&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">new_tag&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">commits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`cd &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo_dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">git_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lines&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chomp&lt;/span>
&lt;span class="n">md&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sr">/(.*?)\|(.*?)\|(.*?)\|(.*?)\|(.*)/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="ss">date&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">hash&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">summary&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Most recent change: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">commits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:date&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Oldest change : &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">commits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:date&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Most recent change: 2018-01-20T08:26:10+09:00
Oldest change : 2020-09-09T14:06:57-07:00
&lt;/pre>
&lt;p>
We can can calculate how many days have passed bewteen the releases like so
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;time&amp;#39;&lt;/span>
&lt;span class="n">oldest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">commits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:date&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">newest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">commits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:date&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">days_passed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">newest&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">oldest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Seconds in a day&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Days passed : &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">days_passed&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Days passed : 963.9033217592593
&lt;/pre>
&lt;p>
Which is a bit unnecessarily precise but gives you a sense of all the
years that have gone by.
&lt;/p>
&lt;h3 id="headline-5">
Tickets
&lt;/h3>
&lt;p>
A lot of projects put a ticket number in the commit, in the format of
&lt;code class="verbatim">#nnn&lt;/code> where &lt;code class="verbatim">n&lt;/code> is an integer. For projects that use Jira, these are
generally three letters, a dash, and a number, but either way they
start with a &lt;code class="verbatim">#&lt;/code>. So lets print out those issues that we find in the
commit summary messages.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">issues&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">commits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">commit&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">md&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sr">/\#([^\s\)\]]*)/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">commit&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:summary&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">md&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span>
&lt;span class="n">pp&lt;/span> &lt;span class="n">issues&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which gives us:
&lt;/p>
&lt;pre class="example">
[&amp;#34;2083&amp;#34;, &amp;#34;2143&amp;#34;, &amp;#34;2287&amp;#34;, &amp;#34;2316&amp;#34;, &amp;#34;2323&amp;#34;, &amp;#34;2327&amp;#34;, &amp;#34;2348&amp;#34;]
&lt;/pre>
&lt;p>
From here we could try and figure out what issue tracker this
repository is using, and then cross reference that to see what has
been going on.
&lt;/p>
&lt;p>
In the case of this repository we see in &lt;code class="verbatim">.github/CONTRIBUTING.md&lt;/code> that
it uses &lt;a href="https://github.com/middleman/middleman/issues">GitHub Issues&lt;/a> which is pretty common and popular for GitHub
hosted projects, and not like &lt;em>shocking&lt;/em> or anything.
&lt;/p>
&lt;h3 id="headline-6">
A brief excursion into the &lt;code class="verbatim">CHANGELOG&lt;/code>
&lt;/h3>
&lt;p>
The commit messages are semi automated, and if you look at the &lt;a href="https://keepachangelog.com/en/1.0.0/">keeping
a changelog site&lt;/a> they recommend against dumping in commit messages
directly. Lets try and parse out the changelog in the repo to see if
we are missing any other issues or interesting things.
&lt;/p>
&lt;p>
This is a fairly straightforward way to &amp;#34;parse&amp;#34; this file, but since
it&amp;#39;s freeform we don&amp;#39;t know if many projects support it. This works
as a quick scaffold now though.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">
&lt;span class="n">changes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exists?&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo_dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/CHANGELOG.md&amp;#34;&lt;/span>
&lt;span class="n">scan_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="n">entries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[]&lt;/span>
&lt;span class="n">headline_re&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sr">/\&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sr"> (.*)/&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo_dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/CHANGELOG.md&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each_line&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chomp!&lt;/span>
&lt;span class="n">md&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">headline_re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">md&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">current_version&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">changes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">scan_version&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">entries&lt;/span>
&lt;span class="n">entries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">scan_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">elsif&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">entries&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">current_version&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">changes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">scan_version&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">entries&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">changes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">new_version&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Found change log for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">new_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;No entry for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">new_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">changes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">current_version&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Found change log for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">current_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;No entry for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">current_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which yields:
&lt;/p>
&lt;pre class="example">
No entry for 4.3.9
Found change log for 4.3.3
&lt;/pre>
&lt;p>
So not that useful in this case.
&lt;/p>
&lt;h3 id="headline-7">
Seeing the authors
&lt;/h3>
&lt;h4 id="headline-8">
Using the CLI
&lt;/h4>
&lt;p>
One thing you can do with regular (&lt;em>awesome&lt;/em>) git cli is something
called &lt;a href="https://git-scm.com/docs/git-shortlog">git shortlog&lt;/a> which shows you a rolled up version of commits by
authors. Here I&amp;#39;m using &lt;code class="verbatim">-n&lt;/code> which sorts by author commits.
&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> /tmp/middleman/repo
git shortlog -n v4.3.3..v4.3.9&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And we can see that &lt;code class="verbatim">Thomas Reynolds&lt;/code> seems to have done most of the
maintence work.
&lt;/p>
&lt;pre class="example">
Thomas Reynolds (13):
Bump minor
Lock old bundler
Disable bind test on travis
Update changelog [ci skip]
Prep
Add Ruby 2.7.0 to CI
Prepare 4.3.6
Disable therubyracer
Bump
Prep release
Update changelog
Fix #2083
Prep 4.3.9
Alexey Vasiliev (1):
Update kramdown to avoid CVE-2020-14001 in v4 (#2348)
Johnny Shields (1):
Fix ignore of I18n files (#2143)
Julik Tarkhanov (1):
Reset Content-Length header when rewriting (#2316)
Leigh McCulloch (1):
Loosen activesupport dependence (#2327)
Maarten (1):
Fix i18n with anchor v4 (#2287)
bravegrape (1):
Add empty image alt tag if alt text not specified (#2323)
&lt;/pre>
&lt;p>
We can also include &lt;code class="verbatim">-s&lt;/code> to show the summary only, in other words
doesn&amp;#39;t include the commit one liner.
&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> /tmp/middleman/repo
git shortlog -n -s v4.3.3..v4.3.9&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
13 Thomas Reynolds
1 Alexey Vasiliev
1 Johnny Shields
1 Julik Tarkhanov
1 Leigh McCulloch
1 Maarten
1 bravegrape
&lt;/pre>
&lt;h3 id="headline-9">
Using code to summarize authors
&lt;/h3>
&lt;p>
We can recreate this view pretty simply:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">authors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">commits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">authors&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:name&lt;/span>&lt;span class="o">]]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">authors&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:name&lt;/span>&lt;span class="o">]]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">authors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">authors&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">&amp;lt;=&amp;gt;&lt;/span> &lt;span class="n">authors&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%10d %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">authors&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">author&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
13 Thomas Reynolds
1 Johnny Shields
1 Maarten
1 Julik Tarkhanov
1 bravegrape
1 Leigh McCulloch
1 Alexey Vasiliev
&lt;/pre>
&lt;p>
The sort order is slight different, but &lt;code class="verbatim">1&lt;/code> is &lt;code class="verbatim">1&lt;/code>…
&lt;/p>
&lt;h2 id="headline-10">
Listing the files changed
&lt;/h2>
&lt;p>
Between the two versions we want to see everything that changed. We
can do this using the &lt;code class="verbatim">git diff&lt;/code> command, and pass in &lt;code class="verbatim">--numstat&lt;/code> to see
the files that changed.
&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> /tmp/middleman/repo
git diff --numstat v4.3.3..v4.3.9&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
18 0 .devcontainer/Dockerfile
37 0 .devcontainer/devcontainer.json
4 0 .travis.yml
29 0 CHANGELOG.md
2 2 Gemfile
17 24 Gemfile.lock
316 315 middleman-cli/features/preview_server.feature
11 0 middleman-core/features/default_alt_tag.feature
4 0 middleman-core/features/i18n_link_to.feature
67 11 middleman-core/features/ignore.feature
5 2 middleman-core/features/liquid.feature
17 0 middleman-core/features/markdown_kramdown.feature
1 1 middleman-core/features/relative_assets.feature
1 1 middleman-core/features/relative_assets_helpers_only.feature
0 0 middleman-core/fixtures/default-alt-tags-app/config.rb
1 0 middleman-core/fixtures/default-alt-tags-app/source/empty-alt-tag.html.erb
- - middleman-core/fixtures/default-alt-tags-app/source/images/blank.gif
1 0 middleman-core/fixtures/default-alt-tags-app/source/meaningful-alt-tag.html.erb
2 0 middleman-core/lib/middleman-core/core_extensions/default_helpers.rb
9 0 middleman-core/lib/middleman-core/core_extensions/i18n.rb
5 0 middleman-core/lib/middleman-core/core_extensions/inline_url_rewriter.rb
4 0 middleman-core/lib/middleman-core/renderers/kramdown.rb
1 1 middleman-core/lib/middleman-core/template_renderer.rb
1 1 middleman-core/lib/middleman-core/version.rb
1 1 middleman-core/middleman-core.gemspec
1 1 middleman/middleman.gemspec
&lt;/pre>
&lt;p>
&lt;code class="verbatim">--numstat&lt;/code> shows you the lines of code added and deleted, and from this
it looks like most of the work on the repo was in the test directory
for a feature named &lt;code class="verbatim">preview server&lt;/code>. The actual number of changes to
the main source code seems pretty small, but if we want to take a look
at what those changes are:
&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> /tmp/middleman/repo
git diff v4.3.3..v4.3.9 &lt;span class="s1">&amp;#39;*.rb&amp;#39;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which shows a huge output of the diffs of all the code files from the
one tag to the other. I&amp;#39;ll spare you from scrolling through, but if we
look just at the &lt;code class="verbatim">version.rb&lt;/code> file you can see that it shows the diffs
from where you start to where you end up – in this case, from version
&lt;code class="verbatim">4.3.3&lt;/code> to =4.3.9.
&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> /tmp/middleman/repo
git diff v4.3.3..v4.3.9 &lt;span class="s1">&amp;#39;*version.rb&amp;#39;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
diff --git a/middleman-core/lib/middleman-core/version.rb b/middleman-core/lib/middleman-core/version.rb
index 42bc84bc..753d3c87 100644
--- a/middleman-core/lib/middleman-core/version.rb
+++ b/middleman-core/lib/middleman-core/version.rb
@@ -1,5 +1,5 @@
module Middleman
# Current Version
# @return [String]
- VERSION = '4.3.3'.freeze unless const_defined?(:VERSION)
+ VERSION = '4.3.9'.freeze unless const_defined?(:VERSION)
end
&lt;/pre>
&lt;h2 id="headline-11">
In summary
&lt;/h2>
&lt;p>
Given a &lt;a href="https://willschenk.com/articles/2020/looking_at_gemfiles/">Gemfile.lock&lt;/a> or a &lt;a href="https://willschenk.com/articles/2020/looking_at_packagejson/">package-lock.json&lt;/a> we can see which version
of a module you are currently running, where the code is hosted, and
which is the latest version. From here we can pull down the repo,
look for the tags that marked each specific version, and see who
worked on it and what the overall diffs are to see &lt;em>exactly what code
has changed&lt;/em>. This works if the code is hosted on github, or any other
giy repository.
&lt;/p>
&lt;p>
In addition to looking at the repositories between the tags, we can
also also pull in static analysis for other parts of the project. We
can &lt;a href="https://willschenk.com/articles/2020/gitlog_in_sqlite/">put the gitlog in SQLite&lt;/a> and do further analysis.
&lt;/p>
&lt;p>
Each of these steps needs further refinement but we&amp;#39;ve got all of the
major pieces together.
&lt;/p>
&lt;h2 id="headline-12">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://semver.org/">Semantic Versioning 2.0.0&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://keepachangelog.com/en/1.0.0/">Keep a changelong&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://git-scm.com/docs/git-shortlog">git shortlog&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Looking at package.json</title><link>https://willschenk.com/articles/2020/looking_at_packagejson/</link><pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/looking_at_packagejson/</guid><description>
&lt;h2 id="headline-1">
Look at the dependencies
&lt;/h2>
&lt;p>
First lets create a simple project and add a single module, in this
case &lt;code class="verbatim">npm-api&lt;/code> which will we use to access the main repository.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm init -y
npm add npm-api&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And lets see what&amp;#39;s been installed in &lt;code class="verbatim">node_modules&lt;/code>:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ls -l node_modules &lt;span class="p">|&lt;/span> wc -l
du -sh node_modules&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td class="align-right">68&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">12M&lt;/td>
&lt;td>node_modules&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
68 directories with 12M of code! Yowza! That&amp;#39;s-a big package. Lets
parse up the &lt;code class="verbatim">package-lock.js&lt;/code> file to see if it agrees:
&lt;/p>
&lt;div class="src src-js">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="s1">&amp;#39;use strict&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">rawdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;package-lock.json&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">lockfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rawdata&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lockfile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sb">`| &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> | &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> | &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">lockfile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> |`&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;table class="table table-striped half-height-scroll">
&lt;tbody>
&lt;tr>
&lt;td class="align-right">1&lt;/td>
&lt;td>JSONStream&lt;/td>
&lt;td>1.3.5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">2&lt;/td>
&lt;td>ajv&lt;/td>
&lt;td>6.12.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">3&lt;/td>
&lt;td>asn1&lt;/td>
&lt;td>0.2.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">4&lt;/td>
&lt;td>assert-plus&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">5&lt;/td>
&lt;td>asynckit&lt;/td>
&lt;td>0.4.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">6&lt;/td>
&lt;td>aws-sign2&lt;/td>
&lt;td>0.7.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">7&lt;/td>
&lt;td>aws4&lt;/td>
&lt;td>1.10.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">8&lt;/td>
&lt;td>axios&lt;/td>
&lt;td>0.18.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">9&lt;/td>
&lt;td>bcrypt-pbkdf&lt;/td>
&lt;td>1.0.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">10&lt;/td>
&lt;td>caseless&lt;/td>
&lt;td>0.12.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">11&lt;/td>
&lt;td>clone-deep&lt;/td>
&lt;td>4.0.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">12&lt;/td>
&lt;td>combined-stream&lt;/td>
&lt;td>1.0.8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">13&lt;/td>
&lt;td>core-util-is&lt;/td>
&lt;td>1.0.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">14&lt;/td>
&lt;td>dashdash&lt;/td>
&lt;td>1.14.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">15&lt;/td>
&lt;td>debug&lt;/td>
&lt;td>3.1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">16&lt;/td>
&lt;td>delayed-stream&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">17&lt;/td>
&lt;td>download-stats&lt;/td>
&lt;td>0.3.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">18&lt;/td>
&lt;td>ecc-jsbn&lt;/td>
&lt;td>0.1.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">19&lt;/td>
&lt;td>extend&lt;/td>
&lt;td>3.0.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">20&lt;/td>
&lt;td>extsprintf&lt;/td>
&lt;td>1.3.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">21&lt;/td>
&lt;td>fast-deep-equal&lt;/td>
&lt;td>3.1.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">22&lt;/td>
&lt;td>fast-json-stable-stringify&lt;/td>
&lt;td>2.1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">23&lt;/td>
&lt;td>follow-redirects&lt;/td>
&lt;td>1.5.10&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">24&lt;/td>
&lt;td>forever-agent&lt;/td>
&lt;td>0.6.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">25&lt;/td>
&lt;td>form-data&lt;/td>
&lt;td>2.3.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">26&lt;/td>
&lt;td>getpass&lt;/td>
&lt;td>0.1.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">27&lt;/td>
&lt;td>har-schema&lt;/td>
&lt;td>2.0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">28&lt;/td>
&lt;td>har-validator&lt;/td>
&lt;td>5.1.5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">29&lt;/td>
&lt;td>http-signature&lt;/td>
&lt;td>1.2.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">30&lt;/td>
&lt;td>is-buffer&lt;/td>
&lt;td>1.1.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">31&lt;/td>
&lt;td>is-plain-object&lt;/td>
&lt;td>2.0.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">32&lt;/td>
&lt;td>is-typedarray&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">33&lt;/td>
&lt;td>isobject&lt;/td>
&lt;td>3.0.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">34&lt;/td>
&lt;td>isstream&lt;/td>
&lt;td>0.1.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">35&lt;/td>
&lt;td>jsbn&lt;/td>
&lt;td>0.1.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">36&lt;/td>
&lt;td>json-schema&lt;/td>
&lt;td>0.2.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">37&lt;/td>
&lt;td>json-schema-traverse&lt;/td>
&lt;td>0.4.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">38&lt;/td>
&lt;td>json-stringify-safe&lt;/td>
&lt;td>5.0.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">39&lt;/td>
&lt;td>jsonparse&lt;/td>
&lt;td>1.3.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">40&lt;/td>
&lt;td>jsprim&lt;/td>
&lt;td>1.4.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">41&lt;/td>
&lt;td>kind-of&lt;/td>
&lt;td>6.0.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">42&lt;/td>
&lt;td>lazy-cache&lt;/td>
&lt;td>2.0.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">43&lt;/td>
&lt;td>mime-db&lt;/td>
&lt;td>1.44.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">44&lt;/td>
&lt;td>mime-types&lt;/td>
&lt;td>2.1.27&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">45&lt;/td>
&lt;td>moment&lt;/td>
&lt;td>2.27.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">46&lt;/td>
&lt;td>ms&lt;/td>
&lt;td>2.0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">47&lt;/td>
&lt;td>npm-api&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">48&lt;/td>
&lt;td>oauth-sign&lt;/td>
&lt;td>0.9.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">49&lt;/td>
&lt;td>paged-request&lt;/td>
&lt;td>2.0.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">50&lt;/td>
&lt;td>performance-now&lt;/td>
&lt;td>2.1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">51&lt;/td>
&lt;td>psl&lt;/td>
&lt;td>1.8.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">52&lt;/td>
&lt;td>punycode&lt;/td>
&lt;td>2.1.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">53&lt;/td>
&lt;td>qs&lt;/td>
&lt;td>6.5.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">54&lt;/td>
&lt;td>request&lt;/td>
&lt;td>2.88.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">55&lt;/td>
&lt;td>safe-buffer&lt;/td>
&lt;td>5.2.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">56&lt;/td>
&lt;td>safer-buffer&lt;/td>
&lt;td>2.1.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">57&lt;/td>
&lt;td>set-getter&lt;/td>
&lt;td>0.1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">58&lt;/td>
&lt;td>shallow-clone&lt;/td>
&lt;td>3.0.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">59&lt;/td>
&lt;td>sshpk&lt;/td>
&lt;td>1.16.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">60&lt;/td>
&lt;td>through&lt;/td>
&lt;td>2.3.8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">61&lt;/td>
&lt;td>to-object-path&lt;/td>
&lt;td>0.3.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">62&lt;/td>
&lt;td>tough-cookie&lt;/td>
&lt;td>2.5.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">63&lt;/td>
&lt;td>tunnel-agent&lt;/td>
&lt;td>0.6.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">64&lt;/td>
&lt;td>tweetnacl&lt;/td>
&lt;td>0.14.5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">65&lt;/td>
&lt;td>uri-js&lt;/td>
&lt;td>4.4.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">66&lt;/td>
&lt;td>uuid&lt;/td>
&lt;td>3.4.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">67&lt;/td>
&lt;td>verror&lt;/td>
&lt;td>1.10.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
There&amp;#39;s one additional directory installed in &lt;code class="verbatim">node_modules&lt;/code> called &lt;code class="verbatim">.bin&lt;/code>
which is where binary executables of installed packages live, so
that&amp;#39;s the difference.
&lt;/p>
&lt;p>
We can see what commands are installed:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ls -l node_modules/.bin&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
total 20
lrwxrwxrwx 1 wschenk wschenk 20 Sep 9 14:26 JSONStream -&amp;gt; ../JSONStream/bin.js
lrwxrwxrwx 1 wschenk wschenk 23 Sep 9 14:26 sshpk-conv -&amp;gt; ../sshpk/bin/sshpk-conv
lrwxrwxrwx 1 wschenk wschenk 23 Sep 9 14:26 sshpk-sign -&amp;gt; ../sshpk/bin/sshpk-sign
lrwxrwxrwx 1 wschenk wschenk 25 Sep 9 14:26 sshpk-verify -&amp;gt; ../sshpk/bin/sshpk-verify
lrwxrwxrwx 1 wschenk wschenk 16 Sep 9 14:26 uuid -&amp;gt; ../uuid/bin/uuid
&lt;/pre>
&lt;h2 id="headline-2">
What are the specified deps
&lt;/h2>
&lt;p>
The &lt;a href="https://docs.npmjs.com/configuring-npm/package-lock-json.html">structure of package-lock.json&lt;/a> is much simpler than &lt;code class="verbatim">Gemfile.lock&lt;/code>,
and it doesn&amp;#39;t show which modules are the ones that the developer
specified and which are ones are derivatives. We can take a guess at
this by looking at modules that aren&amp;#39;t another&amp;#39;s dependancy.
&lt;/p>
&lt;div class="src src-js">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="s1">&amp;#39;use strict&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">rawdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;package-lock.json&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">lockfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rawdata&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">deps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lockfile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">possible_mains&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Map&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">deps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">elem&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">possible_mains&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">elem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">deps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">elem&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">requires&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lockfile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">requires&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">{})&lt;/span>
&lt;span class="nx">requires&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">dep&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">possible_mains&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">delete&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">dep&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">possible_mains&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which happily yields:
&lt;/p>
&lt;pre class="example">
npm-api
&lt;/pre>
&lt;p>
So that looks correct for this project.
&lt;/p>
&lt;h2 id="headline-3">
Loading project metadata from npm
&lt;/h2>
&lt;p>
The next thing we are looking for is the repository of the source
code, so we can see what code there&amp;#39;s out there, how well it&amp;#39;s
maintained, etc.
&lt;/p>
&lt;div class="src src-js">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">NpmApi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;npm-api&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">repo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">NpmApi&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">repo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;npm-api&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">pkg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">repo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">package&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Name &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Version &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">version&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Description &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">description&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;License &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">license&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Homepage &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">homepage&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Repository &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">repository&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Clean repo &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">repository&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/git\+/g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Bug &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bugs&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Name npm-api
Version 1.0.0
Description Base class for retrieving data from the npm registry.
License MIT
Homepage https://github.com/doowb/npm-api
Repository { type: &amp;#39;git&amp;#39;, url: &amp;#39;git+https://github.com/doowb/npm-api.git&amp;#39; }
Clean repo https://github.com/doowb/npm-api.git
Bug { url: &amp;#39;https://github.com/doowb/npm-api/issues&amp;#39; }
&lt;/pre>
&lt;p>
Here we can see the repository is type &lt;code class="verbatim">git&lt;/code> and the url has an
&lt;em>unexplained&lt;/em> &lt;code class="verbatim">git+&lt;/code> in front of it. Why? I&amp;#39;d love to know. But we can
strip it out using the &lt;code class="verbatim">replace&lt;/code> function to get something not
pointlessly redundant from the &lt;code class="verbatim">type&lt;/code> sibling attribute.
&lt;/p>
&lt;h2 id="headline-4">
Finding out of date dependencies
&lt;/h2>
&lt;p>
&lt;code class="verbatim">npm&lt;/code> has a similar function to &lt;code class="verbatim">bundle outdated&lt;/code> called… &lt;code class="verbatim">npm outdated&lt;/code>.
Exciting! Lets recreate that now.
&lt;/p>
&lt;div class="src src-js">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="s1">&amp;#39;use strict&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">NpmApi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;npm-api&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">rawdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;package-lock.json&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">lockfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rawdata&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lockfile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">repo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">NpmApi&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">repo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">elem&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">pkg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">repo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">package&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">installed_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">lockfile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">version&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">current_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">version&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sb">`| &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> | &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">installed_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> | &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">current_version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> | &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">installed_version&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">current_version&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;OUTDATED&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;CURRENT&amp;#39;&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> |`&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which dumps out:
&lt;/p>
&lt;table class="table table-striped half-height-scroll">
&lt;tbody>
&lt;tr>
&lt;td>Module&lt;/td>
&lt;td>Installed&lt;/td>
&lt;td>Latest&lt;/td>
&lt;td>Status&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>core-util-is&lt;/td>
&lt;td>1.0.2&lt;/td>
&lt;td>1.0.2&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>caseless&lt;/td>
&lt;td>0.12.0&lt;/td>
&lt;td>0.12.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>performance-now&lt;/td>
&lt;td>2.1.0&lt;/td>
&lt;td>2.1.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>clone-deep&lt;/td>
&lt;td>4.0.1&lt;/td>
&lt;td>4.0.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>isstream&lt;/td>
&lt;td>0.1.2&lt;/td>
&lt;td>0.1.2&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ecc-jsbn&lt;/td>
&lt;td>0.1.2&lt;/td>
&lt;td>0.2.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>json-stringify-safe&lt;/td>
&lt;td>5.0.1&lt;/td>
&lt;td>5.0.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>isobject&lt;/td>
&lt;td>3.0.1&lt;/td>
&lt;td>4.0.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>asn1&lt;/td>
&lt;td>0.2.4&lt;/td>
&lt;td>0.2.4&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>combined-stream&lt;/td>
&lt;td>1.0.8&lt;/td>
&lt;td>1.0.8&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ms&lt;/td>
&lt;td>2.0.0&lt;/td>
&lt;td>2.1.2&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>paged-request&lt;/td>
&lt;td>2.0.1&lt;/td>
&lt;td>2.0.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>fast-json-stable-stringify&lt;/td>
&lt;td>2.1.0&lt;/td>
&lt;td>2.1.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>extend&lt;/td>
&lt;td>3.0.2&lt;/td>
&lt;td>3.0.2&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>download-stats&lt;/td>
&lt;td>0.3.4&lt;/td>
&lt;td>0.3.4&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>asynckit&lt;/td>
&lt;td>0.4.0&lt;/td>
&lt;td>0.4.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bcrypt-pbkdf&lt;/td>
&lt;td>1.0.2&lt;/td>
&lt;td>1.0.2&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>extsprintf&lt;/td>
&lt;td>1.3.0&lt;/td>
&lt;td>1.4.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tunnel-agent&lt;/td>
&lt;td>0.6.0&lt;/td>
&lt;td>0.6.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lazy-cache&lt;/td>
&lt;td>2.0.2&lt;/td>
&lt;td>2.0.2&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>is-buffer&lt;/td>
&lt;td>1.1.6&lt;/td>
&lt;td>2.0.4&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>aws-sign2&lt;/td>
&lt;td>0.7.0&lt;/td>
&lt;td>0.7.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jsbn&lt;/td>
&lt;td>0.1.1&lt;/td>
&lt;td>1.1.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>har-schema&lt;/td>
&lt;td>2.0.0&lt;/td>
&lt;td>2.0.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>delayed-stream&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dashdash&lt;/td>
&lt;td>1.14.1&lt;/td>
&lt;td>2.0.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>forever-agent&lt;/td>
&lt;td>0.6.1&lt;/td>
&lt;td>0.6.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>safer-buffer&lt;/td>
&lt;td>2.1.2&lt;/td>
&lt;td>2.1.2&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>is-plain-object&lt;/td>
&lt;td>2.0.4&lt;/td>
&lt;td>5.0.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>getpass&lt;/td>
&lt;td>0.1.7&lt;/td>
&lt;td>0.1.7&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>json-schema-traverse&lt;/td>
&lt;td>0.4.1&lt;/td>
&lt;td>0.5.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>json-schema&lt;/td>
&lt;td>0.2.3&lt;/td>
&lt;td>0.2.5&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>is-typedarray&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>punycode&lt;/td>
&lt;td>2.1.1&lt;/td>
&lt;td>2.1.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>http-signature&lt;/td>
&lt;td>1.2.0&lt;/td>
&lt;td>1.3.5&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>to-object-path&lt;/td>
&lt;td>0.3.0&lt;/td>
&lt;td>0.3.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>verror&lt;/td>
&lt;td>1.10.0&lt;/td>
&lt;td>1.10.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>fast-deep-equal&lt;/td>
&lt;td>3.1.3&lt;/td>
&lt;td>3.1.3&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>through&lt;/td>
&lt;td>2.3.8&lt;/td>
&lt;td>2.3.8&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jsonparse&lt;/td>
&lt;td>1.3.1&lt;/td>
&lt;td>1.3.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>shallow-clone&lt;/td>
&lt;td>3.0.1&lt;/td>
&lt;td>3.0.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>safe-buffer&lt;/td>
&lt;td>5.2.1&lt;/td>
&lt;td>5.2.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jsprim&lt;/td>
&lt;td>1.4.1&lt;/td>
&lt;td>2.0.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>npm-api&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>set-getter&lt;/td>
&lt;td>0.1.0&lt;/td>
&lt;td>0.1.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>oauth-sign&lt;/td>
&lt;td>0.9.0&lt;/td>
&lt;td>0.9.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>uri-js&lt;/td>
&lt;td>4.4.0&lt;/td>
&lt;td>4.4.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>follow-redirects&lt;/td>
&lt;td>1.5.10&lt;/td>
&lt;td>1.13.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>kind-of&lt;/td>
&lt;td>6.0.3&lt;/td>
&lt;td>6.0.3&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>aws4&lt;/td>
&lt;td>1.10.1&lt;/td>
&lt;td>1.10.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mime-db&lt;/td>
&lt;td>1.44.0&lt;/td>
&lt;td>1.45.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sshpk&lt;/td>
&lt;td>1.16.1&lt;/td>
&lt;td>1.16.1&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>psl&lt;/td>
&lt;td>1.8.0&lt;/td>
&lt;td>1.8.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mime-types&lt;/td>
&lt;td>2.1.27&lt;/td>
&lt;td>2.1.27&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>har-validator&lt;/td>
&lt;td>5.1.5&lt;/td>
&lt;td>5.1.5&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>form-data&lt;/td>
&lt;td>2.3.3&lt;/td>
&lt;td>3.0.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tweetnacl&lt;/td>
&lt;td>0.14.5&lt;/td>
&lt;td>1.0.3&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>debug&lt;/td>
&lt;td>3.1.0&lt;/td>
&lt;td>4.2.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tough-cookie&lt;/td>
&lt;td>2.5.0&lt;/td>
&lt;td>4.0.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qs&lt;/td>
&lt;td>6.5.2&lt;/td>
&lt;td>6.9.4&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>JSONStream&lt;/td>
&lt;td>1.3.5&lt;/td>
&lt;td>1.3.5&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>axios&lt;/td>
&lt;td>0.18.1&lt;/td>
&lt;td>0.20.0&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>moment&lt;/td>
&lt;td>2.27.0&lt;/td>
&lt;td>2.29.1&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>uuid&lt;/td>
&lt;td>3.4.0&lt;/td>
&lt;td>8.3.1&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>request&lt;/td>
&lt;td>2.88.2&lt;/td>
&lt;td>2.88.2&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>assert-plus&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>1.0.0&lt;/td>
&lt;td>CURRENT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ajv&lt;/td>
&lt;td>6.12.4&lt;/td>
&lt;td>6.12.6&lt;/td>
&lt;td>OUTDATED&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="headline-5">
Thoughts
&lt;/h2>
&lt;p>
As with our &lt;code class="verbatim">Gemfile&lt;/code> exploration, we can
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Identify which &lt;code class="verbatim">modules&lt;/code> are specified only from the lock file.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Look at all of the dependancies of the project to see which is out of date
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Find the git repo that the original code is packaged from.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
The next step will be to start looking into the repos themselves to
ask a few questions:
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Is the project maintained?
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
What is the project activity?
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Is it a &lt;a href="https://semver.org/">semver&lt;/a> project?
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
What patch/minor/major code has changed?
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
How is the project connected to other projects?
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
Stay tuned!
&lt;/p>
&lt;h2 id="headline-6">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://docs.npmjs.com/configuring-npm/package-lock-json.html">https://docs.npmjs.com/configuring-npm/package-lock-json.html&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://docs.npmjs.com/about-packages-and-modules#npm-package-git-url-formats">https://docs.npmjs.com/about-packages-and-modules#npm-package-git-url-formats&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/doowb/npm-api">https://github.com/doowb/npm-api&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Looking at Gemfiles</title><link>https://willschenk.com/articles/2020/looking_at_gemfiles/</link><pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/looking_at_gemfiles/</guid><description>
&lt;p>
Bundler is the standard way for Ruby projects to specifiy
dependencies. Let&amp;#39;s take a look at how that works, reimplement &lt;code class="verbatim">bundle
outdated&lt;/code>, and be able to see the changes that took place between the
build you are using and the latest one.
&lt;/p>
&lt;h2 id="headline-1">
Ruby ecosystem: Rubygems, Bundler, Gemfile, Gemfile.lock
&lt;/h2>
&lt;p>
&lt;code class="verbatim">rubygems&lt;/code> is the overall ecosystem, which includes the main
&lt;code class="verbatim">rubygems.org&lt;/code> database of shared packages, and how they depend upon
each other. At the heart of it is a &lt;code class="verbatim">gemspec&lt;/code> file which describes the
package, files included in it, dependencies, and other metadata.
&lt;/p>
&lt;p>
&lt;code class="verbatim">bundler&lt;/code> is the tool that helps you download and install specific gems for
your application. It uses a &lt;code class="verbatim">Gemfile&lt;/code> to define what you want, and then
resolves all the dependencies and stores that into a &lt;code class="verbatim">Gemfile.lock&lt;/code> file
that contains a list of the exact versions that you are developing
against.
&lt;/p>
&lt;h2 id="headline-2">
Creating a working &lt;code class="verbatim">Gemfile&lt;/code>
&lt;/h2>
&lt;p>
First, let&amp;#39;s create a project, so we are all working off of the same
thing. We&amp;#39;ll add &lt;code class="verbatim">bundler&lt;/code> as normal, and then &lt;code class="verbatim">irb&lt;/code> from git directly, so
we can see how that changes the &lt;code class="verbatim">Gemfile.lock&lt;/code>. So, 3 gems, 2 from
&lt;code class="verbatim">rubygems.org&lt;/code>, and one directly from &lt;code class="verbatim">github&lt;/code>.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">bundle init
bundle add bundler --version &lt;span class="s2">&amp;#34;~&amp;gt;2.1&amp;#34;&lt;/span>
bundle add irb --git &lt;span class="s2">&amp;#34;https://github.com/ruby/irb&amp;#34;&lt;/span>
bundle add gems --version &lt;span class="s2">&amp;#34;1.1.1&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Lets also add in a &lt;code class="verbatim">ruby &amp;#34;2.6.6&amp;#34;&lt;/code> line that will tell bundler which
version of Ruby we want to use. This isn&amp;#39;t always used, but let&amp;#39;s put
it in to flesh out what is generated in the lock file. Feel free to
replace this with whatever version is on your local machine.
&lt;/p>
&lt;p>
This gives us a &lt;code class="verbatim">Gemfile&lt;/code> that looks like this:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># frozen_string_literal: true&lt;/span>
&lt;span class="n">source&lt;/span> &lt;span class="s2">&amp;#34;https://rubygems.org&amp;#34;&lt;/span>
&lt;span class="n">git_source&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:github&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">repo_name&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="s2">&amp;#34;https://github.com/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">ruby&lt;/span> &lt;span class="s2">&amp;#34;2.6.6&amp;#34;&lt;/span>
&lt;span class="c1"># gem &amp;#34;rails&amp;#34;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s2">&amp;#34;bundler&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;~&amp;gt; 2.1&amp;#34;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s2">&amp;#34;irb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">git&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;https://github.com/ruby/irb&amp;#34;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s2">&amp;#34;gems&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;1.1.1&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Doing a &lt;code class="verbatim">bundle add&lt;/code> adds the specification to the &lt;code class="verbatim">Gemfile&lt;/code>, downloads
the gems and all of their dependencies, resolving specific versions and
downloading those as well. This is specified in the lock file, which
has the main sections:
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
&lt;code class="verbatim">GIT&lt;/code> which is the first remote source on the list, here telling
which commit that we are depending upon specifically
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">GEM&lt;/code> which list out the the gems that are installed, with versions
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">PLATFORMS&lt;/code> which is for platform information (for native builds)
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">DEPENDENCIES&lt;/code> which is what comes out of the &lt;code class="verbatim">Gemfile&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">RUBY VERSION&lt;/code> the version of Ruby, including the patch level, that
this was bundled with
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;code class="verbatim">BUNDLED WITH&lt;/code> version information about bundler
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">GIT&lt;/span>
&lt;span class="ss">remote&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="sr">//&lt;/span>&lt;span class="n">github&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ruby&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">irb&lt;/span>
&lt;span class="ss">revision&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="n">bb6562d0d841fd294e95bbb690e812cbd5090ce&lt;/span>
&lt;span class="ss">specs&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">irb&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">reline&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">GEM&lt;/span>
&lt;span class="ss">remote&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="sr">//&lt;/span>&lt;span class="n">rubygems&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">/&lt;/span>
&lt;span class="ss">specs&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">gems&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">json&lt;/span>
&lt;span class="n">io&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">console&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">json&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">reline&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">io&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">console&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">~&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">PLATFORMS&lt;/span>
&lt;span class="n">ruby&lt;/span>
&lt;span class="no">DEPENDENCIES&lt;/span>
&lt;span class="n">bundler&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">~&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">gems&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">irb!&lt;/span>
&lt;span class="no">RUBY&lt;/span> &lt;span class="no">VERSION&lt;/span>
&lt;span class="n">ruby&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="n">p146&lt;/span>
&lt;span class="no">BUNDLED&lt;/span> &lt;span class="no">WITH&lt;/span>
&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">4&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-3">
Parsing &lt;code class="verbatim">Gemfile&lt;/code> and &lt;code class="verbatim">Gemfile.lock&lt;/code> together
&lt;/h2>
&lt;p>
In normal usage you would have both a &lt;code class="verbatim">Gemfile&lt;/code> and a &lt;code class="verbatim">Gemfile.lock&lt;/code>.
You&amp;#39;d start up your program using &lt;code class="verbatim">bundle exec&lt;/code> which would validate
that the right things were installed, load the gems into the Ruby
environment, and you&amp;#39;d be good to go.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="c1">#!/usr/bin/env ruby&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;bundler&amp;#39;&lt;/span>
&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Dependencies&amp;#34;&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dependencies&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%-20s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">requirements_list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">specs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metadata&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;source_code_url&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metadata&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;source_code_uri&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Gem from &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%-20s %-10s %-40s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">version&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">homepage&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which yields:
&lt;/p>
&lt;pre class="example">
Dependencies
irb [&amp;#34;&amp;gt;= 0&amp;#34;]
bundler [&amp;#34;~&amp;gt; 2.1&amp;#34;]
Gem from the local ruby installation
bundler 2.1.4 https://github.com/bundler/bundler/ https://bundler.io
Gem from rubygems repository https://rubygems.org/ or installed locally
gems 1.2.0 https://github.com/rubygems/gems
Gem from rubygems repository https://rubygems.org/ or installed locally
io-console 0.5.6 https://github.com/ruby/io-console https://github.com/ruby/io-console
Gem from rubygems repository https://rubygems.org/ or installed locally
reline 0.1.4 https://github.com/ruby/reline
Gem from https://github.com/ruby/irb (at master@9bb6562)
irb 1.2.4 https://github.com/ruby/irb
&lt;/pre>
&lt;p>
So some gems have &lt;code class="verbatim">source_code_uri&lt;/code> or &lt;code class="verbatim">source_code_url&lt;/code> set, and some
don&amp;#39;t have it at all though they point to a &lt;code class="verbatim">github&lt;/code> page where
presumably we can figure out where the code is loaded.
&lt;/p>
&lt;p>
For the case of &lt;code class="verbatim">irb&lt;/code> the repo is listed in the remote &lt;code class="verbatim">source&lt;/code> itself.
&lt;/p>
&lt;p>
The metadata, homepage, etc, are from the &lt;code class="verbatim">gemspec&lt;/code> files.
&lt;/p>
&lt;h2 id="headline-4">
Parsing a &lt;code class="verbatim">Gemfile.lock&lt;/code> directly
&lt;/h2>
&lt;p>
Let&amp;#39;s now look at how to parse a &lt;code class="verbatim">Gemfile.lock&lt;/code> of a different project,
where we don&amp;#39;t have the original &lt;code class="verbatim">Gemfile&lt;/code> handy.
&lt;/p>
&lt;p>
When we load in the lockfile using &lt;code class="verbatim">Bundler::LockfileParser&lt;/code> we only
have the gem name, version, and the source from which to get it. We
may or may not have the gemspec on our local machine, and so
additional metadata like the homepage, summary, codeurl, etc haven&amp;#39;t
been loaded yet. Let&amp;#39;s first print out what we have and then figure
out how to get gem information from the source, name, and version.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="ch">#!/usr/bin/env ruby&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;bundler&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">describe_lockfile&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">default_lockfile&lt;/span>
&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">LockfileParser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read_file&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Bundler version&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bundler_version&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="nb">puts&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Dependencies&amp;#34;&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dependencies&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%-20s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">requirements_list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Gems&amp;#34;&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">specs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%-20s %-10s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">version&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%-10s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">describe_lockfile&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Bundler version
2.1.4
Dependencies
bundler [&amp;#34;~&amp;gt; 2.1&amp;#34;]
gems [&amp;#34;~&amp;gt; 1.2&amp;#34;]
irb [&amp;#34;&amp;gt;= 0&amp;#34;]
Gems
gems 1.2.0
Bundler::Source::Rubygems rubygems repository https://rubygems.org/ or installed locally
io-console 0.5.6
Bundler::Source::Rubygems rubygems repository https://rubygems.org/ or installed locally
irb 1.2.4
Bundler::Source::Git https://github.com/ruby/irb (at master@9bb6562)
reline 0.1.4
Bundler::Source::Rubygems rubygems repository https://rubygems.org/ or installed locally
&lt;/pre>
&lt;p>
Another thing that&amp;#39;s interesting to note is that the version of
&lt;code class="verbatim">bundler&lt;/code> itself doesn&amp;#39;t show up in the specified gems, though it is
available from the &lt;code class="verbatim">bundler_version&lt;/code> method.
&lt;/p>
&lt;h2 id="headline-5">
Finding outdated gem versions
&lt;/h2>
&lt;p>
If you are working with a matching set of &lt;code class="verbatim">Gemfile&lt;/code> and &lt;code class="verbatim">Gemfile.lock&lt;/code>
files, which most people are, there&amp;#39;s a nifty command &lt;code class="verbatim">bundle outdated&lt;/code>.
This looks though the gems that you have to see if there&amp;#39;s a later
version released.
&lt;/p>
&lt;p>
Let&amp;#39;s recreate this using our &lt;code class="verbatim">Gemfile.lock&lt;/code> only method so we can look
at lock files and see which gems have updated code.
&lt;/p>
&lt;p>
First we will pull the specs out of the lockfile. Then we will loop
over them, pulling in the infomation from &lt;code class="verbatim">rubygems&lt;/code> or wherever the
remote was specified. We aren&amp;#39;t doing anything special with git
sourced gems.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="c1">#!/usr/bin/env ruby&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;bundler&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;gems&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">specs_from_lockfile&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">default_lockfile&lt;/span>
&lt;span class="n">gems&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">LockfileParser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">Bundler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">specs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">gems&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">version&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">version&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">source&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">class&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_a?&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Source&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Rubygems&lt;/span>
&lt;span class="n">gems&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="ss">:remote&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remotes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="k">elsif&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_a?&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Source&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Git&lt;/span>
&lt;span class="n">gems&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="ss">:remote&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uri&lt;/span>
&lt;span class="n">gems&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="ss">:ref&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ref&lt;/span>
&lt;span class="n">gems&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="ss">:revision&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">revision&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Not sure how to process &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">gems&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">add_rubygems_versions&lt;/span> &lt;span class="n">info&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">spec&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">spec&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:source&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Source&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Rubygems&lt;/span>
&lt;span class="n">gems_client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Gems&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">host&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">spec&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:remote&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:info&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gems_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">elsif&lt;/span> &lt;span class="n">spec&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:source&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Source&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Git&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:info&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Gems&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Not sure of the source of &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">specs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">specs_from_lockfile&lt;/span> &lt;span class="no">ARGV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="no">Bundler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">default_lockfile&lt;/span>
&lt;span class="n">add_rubygems_versions&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">specs&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%15s %-8s %-8s %3s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Current&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Latest&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Old&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Info&amp;#34;&lt;/span>
&lt;span class="n">specs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:info&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">current_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:version&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">new_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:info&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="s2">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%15s %-8s %-8s %-3s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">current_version&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">new_version&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">current_version&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">new_version&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Y&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:info&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="s2">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Name Current Latest Old Info
gems 1.1.1 1.2.0 Y Ruby wrapper for the RubyGems.org API
io-console 0.5.6 0.5.6 add console capabilities to IO instances.
irb 1.2.4 1.2.4 Interactive Ruby command-line tool for REPL (Read E
json 2.3.1 2.3.1 This is a JSON implementation as a Ruby extension i
reline 0.1.4 0.1.4 Alternative GNU Readline or Editline implementation
&lt;/pre>
&lt;p>
This is a very simple project, but we can see that the one gem that we
held back to &lt;code class="verbatim">1.1.1&lt;/code> instead of the (current) latest of &lt;code class="verbatim">1.2.0&lt;/code> is
outdated.
&lt;/p>
&lt;h2 id="headline-6">
Future thoughts
&lt;/h2>
&lt;p>
Looking at the &lt;code class="verbatim">Gemfile.lock&lt;/code> file we&amp;#39;re able to see which versions of
the gems are installed, and we can pull down the git repos of most of
them using the metadata. (Or homepage, for a lot of them.) The
standard bundling tools will create a git tag for each of the
releases, so in our next installment we will start looking at the
code differences between versions, both the commit messages as well
as overall activity in these projects. This should help us understand
how risky the upgrades are, and if we believe in semver.
&lt;/p>
&lt;h2 id="headline-7">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://stackoverflow.com/questions/38800129/parsing-a-gemfile-lock-with-bundl">https://stackoverflow.com/questions/38800129/parsing-a-gemfile-lock-with-bundl&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://rdoc.info/github/bundler/bundler/Bundler/LazySpecification">https://rdoc.info/github/bundler/bundler/Bundler/LazySpecification&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://rdoc.info/github/rubygems/rubygems/Gem/Specification">https://rdoc.info/github/rubygems/rubygems/Gem/Specification&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>gitlog in sqlite</title><link>https://willschenk.com/articles/2020/gitlog_in_sqlite/</link><pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/gitlog_in_sqlite/</guid><description>
&lt;p>
&lt;a href="https://willschenk.com/articles/2020/using_askgit/">askgit&lt;/a> is a great way to look at information inside of a repository.
However it currently doesn&amp;#39;t support looking at the files inside of
the commit itself – it gives you a view of the repository at the time
of the commit, but not the patch itself. Since I don&amp;#39;t know enough
about golang and sqlite virtual tables, let&amp;#39;s just create a sqlite3
database from the logfile.
&lt;/p>
&lt;h2 id="headline-1">
Get the gitlog
&lt;/h2>
&lt;p>
We are going to use our favorite test repo, &lt;a href="https://github.com/ruby-git/ruby-git">ruby-git&lt;/a> because it&amp;#39;s so
deliciously meta.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp
git clone https://github.com/ruby-git/ruby-git
&lt;span class="nb">cd&lt;/span> /tmp/ruby-git&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then, let&amp;#39;s pull out a list of commits, that includes
&lt;/p>
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">%h&lt;/code>&lt;/td>
&lt;td>The hash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%ae&lt;/code>&lt;/td>
&lt;td>Author email&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%aI&lt;/code>&lt;/td>
&lt;td>Author date&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%s&lt;/code>&lt;/td>
&lt;td>Summary&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">--numstat&lt;/code>&lt;/td>
&lt;td>Files with changes in the commit&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git log --pretty&lt;span class="o">=&lt;/span>format:&lt;span class="s1">&amp;#39;|%h|%ae|%an|%aI|%s&amp;#39;&lt;/span> --numstat &amp;gt; /tmp/commits.log&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We are going to load this file into a sqlite database that we&amp;#39;ll use
to do some analysis.
&lt;/p>
&lt;h2 id="headline-2">
Parse and load
&lt;/h2>
&lt;p>
First we need a &lt;code class="verbatim">Gemfile&lt;/code> for the &lt;code class="verbatim">sqlite3&lt;/code> gem:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">source&lt;/span> &lt;span class="s1">&amp;#39;https://rubygems.org&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;sqlite3&amp;#39;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then we can write a script that loads everything up.
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Create the database and tables
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Go through commits.log file one line at a time
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
If the line starts with &lt;code class="verbatim">|&lt;/code> parse out the fields and add them to the
&lt;code class="verbatim">commits&lt;/code> table.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
If the line isn&amp;#39;t blank (and isn&amp;#39;t already a &lt;code class="verbatim">|&lt;/code>) then parse out the
file changes and add them to the &lt;code class="verbatim">commit_files&lt;/code> table.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
If the commit is already in the database, then abort.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;sqlite3&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">create_database&lt;/span> &lt;span class="n">filename&lt;/span>
&lt;span class="n">db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">SQLite3&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Database&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">filename&lt;/span>
&lt;span class="n">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span> &lt;span class="s">&amp;lt;&amp;lt;-SQL1
&lt;/span>&lt;span class="s">&lt;/span> &lt;span class="no">CREATE&lt;/span> &lt;span class="no">TABLE&lt;/span> &lt;span class="no">IF&lt;/span> &lt;span class="no">NOT&lt;/span> &lt;span class="no">EXISTS&lt;/span> &lt;span class="n">commits&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="nb">id&lt;/span> &lt;span class="no">TEXT&lt;/span> &lt;span class="no">UNIQUE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">summary&lt;/span> &lt;span class="no">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">author_name&lt;/span> &lt;span class="no">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">author_email&lt;/span> &lt;span class="no">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">author_when&lt;/span> &lt;span class="no">DATETIME&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="no">SQL1&lt;/span>
&lt;span class="n">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span> &lt;span class="s">&amp;lt;&amp;lt;-SQL2
&lt;/span>&lt;span class="s">&lt;/span> &lt;span class="no">CREATE&lt;/span> &lt;span class="no">TABLE&lt;/span> &lt;span class="no">IF&lt;/span> &lt;span class="no">NOT&lt;/span> &lt;span class="no">EXISTS&lt;/span> &lt;span class="n">commit_files&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="nb">id&lt;/span> &lt;span class="no">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nb">name&lt;/span> &lt;span class="no">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">added&lt;/span> &lt;span class="no">INT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">deleted&lt;/span> &lt;span class="no">INT&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="no">SQL2&lt;/span>
&lt;span class="n">db&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">add_commit&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">summary&lt;/span>
&lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;INSERT INTO commits (id, summary, author_name, author_email, author_when)
&lt;/span>&lt;span class="s2"> VALUES (?, ?, ?, ?, ?)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">summary&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">add_file_commit&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">added&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;INSERT INTO commit_files (id, name, added, deleted)
&lt;/span>&lt;span class="s2"> VALUES (?, ?, ?, ?)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">added&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deleted&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">parse_file&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span>
&lt;span class="n">commit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each_line&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chomp!&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span>
&lt;span class="n">md&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sr">/\|(.*?)\|(.*?)\|(.*?)\|(.*?)\|(.*)/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">commit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">begin&lt;/span>
&lt;span class="n">add_commit&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">rescue&lt;/span> &lt;span class="no">SQLite3&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">ConstraintException&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Found existing commit, exiting&amp;#34;&lt;/span>
&lt;span class="nb">exit&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">elsif&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">md&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sr">/([\d|-]*)\s*([\d|-]*)\s*(.*)/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">add_file_commit&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">commit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">md&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create_database&lt;/span> &lt;span class="s2">&amp;#34;test.db&amp;#34;&lt;/span>
&lt;span class="n">parse_file&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/tmp/commits.log&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
|4bef5ab|couballj@verizonmedia.com|James Couball|2020-04-25T14:40:51-07:00|Release v1.7.0
Found existing commit, exiting
&lt;/pre>
&lt;h2 id="headline-3">
Sanity check the data
&lt;/h2>
&lt;p>
We can run some of the queries that we did before.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select count(*) from commits;&amp;#34;&lt;/span>
sqlite3 test.db &lt;span class="s2">&amp;#34;select min(author_when) from commits;&amp;#34;&lt;/span>
sqlite3 test.db &lt;span class="s2">&amp;#34;select * from commits where author_when = (select min(author_when) from commits);&amp;#34;&lt;/span> --csv&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
402
2007-11-07T12:54:26-08:00
f5baa11,&amp;#34;beginning of Ruby/Git project&amp;#34;,&amp;#34;scott Chacon&amp;#34;,schacon@agadorsparticus.corp.reactrix.com,2007-11-07T12:54:26-08:00
&lt;/pre>
&lt;p>
We can also look to see who has contributed the most commits
in a certain time frame, like say after 2015.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select count(*), author_name from commits
&lt;/span>&lt;span class="s2">where author_when &amp;gt;= &amp;#39;2015-01-01&amp;#39;
&lt;/span>&lt;span class="s2">group by author_name
&lt;/span>&lt;span class="s2">having count(*) &amp;gt; 1
&lt;/span>&lt;span class="s2">order by count(*) desc &amp;#34;&lt;/span> -column -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
count(*) author_name
---------- ----------------
44 Roberto Decurnex
9 James Couball
9 Per Lundberg
5 Vern Burton
2 Joshua Liebowitz
2 Yuta Harima
&lt;/pre>
&lt;h2 id="headline-4">
Looking into file change patterns
&lt;/h2>
&lt;p>
All of this we could have done with &lt;code class="verbatim">askgit&lt;/code> which maps directly to the
repository without having to do a seperate processing step. Let&amp;#39;s see
what interesting information we can find looking inside the commits
themselves.
&lt;/p>
&lt;h3 id="headline-5">
Most touched file
&lt;/h3>
&lt;p>
This shows how many commits reference a specific file, so we can see
which is the most active.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select count(*), name from commits, commit_files
&lt;/span>&lt;span class="s2">where commits.id = commit_files.id
&lt;/span>&lt;span class="s2">and commits.author_when &amp;gt;= &amp;#39;2016-01-01&amp;#39;
&lt;/span>&lt;span class="s2">group by name order by count(*) desc limit 20&amp;#34;&lt;/span> -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
count(*)|name
22|lib/git/lib.rb
9|README.md
8|lib/git/version.rb
7|.travis.yml
7|git.gemspec
4|CHANGELOG.md
4|lib/git/diff.rb
4|tests/units/test_lib.rb
3|PULL_REQUEST_TEMPLATE.md
3|VERSION
3|tests/test_helper.rb
2|.github/stale.yml
2|CHANGELOG
2|CONTRIBUTING.md
2|MAINTAINERS.md
2|lib/git/branch.rb
2|tests/units/test_archive.rb
2|tests/units/test_bare.rb
2|tests/units/test_config.rb
2|tests/units/test_remotes.rb
&lt;/pre>
&lt;h3 id="headline-6">
Most changed files in a time frame
&lt;/h3>
&lt;p>
Lets look to see which files have changed the most in a certain time
frame. This gives you an idea of where the activity of the project
has been focused.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select count(*) as commits, sum(added) + sum(deleted) as lines_touched, name from commits, commit_files
&lt;/span>&lt;span class="s2">where commits.id = commit_files.id
&lt;/span>&lt;span class="s2">and commits.author_when &amp;gt;= &amp;#39;2016-01-01&amp;#39;
&lt;/span>&lt;span class="s2">group by name
&lt;/span>&lt;span class="s2">order by lines_touched desc
&lt;/span>&lt;span class="s2">limit 20&amp;#34;&lt;/span> -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
commits|lines_touched|name
22|430|lib/git/lib.rb
2|222|CONTRIBUTING.md
1|196|lib/git/status.rb
1|169|tests/files/encoding/dot_git/hooks/pre-rebase.sample
1|144|tests/units/test_merge_base.rb
1|128|tests/files/encoding/dot_git/hooks/update.sample
4|115|tests/units/test_lib.rb
1|114|tests/files/encoding/dot_git/hooks/fsmonitor-watchman.sample
4|70|lib/git/diff.rb
1|65|tests/units/test_status.rb
1|61|tests/units/test_diff_non_default_encoding.rb
1|57|RELEASING.md
1|53|tests/files/encoding/dot_git/hooks/pre-push.sample
1|52|tests/units/test_object.rb
7|51|.travis.yml
1|49|tests/files/encoding/dot_git/hooks/pre-commit.sample
1|44|tests/units/test_init.rb
2|43|tests/units/test_remotes.rb
1|42|tests/files/encoding/dot_git/hooks/prepare-commit-msg.sample
2|42|tests/units/test_config.rb
&lt;/pre>
&lt;h3 id="headline-7">
Finding commits that changed a specific file
&lt;/h3>
&lt;p>
This is a fairly mature library that doesn&amp;#39;t require that many
changes. But those changes seem to be focused in &lt;code class="verbatim">lib/git/lib.rb&lt;/code>.
What do we think was going on?
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select summary, author_name, author_when from commits, commit_files
&lt;/span>&lt;span class="s2">where commits.id = commit_files.id
&lt;/span>&lt;span class="s2">and commit_files.name = &amp;#39;lib/git/lib.rb&amp;#39;
&lt;/span>&lt;span class="s2">and commits.author_when &amp;gt;= &amp;#39;2016-01-01&amp;#39;
&lt;/span>&lt;span class="s2">order by author_when desc&amp;#34;&lt;/span> -column -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
summary author_name author_when
--------------------------------------------------- ----------- -------------------------
Ruby version compatibility conflict solution (#453) TIT 2020-04-05T20:33:35+03:00
Add no verify for commit with documentation (#454) Agora Secur 2020-04-05T17:33:04-05:00
Remove extraneous '--' from `git stash save -- mess Antonio Ter 2020-04-05T17:06:53-03:00
Git::Lib#normalize_encoding early return fix (#461) James Bunch 2020-04-05T14:15:30-07:00
Fix issue with color escape codes after recent upda Marcel Hoye 2020-02-10T22:29:14+01:00
Fix describe command's dirty, abbrev, candidates, a Harald 2020-02-06T02:13:29+01:00
Implementation and tests required to ensure that co James Couba 2019-12-11T10:04:03-08:00
Support merge-base (#370) Evgenii Pec 2018-10-02T10:03:44-04:00
Add support for unshallow (#377) Stephen Pau 2018-08-24T18:06:12-05:00
using File as a block so that it tears down once ev Vern Burton 2018-08-01T09:16:42-05:00
Support 'push &lt;remote> &lt;branch> --delete' (#325) Kody 2018-07-28T17:33:52+01:00
commit with custom author date (#374) Matias Garc 2018-07-12T16:49:52-03:00
Check if branch contains commit (#174) Kelly Stann 2018-07-12T06:19:21-04:00
config_get: Fix incorrect block name (#373) Joshua Lieb 2018-06-25T11:46:53-07:00
Allow fetch operation to receive a `ref` param (#36 Joshua Lieb 2018-06-25T11:45:38-07:00
Fix space prefix in tag message (#316) Denis Defre 2018-06-20T14:02:19+02:00
Enable set url on remotes (#338) Tom Potts 2018-05-03T13:48:03+01:00
Enable mirror option for git clone and push (#342) Guilherme M 2018-05-03T09:37:17-03:00
Fix UTF-8 message errors (#327) Alexander M 2018-04-30T14:47:26+03:00
Fix ls-files for git 2.16 (#350) Rafael Regg 2018-03-28T08:44:59-03:00
Updating String#encode usage to prevent silly type Roberto Dec 2016-02-25T12:31:33-03:00
Fix the encoding issue - 'split': invalid byte sequ David Varta 2016-02-16T15:42:14+00:00
&lt;/pre>
&lt;h3 id="headline-8">
Change coupling by commit
&lt;/h3>
&lt;p>
Let&amp;#39;s look to see which files are changed together, which will give us
a sense of which files are coupled together.
&lt;/p>
&lt;p>
First we&amp;#39;ll create &lt;code class="verbatim">query_and_pivot.rb&lt;/code> that we&amp;#39;ll use to do our query
and do the count pivot stuff to parse the output.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;sqlite3&amp;#39;&lt;/span>
&lt;span class="c1"># Query the database and pivot the second result (filename) around the&lt;/span>
&lt;span class="c1"># first result (either date or commit id) into a cochange structure&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">query_and_loop&lt;/span>
&lt;span class="n">db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">SQLite3&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Database&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="s2">&amp;#34;test.db&amp;#34;&lt;/span>
&lt;span class="n">cochanges&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="n">db&lt;/span>
&lt;span class="n">file_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[]&lt;/span>
&lt;span class="n">prev_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">cochanges&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">prev_id&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">id&lt;/span>
&lt;span class="n">add_set&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file_set&lt;/span>
&lt;span class="n">file_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">file_set&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="n">file_set&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include?&lt;/span> &lt;span class="nb">name&lt;/span>
&lt;span class="n">prev_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">id&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">add_set&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file_set&lt;/span>
&lt;span class="n">collect_and_sort&lt;/span> &lt;span class="n">ret&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Add each set into the cochange structure. This tracks how many&lt;/span>
&lt;span class="c1"># times each file was seen with another file, and the number of times&lt;/span>
&lt;span class="c1"># the file was seen overall.&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">add_set&lt;/span> &lt;span class="n">cochange&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">set&lt;/span>
&lt;span class="n">set&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">cochange&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">cochange&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="ss">:count&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">cochange&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="ss">:count&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">set&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">cofile&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">cofile&lt;/span>
&lt;span class="n">cochange&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">cofile&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">cochange&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">cofile&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Turn the cochange sent into an array that is sorted by the&lt;/span>
&lt;span class="c1"># cooralation&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">collect_and_sort&lt;/span> &lt;span class="n">cochange&lt;/span>
&lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[]&lt;/span>
&lt;span class="n">cochange&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stats&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">commits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:count&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">cofile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cocount&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">coorelation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cocount&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">commits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_f&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">cofile&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="ss">:count&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">coorelation&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">cocount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="n">ret&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">file&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">commits&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">commits&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">cofile&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">cofile&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">coorelation&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">coorelation&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">cocount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">cocount&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">ret&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:coorelation&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">&amp;lt;=&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:coorelation&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Prints the results into a table that org-mode can easily reformat.&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">print_cochange&lt;/span> &lt;span class="n">cochange&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| file | commits | cofile | coorelation | count |&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;|-|-|-|-|-|&amp;#34;&lt;/span>
&lt;span class="n">cochange&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:file&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:commits&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:cofile&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:coorelation&lt;/span>&lt;span class="o">]*&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">%|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:cocount&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And now we&amp;#39;ll create a &lt;code class="verbatim">cochange_by_commit.rb&lt;/code> script that does our
query.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;./query_and_pivot.rb&amp;#39;&lt;/span>
&lt;span class="n">cochanges&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">query_and_loop&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">db&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span> &lt;span class="s2">&amp;#34;
&lt;/span>&lt;span class="s2"> select id, name from commit_files where id in
&lt;/span>&lt;span class="s2"> (select commits.id from commits, commit_files
&lt;/span>&lt;span class="s2"> where commits.id = commit_files.id and author_when &amp;gt;= ?
&lt;/span>&lt;span class="s2"> )&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;2011-01-01&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">print_cochange&lt;/span> &lt;span class="n">cochanges&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
| file | commits | cofile | coorelation | count |
|-------------------------------+---------+----------------------------+-------------+-------|
| CHANGELOG.md | 4 | lib/git/version.rb | 100% | 4 |
| lib/git/config.rb | 4 | tests/units/test_config.rb | 100% | 4 |
| Gemfile.lock | 3 | git.gemspec | 100% | 3 |
| tests/units/test_config.rb | 5 | lib/git/config.rb | 80% | 4 |
| lib/git.rb | 4 | git.gemspec | 75% | 3 |
| tests/units/test_remotes.rb | 8 | lib/git/lib.rb | 75% | 6 |
| tests/units/test_tags.rb | 4 | lib/git/lib.rb | 75% | 3 |
| tests/units/test_index_ops.rb | 8 | lib/git/lib.rb | 75% | 6 |
| VERSION | 7 | git.gemspec | 71% | 5 |
| tests/units/test_logger.rb | 6 | lib/git/lib.rb | 66% | 4 |
| lib/git/diff.rb | 8 | lib/git/lib.rb | 62% | 5 |
| tests/units/test_remotes.rb | 8 | lib/git/base.rb | 62% | 5 |
| lib/git/base.rb | 31 | lib/git/lib.rb | 61% | 19 |
| VERSION | 7 | lib/git/version.rb | 57% | 4 |
| tests/units/test_init.rb | 7 | lib/git/lib.rb | 57% | 4 |
| tests/units/test_init.rb | 7 | lib/git/base.rb | 57% | 4 |
| tests/units/test_lib.rb | 12 | lib/git/lib.rb | 50% | 6 |
| tests/units/test_index_ops.rb | 8 | lib/git/base.rb | 50% | 4 |
| tests/test_helper.rb | 9 | lib/git/lib.rb | 44% | 4 |
| lib/git/version.rb | 12 | git.gemspec | 41% | 5 |
| lib/git/version.rb | 12 | CHANGELOG.md | 33% | 4 |
| lib/git/version.rb | 12 | VERSION | 33% | 4 |
| tests/test_helper.rb | 9 | tests/units/test_lib.rb | 33% | 3 |
&lt;/pre>
&lt;p>
I&amp;#39;m limiting the output to only show files that have changed more than
2 times, mainly to get the data down to something manageable to show on
this point. The first two columns show the file name and the number
of commits that it&amp;#39;s in (for the selected time period). The next few
columns show the file that changed at the same time as the first time,
and the % of times that it was in the commit. So a correlation of 1.0
indicates they change everytime together. For &lt;code class="verbatim">0.75&lt;/code> it changes 3 out of 4
times that the main file changes.
&lt;/p>
&lt;p>
Most of the things here make sense. Unit tests change at a high
coupling rate as the files that they appear to test, but you also can
see that &lt;code class="verbatim">lib/git/lib.rb&lt;/code> and &lt;code class="verbatim">lib/git/base.rb&lt;/code> change a lot with unit
tests that are testing other parts of the system. Meaning, the unit
test code isn&amp;#39;t super modular with the classes that it&amp;#39;s testing, and
there&amp;#39;s probably a bunch of stuff in these &lt;code class="verbatim">base&lt;/code> and &lt;code class="verbatim">lib&lt;/code> modules that
have spread responsibilities.
&lt;/p>
&lt;h3 id="headline-9">
Why isn&amp;#39;t &lt;code class="verbatim">VERSION&lt;/code> totally correlated to &lt;code class="verbatim">lib/git/version.rb&lt;/code> ?
&lt;/h3>
&lt;p>
Looking above we can see that changes to &lt;code class="verbatim">VERSION&lt;/code> are correlated to
&lt;code class="verbatim">lib/git/version.rb&lt;/code> only 57% of the time. Weird. Let&amp;#39;s see if we can
figure out what those other changes are.
&lt;/p>
&lt;p>
We are going to use the sql &lt;code class="verbatim">EXCEPT&lt;/code> keyword to first get a list of all
of the commit ids that reference &lt;code class="verbatim">VERSION&lt;/code>, and substract that from the
list of ids that reference &lt;code class="verbatim">lib/git/version.rb&lt;/code> to get the commits where they
aren&amp;#39;t co-occurring.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select id from commits where author_when &amp;gt;= &amp;#39;2011-01-01&amp;#39;
&lt;/span>&lt;span class="s2"> and id in
&lt;/span>&lt;span class="s2"> (select id from commit_files where name = &amp;#39;VERSION&amp;#39;
&lt;/span>&lt;span class="s2"> EXCEPT
&lt;/span>&lt;span class="s2"> select id from commit_files where name = &amp;#39;lib/git/version.rb&amp;#39;)&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
6d5bacd
6db4fdc
cc6d6ef
&lt;/pre>
&lt;p>
Now if we do &lt;code class="verbatim">git show 6d5bacd&lt;/code> we can see that, in fact, the change was
that &lt;code class="verbatim">VERSION&lt;/code> was removed from the repo since it was restructured. Not
a super interesting finding, but it&amp;#39;s an anomaly so it&amp;#39;s fun to check
out.
&lt;/p>
&lt;h3 id="headline-10">
Active days
&lt;/h3>
&lt;p>
Let&amp;#39;s see which days of this project were the most active.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select count(*), date(author_when) from commits
&lt;/span>&lt;span class="s2">group by date(author_when) order by count(*) desc limit 10&amp;#34;&lt;/span> -header -column&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
count(*) date(author_when)
---------- -----------------
16 2013-04-11
14 2015-01-05
12 2007-11-16
12 2007-11-19
12 2014-01-13
11 2015-01-12
10 2009-02-12
9 2013-08-16
8 2009-08-01
8 2013-04-29
&lt;/pre>
&lt;p>
Just glancing at this you can see that there&amp;#39;s a flurry of activity
that happened over wide gaps of time. Closing in one of the events
you can get a sense of what happened – someone tackled a bunch of
backlog work on the project and merged quite a few pull requests:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select author_name, summary from commits where date(author_when) = &amp;#39;2015-01-05&amp;#39;&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
Roberto Decurnex|Updating checkout tests to cover `-b` option
Roberto Decurnex|Fixing :new_branch usage on checkout
Roberto Decurnex|Merge pull request #37 from JangoSteve/ls_remote
Roberto Decurnex|Merge pull request #161 from xavier-calland/fetch_prune
Roberto Decurnex|Updating `clone` RDoc Sorting clone options closes #178
Roberto Decurnex|Merge pull request #132 from arnvald/test-branch-create-does-not-switch-branch
Roberto Decurnex|Updating clone --b to clone --branch (just to make it a little more verbose)
Roberto Decurnex|Merge branch 'test_unit_needs_specificity' of https://github.com/kwstannard/ruby-git into kwstannard-test_unit_needs_specificity
Roberto Decurnex|Merge branch 'diff_fix_current_vs_head' of https://github.com/francisluong/ruby-git into francisluong-diff_fix_current_vs_head
Roberto Decurnex|Merge branch 'NotDaveLane-master'
Roberto Decurnex|Adding Git.clone test for :branch option
Roberto Decurnex|Merge branch 'master' of https://github.com/NotDaveLane/ruby-git into NotDaveLane-master
Roberto Decurnex|Merge branch 'master' of github.com:schacon/ruby-git
Roberto Decurnex|Updating ssh_key -> git_ssh
&lt;/pre>
&lt;p>
If you were in charge of testing things, you&amp;#39;d definately want to be a
bit more thorough than normal.
&lt;/p>
&lt;h3 id="headline-11">
Change coupling by time
&lt;/h3>
&lt;p>
Commits aren&amp;#39;t necessarily the only unit of work on a team. Depending
upon the process and work style, commits could be small and frequent
(I&amp;#39;m sure with comments like &lt;em>argggh&lt;/em> and &lt;em>work dammnit&lt;/em>) or they could be
well structured units of work that can be thought of as logically
discrete units.
&lt;/p>
&lt;p>
For those repositories that aren&amp;#39;t like that, let&amp;#39;s group changes by
time and see if that gives us any interesting insights in to which
files where modified together.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;./query_and_pivot.rb&amp;#39;&lt;/span>
&lt;span class="n">cochanges&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">query_and_loop&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">db&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span> &lt;span class="s2">&amp;#34;
&lt;/span>&lt;span class="s2"> select date(author_when), name from commits, commit_files
&lt;/span>&lt;span class="s2"> where commits.id = commit_files.id
&lt;/span>&lt;span class="s2"> and author_when &amp;gt;= ?&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;2011-01-01&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">print_cochange&lt;/span> &lt;span class="n">cochanges&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
| file | commits | cofile | coorelation | count |
|-------------------------------+---------+-------------------------------+-------------+-------|
| CHANGELOG.md | 4 | lib/git/version.rb | 100% | 4 |
| lib/git/config.rb | 4 | tests/units/test_config.rb | 100% | 4 |
| tests/units/test_remotes.rb | 6 | lib/git/lib.rb | 100% | 6 |
| tests/units/test_tags.rb | 3 | lib/git/lib.rb | 100% | 3 |
| tests/units/test_init.rb | 6 | lib/git/lib.rb | 100% | 6 |
| lib/git/object.rb | 4 | lib/git/lib.rb | 100% | 4 |
| lib/git/object.rb | 4 | lib/git/base.rb | 100% | 4 |
| tests/units/test_base.rb | 4 | lib/git/lib.rb | 100% | 4 |
| tests/units/test_index_ops.rb | 6 | lib/git/lib.rb | 100% | 6 |
| lib/git/path.rb | 4 | lib/git/base.rb | 100% | 4 |
| VERSION | 6 | lib/git/lib.rb | 83% | 5 |
| tests/units/test_remotes.rb | 6 | lib/git/base.rb | 83% | 5 |
| lib/git/base.rb | 18 | lib/git/lib.rb | 83% | 15 |
| tests/units/test_init.rb | 6 | lib/git/base.rb | 83% | 5 |
| tests/units/test_config.rb | 5 | lib/git/config.rb | 80% | 4 |
| lib/git.rb | 4 | git.gemspec | 75% | 3 |
| lib/git/diff.rb | 8 | lib/git/lib.rb | 75% | 6 |
| lib/git/config.rb | 4 | README.md | 75% | 3 |
| tests/units/test_base.rb | 4 | .travis.yml | 75% | 3 |
| lib/git/path.rb | 4 | .travis.yml | 75% | 3 |
| lib/git/path.rb | 4 | lib/git/lib.rb | 75% | 3 |
| lib/git/path.rb | 4 | tests/units/test_index_ops.rb | 75% | 3 |
| .travis.yml | 14 | lib/git/lib.rb | 71% | 10 |
| tests/units/test_logger.rb | 6 | lib/git/lib.rb | 66% | 4 |
| VERSION | 6 | git.gemspec | 66% | 4 |
| tests/units/test_index_ops.rb | 6 | .travis.yml | 66% | 4 |
| tests/units/test_index_ops.rb | 6 | lib/git/base.rb | 66% | 4 |
| tests/units/test_lib.rb | 11 | lib/git/lib.rb | 63% | 7 |
&lt;/pre>
&lt;p>
I truncated the table since there are a lot more things that are
correlated now that we&amp;#39;ve grouped by date. A lot of things make sense
here, but again it seems like files are changed together – a lot which
could be nothing but makes you wonder about modularity of files.
&lt;/p>
&lt;p>
&lt;code class="verbatim">lib/git/base.rb&lt;/code> and &lt;code class="verbatim">lib/git/lib.rb&lt;/code> are both changed a lot (&lt;code class="verbatim">18&lt;/code> times)
and frequently changed together &lt;code class="verbatim">83%&lt;/code> of the time.
&lt;/p>
&lt;p>
Perhaps things have been split up prematurely if multiple files always
change at the same time? Or is this normal in terms of how object
oriented encapulsation works? Based upon the generic all encompasing
names (&lt;em>base&lt;/em> and &lt;em>lib&lt;/em>) I wonder if you could guess why something would go
into one file or another.
&lt;/p>
&lt;h2 id="headline-12">
Knowledge and maturity
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
Knowledge of a file is related to how much someone touched it
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Knowledge decays over time
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Active files means that something is changing
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
People come and go on projects
&lt;/p>
&lt;h3 id="headline-13">
Normalizing names
&lt;/h3>
&lt;/li>
&lt;/ol>
&lt;p>
One thing to note in this data is that &lt;code class="verbatim">scott Chacon&lt;/code> is treated
differently than &lt;code class="verbatim">Scott Chacon&lt;/code>, similar to &lt;code class="verbatim">Roberto Decurnex&lt;/code> and
&lt;code class="verbatim">robertodecurnex&lt;/code>. One simple way to normalize this is to update your index database to
add the alias and mappings there.
&lt;/p>
&lt;p>
These need to be identified by hand and retweaked depending upon the
particular repo you are looking at.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;update commits set author_name = &amp;#39;Scott Chacon&amp;#39; where author_name = &amp;#39;scott Chacon&amp;#39;&amp;#34;&lt;/span>
sqlite3 test.db &lt;span class="s2">&amp;#34;update commits set author_name = &amp;#39;Roberto Decurnex&amp;#39; where author_name = &amp;#39;robertodecurnex&amp;#39;&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-14">
Authorship of a file
&lt;/h3>
&lt;p>
Let&amp;#39;s look at who &amp;#34;knows&amp;#34; about a file based upon how much they&amp;#39;ve
authored it. I&amp;#39;m going to pick on &lt;code class="verbatim">lib/git/base.rb&lt;/code> since that seems to
be an exciting hotspot.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select name, author_name, count(commits.id) as commits, date(max(author_when)) as last_touched
&lt;/span>&lt;span class="s2">from commits, commit_files
&lt;/span>&lt;span class="s2">where commits.id = commit_files.id
&lt;/span>&lt;span class="s2">and name = &amp;#39;lib/git/base.rb&amp;#39;
&lt;/span>&lt;span class="s2">group by name, author_name order by count(commits.id) desc&amp;#34;&lt;/span> -column -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
name author_name commits last_touched
--------------- ------------ ---------- ------------
lib/git/base.rb Scott Chacon 30 2008-05-27
lib/git/base.rb Roberto Decu 23 2015-01-12
lib/git/base.rb Jorge Bernal 3 2008-05-06
lib/git/base.rb Joe Moore 2 2013-04-29
lib/git/base.rb Bryan Larsen 1 2009-10-13
lib/git/base.rb Cameron Wals 1 2014-01-28
lib/git/base.rb Daniel Mendl 1 2009-02-10
lib/git/base.rb Harald Sitte 1 2015-01-12
lib/git/base.rb James Rosen 1 2008-12-21
lib/git/base.rb Jonathan Rud 1 2008-12-20
lib/git/base.rb Joshua Peek 1 2008-03-15
lib/git/base.rb Ken Pratt 1 2008-08-13
lib/git/base.rb Michael Mall 1 2013-05-23
lib/git/base.rb TJ Biddle 1 2013-06-14
lib/git/base.rb Tom Potts 1 2018-05-03
lib/git/base.rb Yuya.Nishida 1 2014-07-07
&lt;/pre>
&lt;p>
Looks like &lt;code class="verbatim">Scott Chacon&lt;/code> and &lt;code class="verbatim">Jorge Bernal&lt;/code> moved on to other things in
&lt;code class="verbatim">2008&lt;/code>, and &lt;code class="verbatim">Roberto&lt;/code> did a bunch of work in &lt;code class="verbatim">2015&lt;/code> but the file has been
untouched until &lt;code class="verbatim">Tom Potts&lt;/code> did something in &lt;code class="verbatim">2018&lt;/code>.
&lt;/p>
&lt;p>
Note that &lt;code class="verbatim">Roberto&lt;/code> last touched the specific file &lt;code class="verbatim">lib/git/base.rb&lt;/code> on
&lt;code class="verbatim">2015-01-12&lt;/code> though he was last active in the repo for another year.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select author_name, date(max(author_when)) as last_active
&lt;/span>&lt;span class="s2">from commits where author_name = &amp;#39;Roberto Decurnex&amp;#39;&amp;#34;&lt;/span> -column -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
author_name last_active
---------------- -----------
Roberto Decurnex 2016-02-25
&lt;/pre>
&lt;h3 id="headline-15">
Authorship by weight
&lt;/h3>
&lt;p>
We can also look to see how many lines of code were added by someone,
to go a little deeper. Maybe they only made 1 commit, but it changed
every last thing?
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select author_name, date(max(author_when)) as last_touched, sum(added) as added
&lt;/span>&lt;span class="s2">from commits, commit_files where commits.id = commit_files.id and name = &amp;#39;lib/git/base.rb&amp;#39;
&lt;/span>&lt;span class="s2">group by author_name order by added desc&amp;#34;&lt;/span> -column -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
author_name last_touched added
------------ ------------ ----------
Scott Chacon 2008-05-27 520
Roberto Decu 2015-01-12 192
Jorge Bernal 2008-05-06 23
James Rosen 2008-12-21 18
Joe Moore 2013-04-29 13
Tom Potts 2018-05-03 11
TJ Biddle 2013-06-14 9
Daniel Mendl 2009-02-10 6
Joshua Peek 2008-03-15 4
Bryan Larsen 2009-10-13 2
Cameron Wals 2014-01-28 2
Jonathan Rud 2008-12-20 2
Ken Pratt 2008-08-13 2
Michael Mall 2013-05-23 2
Yuya.Nishida 2014-07-07 2
Harald Sitte 2015-01-12 1
&lt;/pre>
&lt;p>
We do see that &lt;code class="verbatim">Tom Potts&lt;/code> moved up a bit in the list.
&lt;/p>
&lt;h3 id="headline-16">
Who knows about that file?
&lt;/h3>
&lt;p>
If you had a question about &lt;code class="verbatim">lib/git/base.rb&lt;/code> who would you ask? &lt;code class="verbatim">Scott
Chacon&lt;/code> wrote most of it, but he hasn&amp;#39;t been around in a while.
&lt;code class="verbatim">Roberto Decurnex&lt;/code> was the last person to make substantial changes to
it, but that was back in &lt;code class="verbatim">2015&lt;/code>. Even if he was still active on the
project, which he doesn&amp;#39;t appear to be, do we think he&amp;#39;d remember any
of the details? Does the most recent contributor make sense to talk
to, even though &lt;code class="verbatim">Tom Potts&lt;/code> only made a small change in &lt;code class="verbatim">2018&lt;/code>?
&lt;/p>
&lt;p>
We know that the file is signifigant because it used to change a lot
with a bunch of other files. Maybe the file is super clean and
looking at it means that all of its resposibilities are self-evident
– I haven&amp;#39;t opened it up yet – but my sense is that it probably has
a lot of stuff in there, and that knowledge will have to be recreated
the next time that anyone opens it up to make a change.
&lt;/p>
&lt;h3 id="headline-17">
Stable or dead?
&lt;/h3>
&lt;p>
Instead of focusing on the things that have changed, lets take a look
at the things that haven&amp;#39;t. Right now we don&amp;#39;t have a good way to see
if a file is still in latest revision, so we can put that into the
database as well and join off of it.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;sqlite3&amp;#39;&lt;/span>
&lt;span class="n">db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">SQLite3&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Database&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="s2">&amp;#34;test.db&amp;#34;&lt;/span>
&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span> &lt;span class="s">&amp;lt;&amp;lt;-SQL
&lt;/span>&lt;span class="s">&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">exists&lt;/span> &lt;span class="n">current_files&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="nb">name&lt;/span> &lt;span class="no">TEXT&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="no">SQL&lt;/span>
&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span> &lt;span class="s2">&amp;#34;delete from current_files;&amp;#34;&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="sb">`cd /tmp/ruby-git;git ls-files`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each_line&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chomp!&lt;/span>
&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span> &lt;span class="s2">&amp;#34;insert into current_files (name) VALUES (?)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> current files&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
596 current files
&lt;/pre>
&lt;p>
Now that we have that list, we can join off of it to get when things
were last modified and by whom.
&lt;/p>
&lt;p>
&lt;em>I&amp;#39;m going to filter out the &lt;code class="verbatim">test&lt;/code> files since there&amp;#39;s a lot of sample
data there, not that test code isn&amp;#39;t important&lt;/em>.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sqlite3 test.db &lt;span class="s2">&amp;#34;select current_files.name,
&lt;/span>&lt;span class="s2"> date(max(author_when)) as last_touched,
&lt;/span>&lt;span class="s2"> author_name as author
&lt;/span>&lt;span class="s2"> from commits, commit_files, current_files
&lt;/span>&lt;span class="s2"> where commits.id = commit_files.id
&lt;/span>&lt;span class="s2"> and commit_files.name = current_files.name
&lt;/span>&lt;span class="s2"> and current_files.name not like &amp;#39;test%&amp;#39;
&lt;/span>&lt;span class="s2"> group by current_files.name order by max(author_when) asc&amp;#34;&lt;/span> -column -header&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
name last_touched author
---------------------------- ------------ ------------
lib/git/working_directory.rb 2007-11-08 Scott Chacon
lib/git/index.rb 2007-11-16 Scott Chacon
LICENSE 2008-05-26 Scott Chacon
lib/git/stash.rb 2008-12-21 James Rosen
lib/git/branches.rb 2013-04-10 Roberto Decu
lib/git/repository.rb 2013-04-10 Roberto Decu
.gitignore 2013-04-11 Roberto Decu
lib/git/log.rb 2013-08-17 Roberto Decu
Gemfile 2014-01-13 Roberto Decu
lib/git/remote.rb 2014-01-28 Cameron Wals
lib/git/path.rb 2014-07-07 Yuya.Nishida
lib/git/author.rb 2015-01-12 Roberto Decu
lib/git/object.rb 2015-01-12 Roberto Decu
lib/git/status.rb 2018-03-07 Vern Burton
lib/git/base.rb 2018-05-03 Tom Potts
Rakefile 2018-05-16 Per Lundberg
ISSUE_TEMPLATE.md 2018-06-20 Vern Burton
lib/git/stashes.rb 2018-08-01 Vern Burton
.travis.yml 2018-08-22 Vern Burton
lib/git/base/factory.rb 2018-10-02 Evgenii Pech
lib/git/config.rb 2019-09-20 Salim Afiune
git.gemspec 2019-12-11 James Coubal
lib/git/diff.rb 2019-12-11 James Coubal
.github/stale.yml 2020-01-19 Per Lundberg
lib/git.rb 2020-01-22 cyclotron3k
lib/git/branch.rb 2020-01-23 James Coubal
CONTRIBUTING.md 2020-01-25 James Coubal
MAINTAINERS.md 2020-01-25 James Coubal
RELEASING.md 2020-01-25 James Coubal
PULL_REQUEST_TEMPLATE.md 2020-02-04 Yuta Harima
README.md 2020-04-05 Alex Mayer
lib/git/lib.rb 2020-04-05 TIT
CHANGELOG.md 2020-04-25 James Coubal
lib/git/version.rb 2020-04-25 James Coubal
&lt;/pre>
&lt;p>
So from this we can see which parts of the project are pretty much
stable from early days, &lt;code class="verbatim">working_directory.rb&lt;/code> probably up through
&lt;code class="verbatim">object.rb&lt;/code> and which things have been changing for this stable project.
In the beginning of the year there was a bunch of work for things
related to project adminstration, like &lt;code class="verbatim">PULL_REQUEST_TEMPLATE.mb&lt;/code> and
&lt;code class="verbatim">RELEASING.md&lt;/code>.
&lt;/p>
&lt;h2 id="headline-18">
Thoughts
&lt;/h2>
&lt;p>
Coding creates artifacts that change over time, and we have access to
this data in the repositories that we share. Having everything
accessable in SQL helps with complicated joins and analysis. I&amp;#39;ve
scripted this in Ruby and we are looking at a Ruby project, but
nothing that we&amp;#39;ve done has looked inside of the project itself to
identify what are areas of note and of interest. It&amp;#39;s been purely on
the shape of how things are changing, what is changing together, and
meta data analysis.
&lt;/p>
&lt;p>
Now that we&amp;#39;ve gotten a taste of what this looked like here – and I&amp;#39;m
sure there&amp;#39;s much more we can look into – there are a few other
sources of meta data that we should look at:
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Issues/tickets and how they related to the code
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Mailing lists? Chat rooms? other discussions around the repository
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Projects that rely upon this as a dependency, and how/if those
users are putting in tickets or bug fixes into the code
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Looking into the &lt;code class="verbatim">gemspec&lt;/code> and &lt;code class="verbatim">Gemfile&lt;/code> to examine this project&amp;#39;s
dependencies to see what&amp;#39;s going on there.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
But this is already long enough.
&lt;/p>
&lt;h2 id="headline-19">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://pragprog.com/titles/atcrime/your-code-as-a-crime-scene/">Your Code as a Crime Scene: Use Forensic Techniques to Arrest Defects, Bottlenecks, and Bad Design in Your Programs&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://pragprog.com/titles/atevol/software-design-x-rays/">Software Design X-Rays: Fix Technical Debt with Behavioral Code Analysis&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Using Askgit</title><link>https://willschenk.com/articles/2020/using_askgit/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/using_askgit/</guid><description>
&lt;p>
&lt;a href="https://github.com/augmentable-dev/askgit">askgit&lt;/a> provides a sql interface to your git repository. Let&amp;#39;s install
it and see what we can figure out about the repo.
&lt;/p>
&lt;h2 id="headline-1">
Installing
&lt;/h2>
&lt;p>
Following the instructions on the website, we can build the go binary
with:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">go get -v -tags&lt;span class="o">=&lt;/span>sqlite_vtable github.com/augmentable-dev/askgit&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This will download the package, the dependencies, and compile
everything into an executable. If you can&amp;#39;t figure out where it&amp;#39;s
installed, check that you have &lt;code class="verbatim">GOPATH&lt;/code> set correctly, and it will end
up in &lt;code class="verbatim">$GOPATH/bin&lt;/code>. And make sure that it&amp;#39;s in your path by checking
&lt;code class="verbatim">which askgit&lt;/code>.
&lt;/p>
&lt;h2 id="headline-2">
Get a test repository
&lt;/h2>
&lt;p>
I&amp;#39;m going to look at the &lt;code class="verbatim">ruby-git&lt;/code> repo so you can follow along.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp
git clone https://github.com/ruby-git/ruby-git
&lt;span class="nb">cd&lt;/span> ruby-git&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-3">
Commits
&lt;/h2>
&lt;p>
The basic unit that git works on is a commit, which is a series of
file changes applied to a parent, or multiple parents in the case of
a merge. Let&amp;#39;s do some basic analysis of what&amp;#39;s in a repo, how long
it&amp;#39;s been worked on, and who has been working on it.
&lt;/p>
&lt;h3 id="headline-4">
How old is the repo?
&lt;/h3>
&lt;p>
Let&amp;#39;s find the earliest timestamps in the repo. For most workflows
these dates will be similar, but if the project shares patches over
email (like linux or postgres or anything on &lt;a href="https://sr.ht/">sr.ht&lt;/a>) the &lt;code class="verbatim">author_when&lt;/code> is
when the code was written (according to the author) and the
&lt;code class="verbatim">committer_when&lt;/code> is when it was added to the repo.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">
askgit &lt;span class="s2">&amp;#34;select min(author_when), min(committer_when) from commits&amp;#34;&lt;/span>
+---------------------------+---------------------------+
&lt;span class="p">|&lt;/span> MIN&lt;span class="o">(&lt;/span>AUTHOR WHEN&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> MIN&lt;span class="o">(&lt;/span>COMMITTER WHEN&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span>
+---------------------------+---------------------------+
&lt;span class="p">|&lt;/span> 2007-11-07T12:54:26-08:00 &lt;span class="p">|&lt;/span> 2007-11-07T12:54:26-08:00 &lt;span class="p">|&lt;/span>
+---------------------------+---------------------------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-5">
First commit
&lt;/h3>
&lt;p>
And here&amp;#39;s who did it:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">askgit &lt;span class="s2">&amp;#34;select message, author_name, author_email, author_when from commits order by committer_when asc limit 1&amp;#34;&lt;/span>
+-------------------------------+--------------+-------------------------------------------+---------------------------+
&lt;span class="p">|&lt;/span> MESSAGE &lt;span class="p">|&lt;/span> AUTHOR NAME &lt;span class="p">|&lt;/span> AUTHOR EMAIL &lt;span class="p">|&lt;/span> AUTHOR WHEN &lt;span class="p">|&lt;/span>
+-------------------------------+--------------+-------------------------------------------+---------------------------+
&lt;span class="p">|&lt;/span> beginning of Ruby/Git project &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> schacon@agadorsparticus.corp.reactrix.com &lt;span class="p">|&lt;/span> 2007-11-07T12:54:26-08:00 &lt;span class="p">|&lt;/span>
+-------------------------------+--------------+-------------------------------------------+---------------------------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-6">
Biggest commit
&lt;/h3>
&lt;p>
Which commits added the most code?
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">askgit &lt;span class="s2">&amp;#34;select summary, author_name, author_when, additions from commits order by additions desc limit 10&amp;#34;&lt;/span>
+--------------------------------+---------------+---------------------------+-----------+
&lt;span class="p">|&lt;/span> SUMMARY &lt;span class="p">|&lt;/span> AUTHOR NAME &lt;span class="p">|&lt;/span> AUTHOR WHEN &lt;span class="p">|&lt;/span> ADDITIONS &lt;span class="p">|&lt;/span>
+--------------------------------+---------------+---------------------------+-----------+
&lt;span class="p">|&lt;/span> added documentation and a &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-11T17:59:18-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">12707&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> license file &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> updated a bunch of the &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-13T07:36:50-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">2223&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> documentation &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> updated the docs &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-16T13:24:30-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">2109&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> updated docs &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-19T07:34:25-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">1448&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> added push, changed some docs, &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-12T10:55:39-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">1193&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> merged README and EXAMPLES, &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> fixed the Rake tasks to build &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> a proper gem &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Implementation and tests &lt;span class="p">|&lt;/span> James Couball &lt;span class="p">|&lt;/span> 2019-12-11T10:04:03-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">763&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> required to ensure that &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="nb">command&lt;/span> output encoding does &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> not raise an exception &lt;span class="o">(&lt;/span>&lt;span class="c1">#405) | | | |&lt;/span>
&lt;span class="p">|&lt;/span> added files from the &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-20T12:07:46-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">749&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> gitrb project, which seems &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> abandoned, but which is great &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> code &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> adding my testing git &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-11T17:11:19-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">711&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> directory &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> added branches, more log &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-09T13:11:22-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">522&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> stuff, better tests, changed &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> the log api a bit added &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> tests &lt;span class="k">for&lt;/span> Git::Lib, started &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Git::Diff development &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> added some testing files and &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-07T17:19:09-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">486&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> got some real tests to run &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
+--------------------------------+---------------+---------------------------+-----------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We can see that these are at all the beginning of the project.
&lt;/p>
&lt;h3 id="headline-7">
Biggest cleanup
&lt;/h3>
&lt;p>
Which commit removed the most code?
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">askgit &lt;span class="s2">&amp;#34;select summary, author_name, author_when, deletions from commits order by deletions desc limit 10&amp;#34;&lt;/span>
+--------------------------------+--------------------+---------------------------+-----------+
&lt;span class="p">|&lt;/span> SUMMARY &lt;span class="p">|&lt;/span> AUTHOR NAME &lt;span class="p">|&lt;/span> AUTHOR WHEN &lt;span class="p">|&lt;/span> DELETIONS &lt;span class="p">|&lt;/span>
+--------------------------------+--------------------+---------------------------+-----------+
&lt;span class="p">|&lt;/span> remove doc from revision &lt;span class="p">|&lt;/span> Jonathan Rudenberg &lt;span class="p">|&lt;/span> 2008-12-24T08:08:19+08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">14822&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> control &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> updated docs &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-19T07:34:25-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">1311&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> updated the docs &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-16T13:24:30-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">1141&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> updated a bunch of the &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-13T07:36:50-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">1061&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> documentation &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> reverted the pure ruby code &lt;span class="p">|&lt;/span> Scott Chacon &lt;span class="p">|&lt;/span> 2008-03-08T18:14:15-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">1050&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> to system calls and split the &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> pure ruby to a new library &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> added push, changed some docs, &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-12T10:55:39-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">976&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> merged README and EXAMPLES, &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> fixed the Rake tasks to build &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> a proper gem &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Cleaning up unused files/tasks &lt;span class="p">|&lt;/span> robertodecurnex &lt;span class="p">|&lt;/span> 2014-02-03T18:14:29-03:00 &lt;span class="p">|&lt;/span> &lt;span class="m">750&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> have the pure ruby bindings &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-20T13:24:44-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">393&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> working to some degree &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> add markdown styling to readme &lt;span class="p">|&lt;/span> schneems &lt;span class="p">|&lt;/span> 2011-10-19T16:30:26-05:00 &lt;span class="p">|&lt;/span> &lt;span class="m">240&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> added documentation and a &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span> 2007-11-11T17:59:18-08:00 &lt;span class="p">|&lt;/span> &lt;span class="m">179&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> license file &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
+--------------------------------+--------------------+---------------------------+-----------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Again most of these are at the beginning of the project, through there
is a big 2014 cleanup that is probably a refactor of some kind.
&lt;/p>
&lt;h3 id="headline-8">
How many commits do we have?
&lt;/h3>
&lt;p>
We&amp;#39;ve all seen this query before:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">askgit &lt;span class="s2">&amp;#34;select count(*) from commits&amp;#34;&lt;/span>
+----------+
&lt;span class="p">|&lt;/span> COUNT&lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span>
+----------+
&lt;span class="p">|&lt;/span> &lt;span class="m">402&lt;/span> &lt;span class="p">|&lt;/span>
+----------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-9">
How about most frequent multi-committer?
&lt;/h3>
&lt;p>
Lets group the commits by &lt;code class="verbatim">author_name&lt;/code> and sort by the most committers.
It looks like somewhere down the line &lt;code class="verbatim">scott Chacon&lt;/code> changed to &lt;code class="verbatim">Scott
Chacon&lt;/code> so he&amp;#39;s counted twice. Still, it looks like he&amp;#39;s been doing a
lot.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">askgit &lt;span class="s2">&amp;#34;select count(*) as count, author_name from commits group by author_name having count &amp;gt; 1 order by count desc&amp;#34;&lt;/span>
+-------+--------------------+
&lt;span class="p">|&lt;/span> COUNT &lt;span class="p">|&lt;/span> AUTHOR NAME &lt;span class="p">|&lt;/span>
+-------+--------------------+
&lt;span class="p">|&lt;/span> &lt;span class="m">81&lt;/span> &lt;span class="p">|&lt;/span> scott Chacon &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">78&lt;/span> &lt;span class="p">|&lt;/span> robertodecurnex &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">77&lt;/span> &lt;span class="p">|&lt;/span> Roberto Decurnex &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">20&lt;/span> &lt;span class="p">|&lt;/span> Scott Chacon &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">20&lt;/span> &lt;span class="p">|&lt;/span> Joshua Nichols &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="p">|&lt;/span> Per Lundberg &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="p">|&lt;/span> James Couball &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span> Daniel Mendler &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span> Vern Burton &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span> Kelly Stannard &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">4&lt;/span> &lt;span class="p">|&lt;/span> elliottcable &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">4&lt;/span> &lt;span class="p">|&lt;/span> Josh Nichols &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">4&lt;/span> &lt;span class="p">|&lt;/span> James Rosen &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> Yuichi Tateno &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> Michael Mallete &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> Jorge Bernal &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Yuya.Nishida &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Yuta Harima &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> TIT &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Joshua Liebowitz &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Jonathan Rudenberg &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Joe Moore &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Gianni Chiappetta &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Eric Goodwin &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> Cameron Walsh &lt;span class="p">|&lt;/span>
+-------+--------------------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-10">
Commits by month
&lt;/h3>
&lt;p>
We can look at the activity of the project over time using the sqlite
date functions. We can see that there&amp;#39;s a lot of activity in the
beginning and it trails off.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp/ruby-git
askgit &lt;span class="s2">&amp;#34;select strftime(\&amp;#34;%Y-%m\&amp;#34;, author_when) as &amp;#39;month&amp;#39;,
&lt;/span>&lt;span class="s2"> count(*) as total_commits, sum(additions), sum(deletions)
&lt;/span>&lt;span class="s2"> from commits group by strftime(\&amp;#34;%Y-%me\&amp;#34;, author_when) order by strftime(\&amp;#34;%Y-%m\&amp;#34;, author_when);&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example half-height-scroll">+---------+---------------+----------------+----------------+
| MONTH | TOTAL COMMITS | SUM(ADDITIONS) | SUM(DELETIONS) |
+---------+---------------+----------------+----------------+
| 2007-11 | 78 | 27597 | 6204 |
| 2008-01 | 3 | 5 | 5 |
| 2008-03 | 12 | 279 | 1101 |
| 2008-05 | 10 | 180 | 34 |
| 2008-07 | 4 | 33 | 6 |
| 2008-08 | 1 | 2 | 2 |
| 2008-10 | 1 | 1 | 1 |
| 2008-11 | 1 | 1 | 1 |
| 2008-12 | 6 | 180 | 15039 |
| 2009-02 | 16 | 202 | 216 |
| 2009-03 | 2 | 9 | 2 |
| 2009-04 | 1 | 1 | 1 |
| 2009-05 | 2 | 115 | 16 |
| 2009-08 | 13 | 168 | 97 |
| 2009-09 | 4 | 10 | 6 |
| 2009-10 | 6 | 11 | 11 |
| 2011-08 | 1 | 1 | 1 |
| 2011-09 | 1 | 0 | 0 |
| 2011-10 | 1 | 251 | 240 |
| 2011-12 | 1 | 30 | 1 |
| 2012-03 | 1 | 1 | 0 |
| 2012-04 | 1 | 1 | 1 |
| 2013-01 | 1 | 6 | 4 |
| 2013-04 | 45 | 704 | 388 |
| 2013-05 | 3 | 8 | 5 |
| 2013-06 | 1 | 9 | 0 |
| 2013-08 | 17 | 184 | 41 |
| 2013-09 | 1 | 8 | 8 |
| 2013-12 | 2 | 4 | 4 |
| 2014-01 | 26 | 254 | 96 |
| 2014-02 | 5 | 8 | 753 |
| 2014-05 | 1 | 2 | 2 |
| 2014-06 | 4 | 14 | 2 |
| 2014-07 | 6 | 44 | 35 |
| 2014-08 | 4 | 4 | 4 |
| 2014-09 | 5 | 109 | 54 |
| 2014-10 | 1 | 20 | 0 |
| 2014-11 | 4 | 10 | 4 |
| 2014-12 | 11 | 244 | 60 |
| 2015-01 | 36 | 446 | 216 |
| 2015-10 | 1 | 1 | 0 |
| 2016-02 | 12 | 216 | 196 |
| 2018-01 | 2 | 40 | 42 |
| 2018-02 | 1 | 17 | 17 |
| 2018-03 | 4 | 233 | 64 |
| 2018-04 | 1 | 8 | 4 |
| 2018-05 | 4 | 81 | 35 |
| 2018-06 | 5 | 192 | 19 |
| 2018-07 | 4 | 37 | 9 |
| 2018-08 | 5 | 64 | 15 |
| 2018-10 | 1 | 169 | 0 |
| 2019-02 | 1 | 65 | 45 |
| 2019-09 | 1 | 8 | 2 |
| 2019-12 | 1 | 763 | 17 |
| 2020-01 | 6 | 172 | 56 |
| 2020-02 | 5 | 15 | 10 |
| 2020-04 | 9 | 63 | 9 |
+---------+---------------+----------------+----------------+
&lt;/pre>
&lt;p>
Looking at this you can see that nothing happened in 2010 and 2017, a
whole bunch of stuff was removed on 2008-11, and really there&amp;#39;s only
a fairly small amount of work done after the initial flurry of implementation.
&lt;/p>
&lt;h2 id="headline-11">
Tags
&lt;/h2>
&lt;p>
Tags can represent releases. Presumably the project is at a point
where you want to mark it in some way, and we&amp;#39;ll use that to look at
the life cycle of what&amp;#39;s been going on.
&lt;/p>
&lt;h3 id="headline-12">
Get a list of tags
&lt;/h3>
&lt;p>
Here we can see a list of tags for the project.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">askgit &lt;span class="s2">&amp;#34;select name, tagger_name, target_type from tags&amp;#34;&lt;/span>
+-----------------------+------------------------------+------------------------------------------+
&lt;span class="p">|&lt;/span> NAME &lt;span class="p">|&lt;/span> TAGGER NAME &lt;span class="p">|&lt;/span> TARGET TYPE &lt;span class="p">|&lt;/span>
+-----------------------+------------------------------+------------------------------------------+
&lt;span class="p">|&lt;/span> refs/tags/1.0.3 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/1.0.5 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/1.0.5.1 &lt;span class="p">|&lt;/span> schacon@gmail.com &lt;span class="p">|&lt;/span> ae106e2a3569e5ea874852c613ed060d8e232109 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.0.7 &lt;span class="p">|&lt;/span> schacon@gmail.com &lt;span class="p">|&lt;/span> 1adc5b8136c2cd6c694629947e1dbc49c8bffe6a &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.0 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.1 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.10 &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 6f48447656c68317842aaa39a959dbe69681e38d &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.2 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.3 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.4 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.5 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.6 &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 6db4fdcad851eeaff6382a9eb6748455c3818c3e &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.7 &lt;span class="p">|&lt;/span> roberto.decurnex@avature.net &lt;span class="p">|&lt;/span> 219c729b24b1dc868986f821655912612919ac21 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.8 &lt;span class="p">|&lt;/span> roberto.decurnex@avature.net &lt;span class="p">|&lt;/span> 8425a6b6169eaeda0afe2e16b0e4210ed433caf2 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.9 &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 99b11561a64740285872f4c0a8b72e3e69308ed2 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.9.1 &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> cc6d6efc1b7eaf63609c4c06969b0f839dc80095 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.3.0 &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> a223fcf873bd99658cd1d0bdee1818adc7e3e92c &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.4.0 &lt;span class="p">|&lt;/span> per.lundberg@ecraft.com &lt;span class="p">|&lt;/span> c8d10125d0cf172684e2da776b79edf90baebc52 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.5.0 &lt;span class="p">|&lt;/span> per.lundberg@ecraft.com &lt;span class="p">|&lt;/span> fd2642a626d20594a25010526f10ff99431c2cca &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.6.0 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.6.0.pre1 &lt;span class="p">|&lt;/span> jcouball@yahoo.com &lt;span class="p">|&lt;/span> b9c7c5c51f935e547ab15a134e66c65ea0d9ab76 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.7.0 &lt;span class="p">|&lt;/span> couballj@verizonmedia.com &lt;span class="p">|&lt;/span> 4bef5abbba073c77b4d0ccc1ffcd0ed7d48be5d4 &lt;span class="p">|&lt;/span>
+-----------------------+------------------------------+------------------------------------------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
When &lt;code class="verbatim">target_type&lt;/code> is &lt;code class="verbatim">NULL&lt;/code> it means that it&amp;#39;s a lightweight tag and
doesn&amp;#39;t have a commit associated with it. Most of the time people
will have a commit, and since a commit has a date it makes it easier for
us to associate with.
&lt;/p>
&lt;h3 id="headline-13">
Finding out who did the actual tagging and when
&lt;/h3>
&lt;p>
Here we can find out who did the tagging and what the message was.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">askgit &lt;span class="s2">&amp;#34;select name, commits.id, commits.message, author_name, author_email, author_when from tags, commits where tags.target_type = commits.id order by author_when&amp;#34;&lt;/span>
+--------------------+------------------------------------------+--------------------------------+------------------+------------------------------+---------------------------+
&lt;span class="p">|&lt;/span> NAME &lt;span class="p">|&lt;/span> ID &lt;span class="p">|&lt;/span> MESSAGE &lt;span class="p">|&lt;/span> AUTHOR NAME &lt;span class="p">|&lt;/span> AUTHOR EMAIL &lt;span class="p">|&lt;/span> AUTHOR WHEN &lt;span class="p">|&lt;/span>
+--------------------+------------------------------------------+--------------------------------+------------------+------------------------------+---------------------------+
&lt;span class="p">|&lt;/span> refs/tags/1.0.5.1 &lt;span class="p">|&lt;/span> ae106e2a3569e5ea874852c613ed060d8e232109 &lt;span class="p">|&lt;/span> bug fixes &lt;span class="p">|&lt;/span> Scott Chacon &lt;span class="p">|&lt;/span> schacon@gmail.com &lt;span class="p">|&lt;/span> 2008-03-23T13:32:52-07:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.0.7 &lt;span class="p">|&lt;/span> 1adc5b8136c2cd6c694629947e1dbc49c8bffe6a &lt;span class="p">|&lt;/span> updated README with new &lt;span class="p">|&lt;/span> Scott Chacon &lt;span class="p">|&lt;/span> schacon@gmail.com &lt;span class="p">|&lt;/span> 2008-05-27T12:59:54-07:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> install instructions &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.6 &lt;span class="p">|&lt;/span> 6db4fdcad851eeaff6382a9eb6748455c3818c3e &lt;span class="p">|&lt;/span> Version 1.2.6 changelog &lt;span class="p">|&lt;/span> robertodecurnex &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 2013-08-17T04:23:53-03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.7 &lt;span class="p">|&lt;/span> 219c729b24b1dc868986f821655912612919ac21 &lt;span class="p">|&lt;/span> Moving version to 1.2.7 &lt;span class="p">|&lt;/span> robertodecurnex &lt;span class="p">|&lt;/span> roberto.decurnex@avature.net &lt;span class="p">|&lt;/span> 2014-06-09T17:06:42-03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.8 &lt;span class="p">|&lt;/span> 8425a6b6169eaeda0afe2e16b0e4210ed433caf2 &lt;span class="p">|&lt;/span> Removing jruby-head from &lt;span class="p">|&lt;/span> Roberto Decurnex &lt;span class="p">|&lt;/span> roberto.decurnex@avature.net &lt;span class="p">|&lt;/span> 2014-07-31T16:57:57-03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> .travis.yml &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.9 &lt;span class="p">|&lt;/span> 99b11561a64740285872f4c0a8b72e3e69308ed2 &lt;span class="p">|&lt;/span> Updating CHANGELOG &lt;span class="p">|&lt;/span> Roberto Decurnex &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 2015-01-12T16:51:41-03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.9.1 &lt;span class="p">|&lt;/span> cc6d6efc1b7eaf63609c4c06969b0f839dc80095 &lt;span class="p">|&lt;/span> Updating version &lt;span class="o">(&lt;/span>1.2.9.1&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> Roberto Decurnex &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 2015-01-15T14:15:46-03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.2.10 &lt;span class="p">|&lt;/span> 6f48447656c68317842aaa39a959dbe69681e38d &lt;span class="p">|&lt;/span> Adding before install to &lt;span class="p">|&lt;/span> Roberto Decurnex &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 2016-02-25T16:16:06-03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> travis. &lt;span class="o">(&lt;/span>update bundler&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.3.0 &lt;span class="p">|&lt;/span> a223fcf873bd99658cd1d0bdee1818adc7e3e92c &lt;span class="p">|&lt;/span> Bump version 1.3.0 Dropping &lt;span class="p">|&lt;/span> Roberto Decurnex &lt;span class="p">|&lt;/span> decurnex.roberto@gmail.com &lt;span class="p">|&lt;/span> 2016-02-25T19:22:08-03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> ruby 1.8.x support &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.4.0 &lt;span class="p">|&lt;/span> c8d10125d0cf172684e2da776b79edf90baebc52 &lt;span class="p">|&lt;/span> Release 1.4.0 &lt;span class="p">|&lt;/span> Per Lundberg &lt;span class="p">|&lt;/span> per.lundberg@ecraft.com &lt;span class="p">|&lt;/span> 2018-05-16T09:49:34+03:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.5.0 &lt;span class="p">|&lt;/span> fd2642a626d20594a25010526f10ff99431c2cca &lt;span class="p">|&lt;/span> Release v1.5.0 &lt;span class="p">|&lt;/span> Per Lundberg &lt;span class="p">|&lt;/span> per.lundberg@ecraft.com &lt;span class="p">|&lt;/span> 2018-08-10T09:57:26+02:00 &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> refs/tags/v1.7.0 &lt;span class="p">|&lt;/span> 4bef5abbba073c77b4d0ccc1ffcd0ed7d48be5d4 &lt;span class="p">|&lt;/span> Release v1.7.0 &lt;span class="p">|&lt;/span> James Couball &lt;span class="p">|&lt;/span> couballj@verizonmedia.com &lt;span class="p">|&lt;/span> 2020-04-25T14:40:51-07:00 &lt;span class="p">|&lt;/span>
+--------------------+------------------------------------------+--------------------------------+------------------+------------------------------+---------------------------+&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Looking at the dates of this, we can see that Scott Chacon started the
project in 2008, Roberto Decurnex took over from 2013-2016, Per
Lundberg in 2018, and finally James Couball did a release in 2020.
&lt;/p>
&lt;p>
Looking at the notes it seems like it&amp;#39;s the world around &lt;code class="verbatim">ruby-git&lt;/code>
that is changing (Travis, ruby very support, etc.).
&lt;/p>
&lt;h3 id="headline-14">
Figuring out start and end dates
&lt;/h3>
&lt;p>
We can ask all of the questions above based upon the timestamps of
when a tag was created. This will give us an idea of what&amp;#39;s going on
in the project during that time. Let&amp;#39;s create a simple CSV file that
will make it easier to ask these questions.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp/ruby-git
askgit &lt;span class="s2">&amp;#34;select name, commits.id, author_when from tags, commits where tags.target_type = commits.id order by author_when&amp;#34;&lt;/span> --format csv &amp;gt; tags.csv&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then we can make this a little simpler to loop over, where we have a
start time and end time for each of the tags. We start with the
initial commit as the start time, and then use the previous tag time
going forward.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">PREV_DATE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>askgit &lt;span class="s2">&amp;#34;select min(author_when) as first from commits&amp;#34;&lt;/span> --format csv &lt;span class="p">|&lt;/span>grep -v first&lt;span class="k">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="nv">IFS&lt;/span>&lt;span class="o">=&lt;/span>, &lt;span class="nb">read&lt;/span> -r tag id date&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$tag&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">tag&lt;/span>&lt;span class="si">}&lt;/span>,&lt;span class="si">${&lt;/span>&lt;span class="nv">id&lt;/span>&lt;span class="si">}&lt;/span>,&lt;span class="si">${&lt;/span>&lt;span class="nv">PREV_DATE&lt;/span>&lt;span class="si">}&lt;/span>,&lt;span class="si">${&lt;/span>&lt;span class="nv">date&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">PREV_DATE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">date&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">done&lt;/span> &amp;lt; /tmp/ruby-git/tags.csv &amp;gt; /tmp/ruby-git/start_end.csv&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-15">
Tag stats
&lt;/h3>
&lt;p>
We can loop over this file and pull out some stats for what went into
each tag.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp/ruby-git
&lt;span class="k">while&lt;/span> &lt;span class="nv">IFS&lt;/span>&lt;span class="o">=&lt;/span>, &lt;span class="nb">read&lt;/span> -r tag id start end&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$tag&lt;/span>
askgit &lt;span class="s2">&amp;#34;select count(*) as count from commits where author_when &amp;gt; &amp;#39;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">start&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39; and author_when &amp;lt;= &amp;#39;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">end&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39;&amp;#34;&lt;/span> --format json &lt;span class="p">|&lt;/span> jq .count
askgit &lt;span class="s2">&amp;#34;select count(*) as count, author_name from commits where author_when &amp;gt; &amp;#39;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">start&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39; and author_when &amp;lt;= &amp;#39;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">end&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39; group by author_name order by count desc&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span> &amp;lt; start_end.csv&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example half-height-scroll">refs/tags/1.0.5.1
0
+-------+-------------+
| COUNT | AUTHOR NAME |
+-------+-------------+
+-------+-------------+
refs/tags/v1.0.7
10
+-------+-----------------+
| COUNT | AUTHOR NAME |
+-------+-----------------+
| 6 | Scott Chacon |
| 3 | Jorge Bernal |
| 1 | Michael Siebert |
+-------+-----------------+
refs/tags/v1.2.6
128
+-------+--------------------+
| COUNT | AUTHOR NAME |
+-------+--------------------+
| 54 | robertodecurnex |
| 20 | Joshua Nichols |
| 8 | Daniel Mendler |
| 5 | Scott Chacon |
| 4 | elliottcable |
| 4 | Roberto Decurnex |
| 4 | Josh Nichols |
| 4 | James Rosen |
| 3 | Yuichi Tateno |
| 3 | Michael Mallete |
| 2 | Jonathan Rudenberg |
| 2 | Joe Moore |
| 2 | Gianni Chiappetta |
| 1 | schneems |
| 1 | schacon |
| 1 | devyn |
| 1 | Zachery Hostens |
| 1 | TJ Biddle |
| 1 | TIT |
| 1 | Steve Schwartz |
| 1 | Nathan Fixler |
| 1 | Michael Hale |
| 1 | Ken Pratt |
| 1 | Gabriel Cardoso |
| 1 | Chad Rosen |
| 1 | Bryan Larsen |
+-------+--------------------+
refs/tags/v1.2.7
39
+-------+------------------+
| COUNT | AUTHOR NAME |
+-------+------------------+
| 22 | robertodecurnex |
| 9 | Roberto Decurnex |
| 2 | Cameron Walsh |
| 1 | OHTAKE Tomohiro |
| 1 | Guy Hughes |
| 1 | David Underwood |
| 1 | Ben Sedat |
| 1 | Arnvald |
| 1 | Andy Schrage |
+-------+------------------+
refs/tags/v1.2.8
8
+-------+------------------+
| COUNT | AUTHOR NAME |
+-------+------------------+
| 3 | Roberto Decurnex |
| 2 | robertodecurnex |
| 2 | Yuya.Nishida |
| 1 | Xavier Calland |
+-------+------------------+
refs/tags/v1.2.9
56
+-------+------------------------+
| COUNT | AUTHOR NAME |
+-------+------------------------+
| 46 | Roberto Decurnex |
| 4 | Kelly Stannard |
| 1 | mwrock |
| 1 | Harald Sitter |
| 1 | Francis Luong (Franco) |
| 1 | Dave Lane |
| 1 | Brian Stevens |
| 1 | Adam Hooper |
+-------+------------------------+
refs/tags/v1.2.9.1
4
+-------+------------------+
| COUNT | AUTHOR NAME |
+-------+------------------+
| 3 | Roberto Decurnex |
| 1 | Eric Tsiliacos |
+-------+------------------+
refs/tags/v1.2.10
12
+-------+------------------+
| COUNT | AUTHOR NAME |
+-------+------------------+
| 10 | Roberto Decurnex |
| 1 | David Vartanian |
| 1 | Christian Paling |
+-------+------------------+
refs/tags/v1.3.0
2
+-------+------------------+
| COUNT | AUTHOR NAME |
+-------+------------------+
| 2 | Roberto Decurnex |
+-------+------------------+
refs/tags/v1.4.0
12
+-------+-------------------------+
| COUNT | AUTHOR NAME |
+-------+-------------------------+
| 6 | Per Lundberg |
| 1 | Vern Burton |
| 1 | Tom Potts |
| 1 | Richard Vodden |
| 1 | Rafael Reggiani Manzo |
| 1 | Guilherme Maluf Balzana |
| 1 | Alexander Maslov |
+-------+-------------------------+
refs/tags/v1.5.0
12
+-------+---------------------+
| COUNT | AUTHOR NAME |
+-------+---------------------+
| 3 | Vern Burton |
| 2 | Per Lundberg |
| 2 | Joshua Liebowitz |
| 1 | Taichiro Suzuki |
| 1 | Matias Garcia Isaia |
| 1 | Kody |
| 1 | Kelly Stannard |
| 1 | Denis Defreyne |
+-------+---------------------+
refs/tags/v1.7.0
26
+-------+--------------------+
| COUNT | AUTHOR NAME |
+-------+--------------------+
| 9 | James Couball |
| 2 | Yuta Harima |
| 1 | cyclotron3k |
| 1 | Vern Burton |
| 1 | TIT |
| 1 | Stephen Paul Weber |
| 1 | Salim Afiune |
| 1 | Per Lundberg |
| 1 | Michael Camilleri |
| 1 | Marcel Hoyer |
| 1 | Jonas Müller |
| 1 | James Bunch |
| 1 | Harald |
| 1 | Evgenii Pecherkin |
| 1 | Antonio Terceiro |
| 1 | Alex Mayer |
| 1 | Agora Security |
+-------+--------------------+
&lt;/pre>
&lt;h2 id="headline-16">
Files
&lt;/h2>
&lt;p>
We can also look at the files inside of the commits. &lt;code class="verbatim">askgit&lt;/code> does have
a &lt;code class="verbatim">file&lt;/code> table, but that shows the repository state at as specific
commit, and thus is less useful for actually tracking changes that
happened in a commit, or between commits.
&lt;/p>
&lt;p>
But there&amp;#39;s no reason why we can&amp;#39;t use &lt;code class="verbatim">git diff-tree&lt;/code> to find the
information.
&lt;/p>
&lt;h3 id="headline-17">
Files modified with a specific commit
&lt;/h3>
&lt;p>
We can see which files were changed in the latest commit:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp/ruby-git
git diff-tree --no-commit-id -r --name-only HEAD^1&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
CHANGELOG.md
lib/git/version.rb
&lt;/pre>
&lt;p>
Which, at the time of this writing, is the same as:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp/ruby-git
git diff-tree --no-commit-id -r --name-only 2eb64a4147b75ea8776828f2b8a6b50427dec06c&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
CHANGELOG.md
lib/git/version.rb
&lt;/pre>
&lt;h3 id="headline-18">
Files modified by a tag
&lt;/h3>
&lt;p>
We can use the &lt;code class="verbatim">..&lt;/code> way of specifying commit ranges, so let&amp;#39;s look to
see which files have changed between &lt;code class="verbatim">v1.5.0&lt;/code> and &lt;code class="verbatim">v1.7.0&lt;/code>.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp/ruby-git
git diff-tree --no-commit-id -r --name-only v1.5.0..v1.7.0&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example half-height-scroll">.github/stale.yml
.jrubyrc
.travis.yml
CHANGELOG.md
CONTRIBUTING.md
MAINTAINERS.md
PULL_REQUEST_TEMPLATE.md
README.md
RELEASING.md
git.gemspec
lib/git.rb
lib/git/base/factory.rb
lib/git/branch.rb
lib/git/config.rb
lib/git/diff.rb
lib/git/lib.rb
lib/git/version.rb
tests/files/encoding/dot_git/COMMIT_EDITMSG
tests/files/encoding/dot_git/HEAD
tests/files/encoding/dot_git/config
tests/files/encoding/dot_git/description
tests/files/encoding/dot_git/hooks/applypatch-msg.sample
tests/files/encoding/dot_git/hooks/commit-msg.sample
tests/files/encoding/dot_git/hooks/fsmonitor-watchman.sample
tests/files/encoding/dot_git/hooks/post-update.sample
tests/files/encoding/dot_git/hooks/pre-applypatch.sample
tests/files/encoding/dot_git/hooks/pre-commit.sample
tests/files/encoding/dot_git/hooks/pre-push.sample
tests/files/encoding/dot_git/hooks/pre-rebase.sample
tests/files/encoding/dot_git/hooks/pre-receive.sample
tests/files/encoding/dot_git/hooks/prepare-commit-msg.sample
tests/files/encoding/dot_git/hooks/update.sample
tests/files/encoding/dot_git/index
tests/files/encoding/dot_git/info/exclude
tests/files/encoding/dot_git/logs/HEAD
tests/files/encoding/dot_git/logs/refs/heads/master
tests/files/encoding/dot_git/objects/20/aefc8947d5bf08710afabe7712a1d6040ed5bd
tests/files/encoding/dot_git/objects/54/82c9609dd461acafcc859279490acfdea01f00
tests/files/encoding/dot_git/objects/87/d9aa884f84c67ac2185530f0b84d5eebda3eca
tests/files/encoding/dot_git/objects/91/59312af5dd77ca1fac174a3b965a806451b5c6
tests/files/encoding/dot_git/objects/cf/921422e5382afe0c90a772a2cb37867839ae64
tests/files/encoding/dot_git/objects/d4/fc598fff13f7bd681ceb38afafcae631ab3e50
tests/files/encoding/dot_git/refs/heads/master
tests/files/encoding/test1.txt
tests/files/encoding/test2.txt
tests/files/working/dot_git/config
tests/test_helper.rb
tests/units/test_config.rb
tests/units/test_diff_non_default_encoding.rb
tests/units/test_lib.rb
tests/units/test_logger.rb
tests/units/test_merge_base.rb
tests/units/test_thread_safety.rb
tests/units/test_thread_safty.rb
&lt;/pre>
&lt;h3 id="headline-19">
File history
&lt;/h3>
&lt;p>
It can be useful to see when a file was added. In this case again,
&lt;code class="verbatim">askgit&lt;/code> isn&amp;#39;t necessarily the right way to go about it, since &lt;code class="verbatim">git log&lt;/code>
is much faster.
&lt;/p>
&lt;p>
Here we can show the history of a specific file,
&lt;code class="verbatim">PULL_REQUEST_TEMPLATE.md&lt;/code>. We&amp;#39;ll pass in some formatting options so
that we could parse this later, and the &lt;code class="verbatim">--reverse&lt;/code> field so that it&amp;#39;s
in chronological order. The &lt;a href="https://git-scm.com/docs/git-log#_pretty_formats">pretty format&lt;/a> that we are using is:
&lt;/p>
&lt;table class="table table-bordered">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">%aI&lt;/code>&lt;/td>
&lt;td>Author date in iso8601&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%an&lt;/code>&lt;/td>
&lt;td>Author Name&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%h&lt;/code>&lt;/td>
&lt;td>Short commit id&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">%s&lt;/code>&lt;/td>
&lt;td>Summary string&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp/ruby-git
git log --reverse --pretty&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;format:%aI %h %an %s&amp;#39;&lt;/span> PULL_REQUEST_TEMPLATE.md&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
2018-06-20T06:58:17-05:00 4aa6d1f Vern Burton Creates CONTRIBUTOR and MAINTAINERS files (#353)
2020-02-04T03:31:12+09:00 e0a385f Yuta Harima Fix broken link in a PR template (#444)
2020-02-05T00:20:01+09:00 5c89ef6 Yuta Harima fix broken link in a PR template again (#446)
&lt;/pre>
&lt;p>
So we can see that &lt;code class="verbatim">Vern Burton&lt;/code> did some GitHub related things in mid
2018, and &lt;code class="verbatim">Yuta Harima&lt;/code> did some maintenance on it in Feb of 2020.
&lt;/p>
&lt;h2 id="headline-20">
Thoughts
&lt;/h2>
&lt;p>
Static analysis of code repositories can add some interesting insights
into how a project is maintained, in terms of who is working on it,
and whether the original maintainers left or moved on to other things.
&lt;/p>
&lt;p>
For example, we could look at who has been making changes to part of a
system and, based upon who has been commiting changes to those files
and how recently they&amp;#39;ve contributed to the project, understand if the
&lt;em>knowledge of how it works&lt;/em> is still with the project, or if the
knowledge has decayed. &lt;code class="verbatim">git blame&lt;/code> – terribly named, btw, I think it
should be more like &lt;code class="verbatim">git gratitude&lt;/code> – shows who last touched a specific
line of code, but they may have moved on to other things. But if
people have touched the surrounding lines or even the file itself, you
can believe that the knowledge has been refreshed within the project
as a whole.
&lt;/p>
&lt;p>
Another thing that would be interesting to look at is churn on files,
and churn on sets of files – which files have been changing, and
which files change together. When commits change lots of things
together, does this tell us something about the complexity of the
project? Are we more likely to find bugs in &amp;#34;big&amp;#34; commits? Are files
that have been unchanged in a long time more polished and complete,
but ones that are frequently changing immature and need to be more
tested?
&lt;/p>
&lt;h2 id="headline-21">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://askgit.com/">https://askgit.com/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/augmentable-dev/askgit">https://github.com/augmentable-dev/askgit&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://git-scm.com/docs/git-log#_pretty_formats">https://git-scm.com/docs/git-log#_pretty_formats&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Getting Websters</title><link>https://willschenk.com/articles/2020/getting_websters/</link><pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/getting_websters/</guid><description>
&lt;p>
A few years ago I read a &lt;a href="http://jsomers.net/blog/dictionary">great post about the value of a good
dictionary&lt;/a>, which I installed on my laptop and then promptly forgot
about. The post is very moving, and I recommend checking it out.
&lt;/p>
&lt;p>
It was &lt;a href="https://irreal.org/blog/?p=9035">recently mentioned&lt;/a> on the planet emacs blog circuit and so I
thought I&amp;#39;d document how to get it up and running on my laptop.
&lt;/p>
&lt;p>
Also I don&amp;#39;t understand what the appeal of John McPhee&amp;#39;s writing, I&amp;#39;ve
tried a few of his books but found them all so plodding. Perhaps it&amp;#39;s
because I&amp;#39;m not savoring the sentences enough…
&lt;/p>
&lt;h2 id="headline-1">
Get the dictionary
&lt;/h2>
&lt;p>
We are going to download the dictionary from &lt;a href="http://jsomers.net/blog/dictionary">J Somer&amp;#39;s S3 bucket&lt;/a>.
Uncompress this thing (which looks like an MacOS Application) then
uncompress the dictionary inside, and move it to a newly created
&lt;code class="verbatim">~/.stardict/dic&lt;/code> directory.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p ~/.stardict/dic
&lt;span class="nb">cd&lt;/span> /tmp
wget https://s3.amazonaws.com/jsomers/dictionary.zip
unzip dictionary.zip
tar -xjf dictionary/stardict-dictd-web1913-2.4.2.tar.bz2
mv stardict-dictd-web1913-2.4.2 ~/.stardict/dic/&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Install stardict
&lt;/h2>
&lt;p>
Using debian, you need to install the &lt;code class="verbatim">sdcv&lt;/code> command package. Emacs
will talk to this once we are all up and running.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt install sdcv -y&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Test this with &lt;code class="verbatim">sdcv billow&lt;/code> or whatever word you fancy.
&lt;/p>
&lt;h2 id="headline-3">
Install &lt;code class="verbatim">sdvc-mode&lt;/code>
&lt;/h2>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> ~/.emacs.d
wget https://raw.githubusercontent.com/gucong/emacs-sdcv/master/sdcv-mode.el&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then in your &lt;code class="verbatim">.emacs&lt;/code> file:
&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="p">(&lt;/span>&lt;span class="nv">load-file&lt;/span> &lt;span class="s">&amp;#34;~/.emacs.d/sdcv-mode.el&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">global-set-key&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;C-c s&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;sdcv-search&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This binds &lt;code class="verbatim">C-c s&lt;/code> to search, or you can use &lt;code class="verbatim">M-x sdcv-search&lt;/code> to look up
the word you want – or a word that you lack the power or knowledge
of.
&lt;/p>
&lt;h2 id="headline-4">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="http://jsomers.net/blog/dictionary">http://jsomers.net/blog/dictionary&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://irreal.org/blog/?p=9035">https://irreal.org/blog/?p=9035&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="http://mbork.pl/2017-01-14_I&amp;#39;m_now_using_the_right_dictionary">http://mbork.pl/2017-01-14_I&amp;#39;m_now_using_the_right_dictionary&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Setting up SSB-Pub Server</title><link>https://willschenk.com/articles/2020/setting_up_ssb_pub_server/</link><pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/setting_up_ssb_pub_server/</guid><description>
&lt;p>
I wanted to move my ssb installation over to a new computer, and the
easiest way was to setup a pub server, invite the old and the new
computer to the pub, and then swap out the keys. Here&amp;#39;s how to do it.
&lt;/p>
&lt;h2 id="headline-1">
Overview
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
Create a server &amp;amp; name
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Install &lt;code class="verbatim">docker&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Create the docker image
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Setup directories, config, and easy shell commands
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Start up a container
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Publish yourself as a &lt;code class="verbatim">pub&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Connect your client
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="headline-2">
Create a server
&lt;/h2>
&lt;p>
I&amp;#39;m using debian 10 on digital ocean, but I&amp;#39;ll let you get the system
on the internet. The only key thing is that it needs to have port
&lt;code class="verbatim">8008&lt;/code> accessible from the outside world.
&lt;/p>
&lt;h2 id="headline-3">
Install &lt;code class="verbatim">docker&lt;/code>
&lt;/h2>
&lt;p>
I prefer to have things contained in a Docker container compared to
polluting my environment. This just keeps things cleaner in the
future so you don&amp;#39;t have node or whatever floating around on your
system. This may be overly complicated if you aren&amp;#39;t already a docker
user, or if you already have node installed on your system.
&lt;/p>
&lt;p>
If you already have node, you can follow &lt;a href="https://handbook.scuttlebutt.nz/guides/pubs/setup-a-pub">the setting up a pub
directions&lt;/a> straight from the mothership.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">apt update
apt-get install -y &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> apt-transport-https &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> ca-certificates &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> curl &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> gnupg2 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg &lt;span class="p">|&lt;/span> apt-key add -
add-apt-repository &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;deb [arch=amd64] https://download.docker.com/linux/debian \
&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="k">$(&lt;/span>lsb_release -cs&lt;span class="k">)&lt;/span>&lt;span class="s2"> \
&lt;/span>&lt;span class="s2"> stable&amp;#34;&lt;/span>
apt-get update
apt-get install -y docker-ce&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-4">
Write your &lt;code class="verbatim">Dockerfile&lt;/code>
&lt;/h2>
&lt;p>
On the server, create a directory to work in, like &lt;code class="verbatim">~/ssb&lt;/code>
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p ~/ssb
&lt;span class="nb">cd&lt;/span> ~/ssb&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then create a Dockerfile:
&lt;/p>
&lt;div class="src src-dockerfile">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:10&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install -g ssb-server&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 8008&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">HEALTHCHECK --interval=30s --timeout=30s &lt;/span>--start-period&lt;span class="o">=&lt;/span>10s --retries&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> CMD ssb-server whoami &lt;span class="o">||&lt;/span> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> HEALING_ACTION RESTART&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;/usr/local/bin/ssb-server&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;start&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then build this with
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker build . -t ssb-server&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
The reason that we are doing this in a seperate directory is to make
sure that we don&amp;#39;t send the whole pub data instance to docker build if
we want to do this in the future.
&lt;/p>
&lt;p>
You could also do this on your local machine and the publish the image
to dockerhub, but this is really just to isolate the npm install not
to make something publically available.
&lt;/p>
&lt;h2 id="headline-5">
Setup directories and config files
&lt;/h2>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir ~/pubdata&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Create basic &lt;code class="verbatim">~/pubdata/config&lt;/code>, make sure to add your DNS name or ip
address in the external field.
&lt;/p>
&lt;div class="src src-json">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;connections&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;incoming&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;net&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="nt">&amp;#34;scope&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;public&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.0.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;external&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Your Host Name or Public IP&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;transform&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;shs&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8008&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;outgoing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;net&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[{&lt;/span> &lt;span class="nt">&amp;#34;transform&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;shs&amp;#34;&lt;/span> &lt;span class="p">}]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And create a &lt;code class="verbatim">~/ssb-server&lt;/code> script that will let you interact with the
&lt;code class="verbatim">container&lt;/code> that we will create in the next section:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;span class="cp">&lt;/span>
docker &lt;span class="nb">exec&lt;/span> -it ssb-server ssb-server &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Also be sure to &lt;code class="verbatim">chmod +x ssb-server&lt;/code> to make it runnable.
&lt;/p>
&lt;h2 id="headline-6">
Create the container
&lt;/h2>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run -d --init --name ssb-server &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -v ~/pubdata/:/root/.ssb/ &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -p 8008:8008 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --restart unless-stopped &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> ssb-server&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>-d&lt;/td>
&lt;td>Detach and run as a daemon&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>–init&lt;/td>
&lt;td>Use &lt;code class="verbatim">tini&lt;/code> to handle signals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>–name&lt;/td>
&lt;td>Name of the container, which is the same as the instance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-v&lt;/td>
&lt;td>Map &lt;code class="verbatim">~/pubdata&lt;/code> to the &lt;code class="verbatim">~/.ssb&lt;/code> dir inside the container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-p&lt;/td>
&lt;td>Expose &lt;code class="verbatim">8008&lt;/code> to the internet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>–restart&lt;/td>
&lt;td>For reboots, etc&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
Now check the logs to make sure that everything started up correctly.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker logs ssb-server&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If that looks good We can now test this by running command
&lt;code class="verbatim">./ssb-server whoami&lt;/code> command to see if it&amp;#39;s responding correctly.
&lt;/p>
&lt;p>
If it&amp;#39;s working, then publish an about entry for your pub. This is
what I did:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./ssb-server publish --type about &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --about &lt;span class="s2">&amp;#34;@stufffromthewhoamicommand&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --name &lt;span class="s2">&amp;#34;pub.willschenk.com&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --description &lt;span class="s2">&amp;#34;Call me&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-7">
Create an invite
&lt;/h2>
&lt;p>
Once this is working, it&amp;#39;s time to create some invites so you can
connect your local instance to this pub.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./ssb-server invite.create &lt;span class="m">3&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
That will spit out an awesome looking string. We&amp;#39;ll use that in our
clients to connect.
&lt;/p>
&lt;h2 id="headline-8">
Migrate your stuff over
&lt;/h2>
&lt;p>
On the new machine &lt;a href="https://ahdinosaur.github.io/patchwork-downloader/">download patchwork&lt;/a> which I found to be more stable
than &lt;a href="https://github.com/ssbc/patchbay/releases">patchbay&lt;/a>. I had better luck building from &lt;code class="verbatim">npm&lt;/code> than using &lt;code class="verbatim">AppImage&lt;/code>, so
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm install --global electron electron-builder node-gyp-build ssb-patchwork&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You could also try oasis, which doesn&amp;#39;t run in electron and so
therefor is better, even if it is a but more minimalist.
&lt;/p>
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">npm -g install fraction/oasis&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Note that while they both share the same &lt;code class="verbatim">.ssb&lt;/code> data folder, if you want
to use both you&amp;#39;ll need to start up patchwork first.
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
On the old machine, invite yourself to the pub.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Sync your stuff to the new pub.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
On the new machine, invite yourself to the pub.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Follow your old user.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Wait for things to sync
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
On the new machine, close everything.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Copy the old &lt;code class="verbatim">.ssb/secret&lt;/code> from the old to the new machine.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
On the new machine, delete everthing in &lt;code class="verbatim">./ssb/flume&lt;/code> &lt;strong>except
&lt;code class="verbatim">.ssb/flume/log.offset&lt;/code>&lt;/strong>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Open up &lt;a href="https://github.com/ssbc/ssb-first-aid-kit">ssb-first-aid-kit&lt;/a> and delete the index
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Restart patchwork and watch that sucker index everything in the
whole world.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
This really started to heat my machine up!
&lt;/p>
&lt;p>
I found that the initial index worked in patchwork, and then it
started pulling in more data and eventually exploded. I was able to
run oasis instead, which seemed to be better at rebuilding the index.
&lt;/p>
&lt;p>
Now I have my old profile on my new machine.
&lt;/p>
&lt;h2 id="headline-9">
References
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://scuttlebutt.nz/get-started/">https://scuttlebutt.nz/get-started/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://handbook.scuttlebutt.nz/guides/pubs/setup-a-pub">https://handbook.scuttlebutt.nz/guides/pubs/setup-a-pub&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/ahdinosaur/ssb-pub/tree/v3">https://github.com/ahdinosaur/ssb-pub/tree/v3&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/ssbc/ssb-first-aid-kit">https://github.com/ssbc/ssb-first-aid-kit&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/ssbc/patchwork/issues/957">https://github.com/ssbc/patchwork/issues/957&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/fraction/oasis">https://github.com/fraction/oasis&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Effigy, a distributed social data layer</title><link>https://willschenk.com/articles/2020/effigy_social_data_layer/</link><pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/effigy_social_data_layer/</guid><description>
&lt;p>
I grew up in the world of BBSes, Usenet, and, to some extent, UUCP before
that. This was fun – a world wide network all built up by volunteers
sharing. Since we are all carrying supercomputers around now with
massive idle storage and bandwidth, let&amp;#39;s think about how we can
recreate some of that fun, independent data sharing with modern web
technologies, specifically Websockets and WebRTC. All you need is
the computer that you already have with you.
&lt;/p>
&lt;h2 id="headline-1">
Abstract
&lt;/h2>
&lt;p>
We&amp;#39;re going to take a lot of concepts from what&amp;#39;s been done before and
remix them all. Here are some of the specific projects and ideas that
I was inspired by – I have no idea which came first in the history of
things, but this reflects my journey.
&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
From &lt;a href="https://en.wikipedia.org/wiki/UUCP">UUCP&lt;/a> we will take the idea that you store data on your
&amp;#34;neighbors&amp;#34;, can request functionality from other connections, and
need no centralizing authority.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://www.youtube.com/watch?v=Ng0NE4lDP2U">Fidonet&lt;/a> we try and vibe off of the energy of &lt;a href="https://en.wikipedia.org/wiki/Tom_Jennings">Tom Jennings&lt;/a>, but
actually keep that anarcist spirit alive by avoiding all centralized
authority.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://scuttlebutt.nz/">Scuttlebutt&lt;/a> we will take identity-centric sharing, that
network block and sharing is reflective of real human networks, feed
posting, group encryption, &amp;#34;every client is a pub&amp;#34;, and its
offline-first ideas.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://en.wikipedia.org/wiki/BitTorrent">BitTorrent&lt;/a> we take the concepts of stateless tracker servers
and in general distributed file-sharing.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://en.wikipedia.org/wiki/Blockchain">Blockchain&lt;/a> we take the idea that the system has rules for
accepting feeds, and that you could memorize your private key
with a word sentence mnenomic.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://ipfs.io/">ipfs&lt;/a> we will take the idea that content is self-signing,
content blobs can be Merkle trees of directories, and that it needs
to run as a Javascript user process in the browser.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://dat.foundation/">dat&lt;/a> we take some of the ideas of being able to update on a key
that is shared around.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://syncthing.net/">syncthing&lt;/a> the idea of mutually signing your devices to setup
file mirroring, also passing keys around with QR scodes.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://docsend.com/view/gu3ywqi">textile threads&lt;/a> we take the ideas of feed-read keys vs content-read keys.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
From &lt;a href="https://web.dev/progressive-web-apps/">Progressive Web Apps&lt;/a> we take the idea that it&amp;#39;s easy to deploy and
install on your device without going through gatekeepers, that we
expect storage to be ephemeral, and multiple devices go to the same
account.
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>
In terms of intellectual heritage this follows primarily from
&lt;a href="https://scuttlebutt.nz/docs/principles/">Scuttlebutt&amp;#39;s principles&lt;/a> and &lt;a href="https://handbook.scuttlebutt.nz/stories/design-challenge-avoid-centralization-and-singletons">Scuttlebutt&amp;#39;s no centralization and no
singletons&lt;/a> – so a huge shoutout to &lt;a href="https://dominictarr.com/">Dominic Tarr&lt;/a> – and then trying to
apply the concepts so that it can work on regular browsers.
&lt;/p>
&lt;p>
Much of the following document will try to work around the strengths
and weaknesses of browsers – specifically that they are the best
application platform since everyone has access to them, that they
don&amp;#39;t accept incoming connections, and that they don&amp;#39;t provide very
good presistent storage guarantees. The ideas of &lt;code class="verbatim">ssb&lt;/code> and &lt;code class="verbatim">dat&lt;/code> are
great, but they don&amp;#39;t work in browsers. No &lt;a href="https://www.electronjs.org/">electron&lt;/a> or JavaScript
unsupported by browsers here.
&lt;/p>
&lt;p>
Also, let&amp;#39;s recognize that all of this doesn&amp;#39;t need to be so
complicated. If we can relax some restrictions, getting things close
is good enough. If you assume that people have multiple devices, they
ensure that their data is both on their phone and their laptop, and
their friend&amp;#39;s phone and friend&amp;#39;s laptop ,and then you don&amp;#39;t need to
go through all of these crazy incentive systems that you get with
Textile or Filecoin. There&amp;#39;s no highlevel incentive for BitTorrent and
that seems to be doing just fine. We are &lt;em>sharing things with friends&lt;/em>
here, that&amp;#39;s the mindset.
&lt;/p>
&lt;p>
In a situation where all your devices explode at the same time you can
just check in with your actual social network to recover from a
disaster, just like real life.
&lt;/p>
&lt;h2 id="headline-2">
Design
&lt;/h2>
&lt;h3 id="headline-3">
Content addressable
&lt;/h3>
&lt;p>
Every bit of content is named by its signature, so therefore the data
doesn&amp;#39;t live anywhere. The private key is the only special
information, and perhaps this could be a mnenomic like &amp;#34;memorize your
bitcoin wallet address with this weird sentence thing.&amp;#34;
&lt;/p>
&lt;p>
Machines connect, cache, and share the data that they have. Like NNTP,
it starts out with a IWANT and IHAVE negotiation to get the heads, and
then pulls stuff down as needed.
&lt;/p>
&lt;p>
Larger blobs are stored the same way, so there&amp;#39;s an underlying object
cloud there. Blob size is shared as part of the protocol, so when
available blobs are announced you know how big it is.
&lt;/p>
&lt;h3 id="headline-4">
Identity
&lt;/h3>
&lt;p>
Identity is the public key, which is generated on startup. There is a
private key that signs every bit of data you put in the system
and you &amp;#34;are&amp;#34; your public key.
&lt;/p>
&lt;p>
When communicating with other devices, you will generally annouce an
&lt;code class="verbatim">[identity,head]&lt;/code> pair. The head is the &amp;#34;latest&amp;#34; entry in a chain based
on its ID. This ID could be the time signature, but since only one
device can create an entry (since entries are signed by the private
key they can&amp;#39;t be forged) there&amp;#39;s no need for synchronization.
&lt;/p>
&lt;h3 id="headline-5">
Entries
&lt;/h3>
&lt;p>
Entries are a JSON string followed by a signature, or they are an
encrypted object.
&lt;/p>
&lt;p>
The payload of an entry is either a JSON string, or an encrytped
string.
&lt;/p>
&lt;p>
The key of the entry is the hash of the full entry, including the
signature.
&lt;/p>
&lt;p>
Each entry JSON object contains:
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>identity&lt;/td>
&lt;td>of the signer of the blob&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parent&lt;/td>
&lt;td>pointer to parent entity&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>comparable&lt;/td>
&lt;td>like an id or timestamp, must be positive integer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>synod&lt;/td>
&lt;td>[identity,head] of synod&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>payload&lt;/td>
&lt;td>see below&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
&lt;em>(Synod &lt;a href="Synods">described below&lt;/a> but in short is the account concept that groups
devices together and lists current signalling servers and dropboxes.)&lt;/em>
&lt;/p>
&lt;p>
When you get an entity, you first figure out if it&amp;#39;s valid – first
by checking to see if the blob hashes to the blob name, and secondarily
to see if the identity is the signer of the message. If an entry is
announced as part of a &lt;code class="verbatim">[identity,head]&lt;/code> pair then the inner and outer
identities are compared to see if they are identical, and the
operation is aborted if not.
&lt;/p>
&lt;p>
Once the entity is valid, it goes on the &lt;em>identity entry&lt;/em> list. This
list is sorted by &lt;code class="verbatim">comparable&lt;/code>, and the highest number is considered to
be this node&amp;#39;s version of &lt;em>head&lt;/em> for that entity. This &lt;code class="verbatim">identity&lt;/code> can
optionally go on the &lt;em>identity watch list&lt;/em> which will be used to follow
information for this identity in the future.
&lt;/p>
&lt;h4 id="headline-6">
Payload Types
&lt;/h4>
&lt;p>
&lt;strong>DRAFT&lt;/strong>
&lt;/p>
&lt;p>
Payloads have different types, and ultimately reference larger
blobs in the network.
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>synod&lt;/td>
&lt;td>synod data object&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>identification&lt;/td>
&lt;td>json with name, about, whatever&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>public_note&lt;/td>
&lt;td>note to the world&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>private_note&lt;/td>
&lt;td>note to people with readkeys&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>image&lt;/td>
&lt;td>pointer to image blob&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>collection&lt;/td>
&lt;td>pointer to archive of blobs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tag&lt;/td>
&lt;td>marking an entry in some way&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>comment&lt;/td>
&lt;td>make a comment to on an entry&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>follow&lt;/td>
&lt;td>you announce that you are following a feed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>block&lt;/td>
&lt;td>you tell the system you no longer are tracking and sharing an identity&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mute&lt;/td>
&lt;td>encrypted block that pretends not to know anything&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="headline-7">
References
&lt;/h4>
&lt;p>
Referencing other entries are to its hash, which contains a pointer to
the identity and the synod. Both the identity and the synod can be
referenced with the blob request mechanism. Once these are loaded,
the system then uses the &lt;code class="verbatim">[identity,head]&lt;/code> from the signalling server or
connected clients to reconstruct the feed, whose entries are validated
using the signatures.
&lt;/p>
&lt;p>
References are not to the feed itself, but to an entry on the feed.
So it&amp;#39;s possible to find references to an entity, locate the last
version of its feed, but not find the original entity on it. This
would be in the scenario where a user deleted an entry for their feed,
and all the subsequent items needed to be rewritten and
republished. This will break references to that &lt;code class="verbatim">entity&lt;/code> and &lt;em>all
following entity&lt;/em> so change the past with care.
&lt;/p>
&lt;h3 id="headline-8">
Synods
&lt;/h3>
&lt;p>
Synods are a special type of &lt;code class="verbatim">identity&lt;/code> that is used to
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
collect identities together
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
publish frequented singalling servers
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
publish dropboxes monitored
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
summarize profile information
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
An &lt;code class="verbatim">identity&lt;/code> is part of a &lt;code class="verbatim">synod&lt;/code>
&lt;/p>
&lt;ul>
&lt;li>
&lt;p>
&lt;code class="verbatim">identity&lt;/code> has signed the &lt;code class="verbatim">synod public key&lt;/code> in an entry signed by the
&lt;code class="verbatim">synod&lt;/code>&amp;#39;s private keys
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
there is not a &lt;em>identity revoked entry&lt;/em> in the &lt;code class="verbatim">synod&lt;/code>&amp;#39;s feed
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>
From a User Interface perspective then a &lt;code class="verbatim">synod&lt;/code> should be considered as
the &lt;em>profile&lt;/em> of the user, and the latest information here should be the
avatar and display name. &lt;code class="verbatim">follow&lt;/code> messages can be posted in device
identity streams or &lt;code class="verbatim">synod&lt;/code> streams which implies that you can choose
what to replicate depending on which device you are using.
&lt;/p>
&lt;p>
All &lt;code class="verbatim">identities&lt;/code> of a &lt;code class="verbatim">synod&lt;/code> are expected to mutually replicate, so in
the case that you do lose your device/key you&amp;#39;ll be able to recover
all of your information.
&lt;/p>
&lt;p>
A group of &lt;em>signalling servers&lt;/em> are published with the &lt;code class="verbatim">synod&lt;/code>, so if you
want to send a message to that user or be able to sync up their latest
&lt;code class="verbatim">head&lt;/code> you have a place to start.
&lt;/p>
&lt;p>
Some &lt;em>signalling servers&lt;/em> can optionally accept incoming drop
messages. This is an &lt;code class="verbatim">[target_identity,identity,entry]&lt;/code> tuple that is
marked as targeting a specific &lt;code class="verbatim">target_dentity&lt;/code> (or &lt;code class="verbatim">synod&lt;/code>) so you can
contact other people on the network if they aren&amp;#39;t already following
you.
&lt;/p>
&lt;p>
The User Interface is expected to highlight incoming messages for
non-followed identites that you can choose to read, acknowledge, reply
or ignore. There is no confirmation mechanism for the sender to know
that the message has been received without user action.
&lt;/p>
&lt;p>
Synods are basically another type of feed that contains pointers to
shared identities, a list of used signal servers, and profile
information. They&amp;#39;re designed to work around &amp;#34;losing your private key is
losing your identity&amp;#34; and it provides a way to publish changes for
super old entiries whose &lt;code class="verbatim">identities&lt;/code> aren&amp;#39;t being shared anymore.
&lt;/p>
&lt;h3 id="headline-9">
Feeds
&lt;/h3>
&lt;p>
Every entry is a json &lt;code class="verbatim">blob&lt;/code> which points to its previous &lt;code class="verbatim">blob&lt;/code>. The key
of the &lt;code class="verbatim">blob&lt;/code> is its hashkey, so that you can ask for a key and verify
that the data is correct. It doesn&amp;#39;t matter who or where you get the
data from.
&lt;/p>
&lt;p>
All entries are signed by the public key of the identity, so you know
that it&amp;#39;s from the same private key.
&lt;/p>
&lt;h4 id="headline-10">
Valid feeds
&lt;/h4>
&lt;p>
Invalid feeds don&amp;#39;t propogate
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Feeds that are too large for the network to propagate. (e.g. you can
post a link to a movie but not the movie itself)
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Feeds that contain invalidly signed entries
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Feeds that contain unencryted images with exif data
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Feeds that have a revoked public key (i.e. last valid id was x
everything after that is wrong)
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="headline-11">
Heads
&lt;/h4>
&lt;p>
Each node keeps track of identities and heads, which is the latest
entry. When a node connects, it announces all of the identities that
are tracked, and what latest head it has. Nodes can then share
and request heads, and if they have the feed read keys they can trace
things backwards to get to the root.
&lt;/p>
&lt;h3 id="headline-12">
Multiencryption
&lt;/h3>
&lt;p>
How does SSB have messages that multiple people can decrypt? &lt;a href="https://ssbc.github.io/scuttlebutt-protocol-guide/#encrypting">It&amp;#39;s
documented here&lt;/a>, but I don&amp;#39;t understand it yet.
&lt;/p>
&lt;h3 id="headline-13">
Feed
&lt;/h3>
&lt;p>
Everyone has a head, which is the latest that the feed has. Each
entry is a type and a pointer to a previous feed.
&lt;/p>
&lt;p>
Deletion is done with rebasing, which means that you are able to
rewrite your feed. So content that you address for commenting or
whatever needs to be separate from the feed itself, and in theory you
could comment upon a feed entry that is missing from the head. These
orphaned contents will always point to an identity, and the datablobs
are the same, but may not be discoverable.
&lt;/p>
&lt;h3 id="headline-14">
Drop Box
&lt;/h3>
&lt;p>
Some singalling servers provide a &lt;em>dropbox&lt;/em> service, which allows blobs
to be stored and shared on a server for a finite period of time and
offered up to every client that connects to the server. These are
expected to be multiencrypted with the &lt;code class="verbatim">synod&lt;/code>&amp;#39;s public key and perhaps
with the sub-&lt;code class="verbatim">identities&lt;/code> key so the recipient is obscured.
&lt;/p>
&lt;p>
The &lt;code class="verbatim">synod&lt;/code> should announce endpoints that it uses for signalling and
where it potentially receives messages.
&lt;/p>
&lt;p>
The system should pull down messages from the inboxes – which
can be public places that automatically delete everything after 14
days or whenever – and then you can choose to pull something down or
not. Entries are meant to be small but can point to larger blobs.
&lt;/p>
&lt;h2 id="headline-15">
Protocol
&lt;/h2>
&lt;p>
The protocol exchanges JSON messages over a reliable transport that
delivers complete, discrete messages. Initial implementation targets
websockets and WebRTC data transport.
&lt;/p>
&lt;p>
When a node to node connection is established – using WebSockets to a
well known address for example – a session is created between the two
nodes. This is done by &lt;em>node a&lt;/em> generating a random string and &lt;em>node b&lt;/em>
signing it, and &lt;em>node b&lt;/em> generating a random string and &lt;em>node a&lt;/em> signing
it. Once done, both nodes know that the other is in possession of the
private key that matches their public key.
&lt;/p>
&lt;p>
Nodes then announce which services they are willing to provide to each
other, which could be a subset of the full set of services
provided for trusted &lt;code class="verbatim">identities&lt;/code>.
&lt;/p>
&lt;h3 id="headline-16">
Services
&lt;/h3>
&lt;p>
Each client is able to provide services for other ones outside of blob
propogation, which all clients are required to provide, though they
have no requirement for any data persistency. (In other words, you need
to be able to serve up at least blob referencing your identity and
things you choose, but don&amp;#39;t need to serve anything you don&amp;#39;t have or
want to share.)
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>Service&lt;/td>
&lt;td>Description&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>blobs&lt;/td>
&lt;td>Blob sharing&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>headtracking&lt;/td>
&lt;td>remembers the latest head for identities&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>signalling&lt;/td>
&lt;td>Network presence&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>relaying&lt;/td>
&lt;td>passing data to a mutually connection not directly&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dropbox&lt;/td>
&lt;td>Receives and forwards requests from unknown identities&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>data lease&lt;/td>
&lt;td>Storing of blobs with some guarentees&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>voice&lt;/td>
&lt;td>Voice calling&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>video&lt;/td>
&lt;td>Video calling&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="headline-17">
Blob sharing
&lt;/h4>
&lt;p>
Every bit of data in the system is stored as a key pair, with the key
being the cryptographic hash of the data. This blob could be an
&lt;code class="verbatim">entities&lt;/code> which contains metadata to describe itself; a signature and a
link to a blob containing the public key signing it, and a link to a
&lt;code class="verbatim">synod&lt;/code> which is the account that is associated with the &lt;code class="verbatim">identity&lt;/code>.
&lt;/p>
&lt;p>
When a client connects, it notifies the other side which blobs it&amp;#39;s
interested in, and other other side says which blobs it has.
&lt;/p>
&lt;h4 id="headline-18">
Signalling
&lt;/h4>
&lt;p>
Signalling is a way to broadcast to other nodes the your latest
&lt;code class="verbatim">[identity,head]&lt;/code> pair and as a way to coordinate &lt;code class="verbatim">WebRTC&lt;/code> connections.
If two clients are connected over &lt;code class="verbatim">Websockets&lt;/code> to the same singalling
server they can exchange messages directly, which allows for &lt;code class="verbatim">offer&lt;/code> and
&lt;code class="verbatim">answer&lt;/code> &lt;code class="verbatim">SDP&lt;/code> messages to make initial contact with a node that doesn&amp;#39;t
allow incoming connections (i.e. web browsers) and then will be able
to coordinate the connection through a &lt;code class="verbatim">STUN&lt;/code> server.
&lt;/p>
&lt;p>
Providing this service requires a DNS name and an externally
accessible IP address, though probably not a huge amount of data
(unless it&amp;#39;s also caching and storing a lot of blobs). Additional
directory and other services could be worth paying for.
&lt;/p>
&lt;h4 id="headline-19">
Relaying
&lt;/h4>
&lt;p>
Relaying moving data through this system if the two nodes can&amp;#39;t
connect directly. I&amp;#39;m envisioning having a &lt;code class="verbatim">coturn&lt;/code> instance acting as a
&lt;code class="verbatim">TURN&lt;/code> server that understands the &lt;code class="verbatim">identity&lt;/code> as authentication.
&lt;/p>
&lt;p>
Providing this service requires bandwidth and an externally accessible
IP, so it&amp;#39;s logical to charge money for this.
&lt;/p>
&lt;h4 id="headline-20">
Dropbox
&lt;/h4>
&lt;p>
This node receives messages for another user for situations where the
recipient has no knowledge of the sender and therefore no reason to be
tracking their identity. The next time the recipient connects to this
signalling server, it will see the message.
&lt;/p>
&lt;p>
Signalling services that the recipient has requested as a dropbox are
published as part of their synod, so you&amp;#39;ll need that in order to
direct a message to them.
&lt;/p>
&lt;h4 id="headline-21">
Data Leasing
&lt;/h4>
&lt;p>
Data leasing is a quest for the node to store an identities data for
at least a certain period of time, to make it accessible to the
network when the original device is offline. This is similar to a pinning
service in &lt;a href="IPFS">IPFS&lt;/a>.
&lt;/p>
&lt;p>
One scenario is that all of the &lt;code class="verbatim">identities&lt;/code> in a &lt;code class="verbatim">synod&lt;/code> provide mutual
data leasing, which means that your data is backed up on all of your
devices. You could lose everything less 1 and still be able to
recreate the graph.
&lt;/p>
&lt;p>
Another scenario is that you provide leasing to trusted friends, the
sort of people you give spare house keys to, so that if either of you
have a catastrophic failure you can reconstruct everything. (Some
provision for recovering lost &lt;code class="verbatim">synod&lt;/code> private keys would need to be
thought out.)
&lt;/p>
&lt;p>
A third example is providing data leasing as a service, which would be
something that you could charge for.
&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
clienta-&amp;gt;clientb: wantservice(sessiontoken)
clientb-&amp;gt;clienta: providesservice(sessiontoken)
clienta-&amp;gt;clientb: call(service,datalease,head)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="services.png" alt="services.png" title="services.png" />
&lt;/p>
&lt;h4 id="headline-22">
Voice and Video
&lt;/h4>
&lt;p>
If both &lt;code class="verbatim">identities&lt;/code> are mutually trusted and on a &lt;em>permitted contact
list&lt;/em> then they can use the WebRTC mechanisms to have real time
communication. I&amp;#39;m not sure how well push notifications really work
over progressive web apps, but seems worth exploring since we already
are connecting over WebRTC.
&lt;/p>
&lt;h3 id="headline-23">
Request Sequences
&lt;/h3>
&lt;h4 id="headline-24">
Startup
&lt;/h4>
&lt;p>
When a client starts up, it connects to the clients it knows about and
is able to reach. It first announces the service that it provides to
the network, in the case it has a list of identity heads and can store
blobs.
&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
client1 -&amp;gt; client2 : sessionrequest[identity1,head1,challenge1]
client2 -&amp;gt; client1 : sessionrequest[identity2,head2,challenge2]
client1 -&amp;gt; client2 : sessionauth[signed(identity1,challenge2)]
client2 -&amp;gt; client1 : sessionauth[signed(identity2,challenge1)]&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="startup.png" alt="startup.png" title="startup.png" />
&lt;/p>
&lt;p>
If either of the signatures don&amp;#39;t match, then the session is considered
unauthenticated.
&lt;/p>
&lt;p>
If the signature matches, then the head announced is considered to be
the head of the respective identity. &lt;em>Note that it not a requirement
that a head tracking service downloads and verifies the head&lt;/em>
&lt;/p>
&lt;h4 id="headline-25">
Service Discovery
&lt;/h4>
&lt;p>
After authentication the clients exchange the list of services they
are willing to provide to the other.
&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
client1 -&amp;gt; client2 : provides[service_list]
client2 -&amp;gt; client1 : provides[service_list]&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="service.png" alt="service.png" title="service.png" />
&lt;/p>
&lt;p>
&lt;strong>TODO&lt;/strong> There needs to be a way for the client to request access to an
additional service.
&lt;/p>
&lt;h4 id="headline-26">
Head Tracking
&lt;/h4>
&lt;p>
Here one side sends a &lt;code class="verbatim">get_heads&lt;/code> request for its &lt;em>identity watch list&lt;/em>.
The other returns with a list of &lt;code class="verbatim">[identity,head]&lt;/code> pairs for &lt;code class="verbatim">identities&lt;/code>
that it knows about.
&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
client1 -&amp;gt; client2 : getHeads([identities])
client2 -&amp;gt; client1 : lastKnownHeads([identities,heads])&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="head_tracking.png" alt="head_tracking.png" title="head_tracking.png" />
&lt;/p>
&lt;h4 id="headline-27">
Signalling
&lt;/h4>
&lt;p>
Signalling is tracking presence and helping to coordinate connections
between devices (i.e. start of the WebRTC handshake).
&lt;/p>
&lt;h5 id="headline-28">
Presence
&lt;/h5>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
client -&amp;gt; signalserver : online
signalserver -&amp;gt; otherclients : online(identity,head)
signalserver -&amp;gt; client : presence_list(identities)
client -&amp;gt; signalserver : &amp;lt;disconnect&amp;gt;
signalserver -&amp;gt; otherclients : offline(identity)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="signalling.png" alt="signalling.png" title="signalling.png" />
&lt;/p>
&lt;h5 id="headline-29">
Messaging
&lt;/h5>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
client1 -&amp;gt; signalserver : message_to(identity2,payload)
signalserver -&amp;gt; client2 : message_from(identity1,payload)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="messaging.png" alt="messaging.png" title="messaging.png" />
&lt;/p>
&lt;p>
The signal server returns that it tracks presence, can forward
messages between clients, and also tracks identity heads. It is not
required to store blobs.
&lt;/p>
&lt;p>
The client requests a list of heads for things on the &lt;em>identity watch
list&lt;/em>, and the signalling server returns the union of what it knows
about and what the client is tracking.
&lt;/p>
&lt;p>
The client then requests the presence list of clients connected to the
signalling server, and the signalling server returns a list of connected
clients with their heads. The server also announces to everyone else
that the client is connected.
&lt;/p>
&lt;p>
At this point the client is ready to start connecting to other clients
through the signalling server.
&lt;/p>
&lt;h4 id="headline-30">
Blobs
&lt;/h4>
&lt;p>
Clients periodically send &lt;em>iwant lists&lt;/em> to each other, returning the
blobs that it has or is willing to share (based on perhaps bandwidth,
if the client is operating on a battery, or over a metered celluar
connection).
&lt;/p>
&lt;p>
&lt;strong>TODO&lt;/strong> Clients should track incoming blob requests and outgoing blog
bandwidth to create a leech ratio that takes into account sharing
reciprocity. Credit is created by sharing more or perhaps by
purchasing bandwidth from the remote server. The request is signed by
the identity so the clients can tell who is asking for what.
&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
clienta-&amp;gt;clientb: iwant(blobs)
clientb-&amp;gt;clienta: ihave(blobs)
clienta-&amp;gt;clientb: getblob(blob,maxsize)
clientb-&amp;gt;clienta: blob&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="blobpropgation.png" alt="blobpropgation.png" title="blobpropgation.png" />
&lt;/p>
&lt;p>
Once the client is connected to a system, signal or client, it sends a
list of the blobs that it wants. Since these are content addressable
and signed by the identity, it doesn&amp;#39;t matter where they come from.
&lt;/p>
&lt;p>
A signal server may or may not have blobs – it&amp;#39;s a regular client that
presumably is free of firewall and NAT messiness, and had the
additional feature of being able to relay requests.
&lt;/p>
&lt;h4 id="headline-31">
Identity tracking
&lt;/h4>
&lt;p>
The client looks through its list of identities, and all of the head
announcements that it&amp;#39;s received. For each of these it tries to get
the blob associated with the head. Note that &lt;code class="verbatim">synod&lt;/code> are also identities
so fall into this logic as well.
&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre>&lt;code class="language-plantuml" data-lang="plantuml">scale 800 width
(*) --&amp;gt; &amp;#34;Receive identity,head message&amp;#34;
If &amp;#34;tracking identity&amp;#34; then
--&amp;gt;[Yes] &amp;#34;get blob&amp;#34;
else
--&amp;gt;[No] &amp;#34;ignore&amp;#34;
Endif
&amp;#34;get blob&amp;#34; If &amp;#34;has blob&amp;#34; then
--&amp;gt;[Yes] If &amp;#34;decrypt blob&amp;#34; then
--&amp;gt;[get parent] &amp;#34;get blob&amp;#34;
else
--&amp;gt;[No] &amp;#34;ignore&amp;#34;
Endif
else
-&amp;gt;[No] &amp;#34;add to iwantlist&amp;#34;
Endif
--&amp;gt; (*)&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&lt;img src="flowchart.png" alt="flowchart.png" title="flowchart.png" />
&lt;/p>
&lt;h3 id="headline-32">
Chain validity
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>
All entries need to be less than 15K. TODO
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
All unencrypted entries to photos must not have location data.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
All head requests with an synod identity with a final head must be
marked invalid.
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="headline-33">
State
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
First pass at technical design - Done
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Prototyping started - 2020-07-03
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="headline-34">
Comments
&lt;/h2>
&lt;p>
I can be reached at &lt;a href="https://twitter.com/wschenk">@wschenk&lt;/a>, @wschenk@floss.social, and wschenk@gmail.com
&lt;/p></description></item><item><title>Upgrading emacs on debian</title><link>https://willschenk.com/articles/2020/upgrading_emacs_on_debian/</link><pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/upgrading_emacs_on_debian/</guid><description>
&lt;p>
Been playing with &lt;a href="https://github.com/skeeto/elfeed">elfeed&lt;/a> on Emacs 26.1 on &lt;code class="verbatim">buster&lt;/code> and it keeps crashing. I think for &lt;a href="https://www.reddit.com/r/emacs/comments/elswgh/emacs_crashes_when_running_mu4e/">font related reasons&lt;/a>. So lets follow the &lt;a href="https://www.emacswiki.org/emacs/EmacsSnapshotAndDebian">Emacs Wiki Instructions&lt;/a> to upgrade to &lt;code class="verbatim">emacs-snapshots&lt;/code> and see if that helps.
&lt;/p>
&lt;h2 id="headline-1">
Add the snap shot repository.
&lt;/h2>
&lt;p>
Make sure you have the tools installed so that apt can do it&amp;#39;s
internet thing.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install software-properties-common
sudo apt-get update&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Add the signing key:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">wget -q http://emacs.ganneff.de/apt.key -O- &lt;span class="p">|&lt;/span> sudo apt-key add&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And add the packages to your local index. Note that I&amp;#39;m specifically
using &lt;code class="verbatim">buster&lt;/code> here so update that if you need do.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo add-apt-repository &lt;span class="s2">&amp;#34;deb http://emacs.ganneff.de/ buster main&amp;#34;&lt;/span>
sudo apt-get update&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Remove the old emacs
&lt;/h2>
&lt;p>
I ran into a bunch of problems with the old emacs being installed at
the same time, and it borked &lt;code class="verbatim">dpkg&lt;/code> for a bit. So first lets remove
everything:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt remove emacs-bin-common emacs-gtk&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-3">
Add the new one
&lt;/h2>
&lt;p>
Pretty straightforward here.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install emacs-snapshot
sudo update-alternatives --config emacsclient&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-4">
Fix that icon
&lt;/h2>
&lt;p>
The snapshot build has a svg icon, which the Chromebook doesn&amp;#39;t seem
to like. So lets fix that up.
&lt;/p>
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">mkdir -p ~/.local/share/applications/
cp /usr/share/application/emacs-snapshot.desktop ~/.local/share/applications&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then edit &lt;code class="verbatim">~/.local/share/applications/emacs-snapshot.desktop&lt;/code> to
put the Icon to the final image place, in my case
&lt;/p>
&lt;p>
&lt;code class="verbatim">Icon=emacs&lt;/code>
&lt;/p>
&lt;p>
It took a while for the changes to take but after a reboot it works
great.
&lt;/p>
&lt;h2 id="headline-5">
Start it up
&lt;/h2>
&lt;p>
&lt;a href="https://www.reddit.com/r/Crostini/comments/bw7b99/how_does_crostini_adding_icons_to_the_shelf/">Crositini will eventually update the shelf&lt;/a> but it will take a little
time.
&lt;/p>
&lt;p>
So far, no issues and no crashes!
&lt;/p></description></item><item><title>Checking health of RSS feeds</title><link>https://willschenk.com/articles/2020/checking_rss_health/</link><pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/checking_rss_health/</guid><description>
&lt;p>
I still use RSS feeds as my main way of consuming stuff on the
internet. Old school. I was looking at the list of things that I&amp;#39;ve
subscribed to which has been imported back from the Google Reader
days, and figured I&amp;#39;d do some exploration of ye old OPML file.
&lt;/p>
&lt;h2 id="headline-1">
Setup the &lt;code class="verbatim">Gemfile&lt;/code>
&lt;/h2>
&lt;p>
We&amp;#39;ll need to pull in a few gems here:
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">source&lt;/span> &lt;span class="s1">&amp;#39;https://rubygems.org&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;httparty&amp;#39;&lt;/span> &lt;span class="c1"># To pull stuff from the network&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;feedjira&amp;#39;&lt;/span> &lt;span class="c1"># To parse RSS feeds&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;nokogiri&amp;#39;&lt;/span> &lt;span class="c1"># To parse XML&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;domainator&amp;#39;&lt;/span> &lt;span class="c1"># To figured out the domain from the hostname&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;whois&amp;#39;&lt;/span> &lt;span class="c1"># To see how old the domain is&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;whois-parser&amp;#39;&lt;/span> &lt;span class="c1"># To actually make sense of the result&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And install everything
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">bundle&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Look at domains
&lt;/h2>
&lt;p>
First, lets see what we can find out about the machine that hosts the
feed. First we see if the hostname resolves, then we pull out the
domain from the hostname to see when it was registered.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;resolv&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;domainator&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;whois&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;whois-parser&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">load_dns&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="n">info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:hostname&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hostname&lt;/span>
&lt;span class="c1"># See if the name is still on the internet&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:resolved&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Resolv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getaddress&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hostname&lt;/span>
&lt;span class="c1"># Find the domain from the url&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:domain&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Domainator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># Lookup whois to see how old it is&lt;/span>
&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Whois&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="n">record&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lookup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:domain&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">record&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parser&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:registered&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">registered?&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:created_on&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">created_on&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:updated_on&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">updated_on&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:expires_on&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expires_on&lt;/span>
&lt;span class="n">info&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vg">$PROGRAM_NAME&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">__FILE__&lt;/span>
&lt;span class="n">pp&lt;/span> &lt;span class="n">load_dns&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;https://codex.happyfuncorp.com/feed&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">pp&lt;/span> &lt;span class="n">load_dns&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;https://aestheticsofjoy.com/feed&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;pre class="example">
{:hostname=>"codex.happyfuncorp.com",
:resolved=>"52.6.3.192",
:domain=>"happyfuncorp.com",
:registered=>true,
:created_on=>2010-10-27 19:39:32 UTC,
:updated_on=>2019-10-12 12:39:11 UTC,
:expires_on=>2020-10-27 19:39:32 UTC}
{:hostname=>"aestheticsofjoy.com",
:resolved=>"104.31.75.74",
:domain=>"aestheticsofjoy.com",
:registered=>true,
:created_on=>2009-05-14 04:36:37 UTC,
:updated_on=>nil,
:expires_on=>2021-05-14 04:36:37 UTC}
&lt;/pre>
&lt;p>
So this domain has been around for a few years! There&amp;#39;s also
&lt;code class="verbatim">.contacts&lt;/code> that we in theory could use, but poking around it seems like
things are wrapped up in privacy proxies for the most part.
&lt;/p>
&lt;h2 id="headline-3">
Reading the OPLM
&lt;/h2>
&lt;p>
Lets say that you have a OPML file called &lt;code class="verbatim">feeds.opml&lt;/code>. We&amp;#39;ll parse the
XML to pull out the awesome that we need.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;nokogiri&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">load_opml&lt;/span> &lt;span class="n">feed_file&lt;/span>
&lt;span class="n">doc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Nokogiri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">XML&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">feed_file&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">doc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xpath&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;//body//outline&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;xmlUrl&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="ss">title&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;title&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">feed_url&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;xmlUrl&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">site_url&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;htmlUrl&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vg">$PROGRAM_NAME&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">__FILE__&lt;/span>
&lt;span class="n">load_opml&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;feeds.opml&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%35s %s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:title&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_url&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:site_url&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_url&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which prints out all those old RSS feeds, in all their 375 lines of
glory in my case.
&lt;/p>
&lt;h2 id="headline-4">
Testing loading a Feed
&lt;/h2>
&lt;p>
Loading the feed and parsing it is fairly simple using feedjira. We
pull in the feed with HTTParty, and just pass the body right into
feedjira. One statistic that&amp;#39;s interesting is the generator, which is
the blogging platform that the person is using. It&amp;#39;ll be interesting
to see what the world is using.
&lt;/p>
&lt;p>
We also need to deal with the fun world of redirect, so lets put in a
bit of logic for that.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;feedjira&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;httparty&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">load_feed&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="n">resp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">HTTParty&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">200&lt;/span>
&lt;span class="no">Feedjira&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_common_feed_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;generator&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">feed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Feedjira&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ss">title&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">feed&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">feed_url&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">link&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">description&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">description&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">generator&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generator&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">entries&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:last_published&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">published&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:earliest_post&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">published&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">info&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Response status &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">code&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="p">{}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Test harness&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vg">$PROGRAM_NAME&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">__FILE__&lt;/span>
&lt;span class="n">feed_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_feed&lt;/span> &lt;span class="s2">&amp;#34;https://willschenk.com/feed.xml&amp;#34;&lt;/span>
&lt;span class="n">feed_info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-5">
Looking for renamed feeds
&lt;/h2>
&lt;p>
It&amp;#39;s possible that the feed has simply moved and never gotten update.
Perhaps the site is still there serving HTML, but they switch
platforms years ago and the feed url never got updated. So lets go
through all of the output and see for the domains that still resolve
if the root has a &lt;code class="verbatim">link alternative&lt;/code> defined inside of the &lt;code class="verbatim">head&lt;/code> block
and then try and get that new feed. Who knows what we might discover!
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;nokogiri&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;httparty&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">find_feed_from_url&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Looking at &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">resp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">HTTParty&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">feed_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">timeout&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">200&lt;/span>
&lt;span class="n">page&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Nokogiri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span> &lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>
&lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;head link[rel=&amp;#34;alternate&amp;#34;]&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;href&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">feed_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;href&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Unable to load &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">code&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Test harness&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vg">$PROGRAM_NAME&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">__FILE__&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">find_feed_from_url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;http://willschenk.com&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">find_feed_from_url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;http://tomcritchlow.com/&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Note that in the first case we pass in a &lt;code class="verbatim">http&lt;/code> link which gets updated
to a &lt;code class="verbatim">https&lt;/code> served feed, and in the second case it&amp;#39;s a relative link
that gets the correct final link.
&lt;/p>
&lt;p>
Looking at &lt;a href="http://willschenk.com">http://willschenk.com&lt;/a>
&lt;a href="https://willschenk.com/feed.xml">https://willschenk.com/feed.xml&lt;/a>
Looking at &lt;a href="http://tomcritchlow.com/">http://tomcritchlow.com/&lt;/a>
&lt;a href="http://tomcritchlow.com/feed.xml">http://tomcritchlow.com/feed.xml&lt;/a>
&lt;/p>
&lt;p>
:END:
&lt;/p>
&lt;h2 id="headline-6">
Combining everything
&lt;/h2>
&lt;p>
The idea here is that we will go through all the feeds and look to see
if their domain is still active. If it is, we attempt to pull in the
feed to fill in the rest of the information. And from there we can
decide what it is that we want to do.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;./load_dns&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;./load_feed&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;./load_opml&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;./load_alt_link&amp;#39;&lt;/span>
&lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="ss">:site_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:feed_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:old_feed_url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:resolved&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:registered&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:created_on&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:updated_on&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:link&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:description&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:generator&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:entries&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:earliest_post&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:last_published&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span> &lt;span class="s2">&amp;#34;feed_info.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">csv&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">csv&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">headers&lt;/span>
&lt;span class="n">feeds&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_opml&lt;/span> &lt;span class="s2">&amp;#34;feeds.opml&amp;#34;&lt;/span>
&lt;span class="n">feeds&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">feed&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">whois&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">feed_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">site_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:site_url&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">feed_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_url&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">feed&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:old_feed_url&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">site_url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">site_url&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1"># Look for updated feed&lt;/span>
&lt;span class="k">begin&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Check to see if &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> has an update&amp;#34;&lt;/span>
&lt;span class="n">new_feed_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">find_feed_from_url&lt;/span> &lt;span class="n">site_url&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">new_feed_url&lt;/span>
&lt;span class="n">feed_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new_feed_url&lt;/span>
&lt;span class="n">feed_info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_url&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">rescue&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Error looking up &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">site_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">begin&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Getting whois for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">whois&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_dns&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">whois&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:resolved&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Loading &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">feed_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_feed&lt;/span> &lt;span class="n">feed_url&lt;/span>
&lt;span class="n">pp&lt;/span> &lt;span class="n">feed_info&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> doesn&amp;#39;t resolve&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">rescue&lt;/span> &lt;span class="no">Resolv&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">ResolvError&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;No host&amp;#34;&lt;/span>
&lt;span class="k">rescue&lt;/span> &lt;span class="no">Exception&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">e&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Error with &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">feed_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">e&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;************&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">csv&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">whois&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">feed_info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This goes through all of the feeds, so it will take a while to run.
&lt;/p>
&lt;h2 id="headline-7">
Looking at some stats
&lt;/h2>
&lt;p>
Lets look at what the state of my RSS feeds are looking like, here in
June of 2020.
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="n">stats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">total&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">resolved&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">last_month&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">last_year&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">has_entries&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">total_entries&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">generator&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="ss">updated_year&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span> &lt;span class="ss">feed_active&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;feed_info.csv&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:total&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;resolved&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:resolved&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">entries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;entries&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:has_entries&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:total_entries&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">entries&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">updated_on&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;last_published&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">updated_on&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">updated_on&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">updated_on&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">updated_on&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">days_old&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_date&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">updated_on&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">days_old&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">30&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:last_month&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">days_old&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">365&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:last_year&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;generator&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="c1"># Collapse some where the username is in the generator field&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;LiveJournal&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">g&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/LiveJournal/&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Tumblr&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">g&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/Tumblr/&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:generator&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:generator&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">year&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">updated_on&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">year&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1900&lt;/span> &lt;span class="c1"># Validation&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:updated_year&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:updated_year&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">earliest_post&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;earliest_post&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">earliest_post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">earliest_post&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">earliest_post&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">earliest_post&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">earliest_post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">year&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1900&lt;/span> &lt;span class="c1"># Validation&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="n">earliest_post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="n">updated_on&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_active&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_active&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Overall&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| Total | &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:total&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> |&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| Resolved | &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:resolved&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> |&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| Active with 30 days | &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:last_month&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> |&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| Active within a year | &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:last_year&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> |&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| Feeds with entries | &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:has_entries&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> |&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| Total posts | &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:total_entries&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> |&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Last year updated&amp;#34;&lt;/span>
&lt;span class="n">years&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:updated_year&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:updated_year&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Active per year&amp;#34;&lt;/span>
&lt;span class="n">years&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_active&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:feed_active&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">|&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Generators&amp;#34;&lt;/span>
&lt;span class="n">g&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stats&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:generator&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">g&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">g&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">&amp;lt;=&amp;gt;&lt;/span> &lt;span class="n">g&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">generator&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;| &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">generator&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> | &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">generator&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> |&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">g&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">generator&lt;/span>&lt;span class="o">]&amp;gt;&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h4 id="headline-8">
Summary
&lt;/h4>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>Total&lt;/td>
&lt;td class="align-right">358&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resolved&lt;/td>
&lt;td class="align-right">322&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Active with 30 days&lt;/td>
&lt;td class="align-right">75&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Active within a year&lt;/td>
&lt;td class="align-right">111&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Feeds with entries&lt;/td>
&lt;td class="align-right">222&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Total posts&lt;/td>
&lt;td class="align-right">5708&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
So of the &lt;code class="verbatim">358&lt;/code> feeds in the file, a whopping &lt;code class="verbatim">75&lt;/code> are still being updated
and &lt;code class="verbatim">222&lt;/code> are still on the internet! &lt;code class="verbatim">111&lt;/code> posting within the last year.
&lt;/p>
&lt;p>
It would be interesting to see when those &lt;code class="verbatim">75&lt;/code> were first created and
how many posts they have to get a sense of who really is still
publishing with &lt;code class="verbatim">RSS&lt;/code>.
&lt;/p>
&lt;h4 id="headline-9">
Active each year
&lt;/h4>
&lt;p>
Are there more blogs out there in 2016? Did I start reading more
then? Interesting that it crept up at this point. But it&amp;#39;s also
possible that the older subscriptions are part of the internet that
disappeared.
&lt;/p>
&lt;p>
&lt;img class='img-fluid' style='' src='./articles/2020/checking_rss_health/active_year.png'>
&lt;/p>
&lt;h4 id="headline-11">
How Old
&lt;/h4>
&lt;p>
Looks like a pretty regular number of feeds stop updating every year,
though it&amp;#39;s been creeping up slowly since 2014.
&lt;/p>
&lt;p>
&lt;img class='img-fluid' style='' src='./articles/2020/checking_rss_health/last_post_year.png'>
&lt;/p>
&lt;h4 id="headline-13">
Generator
&lt;/h4>
&lt;p>
As for what people are using (I&amp;#39;m only showing the generators with 2
or more entries), here&amp;#39;s a list of the generators for the blogs still
actively updating.
&lt;/p>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>unset&lt;/td>
&lt;td class="align-right">36&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://wordpress.org/?v=5.4.2">https://wordpress.org/?v=5.4.2&lt;/a>&lt;/td>
&lt;td class="align-right">16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hugo – gohugo.io&lt;/td>
&lt;td class="align-right">7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tumblr&lt;/td>
&lt;td class="align-right">6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://wordpress.org/?v=5.3.4">https://wordpress.org/?v=5.3.4&lt;/a>&lt;/td>
&lt;td class="align-right">5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Medium&lt;/td>
&lt;td class="align-right">5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blogger&lt;/td>
&lt;td class="align-right">5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://wordpress.com/">http://wordpress.com/&lt;/a>&lt;/td>
&lt;td class="align-right">4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jekyll&lt;/td>
&lt;td class="align-right">3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LiveJournal&lt;/td>
&lt;td class="align-right">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://wordpress.org/?v=5.2.7">https://wordpress.org/?v=5.2.7&lt;/a>&lt;/td>
&lt;td class="align-right">2&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
What&amp;#39;s interesting to me here is:
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
Not everyone seems to set a generator, in fact most don&amp;#39;t.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Most are running the latest version of WordPress, but why would it
advertise the version number externally? Seems like that might not
be the smartest thing since its such a broad attack target.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Hugo has a much stronger showing than GatbsyJS, but I perceive
Gatsby to be more popular in overall front end development. Maybe
people just don&amp;#39;t make blogs out of it.
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
People still use tumblr!
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="headline-14">
Extracting Active Feeds
&lt;/h2>
&lt;p>
My whole goal here was to look for active feeds that I subscribe to
rather than just dumping everything into my &lt;code class="verbatim">elfeed.org&lt;/code> file. Lets
write that now (finally!).
&lt;/p>
&lt;div class="src src-ruby">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;feed_info.csv&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">updated_on&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;last_published&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">updated_on&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">updated_on&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">updated_on&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">updated_on&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">days_old&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_date&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">updated_on&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">days_old&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">365&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;** [[&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;feed_url&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">]] - [[&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;site_url&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">]]&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-15">
Running this yourself
&lt;/h2>
&lt;p>
The code for this page is all available in &lt;a href="https://github.com/wschenk/willschenk.com/tree/master/content/articles/2020/checking_rss_health">the site&amp;#39;s repository&lt;/a>. Or
just copy any paste from this page. You&amp;#39;ll need an export of your
&lt;code class="verbatim">OPML&lt;/code> file, name it &lt;code class="verbatim">feeds.opml&lt;/code>, then run &lt;code class="verbatim">ruby feed_checker.rb&lt;/code> to scan
through the internet, and &lt;code class="verbatim">ruby stats.rb&lt;/code> to summarize the resulting
&lt;code class="verbatim">feed_info.csv&lt;/code> file. I like &lt;code class="verbatim">csv&lt;/code> for this since you could also easily
import it into Google Sheets and figure out whatever else you want
from it.
&lt;/p></description></item><item><title>Using Syncthing</title><link>https://willschenk.com/articles/2020/using_syncthing/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/using_syncthing/</guid><description>
&lt;p>
Syncthing is a way to keep things up-to-date across machines without going through any 3rd party servers. You get both backup and file synchronization without pesky servers just using the computer capacity you probably already have laying around. Lets give it a spin.
&lt;/p>
&lt;h2 id="headline-1">
Installation on Debian
&lt;/h2>
&lt;p>
On the &lt;a href="https://docs.syncthing.net/intro/getting-started.html">Getting Started&lt;/a> page of syncthing they recommend using a GUI package, but we&amp;#39;re going to install on debian on the command line.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># Add the release PGP keys:&lt;/span>
curl -s https://syncthing.net/release-key.txt &lt;span class="p">|&lt;/span> sudo apt-key add -
&lt;span class="c1"># Add the &amp;#34;stable&amp;#34; channel to your APT sources:&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;deb https://apt.syncthing.net/ syncthing stable&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee /etc/apt/sources.list.d/syncthing.list
&lt;span class="c1"># Update and install syncthing:&lt;/span>
sudo apt-get update
sudo apt-get install syncthing&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This installs both the syncthing binary as well as the systemd configuration file.
&lt;/p>
&lt;h2 id="headline-2">
Initial Setup
&lt;/h2>
&lt;p>
Now we can start it up pretty easily.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">systemctl &lt;span class="nb">enable&lt;/span> syncthing@&lt;span class="si">${&lt;/span>&lt;span class="nv">USER&lt;/span>&lt;span class="si">}&lt;/span>.service
systemctl start syncthing@&lt;span class="si">${&lt;/span>&lt;span class="nv">USER&lt;/span>&lt;span class="si">}&lt;/span>.service&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Since I&amp;#39;m running in a container, I needed to change the GUI listen address. Edit &lt;code class="verbatim">~/.config/syncthing/config.xml&lt;/code> and change the &lt;code class="verbatim">&amp;lt;gui&amp;gt;&amp;lt;address&amp;gt;&lt;/code> entry to be 0.0.0.0:8384 instead of 127.0.0.1, and then restart.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">systemctl restart syncthing@&lt;span class="si">${&lt;/span>&lt;span class="nv">USER&lt;/span>&lt;span class="si">}&lt;/span>.service&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Now go to &lt;a href="http://localhost:8384/">locahost:8384&lt;/a> and you should be see the WebUI. It should also give you a warning and opportunity to set a username and password, so go ahead and set one up. Also might as well use HTTPS because why not.
&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/using_syncthing/username.png'>
&lt;/p>
&lt;p>
This technique would also work if you installed it remotely.
&lt;/p>
&lt;h2 id="headline-3">
Adding your phone
&lt;/h2>
&lt;p>
If you are using Android, lets install the &lt;a href="https://play.google.com/store/apps/details?id=com.nutomic.syncthingandroid&amp;amp;hl=en_US">Syncthing Android App from the Play Store&lt;/a>. I&amp;#39;m not sure if there&amp;#39;s an iOS build, but I doubt it would be super useful anyway since Apple locks things down into their own ecosystem that&amp;#39;s doesn&amp;#39;t play very nicely with others. You might be able to use it for storage though.
&lt;/p>
&lt;p>
Once installed it will prompt you for permissions. Grant it
&lt;/p>
&lt;p>
&lt;img class='' style='max-width:100%' src='./articles/2020/using_syncthing/permission_hu586a1942deab2c748d2db87007bdaa40_125743_500x500_fit_box_2.png'>
&lt;/p>
&lt;p>
Now lets add the two machines together. On your computer, go to &amp;#34;Actions -&amp;gt; Show Device ID&amp;#34;
&lt;/p>
&lt;p>
On the phone, go to the devices tab, and then press the + on the top right, and scan in the QR code from the computer. Give it a name, and also turn on &amp;#34;Introducer&amp;#34; which will make it easier to further add nodes into your network.
&lt;/p>
&lt;p>
Give the system a few minutes to talk with each other, and eventually you&amp;#39;ll see a window that will ask if you want to pair.
&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/using_syncthing/pair.png'>
&lt;/p>
&lt;p>
Note that these Device IDs are OK to share since you need you need to setup a two way connection between the devices to actually do anything. Discovery and relay servers for example know about device IDs, so they aren&amp;#39;t the private ones that you really need to keep secure. I&amp;#39;m not an expert on this but this is what I understand.
&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/using_syncthing/adddevice.png'>
&lt;/p>
&lt;h2 id="headline-4">
Syncing downloads
&lt;/h2>
&lt;p>
One handy use case is to sync all mobile downloads to your laptop. If you&amp;#39;ve ever clicked on a PDF and tried to read it on the phone and gone through that pain, it&amp;#39;s nice to be able to have that stuff on your laptop with a bigger monitor. This makes it easy to clean out the downloads on your phone if you end up with too much junk there – simply move it out of the folder on you laptop and syncthing will remove it from the phone. Lets add that now.
&lt;/p>
&lt;p>
Go the &lt;code class="verbatim">Folders&lt;/code> tab and press the + button on the top right. Name it something like &amp;#34;Mobile Downloads&amp;#34;, and then select the Downloads folder. It will prompt for permission like so:
&lt;/p>
&lt;p>
&lt;img class='' style='max-width:100%' src='./articles/2020/using_syncthing/grantpermission_hu435537700adb1953a693a9c9a0f06386_216219_500x500_fit_box_2.png'>
&lt;/p>
&lt;p>
And you&amp;#39;ll end up with something like
&lt;/p>
&lt;p>
&lt;img class='' style='max-width:100%' src='./articles/2020/using_syncthing/sharefolder_hub90f36bc94fffe399165141c8ce1a52d_206148_500x500_fit_box_2.png'>
&lt;/p>
&lt;p>
Once you press the check, it will start syncing to your laptop. If you&amp;#39;ve selected AutoAccept it will immediately start syncing, otherwise you will get a prompt on the web interface to see if that&amp;#39;s really what you want to do.
&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/using_syncthing/acceptprompt.png'>
&lt;/p>
&lt;p>
It&amp;#39;s useful to accept manually rather than automatically since that will give you an opportunity to decide where you want the directory named. If you choose automate it will be the cloud name not human readable, and I&amp;#39;m not sure how to change it after.
&lt;/p>
&lt;h2 id="headline-5">
Ignore patterns
&lt;/h2>
&lt;p>
I&amp;#39;m an &lt;a href="https://orgmode.org/">org-mode&lt;/a> convert and I wanted a way to sync up my &lt;code class="verbatim">~/org&lt;/code> directory to the phone. Lets do that.
&lt;/p>
&lt;p>
On the computer, go to the WebUI and select Add Folder. On first screen give it a name, and the right path. Select the phone device that you want to use and go to the &lt;code class="verbatim">Ignore Patterns&lt;/code> pane. Since this is emacs, we don&amp;#39;t need to sync any of the temporary files over.
&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/using_syncthing/ignorepattern.png'>
&lt;/p>
&lt;p>
Now that we&amp;#39;ve added it, we need to go to the phone an accept. Go back to the syncthings app on the phone, and in the hamburger menu select &amp;#34;Show WebUI&amp;#34;. You&amp;#39;ll get this dialog:
&lt;/p>
&lt;p>
&lt;img class='' style='max-width:100%' src='./articles/2020/using_syncthing/appaccept_hud6262d63e019071ade5df591a70740d7_196580_500x500_fit_box_2.png'>
&lt;/p>
&lt;p>
Add and there you go.
&lt;/p>
&lt;h2 id="headline-6">
Ignore permissions
&lt;/h2>
&lt;p>
I also sync my &lt;code class="verbatim">.emacs.d&lt;/code> folder to the phone, mainly for backup purposes. One thing is to be aware of is that you don&amp;#39;t want to sync permissions, since Android loses those and the reverse sync will potentially reset what you have.
&lt;/p>
&lt;h2 id="headline-7">
Using &lt;a href="http://www.orgzly.com/">Orgzly&lt;/a>
&lt;/h2>
&lt;p>
&lt;a href="http://www.orgzly.com/">Orgzly&lt;/a> is an Android app that knows about .org files. Now that we&amp;#39;ve set the sync of our &lt;code class="verbatim">org&lt;/code> directory on the mobile phone&amp;#39;s local directory, setting a local sync in a breeze to pull in whatever files you need to see. I mean, not much to say here really you&amp;#39;ve already got the folder.
&lt;/p>
&lt;h2 id="headline-8">
Final setup
&lt;/h2>
&lt;p>
&lt;code class="verbatim">.emacs.d&lt;/code> folder synced from my laptop. Since this is a Chromebook, I don&amp;#39;t like to have anything &amp;#34;permanent&amp;#34; on it, and this is a nice way to get everything back when I wipe it compared to checking things into github. This goes to the phone purely for backup.
&lt;/p>
&lt;p>
&lt;code class="verbatim">Downloads&lt;/code> synced from the phone, which is mostly downloading PDFs and occasionally programming books. Everything gets pushed to the laptop, which I then move out of that folder into an archive.
&lt;/p>
&lt;p>
&lt;code class="verbatim">reading&lt;/code> which is that archive, where I have long form books and other paper and articles in there. I use &lt;code class="verbatim">pdf-tools&lt;/code> in emacs to read and make annotations directly in the books, which is handy.
&lt;/p>
&lt;p>
&lt;code class="verbatim">willschenk.com&lt;/code> which is managed by &lt;code class="verbatim">git&lt;/code> and stored in github, and published on github pages. Here, having commits and discrete chunks of changes makes sense. Since I only work on this on one computer at a time, it&amp;#39;s not as important to keep it published, but if I go back to having a work computer I think adding this into syncthing makes sense.
&lt;/p>
&lt;p>
So far I&amp;#39;m very impressed with the level of polish that syncthing has. It&amp;#39;s a little cumbersome to figure out how to set it up, but once set up it just seems to work. I have more confidence now that if my laptop blew up I&amp;#39;d be able to get everything cleaned up faster. I still have a bunch of legacy archival stuff on my personal Dropbox that would be too much to store on the phone without putting in a SD card – which might make sense to do. With that my personal storage cloud would have most of what I&amp;#39;d need.
&lt;/p>
&lt;h2 id="headline-9">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://docs.syncthing.net/users/autostart.html">https://docs.syncthing.net/users/autostart.html&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://docs.syncthing.net/users/faq.html">https://docs.syncthing.net/users/faq.html&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://docs.syncthing.net/dev/device-ids.html#device-ids">https://docs.syncthing.net/dev/device-ids.html#device-ids&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://wiki.archlinux.org/index.php/Systemd/User#Automatic_start-up_of_systemd_user_instances">https://wiki.archlinux.org/index.php/Systemd/User#Automatic_start-up_of_systemd_user_instances&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://medium.com/@JosephKiran/replacing-cloud-based-to-do-apps-with-orgzly-and-syncthing-6a065419d61">https://medium.com/@JosephKiran/replacing-cloud-based-to-do-apps-with-orgzly-and-syncthing-6a065419d61&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Developing React Inside Docker</title><link>https://willschenk.com/articles/2020/developing_react_inside_docker/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/developing_react_inside_docker/</guid><description>&lt;p>Can we build a node application without installing node locally? We sure can! Lets walk through the process.&lt;/p>
&lt;p>First make sure that docker is installed. This is handy if you are working on a remote server for example.&lt;/p>
&lt;h2 id="bootstrap">Bootstrap&lt;/h2>
&lt;p>Then lets start building out the &lt;code>Dockerfile&lt;/code> that we will use.&lt;/p>
&lt;ol>
&lt;li>&lt;code>mkdir testapp&lt;/code>&lt;/li>
&lt;li>&lt;code>cd testapp&lt;/code>&lt;/li>
&lt;li>Create a &lt;code>Dockerfile.initial&lt;/code> that has &lt;code>node:14&lt;/code> in it.&lt;/li>
&lt;li>Start up the container with&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="Dockerfile.initial%60">&lt;code>Dockerfile.initial&lt;/code>&lt;/a>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:14&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> bash&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>This is going to download the &lt;code>node:14&lt;/code> docker image, and start a shell.&lt;/p>
&lt;p>Lets build and start it a temporary container that has our new directory mounted in there and run the &lt;code>npx create-react-app .&lt;/code> command, which will generate the new app.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker build . -f Dockerfile.initial -t testapp
docker run -it --rm -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>/testapp:/app testapp npx create-react-app .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once this is done, you should see a basic &lt;code>create-react-app&lt;/code> generated folder in your local &lt;code>testapp&lt;/code> directory. We need to adjust some permissions here since it&amp;rsquo;s probably owned by root.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo chown -R &lt;span class="si">${&lt;/span>&lt;span class="nv">USER&lt;/span>&lt;span class="si">}&lt;/span> testapp
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Revel in our generated node_modules!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ls -l testapp/
total &lt;span class="m">472&lt;/span>
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk root &lt;span class="m">25562&lt;/span> Jun &lt;span class="m">16&lt;/span> 06:08 node_modules
-rw-r--r-- &lt;span class="m">1&lt;/span> wschenk root &lt;span class="m">739&lt;/span> Jun &lt;span class="m">16&lt;/span> 06:08 package.json
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk root &lt;span class="m">132&lt;/span> Jun &lt;span class="m">16&lt;/span> 06:07 public
-rw-r--r-- &lt;span class="m">1&lt;/span> wschenk root &lt;span class="m">2884&lt;/span> Jun &lt;span class="m">16&lt;/span> 06:07 README.md
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk root &lt;span class="m">156&lt;/span> Jun &lt;span class="m">16&lt;/span> 06:07 src
-rw-r--r-- &lt;span class="m">1&lt;/span> wschenk root &lt;span class="m">471966&lt;/span> Jun &lt;span class="m">16&lt;/span> 06:08 yarn.lock
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I hate &lt;code>node_modules&lt;/code> so lets delete it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rm -rf node_modules
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setting-up-for-development">Setting up for development&lt;/h2>
&lt;p>If you keep the &lt;code>node_modules&lt;/code> directory around you may have some cross platform issues. &lt;code>node_modules&lt;/code> directory may contain native code, which would be built against the libraries inside of the docker container. If you are running the same OS as what&amp;rsquo;s inside of the container &amp;ndash; Linux &amp;ndash; then you can have these co-mingle, but if you are on OSX this is potentially a pain.&lt;/p>
&lt;p>What we are going to do is use a docker volume to hide all of this away so we never need to see it and worry about it poluting our machine. Make sure you&amp;rsquo;ve deleted that terrible folder!&lt;/p>
&lt;p>Lets create a &lt;code>testapp/Dockerfile&lt;/code> to run the app itself out of the local directory:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:14&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> package.json yarn.lock /app/&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> yarn install&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 3000&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> bash&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>First we copy over package.json and yarn.lock into /app. If these files ever change, we will rerun all of the following steps when building the container.&lt;/li>
&lt;li>Run &lt;code>yarn install&lt;/code> to install the local &lt;code>node_modules&lt;/code>&lt;/li>
&lt;li>Expose port &lt;code>3000&lt;/code> which is the development server port.&lt;/li>
&lt;li>We&amp;rsquo;ll create a docker volume to hide the mess away.&lt;/li>
&lt;/ol>
&lt;p>And create a script that will build and start up the container easily, called &lt;code>start.sh&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
docker build . -f Dockerfile -t testapp &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>docker run -it --rm -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>:/app -v testapp_nodemodules:/app/node_modules --network host testapp &lt;span class="nv">$@&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets fire up a development server using&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bash start.sh yarn start
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And edit &lt;code>testapp/src/App.js&lt;/code>, make a change, and revel in the automatic reloading!&lt;/p>
&lt;h2 id="adding-a-library">Adding a library&lt;/h2>
&lt;p>Kill the server with &lt;code>C-c&lt;/code>. Lets go through the process of adding a library.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bash start.sh yarn add react-globe.gl
$ bash start.sh yarn start
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the first step, you see things get downloaded from the internet. If you look at your &lt;code>package.json&lt;/code> file after it will be updated with the dependancy. The second time we run the &lt;code>start.sh&lt;/code> script it will notice that &lt;code>package.json&lt;/code> changed and rerun &lt;code>yarn install&lt;/code>, but since we have mounted &lt;code>node_modules&lt;/code> in a volume it doesn&amp;rsquo;t need to pull anything more from the internet.&lt;/p>
&lt;p>Lets edit our &lt;code>App.js&lt;/code> file to use the new component to make sure that it works.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Globe&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-globe.gl&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;./App.css&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Gen random data
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">N&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">gData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[...&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">()].&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">lat&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">180&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">lng&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">360&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;red&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;white&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;blue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;green&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;span class="p">}));&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Globe&lt;/span>
&lt;span class="na">globeImageUrl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;//unpkg.com/three-globe/example/img/earth-night.jpg&amp;#34;&lt;/span>
&lt;span class="na">pointsData&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">gData&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">pointAltitude&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;size&amp;#34;&lt;/span>
&lt;span class="na">pointColor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;color&amp;#34;&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After a few seconds you should see the basic globe demo appear in your browser. Love that globe.&lt;/p>
&lt;h2 id="building">Building&lt;/h2>
&lt;p>This is done simply by&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">bash start.sh yarn build
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cleanup">Cleanup&lt;/h2>
&lt;p>The container that we use is temporary, and gets cleaned up after you exit out. But we still have the docker image and docker volume floating around &amp;ndash; &lt;code>node_modules&lt;/code> is always out to get you! &amp;ndash; so we&amp;rsquo;ll need to clean that up after. You can delete this with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker image rm testapp
docker volume rm testapp_nodemodules
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The next time you run &lt;code>start.sh&lt;/code> this will all get recreated.&lt;/p></description></item><item><title>Simple CORS workaround for local development</title><link>https://willschenk.com/articles/2020/simple_cors_workaround_for_local_development/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/simple_cors_workaround_for_local_development/</guid><description>&lt;p>
I&amp;#39;ve been doing a lot of web development old school, just editing HTML and JavaScript by hand without a build environment. Running &lt;code class="verbatim">npx live-server&lt;/code> is an easy one liner to spin up a server, that opens a browser for you and also updates changes on safe.
&lt;/p>
&lt;p>
Sometimes that&amp;#39;s not enough. Often you want to pull in data from an API, and that requires HTTPS, and also you need to work around CORS limitations. Here&amp;#39;s a simple way to do that.
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
First create a local certificate in &lt;code class="verbatim">/tmp&lt;/code> if it&amp;#39;s not there
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Run &lt;code class="verbatim">http-server&lt;/code>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;table class="table table-striped">
&lt;thead>
&lt;tr>
&lt;th>Option&lt;/th>
&lt;th>Reason&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">--cors&lt;/code>&lt;/td>
&lt;td>Enable CORS via the Access-Control-Allow-Origin header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">-S&lt;/code>&lt;/td>
&lt;td>Enable https&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">-P&lt;/code>&lt;/td>
&lt;td>Proxy unhandled requests to &lt;code class="verbatim">https://tezlabapp.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">-c-1&lt;/code>&lt;/td>
&lt;td>Turn off caching&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">-C /tmp/cert.pem&lt;/code>&lt;/td>
&lt;td>Certificate file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">-K /tmp/key.pem&lt;/code>&lt;/td>
&lt;td>Key file&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
Here&amp;#39;s something you can stick in your path to run it.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f /tmp/key.pem &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> Creating key
openssl req -newkey rsa:2048 -new -nodes -x509 -days &lt;span class="m">3650&lt;/span> -keyout /tmp/key.pem -out /tmp/cert.pem -batch
&lt;span class="k">fi&lt;/span>
npx http-server --cors -S -P https://tezlabapp.com -c-1 -C /tmp/cert.pem -K /tmp/key.pem&lt;/code>&lt;/pre>&lt;/div>
&lt;/div></description></item><item><title>Beginning Emacs</title><link>https://willschenk.com/articles/2020/beginning_emacs/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/beginning_emacs/</guid><description>
&lt;h2 id="headline-1">
Intro
&lt;/h2>
&lt;p>
I&amp;#39;ve been dipping back ito the world of free software, and have been having a huge amount of fun getting back into emacs. I&amp;#39;m using it more of an operating system than I ever did before, as a way to navigate the world using a text interface. I&amp;#39;d never thought I&amp;#39;d be done with the terminal, but this is the first time that I&amp;#39;ve got something better and more powerful.
&lt;/p>
&lt;p>
Since I do a lot of server wrangling and web development, lets look at how to setup emacs to do JavaScript development. My setup is a Pixelbook, and I run three virtual desktops. The first is a full screen Chrome window with multiple tabs, and the second and third are emacs frames. I flip back and forth between them as needed.
&lt;/p>
&lt;p>
First install emacs. You need emacs &amp;gt; 25 to use magit, so its probable that you&amp;#39;ll need to upgrade the emacs in your system. If you are using linux I&amp;#39;ll let you sort that out directly, but below are the instructions for OSX.
&lt;/p>
&lt;h2 id="headline-2">
Installing on debian
&lt;/h2>
&lt;p>
The latest emacs (26 at the time of this writing) is on buster, so upgrade to that.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install emacs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Documentation is not available in the &lt;code class="verbatim">free&lt;/code> part of debian. Don&amp;#39;t ask me, something complicated. In order to get the info pages, you need to install the package &lt;code class="verbatim">emacs-common-non-dfsg&lt;/code> which is in the &lt;code class="verbatim">non-free&lt;/code> part.
&lt;/p>
&lt;p>
Start up emacs and then you can do &lt;code class="verbatim">C-x C-f /sudo::/etc/apt/sources.list&lt;/code> to open up the sources file as &lt;code class="verbatim">root&lt;/code>! That&amp;#39;s pretty neat, part of the &lt;code class="verbatim">Tramp&lt;/code> system which lets you use local buffers to edit things that are &amp;#34;remote&amp;#34;, in this case as another user but also on different hosts.
&lt;/p>
&lt;p>
Add &lt;code class="verbatim">non-free&lt;/code> to the end of first line to have access to the other set of packages. Then do &lt;code class="verbatim">M-x shell&lt;/code> to startup a bash shell, and you can install the rest of it from there:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install emacs-common-non-dfsg install-info&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You may need to run &lt;code class="verbatim">install-info&lt;/code> to get emacs to recognize other stuff in the &lt;code class="verbatim">/usr/share/info&lt;/code> directory.
&lt;/p>
&lt;h2 id="headline-3">
Using homebrew to install emacs on OSX
&lt;/h2>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">brew cask install emacs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If you are on OSX you&amp;#39;ll also need to install some certs, and defined in &lt;a href="https://blog.vifortech.com/posts/emacs-tls-fix/">this wonderful walkthrough.&lt;/a> Simply:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">brew install libressl&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then in &lt;code class="verbatim">.emacs&lt;/code> add
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="ss">&amp;#39;gnutls&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;gnutls-trustfiles&lt;/span> &lt;span class="s">&amp;#34;/usr/local/etc/openssl/cert.pem&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-4">
Cleaning up backup files
&lt;/h2>
&lt;p>
One thing that&amp;#39;s annoying is having the &lt;a href="https://www.emacswiki.org/emacs/BackupDirectory">Emacs Backup Files&lt;/a> everywhere. Lets stick everything in &lt;code class="verbatim">~/.saves&lt;/code> so we don&amp;#39;t need to see it.
&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span>
&lt;span class="nv">backup-by-copying&lt;/span> &lt;span class="no">t&lt;/span> &lt;span class="c1">; don&amp;#39;t clobber symlinks&lt;/span>
&lt;span class="nv">backup-directory-alist&lt;/span>
&lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s">&amp;#34;.&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="s">&amp;#34;~/.saves/&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">; don&amp;#39;t litter my fs tree&lt;/span>
&lt;span class="nv">delete-old-versions&lt;/span> &lt;span class="no">t&lt;/span>
&lt;span class="nv">kept-new-versions&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;span class="nv">kept-old-versions&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="nv">version-control&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-5">
Changing the capslock key to control
&lt;/h2>
&lt;p>
Go into &lt;code class="verbatim">System Preferences...&lt;/code> -&amp;gt; &lt;code class="verbatim">Keyboard&lt;/code> and select &lt;code class="verbatim">Modifier Keys&lt;/code>. Switch caps lock key to be control. Totally worth it, but you still need to do a META dance with the options key, instead of the more obvious command key.
&lt;/p>
&lt;p>
Another nice thing is to map your command-key to META, which is much more natural. Put this in &lt;code class="verbatim">.emacs&lt;/code>
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp"> &lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">mac-option-key-is-meta&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">mac-command-key-is-meta&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">mac-command-modifier&lt;/span> &lt;span class="ss">&amp;#39;meta&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">mac-option-modifier&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-6">
Emacs super basics
&lt;/h2>
&lt;p>
Emacs is something much more than an editor. It&amp;#39;s an environment within which you can interact with your computer that could replace many of the tools that you use now. I normally use Terminal for example to interact with things and open up other programs to do specific tasks. Emacs could replace terminal, as well as all of the programs that are used to get into the nitty gritty of making computers do what you want. I recommend the &lt;a href="https://www.masteringemacs.org/">Mastering Emacs&lt;/a> book as a great way to get started in your emacs journey.
&lt;/p>
&lt;h3 id="headline-7">
Misc but important
&lt;/h3>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">ESC ESC ESC&lt;/code>&lt;/td>
&lt;td>get you out of most messes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-g C-g C-g&lt;/code>&lt;/td>
&lt;td>also get you out&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x C-x&lt;/code>&lt;/td>
&lt;td>exit emacs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x C-z&lt;/code>&lt;/td>
&lt;td>minimize emacs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x C-=&lt;/code>&lt;/td>
&lt;td>Embiggen font&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x C--&lt;/code>&lt;/td>
&lt;td>Miniturize font&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="headline-8">
Files
&lt;/h3>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x C-f&lt;/code>&lt;/td>
&lt;td>open a file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x C-s&lt;/code>&lt;/td>
&lt;td>save a file&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="headline-9">
Moving around
&lt;/h3>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-f&lt;/code>&lt;/td>
&lt;td>forward character&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">M-f&lt;/code>&lt;/td>
&lt;td>forward word&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">M-e&lt;/code>&lt;/td>
&lt;td>forward sentence&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-e&lt;/code>&lt;/td>
&lt;td>forard line&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-b&lt;/code>&lt;/td>
&lt;td>backward character&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">M-b&lt;/code>&lt;/td>
&lt;td>backward word&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">M-a&lt;/code>&lt;/td>
&lt;td>backward sentence&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-a&lt;/code>&lt;/td>
&lt;td>backward line&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">M-&amp;lt;&lt;/code>&lt;/td>
&lt;td>beginning of document&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">M-&amp;gt;&lt;/code>&lt;/td>
&lt;td>end of document&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
Interative search is started with &lt;code class="verbatim">C-s&lt;/code>
&lt;/p>
&lt;h3 id="headline-10">
Windows
&lt;/h3>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x-1&lt;/code>&lt;/td>
&lt;td>makes the current window full screen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x-2&lt;/code>&lt;/td>
&lt;td>split horizontally&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x-3&lt;/code>&lt;/td>
&lt;td>split vertically&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x-o&lt;/code>&lt;/td>
&lt;td>switch focus&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="headline-11">
Bookmarks
&lt;/h3>
&lt;table class="table table-striped">
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Desc&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x r m&lt;/code>&lt;/td>
&lt;td>Set a bookmark&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x r l&lt;/code>&lt;/td>
&lt;td>List bookmarks&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-x r b&lt;/code>&lt;/td>
&lt;td>Jump to bookmark&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="headline-12">
Adding a new package registry
&lt;/h2>
&lt;p>
&lt;code class="verbatim">M-x customize&lt;/code> and search for &lt;code class="verbatim">package archives&lt;/code>. Insert a new one named &amp;#39;stable melpa&amp;#39; and add &lt;code class="verbatim">https://stable.melpa.org/packages/&lt;/code>. You can paste into emacs using &lt;code class="verbatim">C-y&lt;/code>.
&lt;/p>
&lt;p>
Also add &lt;code class="verbatim">https://melpa.org/packages/&lt;/code>.
&lt;/p>
&lt;p>
I also like to set &lt;code class="verbatim">visual-line-mode&lt;/code> globally to true.
&lt;/p>
&lt;p>
Then &lt;code class="verbatim">Apply and Save&lt;/code>, or do &lt;code class="verbatim">C-x C-f&lt;/code>
&lt;/p>
&lt;p>
Refresh the package list using &lt;code class="verbatim">M-x package-refresh-contents&lt;/code>
&lt;/p>
&lt;h3 id="headline-13">
If you get an gpg error
&lt;/h3>
&lt;p>
Go to &lt;code class="verbatim">customize&lt;/code> again and change &lt;code class="verbatim">package-check-signature&lt;/code> to nil. Apply and save. Then &lt;code class="verbatim">M-x package-install RET gnu-elpa-keyring-update RET&lt;/code>. Then go back to customize and revert &lt;code class="verbatim">package-check-signature&lt;/code> to &lt;code class="verbatim">allow-unsigned&lt;/code>
&lt;/p>
&lt;h2 id="headline-14">
Changing themes and fonts
&lt;/h2>
&lt;p>
Use &lt;code class="verbatim">M-x customize-themes&lt;/code> to change your theme. I also like to have a much larger font, which you can adjust using &lt;code class="verbatim">M-x customize-face&lt;/code> and setting the &lt;code class="verbatim">default&lt;/code> size to something like 140.
&lt;/p>
&lt;h2 id="headline-15">
2 spaced tabs
&lt;/h2>
&lt;p>
Open up your &lt;code class="verbatim">.emacs&lt;/code> file and add:
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="c1">;; https://www.emacswiki.org/emacs/NoTabs&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq-default&lt;/span> &lt;span class="nv">indent-tabs-mode&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">;; https://www.emacswiki.org/emacs/TabStopList&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">tab-stop-list&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">number-sequence&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="mi">120&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Use &lt;code class="verbatim">C-space&lt;/code> to start a selection, the arrow keys to move around to select it all. Then type &lt;code class="verbatim">M-x eval-region&lt;/code> to run the lisp.
&lt;/p>
&lt;h2 id="headline-16">
Install &lt;code class="verbatim">use-package&lt;/code>
&lt;/h2>
&lt;p>
&lt;code class="verbatim">M-x package-install RET use-package RET&lt;/code>
&lt;/p>
&lt;h2 id="headline-17">
Install &lt;code class="verbatim">helm&lt;/code>
&lt;/h2>
&lt;p>
Install &lt;code class="verbatim">M-x package-install helm-ls-git&lt;/code> which should install &lt;code class="verbatim">helm&lt;/code> as well. Another nice helm package is &lt;code class="verbatim">helm-ag&lt;/code> which will grep over your files to look for specific values. Then in your &lt;code class="verbatim">.emacs&lt;/code> put
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="ss">&amp;#39;helm-config&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="ss">&amp;#39;helm-ls-git&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">global-set-key&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;C-x C-d&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;helm-browse-project&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">global-set-key&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;C-x f&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;helm-ag&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Once you load everything, using &lt;code class="verbatim">C-x C-d&lt;/code> will let you open up files in a &lt;em>project&lt;/em> which is defined as the files in the current &lt;em>git&lt;/em> repository. &lt;code class="verbatim">C-x f&lt;/code> will let you use ag to file files (this overrides the fill-column command which I don&amp;#39;t end up using).
&lt;/p>
&lt;p>
I encourage you to &lt;a href="https://github.com/emacs-helm/helm/wiki">read through the documentation&lt;/a>.
&lt;/p>
&lt;h2 id="headline-18">
Install &lt;code class="verbatim">flycheck&lt;/code> and &lt;code class="verbatim">company&lt;/code>
&lt;/h2>
&lt;p>
To install, &lt;code class="verbatim">M-x package-install RET flycheck&lt;/code> and &lt;code class="verbatim">M-x package-install RET company&lt;/code> And then in &lt;code class="verbatim">.emacs&lt;/code>:
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nv">add-hook&lt;/span> &lt;span class="ss">&amp;#39;after-init-hook&lt;/span> &lt;span class="nf">#&amp;#39;&lt;/span>&lt;span class="nv">global-flycheck-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-hook&lt;/span> &lt;span class="ss">&amp;#39;after-init-hook&lt;/span> &lt;span class="ss">&amp;#39;global-company-mode&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Once this is done, you need to install the specific linter for the languages you are interested in. For example:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm i -g eslint&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-19">
Install &lt;code class="verbatim">emmet&lt;/code>
&lt;/h2>
&lt;p>
To install &lt;code class="verbatim">M-x package-install emmet-mode&lt;/code>
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nv">add-hook&lt;/span> &lt;span class="ss">&amp;#39;sgml-mode-hook&lt;/span> &lt;span class="ss">&amp;#39;emmet-mode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;; Auto-start on any markup modes&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-hook&lt;/span> &lt;span class="ss">&amp;#39;css-mode-hook&lt;/span> &lt;span class="ss">&amp;#39;emmet-mode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;; enable Emmet&amp;#39;s css abbreviation.&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">emmet-move-cursor-between-quotes&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-20">
Install &lt;code class="verbatim">web-mode&lt;/code>
&lt;/h2>
&lt;p>
I find webmode handles indention better for files that have embedded submodes, such as javascript inside of an HTML file.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="ss">&amp;#39;web-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.phtml\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.tpl\\.php\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.[agj]sp\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.as[cp]x\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.erb\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.mustache\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.djhtml\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;auto-mode-alist&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\\.html?\\&amp;#39;&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">web-mode&lt;/span>&lt;span class="p">))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-21">
Install &lt;code class="verbatim">lsp-mode&lt;/code>
&lt;/h2>
&lt;p>
This is the big one. &lt;a href="https://github.com/emacs-lsp/lsp-mode">https://github.com/emacs-lsp/lsp-mode&lt;/a> gives you a list of all of the languages supported and what needs to be installed, but lets focus on &lt;code class="verbatim">javascript&lt;/code> for now.
&lt;/p>
&lt;p>
&lt;code class="verbatim">M-x package-install RET lsp-ui RET&lt;/code>
&lt;/p>
&lt;p>
&lt;code class="verbatim">M-x package-install RET company-lsp RET&lt;/code>
&lt;/p>
&lt;p>
&lt;code class="verbatim">M-x package-install RET helm-lsp RET&lt;/code>
&lt;/p>
&lt;p>
Then in &lt;code class="verbatim">.emacs&lt;/code>
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nb">use-package&lt;/span> &lt;span class="nv">lsp-mode&lt;/span>
&lt;span class="nb">:hook&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">XXX-mode&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">lsp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">:commands&lt;/span> &lt;span class="nv">lsp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">;; optionally&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">use-package&lt;/span> &lt;span class="nv">lsp-ui&lt;/span> &lt;span class="nb">:commands&lt;/span> &lt;span class="nv">lsp-ui-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">use-package&lt;/span> &lt;span class="nv">company-lsp&lt;/span> &lt;span class="nb">:commands&lt;/span> &lt;span class="nv">company-lsp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">use-package&lt;/span> &lt;span class="nv">helm-lsp&lt;/span> &lt;span class="nb">:commands&lt;/span> &lt;span class="nv">helm-lsp-workspace-symbol&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">use-package&lt;/span> &lt;span class="nv">lsp-treemacs&lt;/span> &lt;span class="nb">:commands&lt;/span> &lt;span class="nv">lsp-treemacs-errors-list&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then install some of the language servers. In the case of javascript
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm i -g typescript-language-server&lt;span class="p">;&lt;/span> npm i -g typescript&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-22">
Install &lt;code class="verbatim">magit&lt;/code>
&lt;/h2>
&lt;p>
&lt;code class="verbatim">M-x package-install RET magit RET&lt;/code>
&lt;/p>
&lt;p>
Inside of &lt;code class="verbatim">.emacs&lt;/code> add:
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nv">global-set-key&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;C-x g&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;magit-status&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Magit is amazingly powerful, and I&amp;#39;m still trying to learn it.
&lt;/p>
&lt;p>
Probably the best way to get into it is to first run &lt;code class="verbatim">C-x g&lt;/code> (or &lt;code class="verbatim">M-x magit-status&lt;/code>) and then use &lt;code class="verbatim">C-h m&lt;/code>, which will show you the documentation for the current &lt;em>mode&lt;/em>, in this case magit. This is a good way to poke around, though it makes sense to check out &lt;a href="https://magit.vc/manual/">the manual&lt;/a> which is pretty extensive.
&lt;/p>
&lt;h2 id="headline-23">
Usage example
&lt;/h2>
&lt;p>
After I checkout my repo, I bookmark the base folder using &lt;code class="verbatim">C-x r m&lt;/code>. Then I can go there faster without having to navigate through the filesystem.
&lt;/p>
&lt;p>
I start up a shell using &lt;code class="verbatim">M-x shell&lt;/code> to run commands. You can &lt;code class="verbatim">M-x rename-buffer&lt;/code> to give it a name, and then be able to start up additional shells if needed. Depending upon what you are doing, &lt;code class="verbatim">C-x 2&lt;/code> splits horizontally so that can be nice to see the output of anything you need.
&lt;/p>
&lt;p>
&lt;code class="verbatim">C-x C-d&lt;/code> will locate files within that project, which is generally a good substitute for the find in project function that I normally use to move around.
&lt;/p>
&lt;h2 id="headline-24">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://www.masteringemacs.org/">https://www.masteringemacs.org/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://www.emacswiki.org/emacs/EmacsForDebian">https://www.emacswiki.org/emacs/EmacsForDebian&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://blog.vifortech.com/posts/emacs-tls-fix/">https://blog.vifortech.com/posts/emacs-tls-fix/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/emacs-lsp/lsp-mode">https://github.com/emacs-lsp/lsp-mode&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gist.github.com/CodyReichert/9dbc8bd2a104780b64891d8736682cea">https://gist.github.com/CodyReichert/9dbc8bd2a104780b64891d8736682cea&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://emacs.cafe/emacs/javascript/setup/2017/04/23/emacs-setup-javascript.html">https://emacs.cafe/emacs/javascript/setup/2017/04/23/emacs-setup-javascript.html&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/felipeochoa/rjsx-mode">https://github.com/felipeochoa/rjsx-mode&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://groups.google.com/forum/#!topic/emacs-helm/zaBbg2tFAuM">https://groups.google.com/forum/#!topic/emacs-helm/zaBbg2tFAuM&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>IPFS and Fuse</title><link>https://willschenk.com/articles/2020/ipfs_and_fuse/</link><pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/ipfs_and_fuse/</guid><description>&lt;p>&lt;a href="https://ipfs.io/">IPFS&lt;/a> is cool. It&amp;rsquo;s a peer to peer distributed file system, or graph database, where you reference the data by its hash. This has the great property that the data is no longer tied to a particular computer or server. It can be spread around and you can get it from anybody without worrying if they&amp;rsquo;ve changed or alterted it in any way. If you know what you are looking for, you don&amp;rsquo;t need to worry about who you get it from.&lt;/p>
&lt;p>Lets see how we can use the Fuse interface, so that we can use our regular shell scripting toolbox to access and process data on the network.&lt;/p>
&lt;h2 id="installing-fuse-on-linux">Installing fuse on Linux&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install fuse
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you are in the &lt;code>fuse&lt;/code> group:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo groupadd fuse
sudo usermod -a -G fuse &lt;span class="nv">$USER&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit &lt;code>/etc/fuse.conf&lt;/code> and enable &lt;code>user_allow_other&lt;/code>.&lt;/p>
&lt;h2 id="installing-fuse-on-osx">Installing Fuse on OSX&lt;/h2>
&lt;p>I&amp;rsquo;ve not tried it, but here&amp;rsquo;s &lt;a href="https://osxfuse.github.io/">a link to the OSXFuse project&lt;/a>.&lt;/p>
&lt;h2 id="setting-up-the-mount-points">Setting up the mount points&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># make the directories&lt;/span>
sudo mkdir /ipfs
sudo mkdir /ipns
&lt;span class="c1"># chown them so ipfs can use them without root permissions&lt;/span>
sudo chown &lt;span class="nv">$USER&lt;/span> /ipfs
sudo chown &lt;span class="nv">$USER&lt;/span> /ipns
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-ipfs">Install IPFS&lt;/h2>
&lt;p>&lt;a href="https://dist.ipfs.io/#go-ipfs">Download ipfs&lt;/a> for your platform and install. e.g.:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> &lt;span class="k">$(&lt;/span>mktemp -d&lt;span class="k">)&lt;/span>
wget https://dist.ipfs.io/go-ipfs/v0.5.1/go-ipfs_v0.5.1_linux-amd64.tar.gz
tar xzvf go-ipfs_v0.5.1_linux-amd64.tar.gz
&lt;span class="nb">cd&lt;/span> go-ipfs
sudo sh install.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The initialise ipfs and start ipfs&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ipfs init
ipfs config --json Mounts.FuseAllowOther &lt;span class="nb">true&lt;/span>
ipfs daemon --mount
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="find-some-content">Find some content&lt;/h2>
&lt;p>We can look up the CID of some files&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">dig +noall +answer TXT _dnslink.docs.ipfs.io&lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/.*\/ipfs/\/ipfs/;s/&amp;#34;//&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which at the time of this writing outputs &lt;code>/ipfs/bafybeicksctt6uom4iltnel6hqmgwaphlazrpzq5wv37bpjnmzintdq7su&lt;/code>.&lt;/p>
&lt;p>And then we can go into that directory and start up a webserver.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /ipfs/bafybeicksctt6uom4iltnel6hqmgwaphlazrpzq5wv37bpjnmzintdq7su
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets start up a webserver and check it out:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">python -m SimpleHTTPServer
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And when you visit &lt;a href="http://localhost:8000">localhost:8000&lt;/a> you have a copy of that specific version of their documentation site served from your local filesystem.&lt;/p>
&lt;h2 id="thoughts">Thoughts&lt;/h2>
&lt;p>The FUSE gateway isn&amp;rsquo;t super stable, so there are some potential issues with this. But its an interesting distrubtion mechanism where you could have ngnix serving files right from /ipfs or /ipns, and be able to push changed locally on your computer and then have the webservers automatically pick them up.&lt;/p>
&lt;p>This is also an easy way to interact with large files using a basic script that doesn&amp;rsquo;t need to interact with the ipfs api&amp;rsquo;s directly.&lt;/p></description></item><item><title>Playing with deno</title><link>https://willschenk.com/articles/2020/deno/</link><pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/deno/</guid><description>&lt;p>Deno is a new V8 based TypeScript and JavaScript programming language that works like a command line web browser. It was written by the creaters of NodeJS and seeks to fix some of the issues with Node around it&amp;rsquo;s security model and pacakge management. Lets look at building a simple webservice using redis.&lt;/p>
&lt;h2 id="install-deno">Install deno&lt;/h2>
&lt;p>If you are in OSX you can use &lt;code>homebrew&lt;/code> or install from a shell installer:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -fsSL https://deno.land/x/install/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;m using &lt;a href="https://asdf-vm.com/#/">asdf&lt;/a> so it&amp;rsquo;s&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ asdf plugin add deno
$ asdf install deno latest
$ asdf global deno 1.0.4
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="run-an-example">Run an example&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">deno run https://deno.land/std/examples/welcome.ts
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which yields:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">Download https://deno.land/std/examples/welcome.ts
Compile https://deno.land/std/examples/welcome.ts
Welcome to Deno 🦕
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Running it again it&amp;rsquo;s cached in your local directory, which defaults to &lt;code>$HOME/.cache/deno&lt;/code>. You can look in this directory to see what&amp;rsquo;s in there.&lt;/p>
&lt;h2 id="installing-a-script">Installing a script&lt;/h2>
&lt;p>We can also install this &amp;ldquo;tool&amp;rdquo; locally to make it an executable.&lt;/p>
&lt;pre>&lt;code>deno install welcome https://deno.land/std/examples/welcome.ts
&lt;/code>&lt;/pre>&lt;p>This pulls down all of the dependancies and installs an executable in &lt;code>~/.deno/bin&lt;/code>, which you may need to add to your path.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">Download https://deno.land/std/examples/welcome.ts
Warning Implicitly using master branch https://deno.land/std/examples/welcome.ts
Compile https://deno.land/std/examples/welcome.ts
✅ Successfully installed welcome
/home/wschenk/.deno/bin/welcome
ℹ️ Add /home/wschenk/.deno/bin to PATH
&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/home/wschenk/.deno/bin:&lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
~/deno$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/home/wschenk/.deno/bin:&lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
~/deno$ welcome
Welcome to Deno 🦕
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you delete the &lt;code>~/.cache/deno&lt;/code> directory, the next time you run &lt;code>welcome&lt;/code> it will download all of the code again. This is fun because you can easily distribute and install scripts as needed and it takes care of pulling down all the dependacies that are needed.&lt;/p>
&lt;h2 id="connecting-to-redis">Connecting to Redis&lt;/h2>
&lt;p>Lets see how to connect to redis. We will use the &lt;a href="https://github.com/keroxp/deno-redis">deno-redis&lt;/a> package, by simply adding it as an &lt;code>import&lt;/code> statement at the top of the file. Then, when we run &lt;code>deno run redis.ts&lt;/code> it will download automatically without needing to use a seperate &lt;code>node_modules&lt;/code> directory!&lt;/p>
&lt;p>We also will pull &lt;code>REDIS_URL&lt;/code> from the environment to let us control where things are deployed later. There&amp;rsquo;s a weird quirk with the way that &lt;code>deno&lt;/code> parses &lt;code>URL&lt;/code> that reflects a weird way that browsers parse URLs, so we&amp;rsquo;re tweaking it a little bit to make sure that we can pull out the password and hostname if they are set.&lt;/p>
&lt;p>The other thing we are doing is &lt;code>export&lt;/code>ing the &lt;code>redis&lt;/code> object. We will use this later to build off of in another script.&lt;/p>
&lt;p>&lt;a href="redis_nodeps.ts">redis.ts&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">RedisConnectOptions&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;https://denopkg.com/keroxp/deno-redis/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">REDIS_URL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Deno&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;REDIS_URL&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;redis://127.0.0.1:6379&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// URL doesn&amp;#39;t parse URIs https://github.com/denoland/deno/issues/5410
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">redis_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">URL&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">REDIS_URL&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/^redis:/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http:&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">redis_config&lt;/span> : &lt;span class="kt">RedisConnectOptions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">hostname&lt;/span>: &lt;span class="kt">redis_url.hostname&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">port&lt;/span>: &lt;span class="kt">redis_url.port&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Set a password if supplied
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">redis_url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">password&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">redis_config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">redis_url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">password&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sb">`Connecting to redis at &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">redis_config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hostname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">redis_config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">redis_config&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">incr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;counter&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sb">`Hello from Deno &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">count&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The first time you run &lt;code>deno run redis.ts&lt;/code> it will download all of the needed components, and then it will give you the following error:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">error: Uncaught PermissionDenied: access to environment variables, run again with the --allow-env flag
&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default deno runs everything in a sandbox environment that has no access to the local environment. You need to specify what permissions this code &amp;ndash; that gets pulled down from the internet on demand &amp;ndash; has. We need to give it &lt;code>--allow-env&lt;/code> to see the environment (where you may have secured passwords stached) and, also in this case, &lt;code>--allow-net&lt;/code> because we want our script to be able to talk to redis.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">deno run --allow-env --allow-net redis.ts
Connecting to redis at 127.0.0.1:6379
error: Uncaught ConnectionRefused: Connection refused &lt;span class="o">(&lt;/span>os error 111&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;and we need to startup a redis server. If you have docker installed, the easiest way to do this (for a temporary test server) is:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --rm -it -p 6379:6379 redis
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which means start a container based on the &lt;code>redis&lt;/code> image, &lt;code>--rm&lt;/code> remove it when done, &lt;code>-it&lt;/code> give it an interactive terminal, and &lt;code>-p 6379:6379&lt;/code> expose the local container port &lt;code>6379&lt;/code> as &lt;code>6379&lt;/code> on the local network.&lt;/p>
&lt;p>Once done, when we run our script we get:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ deno run --allow-env --allow-net redis.ts
Connecting to redis at 127.0.0.1:6379
Hello from Deno &lt;span class="m">1&lt;/span>
$ deno run --allow-env --allow-net redis.ts
Connecting to redis at 127.0.0.1:6379
Hello from Deno &lt;span class="m">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="creating-a-webservice">Creating a webservice&lt;/h2>
&lt;p>This is the example that you see everywhere, except that&lt;/p>
&lt;ol>
&lt;li>We import &lt;code>redis&lt;/code> from our previous script&lt;/li>
&lt;li>And we call &lt;code>redis.incr&lt;/code> to add a counter for each &amp;ldquo;page&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="web_nodeps.ts">web.ts&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">serve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.51.0/http/server.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">redis&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;./redis.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">PORT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Deno&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;PORT&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">8080&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">serve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`0.0.0.0:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">PORT&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Server started on port &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">PORT&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">req&lt;/span> &lt;span class="nx">of&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">cnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">incr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sb">`counter:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">TextEncoder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Hello, &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">cnt&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> times!&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="sb">n`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">respond&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">body&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Lets run this now with &lt;code>deno run --allow-env --allow-net web.ts&lt;/code>. With you browser go to &lt;a href="http://localhost:8080/">http://localhost:8080/&lt;/a> and refresh to watch the counter go up and up. Exiciting!&lt;/p>
&lt;h2 id="wrangling-dependacies-with-depsts">Wrangling dependacies with &lt;code>deps.ts&lt;/code>&lt;/h2>
&lt;p>As scripts get bigger we want to be able to centralize which versions of what we are using. Instead of having a &lt;code>package.json&lt;/code> file where everything is listed, we can simply organize our project in a way that keeps it cleaner. The standard idiom is to have a &lt;code>deps.js&lt;/code> file that simply imports and exports things from one place. Lets create that now and update our source files to go through that.&lt;/p>
&lt;p>&lt;a href="deps.ts">deps.ts&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="kr">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">RedisConnectOptions&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;https://denopkg.com/keroxp/deno-redis/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">serve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.51.0/http/server.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Then in &lt;code>web.ts&lt;/code> change the imports to&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">serve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;./deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">redis&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;./redis.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and in &lt;code>redis.ts&lt;/code> change the imports to&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">RedisConnectOptions&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;./deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now everything is centralized in one place. Running&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ deno cache deps.ts
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Will make sure that everything in is the local cache, which we will take advantage of when building our Docker image.&lt;/p>
&lt;h2 id="building-a-docker-container-for-deployment">Building a docker container for deployment&lt;/h2>
&lt;p>When we package up our application for deployment, we don&amp;rsquo;t want it to be pulling random source code from the internet when it first starts up. We&amp;rsquo;ll make that part of our build process. Here is a simple Dockerfile that&lt;/p>
&lt;ol>
&lt;li>Builds off of the alpine deno instance &lt;code>hayd/alpine-deno:1.0.4&lt;/code>&lt;/li>
&lt;li>Copies the &lt;code>deps.ts&lt;/code> file into the image&lt;/li>
&lt;li>Runs &lt;code>deno cache deps.ts&lt;/code> which pulls the require dependancies into the local cache&lt;/li>
&lt;li>Copies the rest of your source directory in&lt;/li>
&lt;li>And defines a startup command that includes the required permissions&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="Dockerfile">Dockerfile&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="nx">FROM&lt;/span> &lt;span class="nx">hayd&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">alpine&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">deno&lt;/span>:&lt;span class="kt">1.0.4&lt;/span>
&lt;span class="nx">WORKDIR&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nx">app&lt;/span>
&lt;span class="nx">COPY&lt;/span> &lt;span class="nx">deps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ts&lt;/span> &lt;span class="p">.&lt;/span>
&lt;span class="nx">RUN&lt;/span> &lt;span class="nx">deno&lt;/span> &lt;span class="nx">cache&lt;/span> &lt;span class="nx">deps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ts&lt;/span>
&lt;span class="err">#&lt;/span> &lt;span class="nx">These&lt;/span> &lt;span class="nx">steps&lt;/span> &lt;span class="nx">will&lt;/span> &lt;span class="nx">be&lt;/span> &lt;span class="nx">re&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">run&lt;/span> &lt;span class="nx">upon&lt;/span> &lt;span class="nx">each&lt;/span> &lt;span class="nx">file&lt;/span> &lt;span class="nx">change&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">your&lt;/span> &lt;span class="nx">working&lt;/span> &lt;span class="nx">directory&lt;/span>:
&lt;span class="kt">COPY&lt;/span> &lt;span class="p">.&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>
&lt;span class="err">#&lt;/span> &lt;span class="nx">Added&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">ENTRYPOINT&lt;/span> &lt;span class="nx">of&lt;/span> &lt;span class="nx">base&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="nx">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;run&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--allow-env&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--allow-net&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;web.ts&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now from here you are ready to deploy this on whatever hosting provider you need. It needs a redis instance that it will find by looking at &lt;code>REDIS_URL&lt;/code> in the environment, which is the standard that &lt;code>heroku&lt;/code> or &lt;code>dokku&lt;/code> (and probably others) use.&lt;/p>
&lt;p>Lets test it out locally first. You&amp;rsquo;ll need to find your ip address which on linux you can do with &lt;code>hostname -I&lt;/code>. Change the &lt;code>REDIS_URL&lt;/code> to point to your local instance.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker build . -t deno
$ docker run --rm -it --env &lt;span class="nv">REDIS_URL&lt;/span>&lt;span class="o">=&lt;/span>redis://172.17.0.1:6379 -p 8080:8080 deno
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now when you go to &lt;a href="http://localhost:8080/">http://localhost:8080/&lt;/a> you should see deno running in your local container.&lt;/p>
&lt;h2 id="thoughts">Thoughts&lt;/h2>
&lt;p>From here it will be straightforward to do a &lt;code>git push heroku master&lt;/code> or whatever to deploy on your provider of choice.&lt;/p>
&lt;p>Deno is like a web browser for the command line. One thing that webbrowsers do amazingly well is the distrubtion of applications &amp;ndash; just go to a URL and you have it on your machine. &lt;code>deno install&lt;/code> brings some of that magic into the command line. The ecosystem is still very young, but with ES modules being the extension mechanism that can pull code from wherever it lives on the internet you can imagine a much more distributed application mechanism that doesn&amp;rsquo;t rely on any particular centralized service.&lt;/p></description></item><item><title>Book Image Shortcode for Hugo</title><link>https://willschenk.com/articles/2020/book_images_shortcode/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/book_images_shortcode/</guid><description>&lt;p>&lt;a href="https://happyfuncorp.com/">HappyFunCorp&lt;/a> helped build &lt;a href="https://bookshop.org/">Bookshop.org&lt;/a> which is an online bookstore that distributes 30% of the book profits to independent bookstores in your area. Basically it&amp;rsquo;s a place that people can link to that isn&amp;rsquo;t Amazon, and that will kick some money to your local community.&lt;/p>
&lt;p>I wanted to find a way to easily create links to these product pages, and show images if needed. There&amp;rsquo;s no API to access bookshop (I asked on our internal dev channel) but I know how to write a script so I cobbled something together and made a &lt;code>hugo&lt;/code> shortcode to render stuff on my blog.&lt;/p>
&lt;p>&lt;code>{{&amp;lt; bookshop isbn=&amp;quot;9780394719856&amp;rdquo; /&amp;gt;}}&lt;/code>&lt;/p>
&lt;p>Which will generate this, a embedded link to the product page of the book with the title pulled from the server:&lt;/p>
&lt;p>
&lt;a href="https://bookshop.org">
The Gay Science: With a Prelude in Rhymes and an Appendix of Songs
&lt;/a>
is a great book.&lt;/p>
&lt;p>Or&lt;/p>
&lt;pre>&lt;code>&amp;#123;&amp;#123;&lt; bookshop isbn="9780394719856" img="left">&amp;#125;&amp;#125;
Here are my thoughts about this book
&amp;#123;&amp;#123;&lt; /bookshop >&amp;#125;&amp;#125;&lt;/code>
&lt;/code>&lt;/pre>
&lt;p class="clearfix">
&lt;a href="https://bookshop.org">
&lt;img src="./articles/2020/book_images_shortcode/9780394719856.jpg" class="float-left mr-3" style="max-height: 200px" alt="The Gay Science: With a Prelude in Rhymes and an Appendix of Songs">
&lt;/a>
Here are my thoughts about this book.
&lt;/p>
&lt;p>We are going to use a two step process here. The first is to use a bash script to pull the data from the site and store it in &lt;code>json&lt;/code> and &lt;code>jpg&lt;/code>, and then a shortcode to format this in the webpage. Most of my posts are directories, so this will be part of the page bundles.&lt;/p>
&lt;h2 id="get-the-book-information">Get the book information&lt;/h2>
&lt;p>Since there&amp;rsquo;s no API and I want to keep this simple, our strategy is to:&lt;/p>
&lt;ol>
&lt;li>Hit the search page with the ISBN&lt;/li>
&lt;li>Use &lt;code>awk&lt;/code> to pull put the link from the search results.&lt;/li>
&lt;li>Load the product page.&lt;/li>
&lt;li>Use an unholy combination of grep, sed, and awk to pull out the meta data.&lt;/li>
&lt;li>Store this in &lt;code>${ISBN}.json&lt;/code>&lt;/li>
&lt;li>Download the cover image in &lt;code>${ISBN}.jpg&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="bookshop_lookup.sh">bookshop_lookup.sh&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">ISBN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$ISBN&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> Usage &lt;span class="nv">$0&lt;/span> ISBN
&lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.json&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">WORKFILE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>mktemp&lt;span class="k">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_search.html&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Searching isdn from bookshop&amp;#34;&lt;/span>
wget -O &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>_search.html &lt;span class="s2">&amp;#34;https://bookshop.org/books?keywords=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_book.html&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Looking up book info from bookshop&amp;#34;&lt;/span>
&lt;span class="nv">URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>awk &lt;span class="s1">&amp;#39;/class=&amp;#34;cover&amp;#34;/ { print $3 }&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>_search.html &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s/href=&amp;#34;([^&amp;#34;]*).*/\1/&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">URL&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> Unable to find product link in search results
&lt;span class="nb">exit&lt;/span> &lt;span class="m">2&lt;/span>
&lt;span class="k">fi&lt;/span>
wget -O &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>_book.html https://bookshop.org&lt;span class="si">${&lt;/span>&lt;span class="nv">URL&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">fi&lt;/span>
grep meta &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>_book.html &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;BEGIN {RS=&amp;#34;&amp;lt;meta &amp;#34;} // { print } &amp;#39;&lt;/span> &amp;gt; &lt;span class="si">${&lt;/span>&lt;span class="nv">WORKFILE&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">IMG_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>grep twitter:image&lt;span class="se">\&amp;#34;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">WORKFILE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s/.*content=\&amp;#34;([^&amp;#34;]*).*/\1/&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> Image &lt;span class="nv">$IMG_URL&lt;/span>
&lt;span class="nv">DESCRIPTION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>grep twitter:description &lt;span class="si">${&lt;/span>&lt;span class="nv">WORKFILE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s/.*content=\&amp;#34;([^&amp;#34;]*).*/\1/&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> Desc &lt;span class="nv">$DESCRIPTION&lt;/span>
&lt;span class="nv">TITLE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>grep og:title &lt;span class="si">${&lt;/span>&lt;span class="nv">WORKFILE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s/.*content=\&amp;#34;([^&amp;#34;]*).*/\1/&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> Title &lt;span class="nv">$TITLE&lt;/span>
&lt;span class="nv">AUTHOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>awk &lt;span class="s1">&amp;#39;/\(Author\)/ {print}&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>_book.html &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s/\s*&amp;lt;[^&amp;gt;]*&amp;gt;//g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed -E &lt;span class="s1">&amp;#39;s/&amp;lt;\/a.*//&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> Author &lt;span class="nv">$AUTHOR&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;{\&amp;#34;title\&amp;#34;: \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TITLE&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34;, \&amp;#34;url\&amp;#34;: \&amp;#34;https://bookshop.org&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">URL&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34;, \&amp;#34;img\&amp;#34;: \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">IMG_URL&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34;, \&amp;#34;author\&amp;#34;: \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">AUTHOR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34;}&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq -r &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &amp;gt; &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>.json
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="si">${&lt;/span>&lt;span class="nv">WORKFILE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
rm &lt;span class="si">${&lt;/span>&lt;span class="nv">WORKFILE&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>.jpg &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
wget -O &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>.jpg &lt;span class="k">$(&lt;/span>jq -r &lt;span class="s1">&amp;#39;.img&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">ISBN&lt;/span>&lt;span class="si">}&lt;/span>.json&lt;span class="k">)&lt;/span>
&lt;span class="k">fi&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="the-shortcode">The shortcode&lt;/h2>
&lt;p>I&amp;rsquo;m not an expert in hugo shortcodes, but this is what we&amp;rsquo;re doing.&lt;/p>
&lt;ol>
&lt;li>Look for the file &lt;code>${ISBN}.json&lt;/code> in the page bundle.&lt;/li>
&lt;li>Show a message if we don&amp;rsquo;t find it.&lt;/li>
&lt;li>Pull in data into a map using &lt;code>$jsonFile.Content | unmarshal&lt;/code>&lt;/li>
&lt;li>If we are showing the cover image, choose which set of bootstrap utility classes we want to use.&lt;/li>
&lt;li>Wrap the output in &lt;code>&amp;lt;p class=&amp;quot;clearfix&amp;quot;&amp;gt;&lt;/code> to deal with the overfloat. Can&amp;rsquo;t believe I&amp;rsquo;m still doing this.&lt;/li>
&lt;li>Link the image or the title to the bookshop product page, data pulled from the json file.&lt;/li>
&lt;li>Add the &lt;code>{{ .Inner }}&lt;/code> content inside of the tag.&lt;/li>
&lt;/ol>
&lt;p>&lt;code>bookshop.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;isbn&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbnJson&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">printf&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;%s.json&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$jsonResources&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Page.Resources.Match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbnJson&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$jsonFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">index&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$jsonResources&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$showImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;img&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$jsonFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$data&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$jsonFile&lt;/span>&lt;span class="na">.Content&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">unmarshal&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbnImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">printf&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;%s.jpg&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$classes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;float-left mr-3&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">eq&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$showImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;right&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$classes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;float-right ml-3&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$showImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;clearfix&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$data&lt;/span>&lt;span class="na">.url&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$imgResources&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Page.Resources.Match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbnImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">index&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$imgResources&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$showImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$classes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;max-height: 200px&amp;#34;&lt;/span> &lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="nx">$data&lt;/span>&lt;span class="na">.title&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$data&lt;/span>&lt;span class="na">.title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Inner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$showImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$showImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Run &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">code&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>bookshop_lookup.sh &lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$isbn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">code&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> to load the meta data into &lt;span class="cp">{{&lt;/span>&lt;span class="nx">$isbn&lt;/span>&lt;span class="cp">}}&lt;/span>.json&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Inner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$showImage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Example output:&lt;/p>
&lt;p class="clearfix">
&lt;a href="https://bookshop.org/books/chuang-tzu-basic-writings-revised/9780231105958">
&lt;img src="./articles/2020/book_images_shortcode/9780231105958.jpg" class="float-right ml-3" style="max-height: 200px" alt="Chuang Tzu: Basic Writings (Revised)">
&lt;/a>
Dui, id ornare arcu odio ut sem nulla pharetra diam sit amet nisl suscipit adipiscing bibendum est ultricies integer quis auctor! Odio eu feugiat pretium, nibh ipsum consequat nisl, vel. Ac tortor dignissim convallis? Tincidunt nunc pulvinar sapien et ligula ullamcorper? Egestas diam in arcu cursus euismod quis viverra nibh cras pulvinar mattis nunc, sed blandit libero volutpat sed cras ornare arcu dui vivamus?
&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://shindakun.dev/posts/adding-a-book-cover-shortcode-for-hugo/">https://shindakun.dev/posts/adding-a-book-cover-shortcode-for-hugo/&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Styling tables with Hugo</title><link>https://willschenk.com/articles/2020/styling_tables_with_hugo/</link><pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/styling_tables_with_hugo/</guid><description>&lt;p>Markdown is a nice format to write it, but sometimes you need to add HTML classes directly to the output to make it look how you want. Here&amp;rsquo;s a way to do that using hugo shortcodes.&lt;/p>
&lt;h2 id="create-a-table-shortcode">Create a &lt;code>table&lt;/code> shortcode&lt;/h2>
&lt;p>Put this in &lt;code>/layouts/shortcodes/table.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">{{ $htmlTable := .Inner | markdownify }}
{{ $class := .Get 0 }}
{{ $old := &amp;#34;&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">table&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&amp;#34; }}
{{ $new := printf &amp;#34;&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">table&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">\&amp;#34;%s\&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&amp;#34; $class }}
{{ $htmlTable := replace $htmlTable $old $new }}
{{ $htmlTable | safeHTML }}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-table">Create a table&lt;/h2>
&lt;p>Like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">| Header 1 | Header 2 | Header 3 |
|----------|----------|----------|
| Item 1 | Item 2 | Item 3 |
| Item 1a | Item 2a | Item 3a |
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which should render like so:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Header 1&lt;/th>
&lt;th>Header 2&lt;/th>
&lt;th>Header 3&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Item 1&lt;/td>
&lt;td>Item 2&lt;/td>
&lt;td>Item 3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Item 1a&lt;/td>
&lt;td>Item 2a&lt;/td>
&lt;td>Item 3a&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="wrap-it-in-shortcodes">Wrap it in shortcodes&lt;/h2>
&lt;p>&lt;code>&lt;pre>
{{&amp;lt;table &amp;ldquo;table table-striped table-bordered&amp;quot;&amp;gt;}}
|&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;-|
| Item 1 | Item 2 | Item 3 |
| Item 1a | Item 2a | Item 3a |
{{&amp;lt;/table&amp;gt;}}
&lt;/pre>&lt;/code>&lt;/p>
&lt;p>Which should render:&lt;/p>
&lt;table class="table table-striped table-bordered">
&lt;thead>
&lt;tr>
&lt;th>Header 1&lt;/th>
&lt;th>Header 2&lt;/th>
&lt;th>Header 3&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Item 1&lt;/td>
&lt;td>Item 2&lt;/td>
&lt;td>Item 3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Item 1a&lt;/td>
&lt;td>Item 2a&lt;/td>
&lt;td>Item 3a&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zwbetz.com/style-a-markdown-table-with-bootstrap-classes-in-hugo/">https://zwbetz.com/style-a-markdown-table-with-bootstrap-classes-in-hugo/&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Emacs Tramp tricks</title><link>https://willschenk.com/articles/2020/tramp_tricks/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/tramp_tricks/</guid><description>&lt;p>Emacs is amazing. It&amp;rsquo;s a very different sort of thing than a code text editor like Vim or an IDE like VSCode. It&amp;rsquo;s a different way of thinking of how to interact with a computer, where you build up techniques on top of simple tricks that let you get amazing things done. Of course, part of the appeal/challenge is that you need to figure out how to make it work yourself. Since there&amp;rsquo;s not much in the way of gentle tutorials, lets look at what you can do with tramp to get a sense of what is possible.&lt;/p>
&lt;h2 id="edit-a-file-on-a-remote-server">Edit a file on a remote server&lt;/h2>
&lt;p>Lets say that you have a remote server named &lt;code>ssb.willschenk.com&lt;/code> and you want to edit the &lt;code>/etc/hosts&lt;/code> file. We can open that up directly in emacs. The basic form for connecting to something using TRAMP is:&lt;/p>
&lt;p>&lt;code>C-x C-f /remotehost:filename RET (or /method:user@remotehost:filename)&lt;/code>&lt;/p>
&lt;p>So, for example, if I type &lt;code>C-x C-f /ssh:root@ssb.willschenk.com:/etc/host&lt;/code>= it connects over ssh to the remote server and edits that file. If I save the file, copy and paste stuff, etc it will transparently sync the file over the network. We don&amp;rsquo;t need to install a text editor on this server, and we&amp;rsquo;ll have all of our local configurations and copy and paste and all that stuff that we are used to. No installing &lt;code>vim&lt;/code> for some quick configuration file editing.&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/tramp_tricks/etchost.png'>
&lt;/p>
&lt;h2 id="directory-browsing">Directory browsing&lt;/h2>
&lt;p>&lt;code>dired&lt;/code> mode also works, so if you want to move around just &lt;code>C-x C-f&lt;/code> and select the directory, then you can navigate around as you normally would.&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/tramp_tricks/etcdir.png'>
&lt;/p>
&lt;h2 id="open-a-shell">Open a shell&lt;/h2>
&lt;p>&lt;code>M-x shell&lt;/code> opens a shell with the current working directory of the active buffer. This also works if that is a remote file. If you use the &lt;code>C-u&lt;/code> prefix command, you can open a shell with the buffer&amp;rsquo;s name specified. This is handy if you have multiple things open at the same time.&lt;/p>
&lt;p>&lt;code>C-u M-x shell&lt;/code> will ask you want you want to name the buffer (I suggest the hostname), the starting directory which you be the &lt;code>/ssh...&lt;/code> string, and then the shell command to use, which I leave as &lt;code>/bin/bash&lt;/code>. Now you are interacting over ssh to the remote server!&lt;/p>
&lt;p>This also keeps track of which directory you are in, so if, inside of the shell you &lt;code>cd&lt;/code>, emacs knows where you are. If you use the normal keystrokes to open a file, &lt;code>C-x C-f&lt;/code> it defaults to the directory that you are in on the remote server. &lt;code>TAB&lt;/code> completion works in the minibuffer too!&lt;/p>
&lt;p>Inside of shell mode you can use &lt;code>C-up&lt;/code> and &lt;code>C-down&lt;/code> to cycle through command history, all the normal things work.&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/tramp_tricks/shell.png'>
&lt;/p>
&lt;h2 id="edit-a-file-as-root">Edit a file as root&lt;/h2>
&lt;p>Need to edit a file as a different user?&lt;/p>
&lt;p>&lt;code>C-x C-f /sudo::/etc/hosts&lt;/code>&lt;/p>
&lt;p>TRAMP in this case is piping things through sudo rather an ssh, so we are making a &lt;em>remote&lt;/em> connection to a different user on our computer.&lt;/p>
&lt;h2 id="editing-a-file-inside-of-a-docker-container">Editing a file inside of a docker container&lt;/h2>
&lt;p>Another fun trick is to edit a file inside of a docker container. Is this what docker is used for? No, but it&amp;rsquo;s sometimes useful if you are debugging a docker file or whatever and need a tigher feedback loop.&lt;/p>
&lt;p>Inside of your &lt;code>.emacs&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="c1">;; Open files in Docker containers like so: /docker:drunk_bardeen:/etc/passwd&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">push&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">cons&lt;/span>
&lt;span class="s">&amp;#34;docker&amp;#34;&lt;/span>
&lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nv">tramp-login-program&lt;/span> &lt;span class="s">&amp;#34;docker&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tramp-login-args&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="s">&amp;#34;exec&amp;#34;&lt;/span> &lt;span class="s">&amp;#34;-it&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%h&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/bin/bash&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tramp-remote-shell&lt;/span> &lt;span class="s">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">tramp-remote-shell-args&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;-i&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;span class="nv">tramp-methods&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">defadvice&lt;/span> &lt;span class="nv">tramp-completion-handle-file-name-all-completions&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">around&lt;/span> &lt;span class="nv">dotemacs-completion-docker&lt;/span> &lt;span class="nv">activate&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="s">&amp;#34;(tramp-completion-handle-file-name-all-completions \&amp;#34;\&amp;#34; \&amp;#34;/docker:\&amp;#34; returns
&lt;/span>&lt;span class="s"> a list of active Docker container names, followed by colons.&amp;#34;&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">equal&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">ad-get-arg&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="s">&amp;#34;/docker:&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">dockernames-raw&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">shell-command-to-string&lt;/span> &lt;span class="s">&amp;#34;docker ps | awk &amp;#39;$NF != \&amp;#34;NAMES\&amp;#34; { print $NF \&amp;#34;:\&amp;#34; }&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">dockernames&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">cl-remove-if-not&lt;/span>
&lt;span class="nf">#&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">lambda&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">dockerline&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">string-match&lt;/span> &lt;span class="s">&amp;#34;:$&amp;#34;&lt;/span> &lt;span class="nv">dockerline&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">split-string&lt;/span> &lt;span class="nv">dockernames-raw&lt;/span> &lt;span class="s">&amp;#34;\n&amp;#34;&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">ad-return-value&lt;/span> &lt;span class="nv">dockernames&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nv">ad-do-it&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To try this out, we can spin up a quick server like this&lt;/p>
&lt;p>&lt;code>docker run --rm -p 6379:6379 --name redis_container redis&lt;/code>&lt;/p>
&lt;p>And then look at files inside of it using&lt;/p>
&lt;p>&lt;code>C-x C-f /docker:redis_container:/&lt;/code>&lt;/p>
&lt;p>Which opens up a directory browser in the container. The tricks of open and editing the files are the same, and you can also open up a shell in there to do what you need.&lt;/p>
&lt;p>Now obviously one of the points of &lt;code>Docker&lt;/code> is to ship code around that&amp;rsquo;s repeatably built, and this goes againsts the spirit of that. But if you want to treat them as easily distrubuted virtual machines it&amp;rsquo;s very handy.&lt;/p>
&lt;h2 id="inside-a-docker-container-on-a-remote-host">Inside a docker container on a remote host&lt;/h2>
&lt;p>We can also chain things together! Lets say that we have a &lt;code>docker&lt;/code> container named &lt;code>ssb-pub&lt;/code> running on a remote host &lt;code>ssb.willschenk.com&lt;/code>, we can connect to it using:&lt;/p>
&lt;p>&lt;code>C-x C-f /ssh:root@ssb.willschenk.com|docker:ssb-pub:/&lt;/code>&lt;/p>
&lt;p>This works for file browsing as well as opening up a shell on the container.&lt;/p>
&lt;p>
&lt;img class='' style='width: 100%' src='./articles/2020/tramp_tricks/redis.png'>
&lt;/p>
&lt;h2 id="it-requires-play">It requires play&lt;/h2>
&lt;p>If you want to sit down and just start working on your project, the learning curve of emacs is too great. Its better to use a tool that&amp;rsquo;s already configured and optimized for what you want to do. The &lt;a href="https://laracasts.com/series/laravel-6-from-scratch">Laravel from Scratch&lt;/a> documentation, which is fabulous, recommends using &lt;a href="https://www.jetbrains.com/phpstorm/">PHP Storm&lt;/a> for people who are learning Laravel, since you can just get going and focus on solving your problem without going down the rabbit hole. This is great. But sometimes its fun to go down the rabbit hole, and if you enjoy the playing the reward is great.&lt;/p>
&lt;p>Emacs was first released in 1976 (take a look at &lt;a href="https://www.jwz.org/doc/emacs-timeline.html">the emacs timeline&lt;/a> if you want to see the heritage in all it&amp;rsquo;s glory, though you&amp;rsquo;ll notice that it ends at 2007, 13 years ago) and given that it&amp;rsquo;s been around for 44 years at this point, I think we can say that it&amp;rsquo;s not a fad. What you learn here will be useful in the future no matter what the latest hot stuff is next.&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.emacswiki.org/emacs/TrampMode">https://www.emacswiki.org/emacs/TrampMode&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.emacswiki.org/emacs/TrampAndDocker">https://www.emacswiki.org/emacs/TrampAndDocker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://media.emacsconf.org/2019/23.html">https://media.emacsconf.org/2019/23.html&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Making charts with VueJS and no tooling</title><link>https://willschenk.com/articles/2020/making_charts_with_vuejs_and_no_tooling/</link><pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/making_charts_with_vuejs_and_no_tooling/</guid><description>&lt;p>I learned most of what I know about coding by looking at source code &amp;ndash; especially view source on a web browser. Lets see if we can bring that era back a bit by using ES modules and eschewing webpack and other bundling systems. We will use the amazing &lt;a href="unpkg.com">unpkg.com&lt;/a> CDN to get our building blocks to assemble together.&lt;/p>
&lt;h2 id="first-get-vue-working">First get vue working&lt;/h2>
&lt;p>From &lt;code>unpkg&lt;/code> we will link to tailwindcss in the &lt;code>head&lt;/code> tag, and then &lt;code>import&lt;/code> vuejs from using a &lt;code>script type=&amp;quot;module&amp;quot;&lt;/code> tag.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hello, World&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://unpkg.com/tailwindcss@^1.2.0/dist/tailwind.min.css&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-xl&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ message }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;module&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Vue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.esm.browser.js&amp;#39;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">el&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;#title&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">message&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Hello from Vue!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Using &lt;code>import&lt;/code> we are pulling the &lt;code>vue.esm.browser.js&lt;/code> build straight from the CDN! So easy.&lt;/p>
&lt;h2 id="add-some-charts">Add some charts&lt;/h2>
&lt;p>&lt;a href="https://timqian.com/chart.xkcd/">chart.xkcd&lt;/a> is a nifty JavaScript library that lets you make charts like the stupendious &lt;a href="https://xkcd.com/">xkcd&lt;/a>. We&amp;rsquo;ll use the &lt;a href="https://github.com/shiyiya/chart.xkcd-vue">chart.xkcd-vue&lt;/a> wrapper.&lt;/p>
&lt;p>&lt;a href="https://pika.dev">pika.dev&lt;/a> is an index of packages that you can import as ES modules. That&amp;rsquo;s a great place to search for packages that can be &lt;code>import&lt;/code>ed directly. So lets import &lt;code>chartXkcd&lt;/code> and wire it up with some sample data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hello, World&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://unpkg.com/tailwindcss@^1.2.0/dist/tailwind.min.css&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;app&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;min-h-screen&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">chartxkcd-line&lt;/span> &lt;span class="na">:config&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;config&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">chartxkcd-line&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;module&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Vue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.esm.browser.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">chartXkcdVue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;https://cdn.pika.dev/chart.xkcd-vue@^1.1.0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">Vue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">chartXkcdVue&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">vm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">el&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;#app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">config&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Monthly income of an indie developer&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">xLabel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Month&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">yLabel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;$ Dollors&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">labels&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;4&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;5&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;6&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;7&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;9&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;10&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nx">datasets&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">label&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Plan&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">70&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">500&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1500&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2900&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8000&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">label&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Reality&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">70&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Which should generate the following image:&lt;/p>
&lt;p>
&lt;img class='' style='max-width: 100%' src='./articles/2020/making_charts_with_vuejs_and_no_tooling/graph.png'>
&lt;/p>
&lt;h2 id="pulling-in-data-from-a-file">Pulling in data from a file&lt;/h2>
&lt;p>We can shift the code to pulling out the data from a seperate &lt;code>json&lt;/code> file. I&amp;rsquo;m using a trick here to wrap everything in an anonymous function so I can use &lt;code>async&lt;/code> and &lt;code>await&lt;/code> to load stuff from the network. (I&amp;rsquo;m not a JavaScript developer so there could be a more awesome way to do this.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./dataset.json&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">...&lt;/span> &lt;span class="nx">old&lt;/span> &lt;span class="nx">code&lt;/span> &lt;span class="nx">using&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="nx">loaded&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">file&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="consuming-files-that-are-easier-to-make-with-shell-scripts">Consuming files that are easier to make with shell scripts&lt;/h2>
&lt;p>Lets write a couple bash commands to look at the number of commits in a repo organized by month.&lt;/p>
&lt;ol>
&lt;li>Create a file with a header.&lt;/li>
&lt;li>Get the dates of all of the commits in the log using &lt;code>git log&lt;/code> and the &lt;code>--pretty=format&lt;/code> command &lt;code>since&lt;/code> a year ago.&lt;/li>
&lt;li>Get rid of all the time after the month using sed. (The three characters before the &lt;code>T&lt;/code> is the &lt;code>-&lt;/code> and the two digit day.)&lt;/li>
&lt;li>Run it through &lt;code>uniq&lt;/code> to get the count&lt;/li>
&lt;li>Format the output with awk, print a header using &lt;code>BEGIN&lt;/code> and switch the order of the data and put a comma between it.&lt;/li>
&lt;/ol>
&lt;p>Is this the &lt;em>right way&lt;/em> to make a CSV file? No. But it&amp;rsquo;s easy to copy and paste.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git log --reverse --pretty&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;format:%aI&amp;#39;&lt;/span> --since&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1 year ago&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>sed &lt;span class="s1">&amp;#39;s/...T.*//&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>uniq -c&lt;span class="p">|&lt;/span>&lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>awk &lt;span class="s1">&amp;#39;BEGIN {print &amp;#34;Month,Commits&amp;#34;} // {print $2 &amp;#34;,&amp;#34; $1}&amp;#39;&lt;/span> &amp;gt; commits_by_month.csv
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That gives us a csv file like this:&lt;/p>
&lt;pre>&lt;code class="language-csv" data-lang="csv">Month,Commits
2019-03,8
2019-04,43
2019-05,3
2019-07,15
2019-08,2
2019-09,3
2019-12,17
2020-01,11
2020-02,18&lt;/code>&lt;/pre>
&lt;p>And now we can hack together some JavaScript to parse this file and create a data driven &lt;code>dataSet&lt;/code> that we&amp;rsquo;ll pass off to the charting library.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hello, World&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://unpkg.com/tailwindcss@^1.2.0/dist/tailwind.min.css&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;app&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;min-h-screen&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">chartxkcd-line&lt;/span> &lt;span class="na">:config&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;config&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">chartxkcd-line&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;module&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Vue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.esm.browser.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">chartXkcdVue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;https://cdn.pika.dev/chart.xkcd-vue@^1.1.0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">Vue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">chartXkcdVue&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./commits_by_month.csv&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// &amp;#34;Parse&amp;#34; the csv
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;\n&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">lines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">shift&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">xLabel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">yLabel&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Map out the structure of the graph data
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">dataSet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">labels&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="nx">datasets&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">label&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">yLabel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[]&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">};&lt;/span>
&lt;span class="nx">lines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">line&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">line&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// Skip over the last line
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">line&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">dataSet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">labels&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">dataSet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">datasets&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">parseInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">vm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">el&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;#app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">config&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Monthly commits&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">xLabel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">xLabel&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">yLabel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">yLabel&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">dataSet&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Parsing a csv file using &lt;code>split&lt;/code> and not bothering to do any error checking for &lt;code>parseInt&lt;/code> is serious cowboy style coding, but it is something that we can hack together quickly. Just expect to throw it out after you get it working.&lt;/p>
&lt;p>
&lt;img class='' style='max-width: 100%' src='./articles/2020/making_charts_with_vuejs_and_no_tooling/monthlygraph.png'>
&lt;/p>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>With this basic framework in place, you create simple visualizors of data in a self container file. Write some scripts that output JSON, and then move this HTML file around to parse and display them.&lt;/p>
&lt;p>Everything that you need is in one file, there&amp;rsquo;s no build process, you can copy and tweak it around. This is code that is meant to be deployed in on off situations, and when it break you throw it away and write it again.&lt;/p></description></item><item><title>Leveraging disposability for exploration</title><link>https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/</link><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/</guid><description>&lt;p>I play around with a lot of technology to see what&amp;rsquo;s out there and keep myself current, especially trying to find simpler ways to do &lt;a href="https://happyfuncorp.com/work">our work&lt;/a>. One of the issues is that this can leave lots of stuff laying which can be messy. Here are some techniques I use to keep things under control.&lt;/p>
&lt;p>There are two complementary principle&amp;rsquo;s that I focus on. One is reproducibility, and the other is disposibility. I want to be able to easily recreate what I was working on so that I don&amp;rsquo;t care if I throw it away. The easier I can reproduce things the better I can revisit them &amp;ndash; especially if I&amp;rsquo;m deep into something when I realize that there was a fundamental misunderstanding at the beginning.&lt;/p>
&lt;h2 id="labnotes-and-scripts">Labnotes and scripts&lt;/h2>
&lt;p>The first thing is that you should get into a habit of writing everything down. A lot of posts on this site start out as me copy and pasting commands that I&amp;rsquo;m running into a text file for later reference. Often I find that after I get to a certain place I realize that I&amp;rsquo;ve over complicated something and that there is a simpler way to do something, and my workflow in that situation is to delete everything that I was working on, go back and follow the steps I was had used to get there making corrections on how I went.&lt;/p>
&lt;p>Initially this is a simple text file that I copy commands into. Depending upon how far I get, this turns into a executable shell script, a &lt;code>Dockerfile&lt;/code>, a set of terraform provisioning files, ansible scripts or kubernetes files, etc. I prefer bash scripts overall since that&amp;rsquo;s the most flexible. Since this stuff isn&amp;rsquo;t in production I really don&amp;rsquo;t need to upgrade in place so I can cut some corners with idempotency by, basically, throwing away the entire container/instance/vm if I&amp;rsquo;ve made a mess.&lt;/p>
&lt;h2 id="cd-mktemp--d">&lt;code>cd $(mktemp -d)&lt;/code>&lt;/h2>
&lt;p>Which means that it should be easy to delete everything. I will generally create a working directory inside of a temp folder to play around in. This means that once I drop the idea, or that I reboot the computer the files all clean themselves up and go away. But I have a script I can follow to recreate things.&lt;/p>
&lt;p>This is especially useful for cloning things out of github to really poke around in them. Especially node projects that vomit out a massive &lt;code>node_modules&lt;/code> directory which I don&amp;rsquo;t need eating up hard disk space that I&amp;rsquo;ll need to track down in some unknown future.&lt;/p>
&lt;h2 id="provisioning-your-local-computer-with-a-script">Provisioning your local computer with a script&lt;/h2>
&lt;p>I split my computer time between a couple Pixelbooks, a MacBook Air and, well, my phone. Doing stuff on the phone using &lt;a href="https://termux.com/">TermUX&lt;/a> is possible but its a different enough environment that it&amp;rsquo;s not really worth it, since most linux things don&amp;rsquo;t really support arm processors in a first-class way. If you do a lot of RaspberryPI stuff maybe.&lt;/p>
&lt;p>But for the laptops setting up a script that installs your base environment is super useful, and when you find a tool that you use regularly it helps to consolidate the install script in one place. The Pixelbook in particular lends itself to this since it&amp;rsquo;s so natural to delete the entire linux environment and recreate it that it makes it easy to test. For debian machines (aka the Pixelbook) this is &lt;a href="../../2019/computer_setup_script/">the script that I use&lt;/a>, so on a clean VM I do:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp &lt;span class="p">;&lt;/span> curl https://willschenk.com/bootstrap.bash &amp;gt; bootstrap.bash&lt;span class="p">;&lt;/span> bash bootstrap.bash
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And a few minutes later I&amp;rsquo;m good to go. When there&amp;rsquo;s something else that I think I&amp;rsquo;d want in my toolbox, I add it to this script and install it from there so I never need to remember how to do it again.&lt;/p>
&lt;p>I&amp;rsquo;m experimenting with putting my config files in there also, or rather pulling them from a github repository. My &lt;code>.emacs&lt;/code> file for example is a contender. At the moment this doesn&amp;rsquo;t seem to be worth the overhead but your mileage may vary.&lt;/p>
&lt;h2 id="docker-to-spin-up-one-off-services">Docker to spin up one-off services&lt;/h2>
&lt;p>I was testing out how to connect &lt;a href="https://deno.land/">deno&lt;/a> to &lt;a href="https://redis.io/">redis&lt;/a> the other day, and I needed a redis server to play around with. So I ran&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --rm -p 6379:6379 redis
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And it pulled down the latest image and started it up. One line. When I kill that command, since I passed the &lt;code>--rm&lt;/code> it cleans up the container afterwards and makes everything go away.&lt;/p>
&lt;p>This works for other things other than redis. As a distribution mechanism this is super cool and easy.&lt;/p>
&lt;p>&lt;code>docker-compose&lt;/code> is often more trouble than it&amp;rsquo;s worth. It&amp;rsquo;s really useful when you are setting up private networks between the server or managing long term volumes, but compare how hard it was to setup &lt;code>certbot&lt;/code> using &lt;code>docker-compose&lt;/code> in &lt;a href="../../2019/setting_up_an_ipfs_node/">setting up an ipfs_node&lt;/a> vs &lt;a href="../server_templating_with_terraform/setup.bash">setting it up with a bash script&lt;/a>. The bash script is much simpler to understand, reason about, and more importantly, tweak when you come back to it 6 month later.&lt;/p>
&lt;h2 id="single-binary-deploys">Single binary deploys&lt;/h2>
&lt;p>In many ways what Docker gives you is a way to treat everything as a single binary deploy. Yes the registry makes it easier, and yes having standard ways to set network ingress and volume access control are also super amazing, but really the part where it shines is the distribution method. One of the things that&amp;rsquo;s great about go and (maybe?) rust is that you get the single binary. After playing around with a lot of these different packaging systems it really makes things nicer. Docker helps with that which I think is a reason why it&amp;rsquo;s so popular.&lt;/p>
&lt;h2 id="docker-to-isolate-the-build-environment">Docker to isolate the build environment&lt;/h2>
&lt;ul>
&lt;li>&lt;code>node&lt;/code> projects require that you install &lt;code>nvm&lt;/code> &amp;ndash; which needs to mess with your environment variables &amp;ndash; and often install stuff in the global name space (though &lt;code>npx&lt;/code> is helping with that) and then vomit out a &lt;code>node_modules&lt;/code>.&lt;/li>
&lt;li>&lt;code>ruby&lt;/code> projects imply &lt;code>rbenv&lt;/code> &amp;ndash; which needs to mess with your environment variables &amp;ndash; and then run &lt;code>bundler&lt;/code> and install the gems who knows where.&lt;/li>
&lt;li>&lt;code>python&lt;/code> requires you to install &lt;code>pip&lt;/code> &amp;ndash; which also mess with your environment variables &amp;ndash; and frankly I don&amp;rsquo;t know where it stashes its stuff, seems like &lt;code>~/.local&lt;/code> and &lt;code>/.cache&lt;/code> which other things use also.&lt;/li>
&lt;li>&lt;code>go&lt;/code> is shifting things around and I think it&amp;rsquo;s getting better with go modules but you still have a (frankly very weird idea) of &lt;code>GOPATH&lt;/code> that puts everything in one honking workspace that you&amp;rsquo;ll need to isolate.&lt;/li>
&lt;li>I&amp;rsquo;m sure there&amp;rsquo;s something similar and exactly as annoying for &lt;code>rust&lt;/code> and &lt;code>php&lt;/code> projects but the same techniques should apply.&lt;/li>
&lt;/ul>
&lt;p>This annoys me, because it&amp;rsquo;s hard to isolate everything so that I can throw it away.&lt;/p>
&lt;p>One technique I&amp;rsquo;ll use here is to actually work inside of a docker container to get all of this stuff out of the way. Lets say we are talking about &lt;code>create-react-app&lt;/code>. We can create a &lt;code>Dockerfile&lt;/code> like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:11&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> mkdir -p /app &lt;span class="p">&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> /app&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> bash&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then build it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker build . -t nodeimg
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then start it up as an interactive shell, connecting to the host network with the current directory mounted in &lt;code>/app&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --rm -it --network host -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>:/app nodeimg
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And inside of it run &lt;code>cd /app &amp;amp;&amp;amp; npx create-react-app myapp&lt;/code> which will install a &lt;code>cra&lt;/code> templated application. Inside of this you can run &lt;code>yarn start&lt;/code> or whatever to bring up a server, use whatever editor you want on the local machine, etc. And once you quit that shell all of the &lt;code>node&lt;/code> stuff on your machine is gone.&lt;/p>
&lt;p>By the way:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ du -sh myapp
229M myapp/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>229 megabytes for an empty project!&lt;/p>
&lt;p>If you are a node person anyway and already have things setup than you don&amp;rsquo;t need to do this obviously. And depending upon how your editor is setup it may make sense to have a system install.&lt;/p>
&lt;p>But imagine that you are working on a remote server for some reason and you need to get into some node stuff real quick &amp;ndash; how much cleaner would this be to spend your 30 minutes doing whatever and then getting out cleanly, rather than having to mess around with installing system packages!&lt;/p>
&lt;p>OSX is clearly a second class citizen in the Docker world. The filesystem performace is shockingly atrocious. It works but&amp;hellip; And these commands won&amp;rsquo;t actually work if the volume you mount isn&amp;rsquo;t in the right filesystem &amp;ndash; i.e. you can&amp;rsquo;t develop like this in a &lt;code>mktemp -d&lt;/code> &amp;ldquo;environment&amp;rdquo;, since Docker won&amp;rsquo;t let you mount files from there.&lt;/p>
&lt;p>Another caveat here is that if you are on OSX this will give you a linux &lt;code>node_modules&lt;/code>, so if there is anything that requires native libs you need to reinstall &lt;code>node_modules&lt;/code> if you want to move locally, but you should have all the lockfiles in place to give you the same versions.&lt;/p>
&lt;h2 id="http2-requires-https-which-requires-a-cert-which-requires-a-domain">HTTP2 requires HTTPS which requires a cert which requires a domain&lt;/h2>
&lt;p>We are going full encryption everywhere which is great and a lot of things refuse to work right if its not run over HTTPS. You can get around this a bit by using HTTPS=true in lot of development environments which setup a self-signed certificate which is OK-ish, but often you need a server. I&amp;rsquo;ve documented how I &lt;a href="../server_templating_with_terraform">spin up a linode server, point a name to it, and setup nginx with certbot&lt;/a> earlier and this was a game changer. &lt;code>terraform&lt;/code> provisions the server and sets up DNS for me, and then I run a script to setup nginx and install a &lt;a href="https://letsencrypt.org/">LetsEncrypt&lt;/a> certificate.&lt;/p>
&lt;p>The key thing about this setup is &lt;code>terraform destroy&lt;/code> which cleans up everything after itself.&lt;/p>
&lt;p>This makes a lot of possible things easy, and as they get easier you are more likely to do it.&lt;/p>
&lt;h2 id="why-i-dont-like-one-click-installers">Why I don&amp;rsquo;t like one-click installers&lt;/h2>
&lt;p>A common workaround to this is to have one-click installers on DigitalOcean or Heroku or something. I don&amp;rsquo;t really like this because it hides too much stuff &amp;ndash; my goal often isn&amp;rsquo;t to actually run &lt;a href="http://dokku.viewdocs.io/dokku/">dokku&lt;/a> or &lt;a href="https://www.discourse.org/">discourse&lt;/a> or &lt;a href="https://docs.joinmastodon.org/admin/install/">mastodon&lt;/a> or whatever, it&amp;rsquo;s to explore how it works. Actually running a production system is more complicated and by assembling the pieces myself I get a better sense of what is involved. There&amp;rsquo;s nothing wrong with the approach of setting up quickly and I think it&amp;rsquo;s necessary for easy on-boarding to using the project.&lt;/p>
&lt;p>Especially if you already have supported infrastructure it makes sense to figure out how deploy on that rather than provisioning new stuff. In terms of actual deployment we use a lot of PaaS stuff &amp;ndash; I for one am happy never to have to run a database server again in my life &amp;ndash; so understanding how to pull out the Postgres install to use CloudSQL or whatever is valuable if we do decide to adopt something.&lt;/p>
&lt;p>The workflow here would be to get it working with the script, migrate those scripts to terraform to deal with the provisioning and coordination, and then use packer, ansible or kubernetes as needed to configure all the packages. But it starts with the scripts.&lt;/p>
&lt;h2 id="in-summary">In summary&lt;/h2>
&lt;ol>
&lt;li>Write every step down in a work file and constantly iterate&lt;/li>
&lt;li>Prefer bash scripts that assume stock OS image install&lt;/li>
&lt;li>Treat every working directory as a temp directory&lt;/li>
&lt;li>Isolate environmental contamination as much as possible&lt;/li>
&lt;li>Automate provision of local environment&lt;/li>
&lt;li>Make sure you automate tear down of cloud environment&lt;/li>
&lt;/ol></description></item><item><title>Playing with tailwind</title><link>https://willschenk.com/articles/2020/playing_with_tailwind/</link><pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/playing_with_tailwind/</guid><description>&lt;p>We are going to use &lt;a href="https://tailwindcss.com/">tailwindcss&lt;/a> to build a site. We will start with a blank folder and a static HTML file to work on the designs, and then slowly bring in other tools when needed to add in functionality.&lt;/p>
&lt;p>The site that we are going to build is a company directory that pulls in data from Google Apps Suite. The goal here is to build the simplest thing possible and not get lost in the tooling. We will start with a static site and explore different ways to pull in the data and style it.&lt;/p>
&lt;ol>
&lt;li>First go through styling a page with tailwind&lt;/li>
&lt;li>Then we&amp;rsquo;ll introduce the &lt;code>template&lt;/code> tag to style repeated elements&lt;/li>
&lt;li>Then we&amp;rsquo;ll build a &lt;em>Single Page App&lt;/em> within a single HTML file with no tooling.&lt;/li>
&lt;/ol>
&lt;h2 id="create-the-project-folder-and-base-html-file">Create the project folder and base HTML file&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir projectname &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> projectname
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we will create a base html file that we&amp;rsquo;ll use to start styling. We are going to include the full &lt;code>tailwind.min.css&lt;/code> file from a CDN so there&amp;rsquo;s no build process here.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;X-UA-Compatible&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ie=edge&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This is my title&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This is my document&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>There are many like it, but this one is mine.&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Let&amp;rsquo;s start up a preview server by running &lt;code>npx live-server&lt;/code> which should open up a browser window which will update files. You should see a window open up. If you edit some of the text, you should see it updated in the browser once you save. So far so good. All we&amp;rsquo;ve needed is an html file and node installed on the machine.&lt;/p>
&lt;h2 id="the-profile-page">The profile page&lt;/h2>
&lt;p>I pulled in my company logo and a headshot (well, I needed a passport photo for a visa application and so I went to a photobooth and took a picture of &lt;em>that&lt;/em> photo with my phone, so it&amp;rsquo;s like a manual Instagram filter) from our website, and wrote up a silly bio. Let&amp;rsquo;s throw that on a page a start adding classes.&lt;/p>
&lt;p>Lets build this:&lt;/p>
&lt;p>
&lt;img class='' style='max-width: 600px' src='./articles/2020/playing_with_tailwind/profile_done.png'>
&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;X-UA-Compatible&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ie=edge&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;logo.svg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>COO, CoFounder&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Will focuses on overall internal management of HappyFunCorp,
which involves making sure that people are happy and productive,
that clients are happy with their projects. This involves
meetings and a lot of psycology. It&amp;#39;s rewarding when
the company is growing and thriving, but also very different
from time spent immersed in the fun of computers.
The career grew out of the hobby, and now that my daily job
is different from the hobby I can go back to being a
hobby programmer. Coding for the pleasure of it.
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>There are two sections here, one for the header and the other for the bio. Let&amp;rsquo;s open up the &lt;a href="https://tailwindcss.com/">Tailwind Documentation&lt;/a> and walk through the process of styling everything. The workflow here is to press the &lt;code>/&lt;/code> key and type in what we are looking for to find the classes that we&amp;rsquo;ll need to apply it.&lt;/p>
&lt;h2 id="colors">Colors&lt;/h2>
&lt;p>First, let&amp;rsquo;s tweak some overall colors. We can search for &amp;ldquo;background&amp;rdquo; to see the classes available, so let&amp;rsquo;s add a few. Change the body background, maybe the text color, and the background color of the header.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-gray-100 text-gray-800&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-blue-500&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="margins-and-padding">Margins and Padding&lt;/h3>
&lt;p>Next, let&amp;rsquo;s center the things in the header by added auto margins to both of the &lt;code>img&lt;/code> tags. If we search for &lt;code>margin&lt;/code> we&amp;rsquo;ll see tons of utility classes, and we can find horizontal auto margins under &lt;code>mx-auto&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-blue-500&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;logo.svg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s fix some sizing and shaping here. Searching for &lt;code>height&lt;/code> or &lt;code>width&lt;/code> we can add some classes to &lt;code>logo.svg&lt;/code> say &lt;code>h-10 w-auto&lt;/code> to make it &lt;code>2.5rem&lt;/code> big. We will also make the image &lt;code>h-32&lt;/code> and &lt;code>w-32&lt;/code> to shrink it down and bit. Also search for round to find the &lt;code>rounded-full&lt;/code> class to make the avatar rounded.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-blue-500&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;logo.svg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto h-10 w-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto h-32 w-32 rounded-full&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally we need to give this thing more breathing room. Let&amp;rsquo;s add some padding to the top container, and then some negative top margin on the avatar to slide it up. Since the avatar is size 32, we&amp;rsquo;ll add negative 16 top margin to it. Sticking with this sizing, we&amp;rsquo;ll add top 16 margin to the header div, and space it out sized 4 from the logo for 16+4 bottom margin&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-blue-500 pt-16 pb-20&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;logo.svg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto h-10 w-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto rounded-full h-32 w-32 -mt-16&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="popping">Popping&lt;/h2>
&lt;p>The avatar looks pretty bland now, so let&amp;rsquo;s search for borders and shadows. Add &lt;code>shadow-xl border-solid border-2 border-gray-300&lt;/code> to the avatar img to give it a little border and a box shadow, and maybe we can also add a little shadow to the colored box.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-blue-500 pt-16 pb-20 shadow-lg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;logo.svg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto h-10 w-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto rounded-full h-32 w-32 -mt-16 shadow-xl border-solid border-2 border-gray-300&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="typography">Typography&lt;/h2>
&lt;p>We can center the text by adding &lt;code>mx-auto&lt;/code> to the outer &lt;code>div&lt;/code>, and &lt;code>text-center&lt;/code> to both the &lt;code>h1&lt;/code> and &lt;code>h2&lt;/code> tags. We&amp;rsquo;ll also set a &lt;code>max-w-lg&lt;/code> to keep the text in a smaller area.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto max-w-lg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>COO, CoFounder&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can adjust the text size by adding &lt;code>text-4xl&lt;/code> and &lt;code>text-xl&lt;/code> to the headers.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center text-4xl&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center text-cl&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>COO, CoFounder&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We&amp;rsquo;ll change the font weight using &lt;code>font-semibold&lt;/code> and &lt;code>font-light&lt;/code>, and decrease the letterspacing (aka &lt;em>tracking&lt;/em>) to &lt;code>tracking-tight&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center text-4xl font-semibold tracking-tight&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center text-cl font-light&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>COO, CoFounder&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, the vertical spacing doesn&amp;rsquo;t feel great, so let&amp;rsquo;s add some padding at the top and bottom.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pt-4 text-center text-4xl font-semibold tracking-tight&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pb-4 text-center text-cl font-light&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>COO, CoFounder&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, we can open the spacing up a bit on the bio text by changing the line spacing, called &lt;em>leading&lt;/em> in typography lingo, and justifying the text.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;leading-relaxed text-justify&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For everything is&lt;/p>
&lt;p>&lt;a href="./static/profile.html">&lt;code>static/profile.html&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">--- profile.html.base
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ profile.html
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -8,11 +8,12 @@
&lt;/span>&lt;span class="gu">&lt;/span> &amp;lt;/head&amp;gt;
&lt;span class="gd">- &amp;lt;body&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;div&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;img src=&amp;#34;logo.svg&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ &amp;lt;body class=&amp;#34;bg-gray-100 text-gray-800&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;div class=&amp;#34;bg-blue-500 pt-16 pb-20 shadow-lg&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;img src=&amp;#34;logo.svg&amp;#34; class=&amp;#34;mx-auto h-10 w-auto&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gi">&lt;/span> &amp;lt;/div&amp;gt;
&lt;span class="gd">- &amp;lt;img src=&amp;#34;face.jpg&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;div&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;h1&amp;gt;Will Schenk&amp;lt;/h1&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;h2&amp;gt;COO, CoFounder&amp;lt;/h2&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;p&amp;gt;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ &amp;lt;img src=&amp;#34;face.jpg&amp;#34; class=&amp;#34;mx-auto h-32 w-32 rounded-full -mt-16 shadow-xl border-solid border-2 border-gray-300&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;div class=&amp;#34;mx-auto max-w-lg&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;h1 class=&amp;#34;pt-4 text-center text-4xl font-semibold tracking-tight&amp;#34;&amp;gt;Will Schenk&amp;lt;/h1&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;h2 class=&amp;#34;pb-4 text-center text-xl font-light&amp;#34;&amp;gt;COO, CoFounder&amp;lt;/h2&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;p class=&amp;#34;leading-relaxed text-justify&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">&lt;/span> Will focuses on overall internal management of HappyFunCorp,
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="directory-pages">Directory pages&lt;/h2>
&lt;p>For our directory pages, we know that we are going to repeat the same element multiple times. We&amp;rsquo;ll use the html &lt;code>template&lt;/code> tag to let us edit stuff in place. We&amp;rsquo;ll define the template, a &lt;code>div&lt;/code> to hold it in, and some short javascript to add 10 copies of it to the container.&lt;/p>
&lt;p>
&lt;img class='' style='max-width: 600px' src='./articles/2020/playing_with_tailwind/directory_done.png'>
&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;X-UA-Compatible&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ie=edge&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Directory&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-blue-500 pt-16 pb-20 shadow-lg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;logo.svg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto h-10 w-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;person&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>COO, CoFounder&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mailto:will@happyfuncorp.com&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>will&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">container&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;#container&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;#person&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">container&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">appendChild&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cloneNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now let&amp;rsquo;s get a better layout, using flexbox to lay it out. Add &lt;code>flex&lt;/code> to the container div and we see that everything is laid out horizontally. This is a bit intense since everything is on one row. Let&amp;rsquo;s add &lt;code>flex-wrap&lt;/code> and &lt;code>justify-around&lt;/code> to it also, to have it span multiple lines and equally spread out the space around each element.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;flex flex-wrap justify-around&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Much better. The image I&amp;rsquo;m using is huge, so let&amp;rsquo;s shrink down that &lt;code>img&lt;/code> class so we can see what we are looking at. Let&amp;rsquo;s also copy the rounded and popping ideas from before.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;h-32 w-32 shadow-xl border-2 border-gray-200 rounded-full&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s now fix the size of the cards themselves. We&amp;rsquo;ve seen all these classes before, but I&amp;rsquo;m going to make it &lt;code>w-64&lt;/code> and add a rounded border to it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;w-64 border-solid border border-gray-200 rounded-lg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I want to center the image and have it overlap the card. We&amp;rsquo;ll do this by adding &lt;code>mt-20&lt;/code> to the outer &lt;code>div&lt;/code>, and &lt;code>-mt-16 ml-16&lt;/code> to the image.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;w-64 mt-20 border-solid border border-gray-200 rounded-lg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;face.jpg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;h-32 w-32 -mt-16 ml-16 shadow-xl border-2 border-gray-200 rounded-full&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally we&amp;rsquo;ll just center the email address.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center block mt-2 font-light&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mailto:will@happyfuncorp.com&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>will&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="variable-templating">Variable templating&lt;/h2>
&lt;p>Before we go down the route of setting up webcomponents and pulling in a bunch of other files, let&amp;rsquo;s change the code so that instead of duplicating the same template element each time, we drive it from an array.&lt;/p>
&lt;p>&lt;a href="./static/directory.html">&lt;code>static/directory.html&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">--- directory.html.1
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ directory.html
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -28,4 +28,18 @@
&lt;/span>&lt;span class="gu">&lt;/span>
&lt;span class="gd">- for( var i = 0; i &amp;lt; 10; i++ ) {
&lt;/span>&lt;span class="gd">- container.appendChild( template.content.cloneNode(true) );
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ var people = [
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Alice&amp;#39;, title: &amp;#39;Title 1&amp;#39;, mail: &amp;#39;alice&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Bob&amp;#39;, title: &amp;#39;Title 2&amp;#39;, mail: &amp;#39;bob&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Carol&amp;#39;, title: &amp;#39;Title 3&amp;#39;, mail: &amp;#39;carol&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Dom&amp;#39;, title: &amp;#39;Title 4&amp;#39;, mail: &amp;#39;dom&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Elena&amp;#39;, title: &amp;#39;Title 5&amp;#39;, mail: &amp;#39;elena&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Fineas&amp;#39;, title: &amp;#39;Title 6&amp;#39;, mail: &amp;#39;phinny&amp;#39; },
&lt;/span>&lt;span class="gi">+ ];
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ for( var i = 0; i &amp;lt; people.length; i++ ) {
&lt;/span>&lt;span class="gi">+ var tmp = template.content.cloneNode(true);
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;h1&amp;#34;).innerText = people[i].name;
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;h2&amp;#34;).innerText = people[i].title;
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;a&amp;#34;).innerText = people[i].mail;
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;a&amp;#34;).href = &amp;#34;mailto:&amp;#34; + people[i].mail + &amp;#34;@happyfuncorp.com&amp;#34;;
&lt;/span>&lt;span class="gi">+ container.appendChild( tmp );
&lt;/span>&lt;span class="gi">&lt;/span> }
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This looks like it will get out of hand a bit as we add more, say &lt;code>a&lt;/code> tags, but it&amp;rsquo;s a simple way to get going.&lt;/p>
&lt;h2 id="adding-more-pages">Adding more pages&lt;/h2>
&lt;p>Now we can add different pages to the site. We&amp;rsquo;ll start with a boiler plate that contains all of our previous code in a template. On the top we have the header, and a simple &lt;em>sidebar&lt;/em> that we&amp;rsquo;ll wire up to view things on the page.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-gray-100 text-gray-900&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-blue-500 pt-16 pb-20 shadow-lg&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;logo.svg&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mx-auto h-10 w-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;flex&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;w-64 p-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;block&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Login&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;block pt-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Directory&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;block pt-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Profile&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;root&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;w-full&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;login&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;m-4 px-4 py-2 bg-blue-500 text-gray-100 rounded&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Login&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to see the starting code, it&amp;rsquo;s &lt;a href="static/index.html.base">&lt;code>static/index.html.base&lt;/code>&lt;/a>. Let&amp;rsquo;s get into the JavaScript!&lt;/p>
&lt;p>First we are going to add some click handlers to our sidebar, using good old &lt;code>onClick&lt;/code>.&lt;/p>
&lt;p>Then we have three functions that clear out the &lt;code>root&lt;/code> dom element, pull the content from the &lt;code>template&lt;/code> tags, adjust as needed and add to the root container.&lt;/p>
&lt;p>&lt;a href="./static/index.html">&lt;code>static/index.html&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">--- index.html.base
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ index.html
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -15,5 +15,5 @@
&lt;/span>&lt;span class="gu">&lt;/span> &amp;lt;div class=&amp;#34;w-64 p-4&amp;#34;&amp;gt;
&lt;span class="gd">- &amp;lt;a href=&amp;#34;#&amp;#34; class=&amp;#34;block&amp;#34;&amp;gt;Login&amp;lt;/a&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;a href=&amp;#34;#&amp;#34; class=&amp;#34;block pt-4&amp;#34;&amp;gt;Directory&amp;lt;/a&amp;gt;
&lt;/span>&lt;span class="gd">- &amp;lt;a href=&amp;#34;#&amp;#34; class=&amp;#34;block pt-4&amp;#34;&amp;gt;Profile&amp;lt;/a&amp;gt;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ &amp;lt;a href=&amp;#34;#&amp;#34; onClick=&amp;#34;showLogin()&amp;#34; class=&amp;#34;block&amp;#34;&amp;gt;Login&amp;lt;/a&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;a href=&amp;#34;#&amp;#34; onClick=&amp;#34;showDirectory()&amp;#34; class=&amp;#34;block pt-4&amp;#34;&amp;gt;Directory&amp;lt;/a&amp;gt;
&lt;/span>&lt;span class="gi">+ &amp;lt;a href=&amp;#34;#&amp;#34; onClick=&amp;#34;showProfile()&amp;#34; class=&amp;#34;block pt-4&amp;#34;&amp;gt;Profile&amp;lt;/a&amp;gt;
&lt;/span>&lt;span class="gi">&lt;/span> &amp;lt;/div&amp;gt;
&lt;span class="gu">@@ -55,2 +55,45 @@
&lt;/span>&lt;span class="gu">&lt;/span> &amp;lt;/template&amp;gt;
&lt;span class="gi">+ &amp;lt;script&amp;gt;
&lt;/span>&lt;span class="gi">+ var root = document.querySelector( &amp;#39;#root&amp;#39; );
&lt;/span>&lt;span class="gi">+ var loginTemplate = document.querySelector( &amp;#39;#login&amp;#39; );
&lt;/span>&lt;span class="gi">+ var personTemplate = document.querySelector( &amp;#39;#person&amp;#39; );
&lt;/span>&lt;span class="gi">+ var profileTemplate = document.querySelector( &amp;#39;#profile&amp;#39; );
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ function showLogin() {
&lt;/span>&lt;span class="gi">+ root.innerHTML = &amp;#39;&amp;#39;;
&lt;/span>&lt;span class="gi">+ root.appendChild( loginTemplate.content.cloneNode(true));
&lt;/span>&lt;span class="gi">+ }
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ function showDirectory() {
&lt;/span>&lt;span class="gi">+ // This is a bit hacky
&lt;/span>&lt;span class="gi">+ root.innerHTML = &amp;#39;&amp;lt;div id=&amp;#34;container&amp;#34; class=&amp;#34;flex flex-wrap justify-around&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;;
&lt;/span>&lt;span class="gi">+ var container = document.querySelector( &amp;#34;#container&amp;#34; );
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ var people = [
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Alice&amp;#39;, title: &amp;#39;Title 1&amp;#39;, mail: &amp;#39;alice&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Bob&amp;#39;, title: &amp;#39;Title 2&amp;#39;, mail: &amp;#39;bob&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Carol&amp;#39;, title: &amp;#39;Title 3&amp;#39;, mail: &amp;#39;carol&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Dom&amp;#39;, title: &amp;#39;Title 4&amp;#39;, mail: &amp;#39;dom&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Elena&amp;#39;, title: &amp;#39;Title 5&amp;#39;, mail: &amp;#39;elena&amp;#39; },
&lt;/span>&lt;span class="gi">+ { name: &amp;#39;Fineas&amp;#39;, title: &amp;#39;Title 6&amp;#39;, mail: &amp;#39;phinny&amp;#39; },
&lt;/span>&lt;span class="gi">+ ];
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ people.forEach( (person) =&amp;gt; {
&lt;/span>&lt;span class="gi">+ var tmp = personTemplate.content.cloneNode(true);
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;h1&amp;#34;).innerText = person.name;
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;h2&amp;#34;).innerText = person.title;
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;a&amp;#34;).innerText = person.mail;
&lt;/span>&lt;span class="gi">+ tmp.querySelector(&amp;#34;a&amp;#34;).href = &amp;#34;mailto:&amp;#34; + person.mail + &amp;#34;@happyfuncorp.com&amp;#34;;
&lt;/span>&lt;span class="gi">+ container.appendChild( tmp );
&lt;/span>&lt;span class="gi">+ } )
&lt;/span>&lt;span class="gi">+ }
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ function showProfile() {
&lt;/span>&lt;span class="gi">+ root.innerHTML = &amp;#39;&amp;#39;;
&lt;/span>&lt;span class="gi">+ root.appendChild( profileTemplate.content.cloneNode(true) );
&lt;/span>&lt;span class="gi">+ }
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ showLogin();
&lt;/span>&lt;span class="gi">+ &amp;lt;/script&amp;gt;
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">&lt;/span> &amp;lt;/body&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>From here the next step in organization would be to split these templates out into their own webcomponents. We&amp;rsquo;ll be building more once we get data from an external source, and that will make the organization complicated. But for now, this works for demoable purposes and all we&amp;rsquo;ve had to use to make this all happen in a code editor. No tooling, compiling, and all of the code is self-contained and ready for someone to start hacking away at it.&lt;/p>
&lt;p>The design and design implementation process with tailwind should also be called out for being such a pleasure. Editing one file, our choices contrained by what&amp;rsquo;s available so we don&amp;rsquo;t get too crazy &amp;ndash; I especially like that padding and margins aren&amp;rsquo;t pixel based, so you get to be forced between a couple options and one is generally better than the other. You feel guided but someone else&amp;rsquo;s experience.&lt;/p>
&lt;p>I also really like that the HTML and the styling are together so you aren&amp;rsquo;t flipping between two different mindsets. That makes it possible to resist the over generalization temptation of CSS to try and build reusable components, which you always end up needing to tweak in any case. Sure you have to do things multiple times, but since it&amp;rsquo;s so easy to do it you come out way ahead with the added simplicity and lower cognitive surface area. Would recommend.&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://tailwindcss.com/">https://tailwindcss.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Styling Hugo Diffs</title><link>https://willschenk.com/articles/2020/styling_hugo_diffs/</link><pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/styling_hugo_diffs/</guid><description>&lt;p>I often want to show small changes I&amp;rsquo;m making to a file and it would be nice for hugo to support styling patches directly. Lets see what we can do to make this process easier.&lt;/p>
&lt;p>Lets take the example of &lt;em>create node package.json file and add the following scripts&lt;/em> worflow. How can we say this different than &amp;ldquo;copy this into your &lt;code>package.json&lt;/code> file&amp;rdquo;?&lt;/p>
&lt;h2 id="create-sample-steps">Create sample steps&lt;/h2>
&lt;p>Lets first create the file using &lt;code>npm init -y&lt;/code> and then immediately &lt;code>cp package.json package.json.base&lt;/code>. In this case, we want to add some &lt;code>script&lt;/code> attributes, like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="s2">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;build:eleventy&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;eleventy&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;serve:eleventy&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;eleventy --serve&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;debug:eleventy&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;DEBUG=* eleventy&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>So we can now look at the differences of the files using the &lt;code>diff&lt;/code> command. I&amp;rsquo;m going to have it user the unified format showing 1 line of code on either side.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">diff -U &lt;span class="m">1&lt;/span> package.json.base package.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which outputs:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-patch" data-lang="patch">&lt;span class="gd">--- package.json.base 2020-01-30 14:38:18.933332377 -0600
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ package.json 2020-01-30 15:43:37.174332377 -0600
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -6,3 +6,5 @@
&lt;/span>&lt;span class="gu">&lt;/span> &amp;#34;scripts&amp;#34;: {
&lt;span class="gd">- &amp;#34;test&amp;#34;: &amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ &amp;#34;build:eleventy&amp;#34;: &amp;#34;eleventy&amp;#34;,
&lt;/span>&lt;span class="gi">+ &amp;#34;serve:eleventy&amp;#34;: &amp;#34;eleventy --serve&amp;#34;,
&lt;/span>&lt;span class="gi">+ &amp;#34;debug:eleventy&amp;#34;: &amp;#34;DEBUG=* eleventy&amp;#34;
&lt;/span>&lt;span class="gi">&lt;/span> },
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This seems a little better, but how do we keep it up to date?&lt;/p>
&lt;h2 id="bash-script">Bash script&lt;/h2>
&lt;p>We are going to write a bash script to parse though a files. First lets do that and make sure that we can pull out the base name of the file.&lt;/p>
&lt;p>&lt;a href="./update_patches.sh.base">&lt;code>update_patches.sh.base&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">#!/bin/bash
&lt;p>for i in *.base
do
echo $i is the base file
echo ${i%.base} is final file
done
&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>That seems to work, now lets loop over the files that match the base name, skipping the files that we don&amp;rsquo;t want. Once we get to the &lt;code>.base&lt;/code> file, we know that we are at the end of our patching, and we need to compare the last stage with the original file instead, so we&amp;rsquo;ll check for that and update the variables so that the &lt;code>stage&lt;/code> file is actually the current one.&lt;/p>
&lt;p>&lt;a href="./update_patches.sh.1">&lt;code>update_patches.sh.1&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">--- update_patches.sh.base
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ update_patches.sh.1
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -4,4 +4,22 @@
&lt;/span>&lt;span class="gu">&lt;/span> do
&lt;span class="gd">- echo $i is the base file
&lt;/span>&lt;span class="gd">- echo ${i%.base} is final file
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ last_file=&amp;#34;$i&amp;#34;
&lt;/span>&lt;span class="gi">+ final_file=&amp;#34;${i%.base}&amp;#34;
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ for stage in ${final_file}.*
&lt;/span>&lt;span class="gi">+ do
&lt;/span>&lt;span class="gi">+ # Strip out emacs junk
&lt;/span>&lt;span class="gi">+ if [[ $stage == *~ ]]; then
&lt;/span>&lt;span class="gi">+ continue
&lt;/span>&lt;span class="gi">+ fi
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ # We are at the end!
&lt;/span>&lt;span class="gi">+ if [[ $stage == *.base ]]; then
&lt;/span>&lt;span class="gi">+ stage=$final_file
&lt;/span>&lt;span class="gi">+ fi
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ echo Need to patch $last_file to make $stage
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ last_file=$stage
&lt;/span>&lt;span class="gi">+ done
&lt;/span>&lt;span class="gi">+ echo
&lt;/span>&lt;span class="gi">&lt;/span> done
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The logic seems to work, so lets add the actual diff creation. But the diff files match our pattern, so we&amp;rsquo;ll need to add a check to skip over them when we loop over the glob!&lt;/p>
&lt;p>&lt;a href="./update_patches.sh">&lt;code>update_patches.sh&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">--- update_patches.sh.1
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ update_patches.sh
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -19,3 +19,13 @@
&lt;/span>&lt;span class="gu">&lt;/span>
&lt;span class="gd">- echo Need to patch $last_file to make $stage
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ # Skip parsing of diff files
&lt;/span>&lt;span class="gi">+ if [[ $stage == *.diff ]]; then
&lt;/span>&lt;span class="gi">+ continue
&lt;/span>&lt;span class="gi">+ fi
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ echo Creating $stage.diff
&lt;/span>&lt;span class="gi">+
&lt;/span>&lt;span class="gi">+ # -Z Ignores space
&lt;/span>&lt;span class="gi">+ # -U 1 sets to the unified patch format with one surrounding lines
&lt;/span>&lt;span class="gi">+ # Setting --label directly lets use avoid timestamps
&lt;/span>&lt;span class="gi">+ diff -Z -U 1 --label $last_file --label $stage $last_file $stage &amp;gt; $stage.diff
&lt;/span>&lt;span class="gi">&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>The idea here is that you are working on an explainable chunk of work. You start by getting a base file that everyone can work off of. For example, run &lt;code>npm init -y&lt;/code> and then copy that file to &lt;code>package.json.base&lt;/code>. Then make your changes and run &lt;code>update_patches.sh&lt;/code> to generate the patch, which will initially just compare &lt;code>package.json.base&lt;/code> and &lt;code>package.json&lt;/code>&lt;/p>
&lt;p>Later you want to make another change to the file. Before you edit &lt;code>package.json&lt;/code> make a copy to &lt;code>package.json.1&lt;/code>, and make your changes again. Then run &lt;code>update_patches.sh&lt;/code> which will regenerate all the diffs for each file. Then write about it, and repeat the process as necessary.&lt;/p>
&lt;h2 id="displaying-the-patch-files-easily">Displaying the patch files easily&lt;/h2>
&lt;p>What I want to do in while writing markdown is to do something like&lt;/p>
&lt;p>&lt;em>If we want to show the base file&lt;/em>:&lt;/p>
&lt;p>&lt;code>{{ diff &amp;ldquo;package.json&amp;rdquo; }}&lt;/code>&lt;/p>
&lt;p>&lt;em>text here&lt;/em>&lt;/p>
&lt;p>&lt;code>{{ diff &amp;ldquo;package.json&amp;rdquo; &amp;ldquo;1&amp;rdquo; }}&lt;/code>&lt;/p>
&lt;p>&lt;em>text here&lt;/em>&lt;/p>
&lt;p>&lt;code>{{ diff &amp;ldquo;package.json&amp;rdquo; &amp;ldquo;final&amp;rdquo; }}&lt;/code>&lt;/p>
&lt;p>in my content file, and which will figure out the correct diff to inline it.&lt;/p>
&lt;p>Here is a &lt;a href="./diff.html">hugo short code&lt;/a> that you can drop in your &lt;code>/layouts/shortcodes/&lt;/code> folder that will make that possible.&lt;/p>
&lt;p>Embedding shortcodes as an example inside of hugo is a pain, so I&amp;rsquo;ll walk you through the logic but we wont&amp;rsquo; be looking at the code.&lt;/p>
&lt;ol>
&lt;li>Pull out the parameters to make it easier to work with.&lt;/li>
&lt;li>&lt;code>$diff&lt;/code> is going to contain the file contents, initialize it to blank in a scope that everyone can see.&lt;/li>
&lt;li>If &lt;code>$stage&lt;/code> is set and is &lt;code>final&lt;/code>, we append &amp;ldquo;.diff&amp;rdquo; to a file &amp;ndash; which we assume is in the same directory as the Page that is calling the short code &amp;ndash; and &lt;code>readFile&lt;/code>.&lt;/li>
&lt;li>If &lt;code>$stage&lt;/code> is set but not final, append &amp;ldquo;.$stage.diff&amp;rdquo; to the filename and load.&lt;/li>
&lt;li>If &lt;code>$stage&lt;/code> is blank load &amp;ldquo;$filename.diff&amp;rdquo;. This is to avoid expanding to &lt;code>..diff&lt;/code> which has an extra &lt;code>.&lt;/code>.&lt;/li>
&lt;li>Markdownify a link to the file directly and pass to markdownify&lt;/li>
&lt;li>Markdownify the actual file, formatting is as a &lt;code>diff&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="what-it-looks-like-in-action">What it looks like in action&lt;/h2>
&lt;p>Lets first start out by creating an empty project:&lt;/p>
&lt;ol>
&lt;li>&lt;code>mkdir projectname &amp;amp;&amp;amp; cd projectname&lt;/code>&lt;/li>
&lt;li>&lt;code>npm init -y&lt;/code>&lt;/li>
&lt;li>Add the following script entries to the generated &lt;code>package.json&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="./package.json.1">&lt;code>package.json.1&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">--- package.json.base
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ package.json.1
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -6,3 +6,5 @@
&lt;/span>&lt;span class="gu">&lt;/span> &amp;#34;scripts&amp;#34;: {
&lt;span class="gd">- &amp;#34;test&amp;#34;: &amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ &amp;#34;build:eleventy&amp;#34;: &amp;#34;eleventy&amp;#34;,
&lt;/span>&lt;span class="gi">+ &amp;#34;serve:eleventy&amp;#34;: &amp;#34;eleventy --serve&amp;#34;,
&lt;/span>&lt;span class="gi">+ &amp;#34;debug:eleventy&amp;#34;: &amp;#34;DEBUG=* eleventy&amp;#34;
&lt;/span>&lt;span class="gi">&lt;/span> },
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Oh, we forgot to install &lt;code>eleventy&lt;/code>! Let&amp;rsquo;s do that now with &lt;code>npm install --save-dev @11ty/eleventy&lt;/code> which should modify your &lt;code>package.json&lt;/code> like so:&lt;/p>
&lt;p>&lt;a href="./package.json">&lt;code>package.json&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">--- package.json.1
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ package.json
&lt;/span>&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -12,3 +12,6 @@
&lt;/span>&lt;span class="gu">&lt;/span> &amp;#34;author&amp;#34;: &amp;#34;&amp;#34;,
&lt;span class="gd">- &amp;#34;license&amp;#34;: &amp;#34;ISC&amp;#34;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ &amp;#34;license&amp;#34;: &amp;#34;ISC&amp;#34;,
&lt;/span>&lt;span class="gi">+ &amp;#34;devDependencies&amp;#34;: {
&lt;/span>&lt;span class="gi">+ &amp;#34;@11ty/eleventy&amp;#34;: &amp;#34;^0.10.0&amp;#34;,
&lt;/span>&lt;span class="gi">+ }
&lt;/span>&lt;span class="gi">&lt;/span> }
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Template to setup a linode server with DNS and HTTPS</title><link>https://willschenk.com/articles/2020/server_templating_with_terraform/</link><pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/server_templating_with_terraform/</guid><description>&lt;p>I use &lt;a href="https://dnsimple.com/">DNSimple&lt;/a> for domain management, and I&amp;rsquo;ve been playing around with a bunch of different cloud providers and deployment setups. So I wanted to make it easier to give these machines names rather than clicking through the control panel all the time. Lets walk through how to use terraform, DNSimple, and linode to provision and new machine and give it a name on the internet, and then create a webserver on it to which encrypts traffic.&lt;/p>
&lt;p>This is really a base template for easily spinning up simple sites.&lt;/p>
&lt;ol>
&lt;li>Get a domain and host it on DNSimple&lt;/li>
&lt;li>Sign up for ISP, in this case Linode&lt;/li>
&lt;li>Get API token for linode&lt;/li>
&lt;li>Terraform up your server and get it&amp;rsquo;s ip address&lt;/li>
&lt;li>Get api tokens from DNSimple&lt;/li>
&lt;li>Terraform up DNSimple to point to your ip address&lt;/li>
&lt;li>Setup nginx with letsencrypt to have secure hosting&lt;/li>
&lt;/ol>
&lt;h2 id="setting-up-linode">Setting up linode&lt;/h2>
&lt;p>Create a new linode account if you don&amp;rsquo;t have one. Then go to your &lt;a href="https://cloud.linode.com/profile/tokens">Linode Profile Token Page&lt;/a> and create a personal access token. Again copy it some where secure and then set it in the current environment. After this everything will be scripted and automated.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LINODE_TOKEN&lt;/span>&lt;span class="o">=&lt;/span>asdfasdf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to pass variables into terraform, you need to prefix them with &lt;code>TF_VAR_&lt;/code>. Lets do that now.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_linode_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$LINODE_TOKEN&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this script, we are setting up a Debian linode server with our local ssh keys installed. (It installs the public key found in &lt;code>~/.ssh/id_rsa.pub&lt;/code>.)&lt;/p>
&lt;p>&lt;a href="%60linode.tf%60">&lt;code>linode.tf&lt;/code>&lt;/a>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-tf" data-lang="tf">&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;linode_token&amp;#34;&lt;/span> {}
&lt;span class="kr">provider&lt;/span> &lt;span class="s">&amp;#34;linode&amp;#34;&lt;/span> {
&lt;span class="na"> token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">linode_token&lt;/span>
}&lt;span class="c1">
&lt;/span>&lt;span class="c1">
&lt;/span>&lt;span class="c1"># Setup the ssh key from the local machine
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;linode_sshkey&amp;#34; &amp;#34;key&amp;#34;&lt;/span> {
&lt;span class="na"> label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;sshkey&amp;#34;&lt;/span>
&lt;span class="na"> ssh_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">chomp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;~/.ssh/id_rsa.pub&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
}&lt;span class="c1">
&lt;/span>&lt;span class="c1">
&lt;/span>&lt;span class="c1"># Create a server
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;linode_instance&amp;#34; &amp;#34;web&amp;#34;&lt;/span> {
&lt;span class="na"> image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;linode/debian10&amp;#34;&lt;/span>
&lt;span class="na"> label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Web&amp;#34;&lt;/span>
&lt;span class="na"> group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Terraform&amp;#34;&lt;/span>
&lt;span class="na"> region&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;us-east&amp;#34;&lt;/span>
&lt;span class="na"> type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;g6-standard-1&amp;#34;&lt;/span>
&lt;span class="na"> authorized_keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;${linode_sshkey.key.ssh_key}&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c1">
&lt;/span>&lt;span class="c1"> # Leave the root password unset to keep it random
&lt;/span>&lt;span class="c1"># root_pass = &amp;#34;YOUR_ROOT_PASSWORD&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span>}
&lt;span class="err">output&lt;/span> &lt;span class="s2">&amp;#34;server_ip&amp;#34;&lt;/span> {
&lt;span class="na"> value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;${linode_instance.web.ip_address}&amp;#34;&lt;/span>
}&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Running &lt;code>terraform init&lt;/code> will validate this file and make sure that the right plugins are installed. You can then set up the server but running &lt;code>terraform apply&lt;/code>.&lt;/p>
&lt;p>Once it&amp;rsquo;s up, you can test connecting to it using&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh root@&lt;span class="k">$(&lt;/span>terraform output server_ip&lt;span class="k">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="get-a-dnsimple-token">Get a DNSimple token&lt;/h2>
&lt;p>I already use DNSimple to host my domains, so that&amp;rsquo;s what I&amp;rsquo;m going to use here. DNSimple is cool but many places offer domains and I have no special insight as to why one is better than the other. Hosting the domain at your cloud provider is probably preferable if you are committed to one, but I host things all over the place.&lt;/p>
&lt;p>Log in to your &lt;a href="https://dnsimple.com/">DNSimple Account Page&lt;/a> and create a new account access token. Go to the &lt;code>Account&lt;/code> tab, then on the left select &lt;code>Automation&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DNS_TOKEN&lt;/span>&lt;span class="o">=&lt;/span>asdfasdfasdf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can test out the token and look for our account id, which is displayed on the page but why not just verify that things are looking good.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl https://api.dnsimple.com/v2/whoami -H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DNS_TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which should make something like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;account&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">7008&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;wschenk@gmail.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;plan_identifier&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;gold-v1-yearly&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;created_at&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2012-06-07T11:47:25Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;updated_at&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2020-01-04T18:11:05Z&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can set and environment variable automatically with&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DNS_ACCOUNT_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>curl https://api.dnsimple.com/v2/whoami -H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DNS_TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>jq .data.account.id&lt;span class="k">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To get a list of domains&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl https://api.dnsimple.com/v2/&lt;span class="si">${&lt;/span>&lt;span class="nv">DNS_ACCOUNT_ID&lt;/span>&lt;span class="si">}&lt;/span>/domains -H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DNS_TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>jq .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now that we have a working token and account id, we can use terraform to setup a name that points to our new server.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_dns_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$DNS_TOKEN&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_dns_account_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$DNS_ACCOUNT_ID&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_dns_domain&lt;/span>&lt;span class="o">=&lt;/span>willschenk.com
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="%60dnsimple.tf%60">&lt;code>dnsimple.tf&lt;/code>&lt;/a>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-tf" data-lang="tf">&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;dns_token&amp;#34;&lt;/span> {}
&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;dns_account_id&amp;#34;&lt;/span> {}
&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;dns_domain&amp;#34;&lt;/span> {}
&lt;span class="kr">provider&lt;/span> &lt;span class="s">&amp;#34;dnsimple&amp;#34;&lt;/span> {
&lt;span class="na"> token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">dns_token&lt;/span>
&lt;span class="na"> account&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">dns_account_id&lt;/span>
}
&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;dnsimple_record&amp;#34; &amp;#34;web&amp;#34;&lt;/span> {
&lt;span class="na"> domain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">dns_domain&lt;/span>
&lt;span class="na"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;web&amp;#34;&lt;/span>
&lt;span class="na"> value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">linode_instance&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">web&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">ip_address&lt;/span>
&lt;span class="na"> type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span>
&lt;span class="na"> ttl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3600&lt;/span>
}&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Then run &lt;code>terraform init&lt;/code> to download the DNSimple provisioner, and &lt;code>terraform apply&lt;/code> to set the &lt;code>web&lt;/code> address of the &lt;code>TF_VAR_dns_domain&lt;/code> domain to the public IP that linode gave you.&lt;/p>
&lt;p>Terraform is also smart enough to order the dependacies, so if you setup everything from scratch it will setup the server first in order to get the IP address that it needs to setup the domain record. Nifty.&lt;/p>
&lt;h2 id="setting-up-the-server">Setting up the server&lt;/h2>
&lt;p>Next we are going to run a script over SSH to do the provisioning of the &lt;code>Debian&lt;/code> instance. I think that this is easier that using packer or some other tool, since we only have a few commands that need to run. We should setup the script so that it can run multiple times without any ill effect. The trick here is that if we really change things, we should backup the data on the server and completely redeploy everything from scratch. You don&amp;rsquo;t want to manually login to the server to make changes really at any point.&lt;/p>
&lt;p>This is what we&amp;rsquo;re going to do:&lt;/p>
&lt;ol>
&lt;li>Set the Fully Qualified Domain Name&lt;/li>
&lt;li>Update all system packages (this can take a while the first run)&lt;/li>
&lt;li>Install &lt;code>nginx&lt;/code>&lt;/li>
&lt;li>Install &lt;code>certbot&lt;/code> from it&amp;rsquo;s repository&lt;/li>
&lt;li>Run the &lt;code>certbot&lt;/code> command, which will prompt you to fill out information.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="%60setup.bash%60">&lt;code>setup.bash&lt;/code>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">FQDN&lt;/span>&lt;span class="o">=&lt;/span>web.&lt;span class="si">${&lt;/span>&lt;span class="nv">TF_VAR_dns_domain&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># We copy this script over and the run it so that you are able to&lt;/span>
&lt;span class="c1"># interact with the script using your local machine&lt;/span>
&lt;span class="nb">echo&lt;/span> Copying setup script over
ssh root@&lt;span class="k">$(&lt;/span>terraform output server_ip&lt;span class="k">)&lt;/span> -T &lt;span class="s2">&amp;#34;cat &amp;gt; /tmp/setup.bash;chmod +x /tmp/setup.bash&amp;#34;&lt;/span> &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span class="s">echo Setting hostname to ${FQDN}
&lt;/span>&lt;span class="s">hostnamectl set-hostname ${FQDN}
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">echo \n Running apt-get update and upgrade
&lt;/span>&lt;span class="s">apt-get update &amp;amp;&amp;amp; apt-get upgrade -y
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">echo \n Installing nginx
&lt;/span>&lt;span class="s">apt-get install -y nginx
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">echo \n Adding certbot app repository
&lt;/span>&lt;span class="s">add-apt-repository ppa:certbot/certbot
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">echo \n Install certbot
&lt;/span>&lt;span class="s">apt install -y python-certbot-nginx
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">echo \n Setup certbot for nginx for the domain ${FQDN}
&lt;/span>&lt;span class="s">certbot --nginx -d ${FQDN}
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;span class="nb">echo&lt;/span> Running script
ssh root@&lt;span class="k">$(&lt;/span>terraform output server_ip&lt;span class="k">)&lt;/span> &lt;span class="s2">&amp;#34;bash /tmp/setup.bash&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Run this with &lt;code>bash setup.bash&lt;/code> and it will copy itself over to the remote server and run the setup scripts. It may take a minute or two for the remote server to be up and accepting ssh connections.&lt;/p>
&lt;p>I set the server to redirect everything to HTTPS. With this baseline you can dump in your static files, add subdomains, or do whatever you want.&lt;/p>
&lt;h2 id="now-you-have-a-server">Now you have a server&lt;/h2>
&lt;p>You need a domain name to get HTTPS, and there are a lot of services that require that. This is a simple template to get you up and running. From here you can expirement and shut it down, or you can use this as a base to build something else up. (This post started because I wanted to play around with &lt;a href="http://dokku.viewdocs.io/dokku/">dokku&lt;/a> and I got distracted setting up a server and domain. Now I can spin something up quicky and play, and if I don&amp;rsquo;t want to keep anything I can do &lt;code>terraform destroy&lt;/code> and it all goes away.&lt;/p>
&lt;p>I find that it&amp;rsquo;s actually nice to use scripts to set things up and tear things down. A lot of these blog posts are actually me going through the steps of setting things up over and over, and recreating the process a number of times to make sure that I understand how it works.&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.linode.com/docs/applications/configuration-management/how-to-build-your-infrastructure-using-terraform-and-linode/">https://www.linode.com/docs/applications/configuration-management/how-to-build-your-infrastructure-using-terraform-and-linode/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.terraform.io/docs/providers/linode/r/sshkey.html">https://www.terraform.io/docs/providers/linode/r/sshkey.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.terraform.io/docs/providers/dnsimple/r/record.html">https://www.terraform.io/docs/providers/dnsimple/r/record.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04">https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx">https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Terraform and Packer with Digital Ocean</title><link>https://willschenk.com/articles/2019/terraform_with_digitalocean/</link><pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/terraform_with_digitalocean/</guid><description>&lt;p>Terraform orchastrates the setting up of your infrastructure, and packer helps you build images. We are going to setup terraform to work with Digital Ocean, and then use package to create and image and deploy it.&lt;/p>
&lt;h2 id="install-terraform">Install terraform&lt;/h2>
&lt;p>Install terraform from &lt;a href="https://www.terraform.io/downloads.html">the download page&lt;/a>. I&amp;rsquo;m on Linux, so we&amp;rsquo;ll download the latest version and put it in &lt;code>/usr/local/bin&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /tmp
wget https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip
unzip terraform_0.12.18_linux_amd64.zip
sudo mv terraform /usr/local/bin
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setup-digital-ocean-api">Setup Digital Ocean API&lt;/h2>
&lt;p>We need two tokens. One for accessing the Digital Ocean API for infrastructure, and the other to access the spaces API.&lt;/p>
&lt;p>Log into your account at &lt;a href="cloud.digitalocean.com">cloud.digitalocean.com&lt;/a> and go to &lt;code>API&lt;/code> on the left. Generate a new access token with read and write privileges.&lt;/p>
&lt;p>Copy this token and keep it somewhere safe. Our terraform scripts will access this token, but we&amp;rsquo;ll keep the actual values in the environment rather than hardcoding them. We&amp;rsquo;ll be able to pass things in when prefixed with &lt;code>TF_VAR&lt;/code>.&lt;/p>
&lt;p>Then create a Spaces API key, which will have an Access Token and a Secret Key.&lt;/p>
&lt;p>We are going to setup 4 environment variables that we will use for terraform.&lt;/p>
&lt;ol>
&lt;li>do_token: the actual API token&lt;/li>
&lt;li>do_access_key: the spaces api access key&lt;/li>
&lt;li>do_secret_key: the spaces api secret key&lt;/li>
&lt;li>ssh_fingerprint: a finger print for installing a key on a droplet&lt;/li>
&lt;/ol>
&lt;p>Note that my public key is in &lt;code>~/.ssh/id_rsa.pub&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_do_token&lt;/span>&lt;span class="o">=&lt;/span>9a4d341ec0a512bfef2ae9....
&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_do_access_key&lt;/span>&lt;span class="o">=&lt;/span>asdfasdf...
&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_do_secret_key&lt;/span>&lt;span class="o">=&lt;/span>asdfasd...
&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_ssh_fingerprint&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>ssh-keygen -E md5 -lf ~/.ssh/id_rsa.pub &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $2}&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/MD5://&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-providertf">Create &lt;code>provider.tf&lt;/code>&lt;/h2>
&lt;p>The first file we are going to use is &lt;a href="provider.tf">&lt;code>provider.tf&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-tf" data-lang="tf">&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;do_token&amp;#34;&lt;/span> {}
&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;do_access_key&amp;#34;&lt;/span> {}
&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;do_secret_key&amp;#34;&lt;/span> {}
&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;do_region&amp;#34;&lt;/span> {
&lt;span class="na"> default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;nyc3&amp;#34;&lt;/span>
}
&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;backend_space_name&amp;#34;&lt;/span> {
&lt;span class="na"> description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Space name for storing terraform state&amp;#34;&lt;/span>
&lt;span class="na"> default&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;xx-internal-will&amp;#34;&lt;/span>
}
&lt;span class="kr">variable&lt;/span> &lt;span class="s">&amp;#34;ssh_fingerprint&amp;#34;&lt;/span> {}
&lt;span class="kr">provider&lt;/span> &lt;span class="s">&amp;#34;digitalocean&amp;#34;&lt;/span> {
&lt;span class="na"> version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;~&amp;gt; 1.12&amp;#34;&lt;/span>
&lt;span class="na"> token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">do_token&lt;/span>
&lt;span class="na"> spaces_access_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">do_access_key&lt;/span>
&lt;span class="na"> spaces_secret_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">do_secret_key&lt;/span>
}&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We are declaring the variables at top, which will look first in the environment for them and if not found will prompt you to enter a value. We are going to use the name for the space that we&amp;rsquo;re storing the terraform state in multiple places, so we&amp;rsquo;ll define it as a variable, though unforunately we&amp;rsquo;ll need to hard code it when we setup the terraform backend.&lt;/p>
&lt;p>Now run &lt;code>terraform init&lt;/code>. This should download the &lt;code>digitalocean&lt;/code> plugin in the &lt;code>.terraform&lt;/code> directory, and we should be ready to start making terraform commands! When we do &lt;code>terraform plan&lt;/code> it should say that everything is up to date.&lt;/p>
&lt;h2 id="create-a-secure-store-for-holding-the-config">Create a secure store for holding the config&lt;/h2>
&lt;p>Now lets use terraform to create a digitalocean store to save our deployment state. &lt;a href="spaces.tf">&lt;code>spaces.tf&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-tf" data-lang="tf">&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;digitalocean_spaces_bucket&amp;#34; &amp;#34;terraform-state&amp;#34;&lt;/span> {
&lt;span class="na"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">backend_space_name&lt;/span>
&lt;span class="na"> acl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;private&amp;#34;&lt;/span>
}&lt;/code>&lt;/pre>&lt;/div>
&lt;p>As a reminder, space names need to be globally unique so you&amp;rsquo;ll need to update your name to make it your own. Now run &lt;code>terraform plan&lt;/code> to see what its going to do. You should see that it wants to create the space.&lt;/p>
&lt;p>Run &lt;code>terraform apply&lt;/code> to actually bring your environment up!&lt;/p>
&lt;p>Once your space is up and running, lets configure terraform to use this as a backend. &lt;a href="backend.tf">&lt;code>backend.tf&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-tf" data-lang="tf">&lt;span class="err">terraform&lt;/span> {
&lt;span class="err">backend&lt;/span> &lt;span class="s2">&amp;#34;s3&amp;#34;&lt;/span> {
&lt;span class="na"> bucket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;xx-internal-will&amp;#34;&lt;/span>
&lt;span class="na"> key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;terraform-testing.tfstate&amp;#34;&lt;/span>
&lt;span class="na"> endpoint&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;nyc3.digitaloceanspaces.com&amp;#34;&lt;/span>
&lt;span class="na"> region&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;eu-west-1&amp;#34;&lt;/span>&lt;span class="c1">
&lt;/span>&lt;span class="c1"> # Deactivate a few checks as TF will attempt these against AWS
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="na"> skip_credentials_validation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">true&lt;/span>
&lt;span class="na"> skip_metadata_api_check&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">true&lt;/span>
}
}&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We are using the S3 backend but pointing it to Digital Ocean&amp;rsquo;s endpoint. If you don&amp;rsquo;t know what endpoint you are using, you can see inside of the Digital Ocean console.&lt;/p>
&lt;p>I don&amp;rsquo;t want to keep my access keys inside this file, but we can&amp;rsquo;t pull them out using variables due to the way that terraform works. So since we are pretending to be AWS, let&amp;rsquo;s set the environment variables for AWS access to the keys that we got from the Spaces API.&lt;/p>
&lt;p>&lt;em>Note: While I don&amp;rsquo;t use AWS and therefor don&amp;rsquo;t mind messing with these keys, if you do use AWS from the shell you are working in this will point to the wrong place.&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">AWS_ACCESS_KEY_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$TF_VAR_do_access_key&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">AWS_SECRET_ACCESS_KEY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$TF_VAR_do_secret_key&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We need to run &lt;code>terraform init&lt;/code> again to pull down the right plugins and configure everything. If all goes well, you&amp;rsquo;ll be asked to migrate your local state over. Go for it!&lt;/p>
&lt;h2 id="create-a-droplet">Create a droplet&lt;/h2>
&lt;p>Now that we have the plumbing working, lets create an actual droplet to play with.&lt;/p>
&lt;p>In &lt;a href="droplets.tf.orig">&lt;code>droplets.tf.orig&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-tf" data-lang="tf">&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;digitalocean_droplet&amp;#34; &amp;#34;playserver&amp;#34;&lt;/span> {
&lt;span class="na"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;playserver&amp;#34;&lt;/span>
&lt;span class="na"> image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;debian-10-x64&amp;#34;&lt;/span>
&lt;span class="na"> size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;s-1vcpu-1gb&amp;#34;&lt;/span>
&lt;span class="na"> region&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">do_region&lt;/span>
&lt;span class="na"> ssh_keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">ssh_fingerprint&lt;/span>
&lt;span class="p">]&lt;/span>
}
&lt;p>&lt;span class="err">output&lt;/span> &lt;span class="s2">&amp;quot;ip&amp;quot;&lt;/span> {
&lt;span class="na"> value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;quot;${digitalocean_droplet.playserver.ipv4_address}&amp;quot;&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>When going through this, rename to &lt;code>droplet.rf&lt;/code>. Later, we will be editing this file and so this is the base version of it.&lt;/p>
&lt;p>You can find a list of &lt;a href="https://slugs.do-api.dev/">Digital Ocean image and sizes&lt;/a> to choose from, here we are using &lt;code>debian-10&lt;/code> and one of the smaller vms.&lt;/p>
&lt;p>We also define an &lt;code>output&lt;/code> named &lt;code>ip&lt;/code> that pulls from the digital ocean API based on what has been created.&lt;/p>
&lt;p>Additionally we have added an SSH key to the image.&lt;/p>
&lt;p>So to connect, we can do&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh &lt;span class="s2">&amp;#34;root@&lt;/span>&lt;span class="k">$(&lt;/span>terraform output ip&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you should be able to connect to your server.&lt;/p>
&lt;h2 id="creating-a-custom-image">Creating a custom image&lt;/h2>
&lt;p>From this point you should be able to add other services with terraform to wire up your application. We&amp;rsquo;ll skip a more elaborate network and service configuration &amp;ndash; which is really where terraform makes sense &amp;ndash; since there are plenty of other places that document that.&lt;/p>
&lt;p>Instead, lets look at how to build a custom image that, perhaps, would contain your application. We&amp;rsquo;re going to use &lt;code>packer&lt;/code> to build this image, on which we&amp;rsquo;ll just install &lt;code>docker&lt;/code>. There&amp;rsquo;s already an official docker image in Digital Ocean so this is really just an excersize so you get the idea.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">wget https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip
unzip packer_1.5.1_linux_amd64.zip
sudo mv packer /usr/local/bin
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we create a &lt;a href="docker.json">&lt;code>docker.json&lt;/code>&lt;/a> file that we&amp;rsquo;ll give to &lt;code>packer&lt;/code> that will provision the instance for us. Inside you&amp;rsquo;ll notice that I named the snapshot &lt;code>packer-docker-0.0.1&lt;/code>. In a real build process, this should probably be passed into packer.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;variables&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;api_token&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{{env `TF_VAR_do_token`}}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;region&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{{env `TF_VAR_do_region`}}&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;builders&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;digitalocean&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;api_token&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{{user `api_token`}}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;image&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;debian-10-x64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;region&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{{ user `region` }}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;s-1vcpu-1gb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ssh_username&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;root&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;snapshot_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;packer-docker-0.0.1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;tags&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;Docker&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="nt">&amp;#34;provisioners&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;shell&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;docker_install.sh&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>And then a script that will be run on the build image that actually installs docker. &lt;a href="docker_install.sh">&lt;code>docker_install.sh&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
apt-get update
apt-get install -y &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> apt-transport-https &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> ca-certificates &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> curl &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> gnupg2 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg &lt;span class="p">|&lt;/span> apt-key add -
add-apt-repository &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;deb [arch=amd64] https://download.docker.com/linux/debian \
&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="k">$(&lt;/span>lsb_release -cs&lt;span class="k">)&lt;/span>&lt;span class="s2"> \
&lt;/span>&lt;span class="s2"> stable&amp;#34;&lt;/span>
apt-get update
apt-get install -y docker-ce docker-ce-cli containerd.io
groupadd docker
usermod -aG docker &lt;span class="nv">$USER&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We also need to set the region as the same you have it in the &lt;code>providers.tf&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">TF_VAR_do_region&lt;/span>&lt;span class="o">=&lt;/span>nyc3
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then run &lt;code>packer validate docker.json&lt;/code> to make sure that everything is copacitic. Once that&amp;rsquo;s good, then run &lt;code>packer build docker.json&lt;/code>.&lt;/p>
&lt;h2 id="telling-terraform-to-use-your-image">Telling terraform to use your image&lt;/h2>
&lt;p>Once this is done, use this new &lt;a href="droplets.tf">&lt;code>droplets.tf&lt;/code>&lt;/a> file to deploy this image onto your droplet. The first stanza looks up the image from the snapshot name, and then we use that inside of the &lt;code>image&lt;/code> attribute to tell &lt;code>terraform&lt;/code> which droplet should be running.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-tf" data-lang="tf">&lt;span class="err">data&lt;/span> &lt;span class="s2">&amp;#34;digitalocean_image&amp;#34; &amp;#34;docker-snapshot&amp;#34;&lt;/span> {
&lt;span class="na"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;packer-docker-0.0.1&amp;#34;&lt;/span>
}
&lt;span class="kr">resource&lt;/span> &lt;span class="s">&amp;#34;digitalocean_droplet&amp;#34; &amp;#34;playserver&amp;#34;&lt;/span> {
&lt;span class="na"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;playserver&amp;#34;&lt;/span>
&lt;span class="na"> image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">digitalocean_image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">docker-snapshot&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">image&lt;/span>
&lt;span class="na"> size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;s-1vcpu-1gb&amp;#34;&lt;/span>
&lt;span class="na"> region&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">do_region&lt;/span>
&lt;span class="na"> ssh_keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="err">var&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="err">ssh_fingerprint&lt;/span>
&lt;span class="p">]&lt;/span>
}
&lt;span class="err">output&lt;/span> &lt;span class="s2">&amp;#34;ip&amp;#34;&lt;/span> {
&lt;span class="na"> value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;${digitalocean_droplet.playserver.ipv4_address}&amp;#34;&lt;/span>
}&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now lets test it out:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">terraform apply
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then connect:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh &lt;span class="s2">&amp;#34;root@&lt;/span>&lt;span class="k">$(&lt;/span>terraform output ip&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once it connects, you should be able to run on the host machine:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --rm hello-world
&lt;/code>&lt;/pre>&lt;/div>&lt;p>At which point we end our tutorial!&lt;/p>
&lt;h2 id="cleanup">Cleanup&lt;/h2>
&lt;p>To clean up everything, you can run &lt;code>terraform destroy&lt;/code>. This will leave the snapshot, which was created by &lt;code>packer&lt;/code> and not managed by &lt;code>terraform&lt;/code>, and it will probably leave the space that we created since its not empty. Which is fine, since its better to keep the state around anyway, these things can be cleaned up by hand.&lt;/p>
&lt;p>This is basically just a howto to get things initially setup, there&amp;rsquo;s a lot more you can do with organizing your files and managing different environments. The droplet that we created is on the public internet which is where most of my toys live, and we didn&amp;rsquo;t explore the more interesting parts of terraform where you setup networks and other services. But most of the tutorials I&amp;rsquo;ve seen are for setting things up with AWS, and I wanted to see how to get it done with Digital Ocean.&lt;/p>
&lt;hr>
&lt;p>References&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-terraform-with-digitalocean">https://www.digitalocean.com/community/tutorials/how-to-use-terraform-with-digitalocean&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@chris_linguine/dont-push-your-terraform-state-files-945cfdf71f88">https://medium.com/@chris_linguine/dont-push-your-terraform-state-files-945cfdf71f88&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.terraformupandrunning.com/">https://www.terraformupandrunning.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/jmarhee/digitalocean-spaces-as-a-terraform-backend-3lck">https://dev.to/jmarhee/digitalocean-spaces-as-a-terraform-backend-3lck&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://slugs.do-api.dev/">https://slugs.do-api.dev/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gokhansengun/packer-terraform-demo">https://github.com/gokhansengun/packer-terraform-demo&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Computer Setup Script</title><link>https://willschenk.com/articles/2019/computer_setup_script/</link><pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/computer_setup_script/</guid><description>&lt;p>Putting things in scripts makes it easy to get up and running quickly. Devops isn&amp;rsquo;t just for servers or &lt;code>Dockerfile&lt;/code>s, you can also use it for your own environment. This is the script that I use to get my Chromebooks up and running after a wipe and how I get a new Linux machine up an running. Lets use the &lt;a href="https://bash3boilerplate.sh/">bash boilerplate&lt;/a> to write our script.&lt;/p>
&lt;p>I&amp;rsquo;ll update this later to include OSX.&lt;/p>
&lt;h2 id="the-strategy">The strategy&lt;/h2>
&lt;ol>
&lt;li>Awesome boilerplate code to make things easier&lt;/li>
&lt;li>Install gcc and git if needed&lt;/li>
&lt;li>Setup git username and email&lt;/li>
&lt;li>Setup .ssh keys (assuming you are copying from a secure store)&lt;/li>
&lt;li>&lt;code>not_installed&lt;/code> function, which looks to see if a command is installed and returns true if the user wants to install it.&lt;/li>
&lt;li>&lt;code>not_installed_forced&lt;/code> function, which always will install when we need these things.&lt;/li>
&lt;li>&lt;code>update_check&lt;/code> which will call &lt;code>apt-get update&lt;/code> no more than once a session&lt;/li>
&lt;li>&lt;code>install_application&lt;/code> which will install the package&lt;/li>
&lt;li>&lt;code>install_&lt;/code>_name_ which contains specific instructions for custom packages.&lt;/li>
&lt;li>A couple of things &amp;ndash; &lt;code>rbenv&lt;/code>, &lt;code>nvm&lt;/code>, etc mess with the environment. For these we set the &lt;code>RESET_TERMINAL&lt;/code> flag to true and leave the user with the nice warning.&lt;/li>
&lt;/ol>
&lt;h2 id="the-packages">The packages&lt;/h2>
&lt;p>Here&amp;rsquo;s a table of what is installed.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>emacs&lt;/td>
&lt;td>Amongst other things, an editor of files&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tmux&lt;/td>
&lt;td>Screen multiplexor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jq&lt;/td>
&lt;td>Command line JSON parsing&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ag&lt;/td>
&lt;td>Fast file searching&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>docker&lt;/td>
&lt;td>Container builder and runner&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nvm&lt;/td>
&lt;td>Node version manager&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>rbenv&lt;/td>
&lt;td>Ruby version manager&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>go&lt;/td>
&lt;td>Golang compiler&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>hugo&lt;/td>
&lt;td>Static site builder, built from source&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>heroku&lt;/td>
&lt;td>Heroku toolbelt&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>terraform&lt;/td>
&lt;td>Terraform cloud infrastructure provisioner&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>packer&lt;/td>
&lt;td>Image builder&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ansible&lt;/td>
&lt;td>Provisioner&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>atom&lt;/td>
&lt;td>Atom text editor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcloud&lt;/td>
&lt;td>Google Cloud CLI&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="how-to-run">How to run&lt;/h2>
&lt;p>This file is mirrored at &lt;a href="https://willschenk.com/bootstrap.sh">https://willschenk.com/bootstrap.sh&lt;/a> and you can run it with the command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ wget https://willschenk.com/bootstrap.sh
$ bash bootstrap.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you should be good to go!&lt;/p>
&lt;h2 id="the-code">The code:&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>#
&lt;span class="c1"># Based on a template by BASH3 Boilerplate v2.3.0&lt;/span>
&lt;span class="c1"># http://bash3boilerplate.sh/#authors&lt;/span>
#
&lt;span class="c1"># The MIT License (MIT)&lt;/span>
&lt;span class="c1"># Copyright (c) 2013 Kevin van Zonneveld and contributors&lt;/span>
&lt;span class="c1"># You are not obligated to bundle the LICENSE file with your b3bp projects as long&lt;/span>
&lt;span class="c1"># as you leave these references intact in the header comments of your source files.&lt;/span>
&lt;span class="c1"># Exit on error. Append &amp;#34;|| true&amp;#34; if you expect an error.&lt;/span>
&lt;span class="nb">set&lt;/span> -o errexit
&lt;span class="c1"># Exit on error inside any functions or subshells.&lt;/span>
&lt;span class="nb">set&lt;/span> -o errtrace
&lt;span class="c1"># Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR&lt;/span>
&lt;span class="nb">set&lt;/span> -o nounset
&lt;span class="c1"># Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`&lt;/span>
&lt;span class="nb">set&lt;/span> -o pipefail
&lt;span class="c1"># Turn on traces, useful while debugging but commented out by default&lt;/span>
&lt;span class="c1"># set -o xtrace&lt;/span>
&lt;span class="c1"># Define the environment variables (and their defaults) that this script depends on&lt;/span>
&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">6&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="c1"># 7 = debug -&amp;gt; 0 = emergency&lt;/span>
&lt;span class="nv">NO_COLOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">NO_COLOR&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="c1"># true = disable color. otherwise autodetected&lt;/span>
&lt;span class="c1">### Functions&lt;/span>
&lt;span class="c1">##############################################################################&lt;/span>
&lt;span class="k">function&lt;/span> __b3bp_log &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">log_level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">shift&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_debug&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[35m&amp;#34;&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_info&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[32m&amp;#34;&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_notice&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[34m&amp;#34;&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_warning&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[33m&amp;#34;&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_error&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[31m&amp;#34;&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_critical&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[1;31m&amp;#34;&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_alert&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[1;33;41m&amp;#34;&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2034&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_emergency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[1;4;5;33;41m&amp;#34;&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">colorvar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;color_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">log_level&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!colorvar&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">color_error&lt;/span>&lt;span class="si">}}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">color_reset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;\x1b[0m&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">NO_COLOR&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TERM&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;xterm&amp;#34;&lt;/span>* &lt;span class="o">]]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">[[&lt;/span> ! -t &lt;span class="m">2&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">NO_COLOR&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;false&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="c1"># Don&amp;#39;t use colors on pipes or non-recognized terminals&lt;/span>
&lt;span class="nv">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nv">color_reset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># all remaining arguments are to be printed&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">log_line&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="nv">IFS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">$&amp;#39;\n&amp;#39;&lt;/span> &lt;span class="nb">read&lt;/span> -r log_line&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>date -u +&lt;span class="s2">&amp;#34;%Y-%m-%d %H:%M:%S UTC&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">color&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;[%9s]&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">log_level&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">color_reset&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">log_line&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="k">done&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> emergency &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> __b3bp_log emergency &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">exit&lt;/span> 1&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> alert &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">1&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> __b3bp_log alert &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> true&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> critical &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">2&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> __b3bp_log critical &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> true&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> error &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">3&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> __b3bp_log error &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> true&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> warning &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">4&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> __b3bp_log warning &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> true&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> notice &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">5&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> __b3bp_log notice &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> true&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> info &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">6&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> __b3bp_log info &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> true&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> debug &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">7&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> __b3bp_log debug &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> true&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> &lt;span class="nb">help&lt;/span> &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">*&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__usage&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">No&lt;/span>&lt;span class="p"> usage available&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__helptext&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__helptext&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">### Parse commandline options&lt;/span>
&lt;span class="c1">##############################################################################&lt;/span>
&lt;span class="c1"># Commandline options. This defines the usage page, and is used to parse cli&lt;/span>
&lt;span class="c1"># opts &amp;amp; defaults from. The parsing is unforgiving so be precise in your syntax&lt;/span>
&lt;span class="c1"># - A short option must be preset for every long option; but every short option&lt;/span>
&lt;span class="c1"># need not have a long option&lt;/span>
&lt;span class="c1"># - `--` is respected as the separator between options and arguments&lt;/span>
&lt;span class="c1"># - We do not bash-expand defaults, so setting &amp;#39;~/app&amp;#39; as a default will not resolve to ${HOME}.&lt;/span>
&lt;span class="c1"># you can use bash variables to work around this (so use ${HOME} instead)&lt;/span>
&lt;span class="c1"># shellcheck disable=SC2015&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__usage&lt;/span>&lt;span class="p">+x&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">read&lt;/span> -r -d &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> __usage &lt;span class="s">&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39; || true # exits non-zero when EOF&lt;/span> encountered
-v Enable verbose mode, print script as it is executed
-d --debug Enables debug mode
-h --help This page
-n --no-color Disable color output
-1 --one Do just one thing
EOF
&lt;span class="c1"># shellcheck disable=SC2015&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__helptext&lt;/span>&lt;span class="p">+x&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">read&lt;/span> -r -d &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> __helptext &lt;span class="s">&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39; || true # exits non-zero when EOF&lt;/span> encountered
This is Bash3 Boilerplate&lt;span class="s1">&amp;#39;s help text. Feel free to add any description of your
&lt;/span>&lt;span class="s1"> program or elaborate more on command-line arguments. This section is not
&lt;/span>&lt;span class="s1"> parsed and will be added as-is to the help.
&lt;/span>&lt;span class="s1">EOF
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1"># Translate usage string -&amp;gt; getopts arguments, and set $arg_&amp;lt;flag&amp;gt; defaults
&lt;/span>&lt;span class="s1">while read -r __b3bp_tmp_line; do
&lt;/span>&lt;span class="s1"> if [[ &amp;#34;${__b3bp_tmp_line}&amp;#34; =~ ^- ]]; then
&lt;/span>&lt;span class="s1"> # fetch single character version of option string
&lt;/span>&lt;span class="s1"> __b3bp_tmp_opt=&amp;#34;${__b3bp_tmp_line%% *}&amp;#34;
&lt;/span>&lt;span class="s1"> __b3bp_tmp_opt=&amp;#34;${__b3bp_tmp_opt:1}&amp;#34;
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1"> # fetch long version if present
&lt;/span>&lt;span class="s1"> __b3bp_tmp_long_opt=&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1"> if [[ &amp;#34;${__b3bp_tmp_line}&amp;#34; = *&amp;#34;--&amp;#34;* ]]; then
&lt;/span>&lt;span class="s1"> __b3bp_tmp_long_opt=&amp;#34;${__b3bp_tmp_line#*--}&amp;#34;
&lt;/span>&lt;span class="s1"> __b3bp_tmp_long_opt=&amp;#34;${__b3bp_tmp_long_opt%% *}&amp;#34;
&lt;/span>&lt;span class="s1"> fi
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1"> # map opt long name to+from opt short name
&lt;/span>&lt;span class="s1"> printf -v &amp;#34;__b3bp_tmp_opt_long2short_${__b3bp_tmp_long_opt//-/_}&amp;#34; &amp;#39;&lt;/span>%s&lt;span class="s1">&amp;#39; &amp;#34;${__b3bp_tmp_opt}&amp;#34;
&lt;/span>&lt;span class="s1"> printf -v &amp;#34;__b3bp_tmp_opt_short2long_${__b3bp_tmp_opt}&amp;#34; &amp;#39;&lt;/span>%s&lt;span class="s1">&amp;#39; &amp;#34;${__b3bp_tmp_long_opt//-/_}&amp;#34;
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1"> # check if option takes an argument
&lt;/span>&lt;span class="s1"> if [[ &amp;#34;${__b3bp_tmp_line}&amp;#34; =~ \[.*\] ]]; then
&lt;/span>&lt;span class="s1"> __b3bp_tmp_opt=&amp;#34;${__b3bp_tmp_opt}:&amp;#34; # add : if opt has arg
&lt;/span>&lt;span class="s1"> __b3bp_tmp_init=&amp;#34;&amp;#34; # it has an arg. init with &amp;#34;&amp;#34;
&lt;/span>&lt;span class="s1"> printf -v &amp;#34;__b3bp_tmp_has_arg_${__b3bp_tmp_opt:0:1}&amp;#34; &amp;#39;&lt;/span>%s&lt;span class="s1">&amp;#39; &amp;#34;1&amp;#34;
&lt;/span>&lt;span class="s1"> elif [[ &amp;#34;${__b3bp_tmp_line}&amp;#34; =~ \{.*\} ]]; then
&lt;/span>&lt;span class="s1"> __b3bp_tmp_opt=&amp;#34;${__b3bp_tmp_opt}:&amp;#34; # add : if opt has arg
&lt;/span>&lt;span class="s1"> __b3bp_tmp_init=&amp;#34;&amp;#34; # it has an arg. init with &amp;#34;&amp;#34;
&lt;/span>&lt;span class="s1"> # remember that this option requires an argument
&lt;/span>&lt;span class="s1"> printf -v &amp;#34;__b3bp_tmp_has_arg_${__b3bp_tmp_opt:0:1}&amp;#34; &amp;#39;&lt;/span>%s&lt;span class="s1">&amp;#39; &amp;#34;2&amp;#34;
&lt;/span>&lt;span class="s1"> else
&lt;/span>&lt;span class="s1"> __b3bp_tmp_init=&amp;#34;0&amp;#34; # it&amp;#39;&lt;/span>s a flag. init with &lt;span class="m">0&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;__b3bp_tmp_has_arg_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nv">__b3bp_tmp_opts&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opts&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_line&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span>~ &lt;span class="o">(&lt;/span>^&lt;span class="p">|&lt;/span>&lt;span class="se">\.\ &lt;/span>*&lt;span class="o">)&lt;/span>&lt;span class="nv">Default&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="c1"># ignore default value if option does not have an argument&lt;/span>
&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;__b3bp_tmp_has_arg_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">__b3bp_tmp_init&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_line&lt;/span>&lt;span class="p">##*Default=&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nv">__b3bp_tmp_re&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;^&amp;#34;(.*)&amp;#34;$&amp;#39;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_init&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span>~ &lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_re&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">__b3bp_tmp_init&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BASH_REMATCH&lt;/span>&lt;span class="p">[1]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nv">__b3bp_tmp_re&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;^&amp;#39;(.*)&amp;#39;&lt;/span>$&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_init&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span>~ &lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_re&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">__b3bp_tmp_init&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BASH_REMATCH&lt;/span>&lt;span class="p">[1]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_line&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span>~ &lt;span class="o">(&lt;/span>^&lt;span class="p">|&lt;/span>&lt;span class="se">\.\ &lt;/span>*&lt;span class="o">)&lt;/span>Required&lt;span class="se">\.&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="c1"># remember that this option requires an argument&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;__b3bp_tmp_has_arg_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;arg_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_init&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__usage&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># run getopts only if options were specified in __usage&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opts&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="c1"># Allow long options like --this&lt;/span>
&lt;span class="nv">__b3bp_tmp_opts&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opts&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">-:&amp;#34;&lt;/span>
&lt;span class="c1"># Reset in case getopts has been used previously in the shell.&lt;/span>
&lt;span class="nv">OPTIND&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="c1"># start parsing command line&lt;/span>
&lt;span class="nb">set&lt;/span> +o nounset &lt;span class="c1"># unexpected arguments will cause unbound variables&lt;/span>
&lt;span class="c1"># to be dereferenced&lt;/span>
&lt;span class="c1"># Overwrite $arg_&amp;lt;flag&amp;gt; defaults with the actual CLI options&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="nb">getopts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opts&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> __b3bp_tmp_opt&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;?&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">help&lt;/span> &lt;span class="s2">&amp;#34;Invalid use of script: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">*&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;-&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="c1"># OPTARG is long-option-name or long-option=value&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">OPTARG&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span>~ .*&lt;span class="o">=&lt;/span>.* &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="c1"># --key=value format&lt;/span>
&lt;span class="nv">__b3bp_tmp_long_opt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">OPTARG&lt;/span>&lt;span class="p">/=*/&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># Set opt to the short option corresponding to the long option&lt;/span>
&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;__b3bp_tmp_opt_long2short_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_long_opt&lt;/span>&lt;span class="p">//-/_&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;__b3bp_tmp_opt&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nv">OPTARG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">OPTARG&lt;/span>&lt;span class="p">#*=&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="c1"># --key value format&lt;/span>
&lt;span class="c1"># Map long name to short version of option&lt;/span>
&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;__b3bp_tmp_opt_long2short_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">OPTARG&lt;/span>&lt;span class="p">//-/_&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;__b3bp_tmp_opt&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># Only assign OPTARG if option takes an argument&lt;/span>
&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;__b3bp_tmp_has_arg_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;OPTARG&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">@:&lt;/span>&lt;span class="nv">OPTIND&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># shift over the argument if argument is expected&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">OPTIND&lt;/span>&lt;span class="o">+=&lt;/span>__b3bp_tmp_has_arg_&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># we have set opt/OPTARG to the short value and the argument as OPTARG if it exists&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;arg_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nv">__b3bp_tmp_default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nv">__b3bp_tmp_value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">OPTARG&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">OPTARG&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_default&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">__b3bp_tmp_value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_value&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
debug &lt;span class="s2">&amp;#34;cli arg &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> = (&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_default&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">) -&amp;gt; &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nb">set&lt;/span> -o nounset &lt;span class="c1"># no more unbound variable references expected&lt;/span>
&lt;span class="nb">shift&lt;/span> &lt;span class="k">$((&lt;/span>OPTIND-1&lt;span class="k">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;--&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">shift&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1">### Automatic validation of required option arguments&lt;/span>
&lt;span class="c1">##############################################################################&lt;/span>
&lt;span class="k">for&lt;/span> __b3bp_tmp_varname in &lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_has_arg_*&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="c1"># validate only options which required an argument&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="nv">__b3bp_tmp_opt_short&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="p">##*_&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;arg_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt_short&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="nv">__b3bp_tmp_varname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;__b3bp_tmp_opt_short2long_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt_short&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">printf&lt;/span> -v &lt;span class="s2">&amp;#34;__b3bp_tmp_opt_long&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;%s&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt_long&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nv">__b3bp_tmp_opt_long&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34; (--&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt_long&lt;/span>&lt;span class="p">//_/-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">)&amp;#34;&lt;/span>
&lt;span class="nb">help&lt;/span> &lt;span class="s2">&amp;#34;Option -&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt_short&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">__b3bp_tmp_opt_long&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> requires an argument&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="c1">### Cleanup Environment variables&lt;/span>
&lt;span class="c1">##############################################################################&lt;/span>
&lt;span class="k">for&lt;/span> __tmp_varname in &lt;span class="si">${&lt;/span>&lt;span class="p">!__b3bp_tmp_*&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">unset&lt;/span> -v &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__tmp_varname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nb">unset&lt;/span> -v __tmp_varname
&lt;span class="c1">### Externally supplied __usage. Nothing else to do here&lt;/span>
&lt;span class="c1">##############################################################################&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__b3bp_external_usage&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">unset&lt;/span> -v __b3bp_external_usage
&lt;span class="k">return&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1">### Signal trapping and backtracing&lt;/span>
&lt;span class="c1">##############################################################################&lt;/span>
&lt;span class="nv">RESET_TERMINAL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">function&lt;/span> __b3bp_cleanup_before_exit &lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$RESET_TERMINAL&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info Script finished
&lt;span class="k">else&lt;/span>
warning &lt;span class="s2">&amp;#34;Environment variables have been reset, please logout and log back in&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nb">trap&lt;/span> __b3bp_cleanup_before_exit EXIT
&lt;span class="c1"># requires `set -o errtrace`&lt;/span>
__b3bp_err_report&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">local&lt;/span> error_code
&lt;span class="nv">error_code&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">?&lt;/span>&lt;span class="si">}&lt;/span>
error &lt;span class="s2">&amp;#34;Error in &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">__file&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> in function &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> on line &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">error_code&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1"># Uncomment the following line for always providing an error backtrace&lt;/span>
&lt;span class="c1"># trap &amp;#39;__b3bp_err_report &amp;#34;${FUNCNAME:-.}&amp;#34; ${LINENO}&amp;#39; ERR&lt;/span>
&lt;span class="c1">### Command-line argument switches (like -d for debugmode, -h for showing helppage)&lt;/span>
&lt;span class="c1">##############################################################################&lt;/span>
&lt;span class="c1"># debug mode&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">arg_d&lt;/span>&lt;span class="p">:?&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">set&lt;/span> -o xtrace
&lt;span class="nv">LOG_LEVEL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;7&amp;#34;&lt;/span>
&lt;span class="c1"># Enable error backtracing&lt;/span>
&lt;span class="nb">trap&lt;/span> &lt;span class="s1">&amp;#39;__b3bp_err_report &amp;#34;${FUNCNAME:-.}&amp;#34; ${LINENO}&amp;#39;&lt;/span> ERR
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># verbose mode&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">arg_v&lt;/span>&lt;span class="p">:?&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">set&lt;/span> -o verbose
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># no color mode&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">arg_n&lt;/span>&lt;span class="p">:?&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">NO_COLOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># help mode&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">arg_h&lt;/span>&lt;span class="p">:?&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="c1"># Help exists with code 1&lt;/span>
&lt;span class="nb">help&lt;/span> &lt;span class="s2">&amp;#34;Help using &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">function&lt;/span> yesno&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">read&lt;/span> -p &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> &amp;#34;&lt;/span> YN
&lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$YN&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;y&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> not_installed_force&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nv">app_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> ! &lt;span class="nb">command&lt;/span> -v &lt;span class="nv">$1&lt;/span> &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> not found&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="k">else&lt;/span>
info &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> installed&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> not_installed&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nv">app_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> ! &lt;span class="nb">command&lt;/span> -v &lt;span class="nv">$1&lt;/span> &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> not found&amp;#34;&lt;/span>
yesno &lt;span class="s2">&amp;#34;Install &lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">?&amp;#34;&lt;/span>
&lt;span class="k">else&lt;/span>
info &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2"> installed&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nv">UPDATED&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">function&lt;/span> update_check &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$UPDATED&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info &lt;span class="s2">&amp;#34;Running apt-get update&amp;#34;&lt;/span>
sudo apt-get update
&lt;span class="k">fi&lt;/span>
&lt;span class="nv">UPDATED&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_application &lt;span class="o">{&lt;/span>
update_check
sudo apt-get install -y &lt;span class="nv">$1&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_docker &lt;span class="o">{&lt;/span>
info &lt;span class="s2">&amp;#34;Installing Docker...&amp;#34;&lt;/span>
update_check
sudo apt-get install -y &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> apt-transport-https &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> ca-certificates &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> curl &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> gnupg2 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> software-properties-common
info &lt;span class="s2">&amp;#34;Adding gpg key for docker repository&amp;#34;&lt;/span>
&lt;span class="c1"># Add the gpg key if it;s not there&lt;/span>
curl -fsSL https://download.docker.com/linux/debian/gpg &lt;span class="p">|&lt;/span> sudo apt-key add -
&lt;span class="c1"># Add the docker repository&lt;/span>
sudo add-apt-repository &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;deb [arch=amd64] https://download.docker.com/linux/debian \
&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="k">$(&lt;/span>lsb_release -cs&lt;span class="k">)&lt;/span>&lt;span class="s2"> \
&lt;/span>&lt;span class="s2"> stable&amp;#34;&lt;/span>
info &lt;span class="s2">&amp;#34;Installing docker-ce&amp;#34;&lt;/span>
&lt;span class="c1"># Update and add docker-ce&lt;/span>
sudo apt-get update
sudo apt-get install -y docker-ce
info &lt;span class="s2">&amp;#34;Installing docker-compose&amp;#34;&lt;/span>
&lt;span class="c1"># Install docker-compose&lt;/span>
sudo curl -L &lt;span class="s2">&amp;#34;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-&lt;/span>&lt;span class="k">$(&lt;/span>uname -s&lt;span class="k">)&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="k">$(&lt;/span>uname -m&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -o /usr/local/bin/docker-compose
&lt;span class="c1"># Add yourself to the docker group if you aren&amp;#39;t already&lt;/span>
&lt;span class="c1"># sudo groupadd docker&lt;/span>
sudo usermod -aG docker &lt;span class="nv">$USER&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_rbenv&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nv">RESET_TERMINAL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
update_check
info Installing rbenv
sudo apt-get install -y build-essential libssl-dev libreadline-dev zlib1g-dev
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=$PATH:$HOME/.rbenv/bin&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nv">$HOME&lt;/span>/.profile
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;eval &amp;#34;$(rbenv init -)&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nv">$HOME&lt;/span>/.profile
&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$PATH&lt;/span>:&lt;span class="nv">$HOME&lt;/span>/.rbenv/bin
&lt;span class="o">(&lt;/span>
curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer &lt;span class="p">|&lt;/span> bash
&lt;span class="o">)&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>rbenv init -&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
warning &lt;span class="s2">&amp;#34;Be sure to logout and log back in, or source ~/.profile&amp;#34;&lt;/span>
&lt;span class="nb">source&lt;/span> ~/.profile
rbenv install 2.5.5
rbenv global 2.5.5
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_nvm&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nv">RESET_TERMINAL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
info Installing nvm
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh &lt;span class="p">|&lt;/span> &lt;span class="o">(&lt;/span>bash&lt;span class="o">)&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">NVM_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/.config&amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -s &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$NVM_DIR&lt;/span>&lt;span class="s2">/nvm.sh&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\.&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$NVM_DIR&lt;/span>&lt;span class="s2">/nvm.sh&amp;#34;&lt;/span> &lt;span class="c1"># This loads nvm&lt;/span>
&lt;span class="o">[&lt;/span> -s &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$NVM_DIR&lt;/span>&lt;span class="s2">/bash_completion&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\.&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$NVM_DIR&lt;/span>&lt;span class="s2">/bash_completion&amp;#34;&lt;/span> &lt;span class="c1"># This loads nvm bash_completion&lt;/span>
warning &lt;span class="s2">&amp;#34;Be sure to loging and log back in, or source ~/.bashrc&amp;#34;&lt;/span>
nvm install &lt;span class="m">10&lt;/span>
nvm global &lt;span class="m">10&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_go&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nv">RESET_TERMINAL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
info Installing go
&lt;span class="o">(&lt;/span>
&lt;span class="nb">cd&lt;/span> /tmp
wget https://dl.google.com/go/go1.12.1.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.12.1.linux-amd64.tar.gz
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nv">$HOME&lt;/span>/.profile
&lt;span class="o">)&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$PATH&lt;/span>:/usr/local/go/bin:&lt;span class="nv">$HOME&lt;/span>/go/bin
&lt;span class="nb">source&lt;/span> ~/.profile
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_hugo&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
info Installing hugo
update_check
&lt;span class="o">(&lt;/span>
&lt;span class="nv">HUGO_VERSION&lt;/span>&lt;span class="o">=&lt;/span>0.56.3
&lt;span class="nv">HUGO_FILENAME&lt;/span>&lt;span class="o">=&lt;/span>hugo_&lt;span class="si">${&lt;/span>&lt;span class="nv">HUGO_VERSION&lt;/span>&lt;span class="si">}&lt;/span>_Linux-64bit.deb
&lt;span class="nb">cd&lt;/span> /tmp
wget https://github.com/gohugoio/hugo/releases/download/v&lt;span class="si">${&lt;/span>&lt;span class="nv">HUGO_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/&lt;span class="si">${&lt;/span>&lt;span class="nv">HUGO_FILENAME&lt;/span>&lt;span class="si">}&lt;/span>
sudo apt install -u ./&lt;span class="si">${&lt;/span>&lt;span class="nv">HUGO_FILENAME&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="o">)&lt;/span>
info &lt;span class="k">$(&lt;/span>hugo version&lt;span class="k">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_atom&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
info Installing atom
update_check
&lt;span class="o">(&lt;/span>
&lt;span class="nb">cd&lt;/span> /tmp
sudo apt-get install -y wget
wget https://atom.io/download/deb
mv deb atom.deb
sudo apt install -y ./atom.deb
&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_gcloud&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
info Installing gcloud
&lt;span class="c1"># Create environment variable for correct distribution&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">CLOUD_SDK_REPO&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cloud-sdk-&lt;/span>&lt;span class="k">$(&lt;/span>lsb_release -c -s&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># Add the Cloud SDK distribution URI as a package source&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;deb http://packages.cloud.google.com/apt &lt;/span>&lt;span class="nv">$CLOUD_SDK_REPO&lt;/span>&lt;span class="s2"> main&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
&lt;span class="c1"># Import the Google Cloud Platform public key&lt;/span>
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg &lt;span class="p">|&lt;/span> sudo apt-key add -
&lt;span class="c1"># Update the package list and install the Cloud SDK&lt;/span>
sudo apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt-get install -y google-cloud-sdk
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_heroku&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
info Installing heroku
curl https://cli-assets.heroku.com/install-ubuntu.sh &lt;span class="p">|&lt;/span> sh
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_terraform&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
info Installing terraform
&lt;span class="o">(&lt;/span>
&lt;span class="nb">cd&lt;/span> /tmp
wget https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip
unzip terraform_0.12.18_linux_amd64.zip
sudo mv terraform /usr/local/bin
&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_packer&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
info Installing packer
&lt;span class="o">(&lt;/span>
&lt;span class="nb">cd&lt;/span> /tmp
wget https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip
unzip packer_1.5.1_linux_amd64.zip
sudo mv packer /usr/local/bin
&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_ansible &lt;span class="o">{&lt;/span>
info Installing ansible
&lt;span class="o">(&lt;/span>
&lt;span class="nb">cd&lt;/span> /tmp
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
python get-pip.py --user
&lt;span class="nv">RESET_TERMINAL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
info Adding .local/bin to the path, please &lt;span class="nb">source&lt;/span> .profile
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;export PATH=&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/.local/bin:&lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.profile
&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/.local/bin:&lt;span class="nv">$PATH&lt;/span>
pip install --user ansible
&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> install_steam&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
info Installing steam
update_check
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;deb http://httpredir.debian.org/debian/ jessie main contrib non-free&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee -a /etc/apt/sources.list
sudo dpkg --add-architecture i386
sudo apt update
sudo apt install -y steam
&lt;span class="o">}&lt;/span>
&lt;span class="c1">## Actual setup scripts&lt;/span>
info &lt;span class="s2">&amp;#34;Begin setup&amp;#34;&lt;/span>
not_installed_force gcc &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_application &lt;span class="s2">&amp;#34;build-essential libssl-dev&amp;#34;&lt;/span>
not_installed_force git &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_application git
&lt;span class="k">if&lt;/span> ! git config --get user.email &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">read&lt;/span> -p &lt;span class="s2">&amp;#34;Email Address (for git): &amp;#34;&lt;/span> gitemail
git config --global user.email &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$gitemail&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nv">gitemail&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>git config --get user.email&lt;span class="k">)&lt;/span>
info &lt;span class="s2">&amp;#34;Git Email: &lt;/span>&lt;span class="nv">$gitemail&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> ! git config --get user.name &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">read&lt;/span> -p &lt;span class="s2">&amp;#34;Full name (for git) : &amp;#34;&lt;/span> gitname
git config --global user.name &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$gitname&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nv">gitname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>git config --get user.name&lt;span class="k">)&lt;/span>
info &lt;span class="s2">&amp;#34;Git Name: &lt;/span>&lt;span class="nv">$gitname&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1">## SSH&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -d ~/.ssh &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
mkdir -p ~/.ssh
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> &lt;span class="s2">&amp;#34;700&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="k">$(&lt;/span>stat -c %a ~/.ssh&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info &lt;span class="s2">&amp;#34;Setting permissions for ~/.ssh&amp;#34;&lt;/span>
chmod &lt;span class="m">700&lt;/span> ~/.ssh
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f ~/.ssh/id_rsa &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="k">if&lt;/span> yesno &lt;span class="s2">&amp;#34;Set up ~/.ssh/id_rsa?&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> Paste in your id_rsa and them press ^D
mkdir -p ~/.ssh
cat &amp;gt; ~/.ssh/id_rsa
&lt;span class="nb">echo&lt;/span> Thank you.
&lt;span class="nb">echo&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> &lt;span class="s2">&amp;#34;600&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="k">$(&lt;/span>stat -c %a ~/.ssh/id_rsa&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info &lt;span class="s2">&amp;#34;Setting permissions for ~/.ssh/id_rsa&amp;#34;&lt;/span>
chmod &lt;span class="m">600&lt;/span> ~/.ssh/id_rsa
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f ~/.ssh/id_rsa.pub &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="k">if&lt;/span> yesno &lt;span class="s2">&amp;#34;Set up ~/.ssh/id_rsa.pub?&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> Paste in your id_rsa.pub and them press ^D
mkdir -p ~/.ssh
cat &amp;gt; ~/.ssh/id_rsa.pub
&lt;span class="nb">echo&lt;/span> Thank you.
&lt;span class="nb">echo&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> &lt;span class="s2">&amp;#34;600&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="k">$(&lt;/span>stat -c %a ~/.ssh/id_rsa.pub&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info &lt;span class="s2">&amp;#34;Setting permissions for ~/.ssh/id_rsa.pub&amp;#34;&lt;/span>
chmod &lt;span class="m">600&lt;/span> ~/.ssh/id_rsa.pub
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># Applications&lt;/span>
not_installed emacs &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_application emacs25
not_installed tmux &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_application tmux
not_installed jq &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_application jq
not_installed ag &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_application silversearcher-ag
not_installed docker &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_docker
not_installed ruby &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_rbenv
not_installed node &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_nvm
not_installed go &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_go
not_installed hugo &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_hugo
not_installed heroku &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_heroku
not_installed terraform &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_terraform
not_installed packer &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_packer
not_installed ansible &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_ansible
not_installed atom &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_atom
not_installed gcloud &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_gcloud
not_installed steam &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> install_steam
&lt;span class="c1"># Get workspace&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">USER&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;wschenk&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info Installng &lt;span class="nb">local&lt;/span> stuff
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -d ~/willschenk.com &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
info Cloning my website
git clone git@github.com:wschenk/willschenk.com.git
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;:&lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">:&amp;#34;&lt;/span> &lt;span class="o">==&lt;/span> *&lt;span class="s2">&amp;#34;:&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/willschenk.com/bin:&amp;#34;&lt;/span>* &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Your path is correctly set&amp;#34;&lt;/span>
&lt;span class="k">else&lt;/span>
info Adding willschenk.com/bin to the path
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=$HOME/willschenk.com/bin:$PATH&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.profile
&lt;span class="nb">source&lt;/span> ~/.profile
&lt;span class="nv">RESET_TERMINAL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">fi&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Setting up an IPFS Node</title><link>https://willschenk.com/articles/2019/setting_up_an_ipfs_node/</link><pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/setting_up_an_ipfs_node/</guid><description>
&lt;p>
IPFS nodes that run in the broswer communicate over websockets to the main network. Lets walk through how to setup a IPFS server that your browser code can connect to in addition to the public gateways.
&lt;/p>
&lt;h2 id="headline-1">
Strategy
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
Wire everything up with &lt;code class="verbatim">docker-compose&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Create and configure an &lt;code class="verbatim">ipfs&lt;/code> container
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Setup &lt;code class="verbatim">nginx&lt;/code> with dummy certificate
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Replace that certificate with &lt;code class="verbatim">certbot&lt;/code>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
Setup &lt;code class="verbatim">certbot&lt;/code> to auto renew the certificates
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="headline-2">
Requirements
&lt;/h2>
&lt;p>
You will need:
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
A server with a domain or subdomain to use &lt;code class="verbatim">certbot&lt;/code> to get a certificate
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
A working docker-compose install
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
I&amp;#39;m using a prebuilt docker image on &lt;a href="https://www.digitalocean.com/">Digital Ocean&lt;/a> but the key part is to get the domain name.
&lt;/p>
&lt;h2 id="headline-3">
Setting up &lt;code class="verbatim">ipfs&lt;/code>
&lt;/h2>
&lt;h3 id="headline-4">
&lt;code class="verbatim">docker-compose&lt;/code> setup
&lt;/h3>
&lt;p>
We are going to pull from the official ipfs docker image. The &lt;code class="verbatim">IPFS_PROFILE&lt;/code> environment variable is used on the initial repository installation configure a specific profile, in this case &lt;code class="verbatim">server&lt;/code>, which will remove some of the local network scanning stuff that could make your hosting provider uneasy. We will also define the storage directory in &lt;code class="verbatim">/ipfsdata&lt;/code> which we will mount to the local file system in &lt;code class="verbatim">./data/ipfs&lt;/code>. This is to keep any local data around if you remove the server or decide to upgrade your installation, but it&amp;#39;s not strictly necessary if you are using this as a sort of cache.
&lt;/p>
&lt;p>
We expose some ports here. &lt;code class="verbatim">4001&lt;/code> is the ipfs swarm port and needs to be open to the world. If you are running a firewall you should unblock that port. &lt;code class="verbatim">8080&lt;/code> is the local gateway which will we expose only to localhost, &lt;code class="verbatim">8081&lt;/code> is where we are going to run the websocket listener – we will proxy through &lt;code class="verbatim">nginx&lt;/code> later in this document, and &lt;code class="verbatim">5001&lt;/code> is the api server which should not be exposed externally.
&lt;/p>
&lt;div class="src src-yml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ipfs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ipfs/go-ipfs&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- IPFS_PROFILE=server&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- IPFS_PATH=/ipfsdata&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- ./data/ipfs&lt;span class="p">:&lt;/span>/ipfsdata&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;4001:4001&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;127.0.0.1:8080:8080&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;127.0.0.1:8081:8081&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;127.0.0.1:5001:5001&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-5">
Verifying basic install
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose up -d ipfs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Look at the logs to make sure that it&amp;#39;s started up:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose logs ipfs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
See if it&amp;#39;s connected to any peers:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose &lt;span class="nb">exec&lt;/span> ipfs ipfs swarm peers&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
See if we can get any data:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl http://127.0.0.1:8080/ipfs/QmPChd2hVbrJ6bfo3WBcTW4iZnpHm8TEzWkLHmLpXhF68A&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-6">
Configuring websockets and relay
&lt;/h3>
&lt;p>
Add the websocket listener and RelayHop
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose &lt;span class="nb">exec&lt;/span> ipfs ipfs config Addresses.Swarm &lt;span class="s1">&amp;#39;[&amp;#34;/ip4/0.0.0.0/tcp/4001&amp;#34;, &amp;#34;/ip4/0.0.0.0/tcp/8081/ws&amp;#34;, &amp;#34;/ip6/::/tcp/4001&amp;#34;]&amp;#39;&lt;/span> --json
docker-compose &lt;span class="nb">exec&lt;/span> ipfs ipfs config --bool Swarm.EnableRelayHop &lt;span class="nb">true&lt;/span>
docker-compose &lt;span class="nb">exec&lt;/span> ipfs ipfs config --bool Swarm.EnableAutoNATService &lt;span class="nb">true&lt;/span>
docker-compose &lt;span class="nb">exec&lt;/span> ipfs ipfs config --bool Swarm.EnableAutoRelay true&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And then restart
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose restart ipfs&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-7">
Adding &lt;code class="verbatim">nginx&lt;/code> and &lt;code class="verbatim">certbot&lt;/code> containers
&lt;/h2>
&lt;p>
We are going to use &lt;code class="verbatim">docker-compose&lt;/code> to setup 3 services.
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>
nginx
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
certbot
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
ipfs
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;code class="verbatim">nginx&lt;/code> will listen on HTTP (80) and HTTPS (443). On port 80 it will redirect to 443, and our content will either be served from there or proxied back to the &lt;code class="verbatim">ipfs&lt;/code> node. The configuration, letsencrypt keys, and certbot web data will be exposed as volumes to be configure nginx, and to share data with the &lt;code class="verbatim">certbot&lt;/code> service.
&lt;/p>
&lt;p>
&lt;code class="verbatim">certbot&lt;/code> as a service will be used to update our certificates when they expire. We will manually coordinate the initial certificate generation, and the role of this service is mainly to deal with refreshing them as the certificates expire. This shares two volumes with the &lt;code class="verbatim">nginx&lt;/code> server to store the certificates themselves, as well as managing the web handshake. No ports are exposed.
&lt;/p>
&lt;div class="src src-yml">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>nginx&lt;span class="p">:&lt;/span>&lt;span class="m">1.17.2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;80:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;443:443&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;4003:4003&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- ./data/nginx&lt;span class="p">:&lt;/span>/etc/nginx/conf.d&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- ./data/certbot/conf&lt;span class="p">:&lt;/span>/etc/letsencrypt&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- ./data/certbot/www&lt;span class="p">:&lt;/span>/var/www/certbot&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/bin/sh -c &amp;#39;while :; do sleep 6h &amp;amp; wait $${!}; nginx -s reload; done &amp;amp; nginx -g \&amp;#34;daemon off;\&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">certbot&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>certbot/certbot&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- ./data/certbot/conf&lt;span class="p">:&lt;/span>/etc/letsencrypt&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- ./data/certbot/www&lt;span class="p">:&lt;/span>/var/www/certbot&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">entrypoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/bin/sh -c &amp;#39;trap exit TERM; while :; do certbot renew; sleep 12h &amp;amp; wait $${!}; done;&amp;#39;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ipfs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>ipfs/go-ipfs&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- IPFS_PROFILE=server&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- IPFS_PATH=/ipfsdata&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- ./data/ipfs&lt;span class="p">:&lt;/span>/ipfsdata&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;4001:4001&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;127.0.0.1:8080:8080&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;127.0.0.1:8081:8081&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;127.0.0.1:5001:5001&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-8">
NGINX &amp;amp; Certbot
&lt;/h2>
&lt;h3 id="headline-9">
Create NGINX config
&lt;/h3>
&lt;p>
We configure nginx to listen on ports 80 and 443. For the HTTP server, we give it a name (in my case &lt;code class="verbatim">ssb.willschenk.com&lt;/code>) and redirect everything to the &lt;code class="verbatim">https&lt;/code> server, except the location &lt;code class="verbatim">/.will-known/acme-challenege/&lt;/code> which &lt;code class="verbatim">certbot&lt;/code> is going to use to negotiate with the letsencrypt servers to generate our certficate. You&amp;#39;ll notice that this directory is shared with the &lt;code class="verbatim">certbot&lt;/code> docker image.
&lt;/p>
&lt;p>
On the HTTPS side, we are pointing to our certificate folder and nginx configuration that we will get from certbot. And then we proxy most of the traffic to the &lt;code class="verbatim">ipfs&lt;/code> container. Note that we are using &lt;code class="verbatim">http://ipfs:8081&lt;/code> which, inside of the &lt;code class="verbatim">nginx&lt;/code> container configured using &lt;code class="verbatim">docker-compose&lt;/code>, will point to the &lt;code class="verbatim">ipfs&lt;/code> container managed by &lt;code class="verbatim">docker-compose&lt;/code>.
&lt;/p>
&lt;p>
Put this file in &lt;code class="verbatim">./data/nginx/app.conf&lt;/code>:
&lt;/p>
&lt;div class="src src-conf">
&lt;pre>&lt;code class="language-conf" data-lang="conf">server {
listen 80;
server_name ssb.willschenk.com;
location / {
return 301 https://$host$request_uri;
}
location /.well-known/acme-challenge/ {
root /var/www/certbot;
}
}
server {
listen 443 ssl;
server_name ssb.willschenk.com;
ssl_certificate /etc/letsencrypt/live/ssb.willschenk.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/ssb.willschenk.com/privkey.pem;
include /etc/letsencrypt/options-ssl-nginx.conf;
ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
location / {
proxy_pass http://ipfs:8080;
proxy_set_header Host $host;
proxy_cache_bypass $http_upgrade;
}
}
server {
listen 4003 ssl;
server_name ssb.willschenk.com;
ssl_certificate /etc/letsencrypt/live/ssb.willschenk.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/ssb.willschenk.com/privkey.pem;
include /etc/letsencrypt/options-ssl-nginx.conf;
ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
location / {
proxy_pass http://ipfs:8081;
proxy_set_header Host $host;
proxy_cache_bypass $http_upgrade;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection &amp;#34;upgrade&amp;#34;;
}
}&lt;/code>&lt;/pre>
&lt;/div>
&lt;h3 id="headline-10">
Pull down certbot config files for nginx
&lt;/h3>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nv">data_path&lt;/span>&lt;span class="o">=&lt;/span>./data/certbot
mkdir -p &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$data_path&lt;/span>&lt;span class="s2">/conf&amp;#34;&lt;/span>
curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/tls_configs/options-ssl-nginx.conf &amp;gt; &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$data_path&lt;/span>&lt;span class="s2">/conf/options-ssl-nginx.conf&amp;#34;&lt;/span>
curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot/ssl-dhparams.pem &amp;gt; &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$data_path&lt;/span>&lt;span class="s2">/conf/ssl-dhparams.pem&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-11">
Setup initial certificates
&lt;/h3>
&lt;p>
nginx won&amp;#39;t startup ssl without a certificate, and we need to have the http server running for the certbot handshake. To get around this we will create a temporary self-signed certificate that we will use to set things up.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">domain&lt;/span>&lt;span class="o">=&lt;/span>ssb.willschenk.com
&lt;span class="nv">path&lt;/span>&lt;span class="o">=&lt;/span>/etc/letsencrypt/live/&lt;span class="nv">$domain&lt;/span>
mkdir -p ./data/certbot/conf/live/&lt;span class="nv">$domain&lt;/span>
docker-compose run --rm --entrypoint &lt;span class="s2">&amp;#34;\
&lt;/span>&lt;span class="s2"> openssl req -x509 -nodes -newkey rsa:1024 -days 1\
&lt;/span>&lt;span class="s2"> -keyout &amp;#39;&lt;/span>&lt;span class="nv">$path&lt;/span>&lt;span class="s2">/privkey.pem&amp;#39; \
&lt;/span>&lt;span class="s2"> -out &amp;#39;&lt;/span>&lt;span class="nv">$path&lt;/span>&lt;span class="s2">/fullchain.pem&amp;#39; \
&lt;/span>&lt;span class="s2"> -subj &amp;#39;/CN=localhost&amp;#39;&amp;#34;&lt;/span> certbot&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-12">
Get the real certs
&lt;/h3>
&lt;p>
First start up the ipfs and nginx containers
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose up -d ipfs
docker-compose up -d nginx&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Check out the logs for nginx to make sure that there are no errors, with &lt;code class="verbatim">docker-compose logs nginx&lt;/code>. If it has successfully started up, remove the temporary certificates:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose run --rm --entrypoint &lt;span class="s2">&amp;#34;\
&lt;/span>&lt;span class="s2"> rm -Rf /etc/letsencrypt/live/&lt;/span>&lt;span class="nv">$domain&lt;/span>&lt;span class="s2"> &amp;amp;&amp;amp; \
&lt;/span>&lt;span class="s2"> rm -Rf /etc/letsencrypt/archive/&lt;/span>&lt;span class="nv">$domain&lt;/span>&lt;span class="s2"> &amp;amp;&amp;amp; \
&lt;/span>&lt;span class="s2"> rm -Rf /etc/letsencrypt/renewal/&lt;/span>&lt;span class="nv">$domain&lt;/span>&lt;span class="s2">.conf&amp;#34;&lt;/span> certbot&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then start a on-off certbot container to do the request, changing your email address:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">email_arg&lt;/span>&lt;span class="o">=&lt;/span>wschenk@gmail.com
docker-compose run --rm --entrypoint &lt;span class="s2">&amp;#34;\
&lt;/span>&lt;span class="s2"> certbot certonly --webroot -w /var/www/certbot \
&lt;/span>&lt;span class="s2"> --email &lt;/span>&lt;span class="nv">$email_arg&lt;/span>&lt;span class="s2"> \
&lt;/span>&lt;span class="s2"> -d &lt;/span>&lt;span class="nv">$domain&lt;/span>&lt;span class="s2">
&lt;/span>&lt;span class="s2"> --rsa-key-size 4096 \
&lt;/span>&lt;span class="s2"> --agree-tos \
&lt;/span>&lt;span class="s2"> --force-renewal&amp;#34;&lt;/span> certbot&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Answer some questions, and you should now have some valid certificates.
&lt;/p>
&lt;h3 id="headline-13">
Restart everything
&lt;/h3>
&lt;p>
Now lets bring everything down, and start it up like it will in the future:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose down
docker-compose up -d&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And remember you can check the individual logs with &lt;code class="verbatim">docker-compose logs name&lt;/code> where name is one of &lt;code class="verbatim">ipfs&lt;/code>, &lt;code class="verbatim">nginx&lt;/code>, &lt;code class="verbatim">certbot&lt;/code>
&lt;/p>
&lt;h2 id="headline-14">
Testing it out
&lt;/h2>
&lt;h3 id="headline-15">
Checking to see if you have &lt;code class="verbatim">ipfs&lt;/code> peers
&lt;/h3>
&lt;p>
From the host machine:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl http://127.0.0.1:5001/api/v0/swarm/peers&lt;span class="p">|&lt;/span>jq&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Or using the ipfs command inside of the container:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker-compose &lt;span class="nb">exec&lt;/span> ipfs ipfs swarm peers&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-16">
Checking to see if your new public gateway works
&lt;/h3>
&lt;p>
You can do this from your webbrowser or the command line.
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl https://ssb.willschenk.com/ipfs/QmPChd2hVbrJ6bfo3WBcTW4iZnpHm8TEzWkLHmLpXhF68A&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-17">
Checking to make sure that API isn&amp;#39;t exposed to the internet
&lt;/h3>
&lt;p>
From another computer, make sure that you haven&amp;#39;t exposed this port to the wild wild world:
&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl http://ssb.willschenk.com:5001/api/v0/swarm/peers&lt;span class="p">|&lt;/span>jq&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="headline-18">
Checking WebSockets
&lt;/h3>
&lt;p>
Visit &lt;a href="https://www.websocket.org/echo.html">https://www.websocket.org/echo.html&lt;/a> and put in the address of your server to make sure that you can connect over websockets. In my case, it&amp;#39;s &lt;code class="verbatim">wss://ssb.willschenk.com:4003&lt;/code>
&lt;/p>
&lt;h2 id="headline-19">
Conclusion
&lt;/h2>
&lt;p>
From here you should be able to start working with your node directly. In a later post we&amp;#39;ll use some JavaScript code in the browser that will connect to your peer and walk through actually using the node a bit more. Have fun!
&lt;/p>
&lt;h2 id="headline-20">
References
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>
&lt;a href="https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71">nginx and docker&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://raw.githubusercontent.com/wmnnd/nginx-certbot/master/init-letsencrypt.sh">init-letsencrypt.sh&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://medium.com/textileio/tutorial-setting-up-an-ipfs-peer-part-ii-67a99cd2c5">Setting up an IPFS Peer&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://hackernoon.com/public-ipfs-node-behind-nginx-reverse-proxy-5682747f174b">ipfs node behing reverse proxy&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/ipfs/js-ipfs/tree/master/examples">https://github.com/ipfs/js-ipfs/tree/master/examples&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://hub.docker.com/r/ipfs/js-ipfs">https://hub.docker.com/r/ipfs/js-ipfs&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/ipfs/js-ipfs#running-js-ipfs-with-docker">https://github.com/ipfs/js-ipfs#running-js-ipfs-with-docker&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/ipfs/js-ipfs/blob/master/init-and-daemon.sh">https://github.com/ipfs/js-ipfs/blob/master/init-and-daemon.sh&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Using Org Mode in Hugo</title><link>https://willschenk.com/articles/2019/using_org_mode_in_hugo/</link><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/using_org_mode_in_hugo/</guid><description>
&lt;p>
I&amp;#39;m learning &lt;code class="verbatim">org-mode&lt;/code> and I don&amp;#39;t really know what I&amp;#39;m doing, but this is how I&amp;#39;m trying out writing hugo posts with it. I&amp;#39;m used to markdown, so this is a what&amp;#39;s different post.
&lt;/p>
&lt;h2 id="headline-1">
Some minor org-mode tweaks
&lt;/h2>
&lt;p>
For some reason when &lt;code class="verbatim">org-mode&lt;/code> starts it doesn&amp;#39;t softwrap the paragragh text. I like to have it soft-wrapped so everything is on the screen if it&amp;#39;s not collapsed. Also having some nice indentation makes things visually cleaner, so add this snippet to your &lt;code class="verbatim">~/.emacs&lt;/code> to have these turned on by default.
&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-elisp" data-lang="elisp">&lt;span class="p">(&lt;/span>&lt;span class="nb">with-eval-after-load&lt;/span> &lt;span class="ss">&amp;#39;org&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">org-startup-indented&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">; Enable `org-indent-mode&amp;#39; by default&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nv">add-hook&lt;/span> &lt;span class="ss">&amp;#39;org-mode-hook&lt;/span> &lt;span class="nf">#&amp;#39;&lt;/span>&lt;span class="nv">visual-line-mode&lt;/span>&lt;span class="p">))&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="headline-2">
Integrations
&lt;/h2>
&lt;p>
Hugo has &lt;code class="verbatim">.org&lt;/code> file support natively, which is what I&amp;#39;ll be using. There are other options out there, &lt;a href="https://ox-hugo.scripter.co/">ox-hugo&lt;/a> being the big one. This will let you write in org and then export into a &lt;code class="verbatim">.md&lt;/code> file that hugo understands and gives you more control of the output. Check that out if you have additional needs that are required.
&lt;/p>
&lt;h2 id="headline-3">
Front matter
&lt;/h2>
&lt;p>
While &lt;a href="https://gohugo.io/">Hugo&lt;/a> has front matter, you can easily translate that into &lt;code class="verbatim">org-mode&lt;/code> document properties. For example, this is what is on the top of this file:
&lt;/p>
&lt;div class="src src-org-mode">
&lt;pre>&lt;code class="language-org-mode" data-lang="org-mode">#+title: Using Org Mode in Hugo
#+subtitle: emacs everywhere
#+date: 2019-08-02
#+tags[]: howto, emacs, hugo&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
Which maps pretty directly to the &lt;code class="verbatim">toml&lt;/code> front matter.
&lt;/p>
&lt;h2 id="headline-4">
Document navigation
&lt;/h2>
&lt;table class="table table-striped">
&lt;tbody>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-c C-n&lt;/code>&lt;/td>
&lt;td>Move to the next heading&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">C-c C-p&lt;/code>&lt;/td>
&lt;td>Move to the previous heading&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">TAB&lt;/code>&lt;/td>
&lt;td>on a heading will collapse/expand&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="headline-5">
Formatting
&lt;/h2>
&lt;h3 id="headline-6">
Emphasis
&lt;/h3>
&lt;table class="table table-striped">
&lt;thead>
&lt;tr>
&lt;th>Style&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>bold&lt;/strong>&lt;/td>
&lt;td>&lt;code class="verbatim">*bold*&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>italics&lt;/em>&lt;/td>
&lt;td>&lt;code class="verbatim">/italics/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code class="verbatim">literal&lt;/code>&lt;/td>
&lt;td>&lt;code class="verbatim">=literal=&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://willschenk.com/">link&lt;/a>&lt;/td>
&lt;td>&lt;code class="verbatim">[[https://willschenk.com][link]]&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="headline-7">
Blocks
&lt;/h3>
&lt;p>
Code can be formatted in blocks like this:
&lt;/p>
&lt;p>
&lt;code class="verbatim">#+BEGIN_SRC ruby&lt;/code>
&lt;/p>
&lt;p>
&lt;code class="verbatim">#+END_SRC&lt;/code>
&lt;/p>
&lt;p>
Where &lt;code class="verbatim">ruby&lt;/code> is the language type.
&lt;/p>
&lt;p>
You can auto fill out that structure with &lt;code class="verbatim">&amp;lt;sTAB&lt;/code> at the beginning of a line.
&lt;/p>
&lt;h3 id="headline-8">
CSS
&lt;/h3>
&lt;p>
For blocks you can set specifc classes to be added to the html, so for example
&lt;/p>
&lt;div class="src src-org-mode">
&lt;pre>&lt;code class="language-org-mode" data-lang="org-mode">#+CAPTION: This is my caption
#+ATTR_HTML: :class table table-striped table-dark
| Key | Value |
| 1,2 | Jim Butters was here |&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
Will render like this (since this css is based off of bootstrap)
&lt;/p>
&lt;figure>
&lt;table class="table table-striped table-dark">
&lt;tbody>
&lt;tr>
&lt;td>Key&lt;/td>
&lt;td>Value&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1,2&lt;/td>
&lt;td>Jim Butters was here&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;figcaption>
This is my caption
&lt;/figcaption>
&lt;/figure>
&lt;p>
&lt;em>I don&amp;#39;t have a good css style for figures or captions so it&amp;#39;s just lingering there at the bottom right now&lt;/em>
&lt;/p>
&lt;h2 id="headline-9">
Embedding images
&lt;/h2>
&lt;p>
HTML in org-mode is automatically escaped which means that you&amp;#39;ll need to write a small shortcode to embed things. Otherwise you&amp;#39;ll get this:
&lt;/p>
&lt;p>
&amp;lt;img src=&amp;#34;primo.jpg&amp;#34;/&amp;gt;
&lt;/p>
&lt;p>
There are a lot of short-codes built in that work directly for example the &lt;code class="verbatim">tweet&lt;/code> code:
&lt;/p>
&lt;p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">The Colonial motel in Brattleboro is the best motel in the world. $60/night, 2 full sized pools in the spa with a great hot tub. Love this place.&lt;/p>&amp;mdash; Will Schenk (@wschenk) &lt;a href="https://twitter.com/wschenk/status/1157262946608852992?ref_src=twsrc%5Etfw">August 2, 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;/p>
&lt;p>
Here is my &lt;code class="verbatim">/layouts/shortcodes/img.html&lt;/code> short code that lets do you a little image processing on images in the same page:
&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$imageName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;img&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$images&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Page.Resources.Match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$imageName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">index&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$images&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$fill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;fill&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$fill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="na">.Fill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$fill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$fit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;fit&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$fit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="na">.Fit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$fit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$class&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;class&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$style&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;style&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">print&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;lt;img class=&amp;#39;&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$class&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#39; style=&amp;#39;&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$style&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#39; src=&amp;#39;&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#39;&amp;gt;&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>
This is the output of &amp;lt;img img=&amp;#34;primo.jpg&amp;#34; fit=&amp;#34;200x200 smart&amp;#34;&amp;gt;
&lt;/p>
&lt;p>
&lt;img class='' style='' src='./articles/2019/using_org_mode_in_hugo/primo_hue0b673333e2688e6685341084844dc00_95305_200x200_fit_q75_box.jpg'>
&lt;/p>
&lt;h2 id="headline-10">
Conclusion
&lt;/h2>
&lt;p>
I barely understand how &lt;code class="verbatim">org-mode&lt;/code> works but it&amp;#39;s changing my life. I want to be able to write everything in this, so while there are a few things still need to be worked out I think I&amp;#39;ll be able to write a lot more often.
&lt;/p>
&lt;p>
Being able to collapse the headings using &lt;code class="verbatim">TAB&lt;/code> and navigate through sections using &lt;code class="verbatim">C-c C-p&lt;/code> and &lt;code class="verbatim">C-c C-n&lt;/code> makes nimble the process of organizing tasks. Fully recommend!
&lt;/p>
&lt;h2 id="headline-11">
References
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>
&lt;a href="https://gohugo.io/">Hugo Website&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://github.com/niklasfasching/go-org">go-org&lt;/a> hugo uses this to parse your files
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://ox-hugo.scripter.co/">https://ox-hugo.scripter.co/&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>
&lt;a href="https://gohugo.io/content-management/shortcodes/#readout">https://gohugo.io/content-management/shortcodes/#readout&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Installing guix on IntelNUC</title><link>https://willschenk.com/articles/2019/installing_guix_on_nuc/</link><pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/installing_guix_on_nuc/</guid><description>&lt;p>I&amp;rsquo;ve been getting into &lt;a href="https://guix.gnu.org/">Guix&lt;/a> and &lt;a href="https://www.gnu.org/software/emacs/">Emacs&lt;/a> lately, going back to my Free Software roots. It&amp;rsquo;s amazing. Guix is a functional package manager that you can use on top of a linux distribution to have repeatable and rollbackable builds. Guix System is a distrubution that&amp;rsquo;s Guix all the way down.&lt;/p>
&lt;p>I have an Intel NUC lying around that I wanted to use, so this is my effort to get a working Guix System installation on it. This post took me almost 14 days to write, because I wanted to use the WiFi interface rather than plugging it into my router directly, and so I had to build a custom kernel with non-free code. If you have an ethernet cord, or your hardware is supported by the &lt;a href="https://en.wikipedia.org/wiki/Linux-libre">linux-libre&lt;/a> kernel this is all overkill and just follow the &lt;a href="https://guix.gnu.org/manual/en/html_node/USB-Stick-and-DVD-Installation.html#USB-Stick-and-DVD-Installation">Guix System installer instructions&lt;/a>.&lt;/p>
&lt;p>I should reiterate that if a) I plugged into the router or b) had the right network hardware that linux-libre supported this guide would be much much shorter, and this was largely an excersize to force me to get into the details of how Guix System worked. This doesn&amp;rsquo;t, you know, &lt;em>make sense&lt;/em> as a thing to do. Just plug in ethernet.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This is our strategy:&lt;/p>
&lt;ol>
&lt;li>Install guix in a virtual host running on the host machine&lt;/li>
&lt;li>Pull down the latest guix and nonguix channels&lt;/li>
&lt;li>Define an operating system configuration for the IntelNUC using non-free wifi&lt;/li>
&lt;li>Burn it onto a USB key&lt;/li>
&lt;li>Disable secure booting on the NUC&lt;/li>
&lt;li>Boot off of the USB&lt;/li>
&lt;li>Running &lt;code>guix system init&lt;/code> to put the new operating system&lt;/li>
&lt;/ol>
&lt;p>We have three options of setting up the environment &amp;ndash; one is to install guix ontop of a current Linux installation, another one is to install guix in a debian docker container, use that to generate the installation image and export it out. The other is to run an actual Guix System distrubution inside of qemu, use that the generate the installation image, and export it out. I don&amp;rsquo;t know how to make &lt;code>qemu&lt;/code> work well on OSX so I used the docker strategy (B). But (A) or (C) is probably nicer if you are starting with a Linux machine.&lt;/p>
&lt;h2 id="option-a-install-guix-ontop-of-linux">Option A: Install guix ontop of Linux&lt;/h2>
&lt;p>Follow the &lt;a href="https://guix.gnu.org/manual/en/html_node/Binary-Installation.html#Binary-Installation">binary installation instructions&lt;/a> from the Guix documentation to get Guix installed in your local environment. This will leave guix available on your machine, which could be great depending upon your use case. I&amp;rsquo;m doing this on a OSX machine which won&amp;rsquo;t work.&lt;/p>
&lt;h2 id="option-b-dockerfile-for-guix">Option B: Dockerfile for guix&lt;/h2>
&lt;p>We are going to put the steps for &lt;a href="https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html#Binary-Installation">binary installation&lt;/a> of Guix into a &lt;code>Dockerfile&lt;/code>, which will be based upon &lt;code>debian&lt;/code>. This will all be in a container so once we are done we won&amp;rsquo;t ahve anything on the host machine left over.&lt;/p>
&lt;p>One thing to note is that in order to run &lt;code>guix pull&lt;/code> we&amp;rsquo;ll need to run docker with &lt;code>--privileged&lt;/code>. Not totally sure why, but &lt;a href="https://lists.gnu.org/archive/html/guix-devel/2017-11/msg00258.html">here is a list to the mailing list discussion about it.&lt;/a> This &lt;code>Dockerfile&lt;/code> is basically a simple rewrite of the installer script, that helped me understand how guix was setup under the hood.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> debian:stretch-slim&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y wget gpg xz-utils make netbase&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> groupadd guixbuild&lt;span class="p">;&lt;/span> groupadd kxm&lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="k">for&lt;/span> i in &lt;span class="sb">`&lt;/span>seq -w &lt;span class="m">1&lt;/span> 10&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> useradd -g guixbuild -G guixbuild,kxm &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -d /var/empty -s &lt;span class="sb">`&lt;/span>which nologin&lt;span class="sb">`&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -c &lt;span class="s2">&amp;#34;Guix build user &lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --system &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> guixbuilder&lt;span class="nv">$i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="k">done&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> wget https://sv.gnu.org/people/viewgpg.php?user_id&lt;span class="o">=&lt;/span>&lt;span class="m">15145&lt;/span> -qO - &lt;span class="p">|&lt;/span> gpg --import -&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> wget https://ftp.gnu.org/gnu/guix/guix-binary-1.0.1.x86_64-linux.tar.xz -q&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> &lt;span class="nb">cd&lt;/span> /tmp &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> tar --warning&lt;span class="o">=&lt;/span>no-timestamp -xf &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> /guix-binary-1.0.1.x86_64-linux.tar.xz &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> mv var/guix /var/ &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> mv gnu /&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> mkdir -p ~root/.config/guix &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ln -sf /var/guix/profiles/per-user/root/current-guix &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> ~root/.config/guix/current&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> mkdir -p /usr/local/bin&lt;span class="p">;&lt;/span> &lt;span class="nb">cd&lt;/span> /usr/local/bin&lt;span class="p">;&lt;/span> ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> bash -c &lt;span class="s2">&amp;#34;source /root/.config/guix/current/etc/profile &amp;amp;&amp;amp; guix archive --authorize &amp;lt; \
&lt;/span>&lt;span class="s2"> ~root/.config/guix/current/share/guix/ci.guix.gnu.org.pub&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> bash&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Then we build it and start it up.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker build . -t guix &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> docker run --privileged -it --rm guix
&lt;/code>&lt;/pre>&lt;/div>&lt;p>One of my favorite things about this command is that everything basically goes away after you exit out. This is a play ground that will happy disappear and recreate itself as needed. You might not want to have &lt;code>--rm&lt;/code> flag since once you shut down or exist the container it will delete everything, but I like to have things clean up after themselves.&lt;/p>
&lt;p>Once we are in, the first thing we need to do is to start up the &lt;code>guix-daemon&lt;/code> inside of the container.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># ~/.config/guix/current/bin/guix-daemon --build-users-group=guixbuild &amp;amp;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Do a &lt;code>guix pull&lt;/code> to make sure that everything is installed correctly.&lt;/p>
&lt;p>Once this is working, set your path:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># export PATH=&amp;#34;/root/.config/guix/current/bin${PATH:+:}$PATH&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can test out the installation by &lt;code>guix install hello&lt;/code> and then trying to run &lt;code>hello&lt;/code>.&lt;/p>
&lt;h2 id="option-c-installing-qemu">Option C: Installing QEMU&lt;/h2>
&lt;p>You can install &lt;code>qemu&lt;/code> and run the sample installer this way. This is painfully slow on OSX, but works pretty well on the Chromebook. This is because I remove &lt;code>--enable-kvm&lt;/code> on the MacBook so I guess it falls back to software cpu emulation or something, I don&amp;rsquo;t know the equivlent for how to do this on Darwin.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># apt-get install qemu&lt;/span>
&lt;span class="c1"># wget https://ftp.gnu.org/gnu/guix/guix-system-vm-image-1.0.1.x86_64-linux.xz&lt;/span>
&lt;span class="c1"># xz -d guix-system-vm-image-1.0.1.x86_64-linux.xz&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then start it up. For OSX take out &lt;code>enable-kvm&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">qemu-system-x86_64 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -net user -net nic,model&lt;span class="o">=&lt;/span>virtio &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -enable-kvm -m &lt;span class="m">2048&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -device virtio-blk,drive&lt;span class="o">=&lt;/span>myhd &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -drive &lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>none,file&lt;span class="o">=&lt;/span>guix-system-vm-image-1.0.1.x86_64-linux,id&lt;span class="o">=&lt;/span>myhd
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once this is started up, our directions converge together below. However, this is painfully slow on OSX so I don&amp;rsquo;t think it&amp;rsquo;s a viable option.&lt;/p>
&lt;h2 id="include-the-nonguix-channel">Include the &lt;code>nonguix&lt;/code> channel&lt;/h2>
&lt;p>As root, create a &lt;code>~/.config/guix/channels.scm&lt;/code> file to include the &lt;code>nonguix&lt;/code> channel:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="o">#&lt;/span> &lt;span class="nv">cat&lt;/span> &lt;span class="nv">&amp;gt;&lt;/span> &lt;span class="nv">~/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nv">config/guix/channels&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nv">scm&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">cons*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">channel&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">name&lt;/span> &lt;span class="ss">&amp;#39;nonguix&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">url&lt;/span> &lt;span class="s">&amp;#34;https://gitlab.com/nonguix/nonguix&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nv">%default-channels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then run &lt;code>guix pull&lt;/code> to update everything. This should take a bit, but not terribly long.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># guix pull&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="build-the-boot-image">Build the boot image&lt;/h2>
&lt;p>Now we define the operating system that we will eventually install. Copy this &lt;a href="config.scm">config.scm&lt;/a> file into the docker container:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="p">(&lt;/span>&lt;span class="nf">use-modules&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">gnu&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">nongnu&lt;/span> &lt;span class="nv">packages&lt;/span> &lt;span class="nv">linux&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">use-service-modules&lt;/span> &lt;span class="nv">desktop&lt;/span> &lt;span class="nv">networking&lt;/span> &lt;span class="nv">ssh&lt;/span> &lt;span class="nv">xorg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">this-file&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">local-file&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">basename&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">assoc-ref&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">current-source-location&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">'filename&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="s">&amp;quot;config.scm&amp;quot;&lt;/span>&lt;span class="p">))&lt;/span>&lt;/p>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nf">operating-system&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">kernel&lt;/span> &lt;span class="nv">linux&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">locale&lt;/span> &lt;span class="s">&amp;quot;en_US.utf8&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">host-name&lt;/span> &lt;span class="s">&amp;quot;intelnuc&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">timezone&lt;/span> &lt;span class="s">&amp;quot;America/New_York&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/p>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nf">keyboard-layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">keyboard-layout&lt;/span> &lt;span class="s">&amp;quot;us&amp;quot;&lt;/span> &lt;span class="s">&amp;quot;altgr-intl&amp;quot;&lt;/span>&lt;span class="p">))&lt;/span>&lt;/p>
&lt;p>&lt;span class="c1">;; This will be what is used on the target machine&lt;/span>
&lt;span class="c1">;; (bootloader (bootloader-configuration&lt;/span>
&lt;span class="c1">;; (bootloader grub-efi-bootloader)&lt;/span>
&lt;span class="c1">;; (timeout 1)&lt;/span>
&lt;span class="c1">;; (target &amp;quot;/boot/efi&amp;quot;)))&lt;/span>&lt;/p>
&lt;p>&lt;span class="c1">;; This is needed to create a bootable USB&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">bootloader&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">bootloader-configuration&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">bootloader&lt;/span> &lt;span class="nv">grub-bootloader&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">target&lt;/span> &lt;span class="s">&amp;quot;/dev/sda&amp;quot;&lt;/span>&lt;span class="p">)))&lt;/span>&lt;/p>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nf">firmware&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">append &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">list &lt;/span>&lt;span class="nv">iwlwifi-firmware&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nv">%base-firmware&lt;/span>&lt;span class="p">))&lt;/span>&lt;/p>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nf">users&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">cons*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">user-account&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">name&lt;/span> &lt;span class="s">&amp;quot;wschenk&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">group&lt;/span> &lt;span class="s">&amp;quot;users&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">supplementary-groups&lt;/span> &lt;span class="o">'&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;quot;wheel&amp;quot;&lt;/span> &lt;span class="s">&amp;quot;netdev&amp;quot;&lt;/span> &lt;span class="s">&amp;quot;audio&amp;quot;&lt;/span> &lt;span class="s">&amp;quot;lp&amp;quot;&lt;/span> &lt;span class="s">&amp;quot;video&amp;quot;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">;; TODO: Default to name?&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">home-directory&lt;/span> &lt;span class="s">&amp;quot;/home/wschenk&amp;quot;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nv">%base-user-accounts&lt;/span>&lt;span class="p">))&lt;/span>&lt;/p>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nf">packages&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">append&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">specification-&amp;gt;package&lt;/span> &lt;span class="s">&amp;quot;nss-certs&amp;quot;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nv">%base-packages&lt;/span>&lt;span class="p">))&lt;/span>&lt;/p>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nf">services&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">append&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span>
&lt;span class="c1">;; Copy current config to /etc/config.scm&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">simple-service&lt;/span> &lt;span class="ss">'config-file&lt;/span> &lt;span class="nv">etc-service-type&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s">&amp;quot;config.scm&amp;quot;&lt;/span> &lt;span class="o">,&lt;/span>&lt;span class="nv">this-file&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">service&lt;/span> &lt;span class="nv">gnome-desktop-service-type&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">service&lt;/span> &lt;span class="nv">openssh-service-type&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">set-xorg-configuration&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">xorg-configuration&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">keyboard-layout&lt;/span> &lt;span class="nv">keyboard-layout&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;span class="nv">%desktop-services&lt;/span>&lt;span class="p">))&lt;/span>&lt;/p>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nf">file-systems&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">cons*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-system&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">device&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-system-label&lt;/span> &lt;span class="s">&amp;quot;guix&amp;quot;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">mount-point&lt;/span> &lt;span class="s">&amp;quot;/&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">type&lt;/span> &lt;span class="s">&amp;quot;ext4&amp;quot;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">;; Not needed for bootable usb but needed for final system&lt;/span>
&lt;span class="c1">;; (file-system&lt;/span>
&lt;span class="c1">;; (device &amp;quot;/dev/nvme0n1p1&amp;quot;)&lt;/span>
&lt;span class="c1">;; (type &amp;quot;vfat&amp;quot;)&lt;/span>
&lt;span class="c1">;; (mount-point &amp;quot;/boot/efi&amp;quot;))&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">file-system&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">mount-point&lt;/span> &lt;span class="s">&amp;quot;/tmp&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">device&lt;/span> &lt;span class="s">&amp;quot;none&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">type&lt;/span> &lt;span class="s">&amp;quot;tmpfs&amp;quot;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">check?&lt;/span> &lt;span class="no">#f&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nv">%base-file-systems&lt;/span>&lt;span class="p">)))&lt;/span>&lt;/p>
&lt;p>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>And build the image with&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ guix system disk-image config.scm
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command will take &lt;em>forever&lt;/em> (around 1 hour) mainly because it&amp;rsquo;s compiling the linux kernel and other fun stuff. There isn&amp;rsquo;t a substition server for the &lt;code>nonguix&lt;/code> pacakges so everything will happen using source on your local machine. My MacBook runneth hot.&lt;/p>
&lt;p>If you get an error, make sure that the guixbuild users are added to the kvm group. (Edit /etc/group if needed.)&lt;/p>
&lt;p>When this is done, you should a path name printed that has the installation image.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ls -hl /gnu/store/5v93jajj81mjfpp0lvkx61yk89r572cf-disk-image
-r--r--r-- &lt;span class="m">2&lt;/span> root root 2.9G Jan &lt;span class="m">1&lt;/span> &lt;span class="m">1970&lt;/span> /gnu/store/5v93jajj81mjfpp0lvkx61yk89r572cf-disk-image
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="copy-the-install-image-and-a-linux-export-to-the-host-machine">Copy the install image and a linux export to the host machine&lt;/h2>
&lt;p>Make sure that ssh is installed and copy to your local machine, in my case &lt;code>wschenk@192.168.1.52&lt;/code>. Yours should probably be somewhere else.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># guix install openssh&lt;/span>
&lt;span class="c1"># export PATH=/root/.guix-profile/bin:$PATH&lt;/span>
&lt;span class="c1"># scp /gnu/store/5v93jajj81mjfpp0lvkx61yk89r572cf-disk-image wschenk@192.168.1.52:/tmp/myguix.iso&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="write-the-iso-into-the-usb">Write the ISO into the USB&lt;/h2>
&lt;p>And on the host machine, lets put it onto the USB stick. If you are on OSX, &lt;a href="https://www.balena.io/etcher/">Etcher&lt;/a> is a nice app for doing this. Otherwise you can use &lt;code>dd&lt;/code> and if it&amp;rsquo;s in &lt;code>/dev/disk2&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo dd &lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>/tmp/myguix.iso &lt;span class="nv">of&lt;/span>&lt;span class="o">=&lt;/span>/dev/disk2
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="booting-the-internuc-off-of-the-usb-key">Booting the InterNUC off of the USB key&lt;/h2>
&lt;p>As documented &lt;a href="https://forums.intel.com/s/question/0D50P0000490X0zSAE/image-authorization-fail-system-can-not-boot-to-this-usb-device?language=en_US">here&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>At BIOS POST (i.e. when the &amp;ldquo;Intel NUC&amp;rdquo; splash screen appears), rapidly press the F2 key over and over until the BIOS Setup (Visual BIOS) display appears.&lt;/li>
&lt;li>Click on Advanced, then Boot and then select the Secure Boot tab.&lt;/li>
&lt;li>Uncheck the Secure Boot option.&lt;/li>
&lt;li>Press F10 and then select Yes to save this change and reboot the system.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h2 id="the-installation">The installation&lt;/h2>
&lt;p>Now you should boot up off of the USB key and have guix running on your system! The &lt;code>root&lt;/code> user doesn&amp;rsquo;t have a password and neither does the user account defined.&lt;/p>
&lt;p>&lt;code>C-Alt-F2&lt;/code> will switch to a console. Log in as &lt;code>root&lt;/code> here (without password), and set the password for your user, in my case &lt;code>passwd wschenk&lt;/code>.&lt;/p>
&lt;p>&lt;code>C-Alt-F7&lt;/code> will go back to the Gnome login screen, where you&amp;rsquo;ll be able to login as your user if you want to use Gnome.&lt;/p>
&lt;h2 id="setting-up-wifi">Setting up WiFi&lt;/h2>
&lt;p>&lt;code>sudo rfkill unblock all&lt;/code> will turn on your network card, which you can figure by going to the &lt;code>Activities&lt;/code> menu and selecting &lt;code>Settings&lt;/code>. You need to enable the interface in order for the Gnome network manager to be able to connect to WiFi. Go to a terminal and &lt;code>ping 1.1.1.1&lt;/code> to see if you can connect to the internet!&lt;/p>
&lt;p>To do this in terminal (you can switch with &lt;code>C-Alt-F2&lt;/code> the steps are:&lt;/p>
&lt;ol>
&lt;li>&lt;code>rfkill unblock all&lt;/code>&lt;/li>
&lt;li>&lt;code>nmcli device wifi&lt;/code> to list out the available SSIDs&lt;/li>
&lt;li>&lt;code>nmcli device wifi connect HappyFunCorp password mysekretpassword&lt;/code> to actually make the connection.&lt;/li>
&lt;li>&lt;code>ping 1.1.1.1&lt;/code> to verify that things are working&lt;/li>
&lt;/ol>
&lt;h2 id="preparing-the-target-disk">Preparing the target disk&lt;/h2>
&lt;p>The easiest way is probably to use &lt;code>cfdisk&lt;/code> or &lt;code>GNOME Disk&lt;/code> to format your target drive. I&amp;rsquo;m going to walk through using the CLI to do this, but it doesn&amp;rsquo;t really matter what you use.&lt;/p>
&lt;p>First run &lt;code>lsblk&lt;/code> to see which devices are on your system.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">wschenk@intelnuc ~$ lsblk
NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
sda 8:0 &lt;span class="m">1&lt;/span> 14.9G &lt;span class="m">0&lt;/span> disk
├─sda1 8:1 &lt;span class="m">1&lt;/span> 5.4G &lt;span class="m">0&lt;/span> part
└─sda2 8:2 &lt;span class="m">1&lt;/span> 40M &lt;span class="m">0&lt;/span> part
nvme0n1 259:0 &lt;span class="m">0&lt;/span> 465.8G &lt;span class="m">0&lt;/span> disk
&lt;/code>&lt;/pre>&lt;/div>&lt;p>From there we can use &lt;code>fdisk&lt;/code> to create the partitions on, in my case, &lt;code>/dev/nvme0n1&lt;/code>.&lt;/p>
&lt;p>&lt;code>n&lt;/code> to create the first partition for with a size of &lt;code>+100M&lt;/code>. I don&amp;rsquo;t know if this is big or small, but seemed fine.&lt;/p>
&lt;p>&lt;code>t&lt;/code> to change the partition type, select &lt;code>1&lt;/code> for &lt;code>EFI System&lt;/code>.&lt;/p>
&lt;p>&lt;code>n&lt;/code> to create another partition for the rest of the disk.&lt;/p>
&lt;p>&lt;code>t&lt;/code> to change the partition type, select &lt;code>20&lt;/code> for &lt;code>Linux Filesystem&lt;/code>&lt;/p>
&lt;p>&lt;code>w&lt;/code> to write the partition table.&lt;/p>
&lt;p>Run &lt;code>sync&lt;/code> just to be safe.&lt;/p>
&lt;p>Lets setup the first partition to be formatted as FAT32 and be bootable, and mount it on &lt;code>/boot/efi&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># guix install dosfstools parted&lt;/span>
&lt;span class="c1"># export PATH=/root/.guix-profile/sbin:$PATH&lt;/span>
&lt;span class="c1"># mkfs.vfat -F32 /dev/nvme0n1p1&lt;/span>
&lt;span class="c1"># parted /dev/nvme0n1 set 1 esp on&lt;/span>
&lt;span class="c1"># mount /dev/nvme01n1p1 /boot/efi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initialize the file system, which in my case is the 2nd partition, and label it as &lt;code>guix&lt;/code>, and then mount it on &lt;code>/mnt&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># mkfs.ext4 -L guix /dev/nvme0n1p2&lt;/span>
&lt;span class="c1"># mount LABEL=guix /mnt&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="edit-configscm-file">Edit &lt;code>config.scm&lt;/code> file&lt;/h2>
&lt;p>You should find the &lt;code>config.scm&lt;/code> file that you built the system with in &lt;code>/etc/config.scm&lt;/code>. If not bring it over from the internet, and edit it to uncomment out the correct bootloader, and specify the right mount point for &lt;code>/boot/efi&lt;/code> so that the kernel will be installed in the right place.&lt;/p>
&lt;h2 id="run-guix-system-init">Run &lt;code>guix system init&lt;/code>&lt;/h2>
&lt;p>Finally we are going to build our system onto our target disk! Make sure that the target system is mounted at &lt;code>/mnt&lt;/code> and here we go!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># guix pull&lt;/span>
&lt;span class="c1"># guix system init config.scm /mnt&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Depending up on the time between building the USB key image and doing the pull, this will time to some time to build. (The main thing is if the linux kernel version is different.) This builds all of the dependant packages from our &lt;code>operatating-system&lt;/code> definition, and then moves overything over to the filesystem in &lt;code>/mnt&lt;/code> and should update the grub bootloader.&lt;/p>
&lt;p>Once this is done you should be able to reboot, remove the USB key, and them boot into your new Guix System installation!&lt;/p>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;p>Once the system is booted, do &lt;code>C-Alt-F2&lt;/code> to get a console, and log in as root. Then give root and your username a password using &lt;code>passwd&lt;/code>.&lt;/p>
&lt;p>Turn the wifi on using &lt;code>rfkill unblock all&lt;/code>.&lt;/p>
&lt;p>You may want to put the &lt;code>nonguix&lt;/code> channel back into &lt;code>/root/.config/guix/channels.scm&lt;/code> to help with changing things in the future.&lt;/p>
&lt;p>Enjoy!&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.gnu.org/software/guix/download/">https://www.gnu.org/software/guix/download/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html#Binary-Installation">https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html#Binary-Installation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/guix/manual/en/html_node/Installing-Guix-in-a-VM.html#Installing-Guix-in-a-VM">https://www.gnu.org/software/guix/manual/en/html_node/Installing-Guix-in-a-VM.html#Installing-Guix-in-a-VM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gitlab.com/nonguix/nonguix/blob/master/README.org">https://gitlab.com/nonguix/nonguix/blob/master/README.org&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://forums.intel.com/s/question/0D50P0000490X0zSAE/image-authorization-fail-system-can-not-boot-to-this-usb-device?language=en_US">https://forums.intel.com/s/question/0D50P0000490X0zSAE/image-authorization-fail-system-can-not-boot-to-this-usb-device?language=en_US&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lists.gnu.org/archive/html/help-guix/2016-02/msg00046.html">https://lists.gnu.org/archive/html/help-guix/2016-02/msg00046.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bbs.archlinux.org/viewtopic.php?pid=1324810#p1324810">https://bbs.archlinux.org/viewtopic.php?pid=1324810#p1324810&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://libreboot.org/docs/gnulinux/guix_system.html">https://libreboot.org/docs/gnulinux/guix_system.html&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Reverse engineering APIs using Chrome Developer Tools</title><link>https://willschenk.com/articles/2019/reverse_engineering_apis_using_chrome/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/reverse_engineering_apis_using_chrome/</guid><description>&lt;p>I want to get a list of all of the podcast episodes that I&amp;rsquo;ve starred on &lt;a href="https://www.pocketcasts.com/">PocketCasts&lt;/a>. There&amp;rsquo;s no obvious way to export this from the application, and they don&amp;rsquo;t have a published interface. Lets look at hope to use chrome developer tools to figure out what the API is.&lt;/p>
&lt;p>We know that PocketCasts must have an API since it also has a mobile app &amp;ndash; the code in the mobile app must talk to the code in the server using a format that computers understand, which is basically the definition of an API. We are leveraging the fact that the web version of PocketCasts is a JavaScript client application which uses the same API. If all the HTML was generated on the server there wouldn&amp;rsquo;t necessarily be an API and so you&amp;rsquo;d need to resort to scraping and parsing the resulting HTML to regenerate the underlying database that the views were generated off of. We&amp;rsquo;ll look at using Puppeteer in a later post for situations like that.&lt;/p>
&lt;h2 id="reverse-engineering-a-simple-api">Reverse Engineering a Simple API&lt;/h2>
&lt;p>The idea is that we are going to open up the chrome developer tools and monitor all of the network requests that the browser makes to the server. We will stare and ponder at these requests to see how to make them in the same way using our own code. In this article I&amp;rsquo;m going to walk through using &lt;code>bash&lt;/code>, &lt;code>curl&lt;/code> and &lt;code>jq&lt;/code>, which are tools available everywhere with very few dependencies.&lt;/p>
&lt;p>These particular tools work great, but scripting &lt;code>bash&lt;/code> is a little bit awkward. The tools themselves don&amp;rsquo;t really matter, so use which ever coding platform you are most familiar with. Also, I&amp;rsquo;m not personally a Firefox user but I&amp;rsquo;m sure that the developer tools there are top notch and all these techniques apply equally.&lt;/p>
&lt;h2 id="logging-in">Logging in&lt;/h2>
&lt;p>The first thing we need to do is go to click the login button and go to the login page to see what&amp;rsquo;s going on. Click around on the site until you find the login form. (If you are already logged in, log out first.) For PocketCasts this should leave you here: &lt;a href="https://play.pocketcasts.com/web/user/sign_in">https://play.pocketcasts.com/web/user/sign_in&lt;/a> Now we want to &lt;a href="https://developers.google.com/web/tools/chrome-devtools/open">open the developer tools&lt;/a>. You can do this by pressing &lt;code>ctrl-shift-c&lt;/code>, or right clicking on the page and selecting &lt;code>Inspect Element&lt;/code>.&lt;/p>
&lt;p>
&lt;img src="open_console.png" class="img-fluid" alt="Chrome Developer Console"/>
&lt;/p>
&lt;p>Looking at this we can see a few things:&lt;/p>
&lt;ol>
&lt;li>The &lt;code>form&lt;/code> has no action, which means that JavaScript is going to be used to submit the form.&lt;/li>
&lt;li>There&amp;rsquo;s a ton of CSS classes that look like &lt;code>sytled__&lt;/code>, which means that it&amp;rsquo;s using styled components and react.&lt;/li>
&lt;li>This means that the CSS classes aren&amp;rsquo;t semantic, which is rude and makes it harder to scrape the data if it comes to that.&lt;/li>
&lt;/ol>
&lt;p>Semantic CSS means that when you specify what something looks like on the page you use (hopefully) consistent terms that reflect not just want you want the words on the screen to look like, but that those words are &amp;ldquo;title of the podcast&amp;rdquo; or &amp;ldquo;podcast show notes&amp;rdquo;. This style is falling out of favor for technical reasons, but it makes it much hard to deal with archiving and dead sites.&lt;/p>
&lt;p>This shouldn&amp;rsquo;t matter in this case since the strategy is to emulate the JavaScript client, but it&amp;rsquo;s something to keep in mind when we tackle different sites that are more hostile.&lt;/p>
&lt;h2 id="select-the-network-tab">Select the network tab&lt;/h2>
&lt;p>Lets key Chrome recording the API requests so we can pull them out. First select the network tab in the open console. Then make sure that it&amp;rsquo;s recording (the red dot on the far left) and reload the page. Enter in your email and password in the form (the screen shot shows me entering &lt;code>email@email.com&lt;/code> and &lt;code>password&lt;/code> which is obviously not real) and press submit.&lt;/p>
&lt;ol>
&lt;li>The network tab needs to be select.&lt;/li>
&lt;li>The red dot needs to be on.&lt;/li>
&lt;li>I&amp;rsquo;ve filtered by &amp;ldquo;XHR&amp;rdquo;, which filters on requests that the JavaScript makes to different servers. (This stands for XMLHttpRequest which is mostly called Ajax, or &amp;ldquo;Asynchronous JavaScript and XML&amp;rdquo;, even though we aren&amp;rsquo;t using any XML).&lt;/li>
&lt;li>I&amp;rsquo;ve selected the &lt;code>/login&lt;/code> request on the left. You&amp;rsquo;ll probably have a bunch of requests here that you&amp;rsquo;ll need to filter through to find what you are looking for.&lt;/li>
&lt;li>On the bottom right, you can see the Request Headers (which we need to emulate), the Response Headers (which is what the server sends back) and the &amp;ldquo;Request Payload&amp;rdquo;, which we also need to send to the server.&lt;/li>
&lt;/ol>
&lt;p>
&lt;img src="network.png" class="img-fluid" alt="Network pane view"/>
&lt;/p>
&lt;p>So lets see what we can see:&lt;/p>
&lt;ol>
&lt;li>Under &amp;ldquo;Headers General&amp;rdquo; we see that this is a &lt;code>POST&lt;/code> request to &lt;code>https://api.pocketcasts.com/user/login&lt;/code> which is the end point.&lt;/li>
&lt;li>Under &amp;ldquo;Response Headers&amp;rdquo; we see that it&amp;rsquo;s sending back JSON, which is always a safe bet for JavaScript applications.&lt;/li>
&lt;li>Under &amp;ldquo;Request Headers&amp;rdquo; &amp;ndash; things that we should be sending to the server &amp;ndash; there are a number of oddities, including headers keys that &lt;em>start&lt;/em> with the colon character (&lt;code>:&lt;/code>). &lt;em>Once we connect this is where we will find the authorization mechanism, either as a cookie or a Authorization: Bearer token.&lt;/em>&lt;/li>
&lt;/ol>
&lt;p>What we see here is that login is done by POST json to &lt;code>https://api.pocketcasts.com/user/login&lt;/code>. So lets code that up to test.&lt;/p>
&lt;ol>
&lt;li>First we put the USER and PASS in the environment.&lt;/li>
&lt;li>Then we &amp;ldquo;format&amp;rdquo; our JSON.&lt;/li>
&lt;li>&lt;code>-d&lt;/code> tells curl the data to post&lt;/li>
&lt;li>&lt;code>-H&lt;/code> sets the request header telling it that we a posting JSON.&lt;/li>
&lt;li>&lt;code>-X&lt;/code> sets the method to &lt;code>POST&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">POCKET_USER&lt;/span>&lt;span class="o">=&lt;/span>wschenk@gmail.com
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">POCKET_PASS&lt;/span>&lt;span class="o">=&lt;/span>mysuperpassword
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">LOGIN_JSON&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{&amp;#39;email&amp;#39;: &amp;#39;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">POCKET_USER&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39;, &amp;#39;password&amp;#39;: &amp;#39;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">POCKET_PASS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39;, &amp;#39;scope&amp;#39;: &amp;#39;webplayer&amp;#39;}&amp;#34;&lt;/span>
$ curl -d &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOGIN_JSON&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -X POST https://api.pocketcasts.com/user/login &lt;span class="p">|&lt;/span> tee token.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If all goes well, you should have a file called &lt;code>token.json&lt;/code> that looks something like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;eyJ0eXAiOiJKV1QiLCJhbGciOsomanymanyrandomcharacters&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;uuid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;e0472133-e54e-4176-also-random-gibberious&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="parsing-json">Parsing JSON&lt;/h2>
&lt;p>We need to store that token somewhere and then using it again for making requests. We can do this by using &lt;code>jq&lt;/code> to parse this file to be able to use it again.&lt;/p>
&lt;ol>
&lt;li>&lt;code>-r&lt;/code> will print the raw output, without any quotes around it&lt;/li>
&lt;li>&lt;code>.token&lt;/code> is the query, which means the token attribute on the top level object.&lt;/li>
&lt;li>&lt;code>token.json&lt;/code> is the file that we created above.&lt;/li>
&lt;li>Lets put it in a variable to use later.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ jq -r .token token.json
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">POCKET_TOKEN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>jq -r .token token.json&lt;span class="k">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="getting-a-list-of-starred-podcasts">Getting a list of starred podcasts&lt;/h2>
&lt;p>Now that we have logged in, lets see how to get the list of podcast episodes that we&amp;rsquo;ve starred. If we click around on the user interface and have the network tab open in the dev tools, we can see all the requests that the client player is making to the API. If you turn off the filter and show &amp;ldquo;All&amp;rdquo; requests you can see that it&amp;rsquo;s really quite a lot! And it goes to all different servers, not just &lt;code>play.pocketcasts.com&lt;/code> or &lt;code>api.pocketcasts.com&lt;/code>. If you flip over to the &amp;ldquo;Sources&amp;rdquo; tab you can see all of the HTML objects that are loaded in from the various servers out there in the world &amp;ndash; fonts and user tracking tend to come from other places. &lt;em>This is how they track you&lt;/em>. This site doesn&amp;rsquo;t have ads but basically if it did then this is the mechanism where your user behavior on the internet is linked together and how the ad networks build a profile on you. You should install an ad blocker.&lt;/p>
&lt;p>Anyway, back to the network tab. Filter again on &amp;ldquo;XHR&amp;rdquo; requests and (probably) reload the page. You should see something like:&lt;/p>
&lt;p>
&lt;img src="starred.png" class="img-fluid" alt="the starred podcast request"/>
&lt;/p>
&lt;ol>
&lt;li>Again a &lt;code>POST&lt;/code> request, this time to &lt;code>https://api.pocketcasts.com/user/starred&lt;/code>&lt;/li>
&lt;li>There&amp;rsquo;s an &lt;code>Authorization: Bearer&lt;/code> in the request headers.&lt;/li>
&lt;li>The request payload is &lt;code>{}&lt;/code> which is sort of silly but ok. (This is not really REST, where it should be a &lt;code>GET&lt;/code> request on the collection object, but when you are writing both the client and the server of a private API you are free to do whatever you want!)&lt;/li>
&lt;li>If we click over to the &amp;ldquo;Response&amp;rdquo; subtab, we get a sense of the data that we are working with:&lt;/li>
&lt;/ol>
&lt;p>
&lt;img src="response_detail.png" class="img-fluid" alt="details of the response"/>
&lt;/p>
&lt;p>Interesting things to note here:&lt;/p>
&lt;ol>
&lt;li>This api uses &lt;code>uuid&lt;/code> everywhere, in this case for episodes but it also links out to &lt;code>podcastUuid&lt;/code>.&lt;/li>
&lt;li>There&amp;rsquo;s a field for &lt;code>podcastTitle&lt;/code> but no data it in. You can imagine how when they were developing it they thought it would make sense to include that data, but when implementing the front end nothing that used this api needed it. So they forgot to either populate the attribute or remove it all together. No one was intending us to look at it.&lt;/li>
&lt;li>Alternatively, this is because we are logging with the &amp;ldquo;webplayer&amp;rdquo; scope, and if we logged in with a different scope &amp;ndash; like whatever the mobile apps use &amp;ndash; the data will populate. A mystery that we will skip over.&lt;/li>
&lt;li>Looks like the &lt;code>duration&lt;/code> is in seconds.&lt;/li>
&lt;li>It&amp;rsquo;s weird that &lt;code>size&lt;/code> is zero for this particular episodes. Others on my list have a non-zero size, but we know that this data can&amp;rsquo;t be trusted.&lt;/li>
&lt;li>Looks like it&amp;rsquo;s figuring out that some podcasts have &lt;code>seasons&lt;/code> and &lt;code>episodes&lt;/code> &amp;ndash; which I didn&amp;rsquo;t know was an official thing, but doing some googles into RSS feeds shows that this is standard iTunes metadata which is a nifty thing to learn.&lt;/li>
&lt;li>There&amp;rsquo;s no starred date, or no listening date. It appears to return the data sorted by when I saved the episode, but I don&amp;rsquo;t know what that date is, only the time that the episode was published on the internet.&lt;/li>
&lt;/ol>
&lt;p>In general, data from APIs are messy and annoying. In many ways it&amp;rsquo;s the same as just scraping the UI, in the sense that the data from the API is what&amp;rsquo;s used to make the UI, the mess is higher upstream. If it shows up in the user interface you have good reason to believe that it&amp;rsquo;s been tested, but we don&amp;rsquo;t have access to any validation code that the JavaScript uses. (It&amp;rsquo;s possible to start poking around the minimized JavaScript that you get from the server, but that&amp;rsquo;s for another day.) What does &lt;code>playingStatus&lt;/code> mean? No idea. Why are some listed as having a zero sized file length? No idea. But you need to first look through the data and get a sense of how dirty it is before moving on.&lt;/p>
&lt;p>OK, lets look at the &lt;code>curl&lt;/code> command to pull this data down so we can start playing with it:&lt;/p>
&lt;ol>
&lt;li>&lt;code>-d &amp;quot;{}&amp;quot;&lt;/code> posts the empty JSON.&lt;/li>
&lt;li>&lt;code>&amp;quot;Authorization: Bearer ${POCKET_TOKEN}&amp;quot;&lt;/code> is how we pass back the access token.&lt;/li>
&lt;li>Everything else should look familiar.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ curl -d &lt;span class="s2">&amp;#34;{}&amp;#34;&lt;/span> -X POST &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">POCKET_TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> https://api.pocketcasts.com/user/starred &amp;gt; starred.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>So now we have a list of episodes that we&amp;rsquo;ve starred, but we are missing relavent data &amp;ndash; we don&amp;rsquo;t have the podcast title, the url for it, or any of the show notes!&lt;/p>
&lt;h2 id="finding-show-notes-of-the-episodes">Finding show notes of the episodes&lt;/h2>
&lt;p>If we click on an episode itself on the website and look through what is being loaded, we can see that it&amp;rsquo;s a &lt;code>GET&lt;/code> request from a different server. It&amp;rsquo;s still passing back the Bearer token (which is weird again but I&amp;rsquo;m going with it.)&lt;/p>
&lt;p>
&lt;img src="show_notes.png" class="img-fluid" alt="Show notes"/>
&lt;/p>
&lt;ol>
&lt;li>We create a work directory to store all the JSON that we&amp;rsquo;ll get from the server.&lt;/li>
&lt;li>We&amp;rsquo;ll use &lt;code>jq&lt;/code> to parse the &lt;code>starred.json&lt;/code> and pull out the episide &lt;code>uuid&lt;/code>.&lt;/li>
&lt;li>We&amp;rsquo;ll loop over those &lt;code>uuids&lt;/code>&lt;/li>
&lt;li>We extract out the specific info for this episode into it&amp;rsquo;s own &lt;code>info.json&lt;/code> file.&lt;/li>
&lt;li>We hit the API for each show note, putting it into it&amp;rsquo;s own directory.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="k">for&lt;/span> uuid in &lt;span class="k">$(&lt;/span>jq -r &lt;span class="s1">&amp;#39;.episodes[] | .uuid&amp;#39;&lt;/span> starred.json&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
mkdir -p episodes/&lt;span class="si">${&lt;/span>&lt;span class="nv">uuid&lt;/span>&lt;span class="si">}&lt;/span>
jq -r &lt;span class="s2">&amp;#34;.episodes[] | select( .uuid == \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">uuid&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34; ) | .&amp;#34;&lt;/span> starred.json &amp;gt; episodes/&lt;span class="si">${&lt;/span>&lt;span class="nv">uuid&lt;/span>&lt;span class="si">}&lt;/span>/info.json
curl &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">POCKET_TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> https://cache.pocketcasts.com/episode/show_notes/&lt;span class="si">${&lt;/span>&lt;span class="nv">uuid&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &amp;gt; episodes/&lt;span class="si">${&lt;/span>&lt;span class="nv">uuid&lt;/span>&lt;span class="si">}&lt;/span>/notes.json
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="finding-podcast-info">Finding podcast info&lt;/h2>
&lt;p>Lets look again to see where we can get information about the podcasts. Looking at the network inspector, we can see that it loads &lt;code>https://api.pocketcasts.com/user/podcast/list&lt;/code> for the full list of podcast that I subscribe to. We&amp;rsquo;ll need to pull down this list and then figure out how to combine the information together with the episodes to get the full information. This is another strange POST instead of GET request. In this case it&amp;rsquo;s sending &lt;code>{v:1}&lt;/code> so we will too:&lt;/p>
&lt;p>
&lt;img src="podcast_list.png" class="img-fluid" alt="podcast list info"/>
&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -d &lt;span class="s2">&amp;#34;{v:1}&amp;#34;&lt;/span> -X POST &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -H &lt;span class="s2">&amp;#34;Authorization: Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">POCKET_TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> https://api.pocketcasts.com/user/podcast/list &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &amp;gt; podcasts.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And lets loop through everything to pull in the data. We are using to use a loop, one which uses &lt;code>jq&lt;/code> to pull out the podcast uuid from the file. We will then call another &lt;code>jq&lt;/code> query to pull out just the matching JSON block into a file. There are probably many better ways to do this.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir podcasts
&lt;span class="k">for&lt;/span> podcastUuid in &lt;span class="k">$(&lt;/span>jq -r &lt;span class="s1">&amp;#39;.podcasts[] | .uuid&amp;#39;&lt;/span> podcasts.json&lt;span class="k">)&lt;/span>
&lt;span class="k">do&lt;/span>
jq -r &lt;span class="s2">&amp;#34;.podcasts[] | select( .uuid == \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">podcastUuid&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34; ) | .&amp;#34;&lt;/span> podcasts.json &amp;gt; podcasts/&lt;span class="si">${&lt;/span>&lt;span class="nv">podcastUuid&lt;/span>&lt;span class="si">}&lt;/span>.json
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="combining-it-all-together">Combining it all together&lt;/h2>
&lt;ol>
&lt;li>Loop through the starred episodes JSON.&lt;/li>
&lt;li>Pull out the podcastUuid&lt;/li>
&lt;li>Wrap the &lt;code>info.json&lt;/code> file in a &lt;code>info&lt;/code> attribute and cat to &lt;code>work.json&lt;/code>&lt;/li>
&lt;li>Wrap the &lt;code>notes.json&lt;/code> file in a &lt;code>notes&lt;/code> attribute and append to &lt;code>work.json&lt;/code>&lt;/li>
&lt;li>Wrap the postcast from the previous command into a &lt;code>podcast&lt;/code> attribute and append to &lt;code>work.json&lt;/code>&lt;/li>
&lt;li>Filter &lt;code>work.json&lt;/code> into &lt;code>combined.json&lt;/code>&lt;/li>
&lt;li>Append &lt;code>combined.json&lt;/code> to &lt;code>combined_work.json&lt;/code> on the top level.&lt;/li>
&lt;li>Reformat &lt;code>combined_work.json&lt;/code> to &lt;code>starred_combined.json&lt;/code> on the top level.&lt;/li>
&lt;/ol>
&lt;p>Here we go!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&amp;gt; combined_work.json
&lt;span class="k">for&lt;/span> episodeUuid in &lt;span class="k">$(&lt;/span>jq -r &lt;span class="s1">&amp;#39;.episodes[] | .uuid&amp;#39;&lt;/span> starred.json&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nv">dir&lt;/span>&lt;span class="o">=&lt;/span>episodes/&lt;span class="si">${&lt;/span>&lt;span class="nv">episodeUuid&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">podcastUuid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>jq -r &lt;span class="s1">&amp;#39;.podcastUuid&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">dir&lt;/span>&lt;span class="si">}&lt;/span>/info.json&lt;span class="k">)&lt;/span>
jq &lt;span class="s1">&amp;#39;{episode: .}&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">dir&lt;/span>&lt;span class="si">}&lt;/span>/info.json &amp;gt; &lt;span class="si">${&lt;/span>&lt;span class="nv">dir&lt;/span>&lt;span class="si">}&lt;/span>/work.json
jq &lt;span class="s1">&amp;#39;{note: .}&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">dir&lt;/span>&lt;span class="si">}&lt;/span>/notes.json &amp;gt;&amp;gt; &lt;span class="si">${&lt;/span>&lt;span class="nv">dir&lt;/span>&lt;span class="si">}&lt;/span>/work.json
jq &lt;span class="s1">&amp;#39;{podcast: .}&amp;#39;&lt;/span> podcasts/&lt;span class="si">${&lt;/span>&lt;span class="nv">podcastUuid&lt;/span>&lt;span class="si">}&lt;/span>.json &amp;gt;&amp;gt; &lt;span class="si">${&lt;/span>&lt;span class="nv">dir&lt;/span>&lt;span class="si">}&lt;/span>/work.json
jq -s &lt;span class="s1">&amp;#39;add | {
&lt;/span>&lt;span class="s1"> episodeTitle: .episode.title,
&lt;/span>&lt;span class="s1"> audioUrl: .episode.url,
&lt;/span>&lt;span class="s1"> published: .episode.published,
&lt;/span>&lt;span class="s1"> duration: .episode.duration,
&lt;/span>&lt;span class="s1"> size: .episode.size,
&lt;/span>&lt;span class="s1"> podcastTitle: .podcast.title,
&lt;/span>&lt;span class="s1"> author: .podcast.author,
&lt;/span>&lt;span class="s1"> description: .podcast.description,
&lt;/span>&lt;span class="s1"> podcastUrl: .podcast.url,
&lt;/span>&lt;span class="s1"> notes: .note.show_notes }&amp;#39;&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">dir&lt;/span>&lt;span class="si">}&lt;/span>/work.json &amp;gt;&amp;gt; combined_work.json
&lt;span class="k">done&lt;/span>
jq -s &lt;span class="s1">&amp;#39;. | .&amp;#39;&lt;/span> combined_work.json &amp;gt; starred_combined.json
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="now-you-have-the-full-json-for-your-starred-episodes">Now you have the full JSON for your starred episodes&lt;/h2>
&lt;p>From here you can do whatever you want with it, JSON is a form that is easily digestible by many tools. JavaScript can easily consume it directly, or static site generators often have support for bringing in data like this. (I did this in a previous post on &lt;a href="../easy_scraping_with_httpie_and_jq/">pulling down GitHub Stars&lt;/a>)&lt;/p>
&lt;p>Here&amp;rsquo;s the code all put together: &lt;a href="update_pocket_cast_starred.bash">update_pocket_cast_starred.bash&lt;/a>&lt;/p>
&lt;p>This pulls everything down into a temporary directory, and then writes the final result into &lt;a href="starred_combined.json">starred_combined.json&lt;/a> that you can use somewhere else for further processing.&lt;/p>
&lt;p>That&amp;rsquo;s all for this post. We&amp;rsquo;ll look at using Puppeteer next!&lt;/p></description></item><item><title>Controlling IKEA Tradfri devices from your computer</title><link>https://willschenk.com/articles/2019/controlling_ikea_tradfri_with_node/</link><pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/controlling_ikea_tradfri_with_node/</guid><description>&lt;p>I stumbled upon a &lt;a href="https://vas3k.com/blog/dumbass_home/?ref=sn">fun blogpost about the Dumbass Home&lt;/a> and it turned me onto the IKEA Trådfri line of products. So I got a couple, and figured out how to control them from my laptop (or say a Raspberry PI) from node. Here&amp;rsquo;s how to do it.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;ol>
&lt;li>Go to IKEA and buy stuff&lt;/li>
&lt;li>Setup IKEA Trådfri Gateway and Lights as normal&lt;/li>
&lt;li>Install the &lt;code>node-tradfri-client&lt;/code> library&lt;/li>
&lt;li>Copy the below scripts&lt;/li>
&lt;/ol>
&lt;p>First, set up a switch, lightbulb, and a gateway. The gateway needs to be plugged into the router which is a bit of a pain. You need at least one controller connected to a device to get the gateway to recognize things; once you have that it should be fairly straightforward. When in doubt, move closer to the gateway.&lt;/p>
&lt;h2 id="example-code">Example code&lt;/h2>
&lt;p>We are going to use the &lt;a href="https://github.com/AlCalzone/node-tradfri-client">node-tradfri-client library&lt;/a>, the delay library, and the conf node library to store values after the fun.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir ikeatest
&lt;span class="nb">cd&lt;/span> ikeatest
npm init
yarn add node-tradfri-client delay conf
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="find-the-gateway">Find the Gateway&lt;/h2>
&lt;p>&lt;a href="gateway.js">&lt;code>gateway.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;node-tradfri-client&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">discoverGateway&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="getting-a-security-token">Getting a security token&lt;/h2>
&lt;p>Look at the back of your gateway to get the security token. We will use this to get an
access token to the gateway, which we will then use to communicate with the device.
Set the &lt;code>IKEASECURITY&lt;/code> token in the environment and then run this script:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">IKEASECURITY&lt;/span>&lt;span class="o">=&lt;/span>akakakak
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="connection.js">&lt;code>connection.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Conf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;conf&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;delay&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">NodeTradfriClient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;node-tradfri-client&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;path&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">conf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Conf&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">discoverGateway&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">TradfriClient&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">NodeTradfriClient&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">getConnection&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Looking up IKEA Tradfri gateway on your network&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">gateway&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">discoverGateway&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">gateway&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;No Tradfri gateway found in local network&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Connecting to&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">gateway&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">TradfriClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">gateway&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">conf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;security.identity&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">conf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;security.psk&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">securityCode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">IKEASECURITY&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">securityCode&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">securityCode&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="kc">undefined&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Please set the IKEASECURITY env variable to the code on the back of the gateway&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Getting identity from security code&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">identity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">psk&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authenticate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">securityCode&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">conf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;security&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">identity&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">psk&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Securely connecting to gateway&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;security.identity&amp;#39;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="nx">conf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;security.psk&amp;#39;&lt;/span> &lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">getConnection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">getConnection&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="c1">// Only run this method if invoked with &amp;#34;node connection.js&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">__filename&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">getConnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Connection complete&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Waiting 1 second&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Closing connection&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="printing-out-discovered-device-info">Printing out discovered device info&lt;/h2>
&lt;p>Calling the &lt;code>observeDevices()&lt;/code> method will make the client start listening for devices that the gateway is connected to. The library itself keeps track of what it knows inside of the &lt;code>tradfri.devices&lt;/code> hash, so we&amp;rsquo;ll pause for a bit to give it time to listen and then print out what it found.&lt;/p>
&lt;p>&lt;a href="devices.js">&lt;code>devices.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./connection&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;delay&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">printDeviceInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">// remote
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">// sensor
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sb">`battery &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">deviceInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">battery&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">%`&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">// light
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">lightInfo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lightList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">onOff&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">lightInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onOff&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">spectrum&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">lightInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spectrum&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dimmer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">lightInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dimmer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">lightInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">colorTemperature&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">lightInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">colorTemperature&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">lightInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onOff&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;On&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Off&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">info&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">// plug
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">plugList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">onOff&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s2">&amp;#34;On&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Off&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;unknown type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">findDevice&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">deviceNameOrId&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">lowerName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">deviceNameOrId&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">deviceId&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">deviceId&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">deviceNameOrId&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">deviceId&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">deviceId&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">lowerName&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">deviceId&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">printDeviceInfo&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">findDevice&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="c1">// Only run this method if invoked with &amp;#34;node devices.js&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">__filename&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getConnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observeDevices&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// Wait a second hopefully something will be loaded by then!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">deviceId&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">device&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">deviceId&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nx">printDeviceInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="registering-our-own-device-listeners">Registering our own device listeners&lt;/h2>
&lt;p>We can register a listener callback to watch for when thing change, keeping our program running forever watching for the lights to go on and off!&lt;/p>
&lt;p>&lt;a href="device_watcher.js">&lt;code>device_watcher.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./connection&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">devices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./devices&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">deviceUpdated&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">devices&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">printDeviceInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">device&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">deviceRemoved&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">deviceId&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;See you later&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">deviceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;it&amp;#39;s been great.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getConnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">tradfri&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;device updated&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">deviceUpdated&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;device removed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">deviceRemoved&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">observeDevices&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="switching-and-dimming">Switching and dimming&lt;/h2>
&lt;p>Now that we have code that can react to changes, lets write some code that controls things!&lt;/p>
&lt;p>&lt;a href="device_changer.js">&lt;code>device_changer.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./connection&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">devices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./devices&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;delay&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">argv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Usage:&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node device_changer.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;deviceId&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--on&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node device_changer.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;deviceId&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--off&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node device_changer.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;deviceId&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--toggle&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node device_changer.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;deviceId&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--color hexcolor&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node device_changer.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;deviceId&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--brightness 0-100&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getConnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observeDevices&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">currentDevice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">accessory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">position&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;--on&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Turning&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;on&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">accessory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">turnOn&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;--off&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Turning&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;off&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">accessory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">turnOff&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;--toggle&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">accessory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggle&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;toggle device&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;--color&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">position&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Setting color of&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;to&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="nx">accessory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setColor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;--brightness&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">position&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Setting brightness of&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;to&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="nx">accessory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setBrightness&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">currentDevice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">devices&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findDevice&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">currentDevice&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Unable to find device&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Can&amp;#39;t control this type of device&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">//light
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">accessory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lightList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">accessory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">tradfri&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">// plug
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">accessory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">currentDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">plugList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">accessory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">tradfri&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">position&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This lets you add multiple commands on the line, so if we wanted to make a few changes at once you could do something like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">node device_changer.js &lt;span class="m">65538&lt;/span> --on --color efd275 &lt;span class="m">65543&lt;/span> --brightness &lt;span class="m">50&lt;/span> --on &lt;span class="m">65540&lt;/span> --on
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="scenes-and-rooms">Scenes and Rooms&lt;/h2>
&lt;p>The library also has methods to deal with scenes and rooms all at once. Let&amp;rsquo;s take a look at a room watcher:&lt;/p>
&lt;p>&lt;a href="scenes.js">&lt;code>scenes.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./connection&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;delay&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">devices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./devices&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">printRoomInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">room&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">scenes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scenes&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;ROOM&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Current Scene:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">scenes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sceneId&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;DEVICES&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">deviceId&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">deviceIDs&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">devices&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">printDeviceInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">deviceId&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;SCENES&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">sceneId&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">scenes&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">scene&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">scenes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">sceneId&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">sceneId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">scene&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// , scene.lightSettings )
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;----\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">findRoom&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">lowerName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// Look for the group
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">groupId&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groups&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groups&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">groupId&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">lowerName&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groups&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">groupId&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">groupId&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">name&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groups&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">groupId&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">printRoomInfo&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">findRoom&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="c1">// Only run this method if invoked with &amp;#34;node devices.js&amp;#34;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">__filename&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getConnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observeDevices&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observeGroupsAndScenes&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// Wait a second hopefully something will be loaded by then!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">1500&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">groupId&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groups&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">collection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groups&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">groupId&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nx">printRoomInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">collection&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="setting-the-scene">Setting the scene&lt;/h2>
&lt;p>Lets write another small utility to be able to change a room to a preset setting!&lt;/p>
&lt;p>&lt;a href="scene_changer.js">&lt;code>scene_changer.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./connection&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">devices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./devices&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">scenes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;./scenes&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;delay&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">argv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Usage:&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node scene_changer.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;room&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;scene&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tradfri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getConnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observeDevices&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observeGroupsAndScenes&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">1500&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">roomName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">sceneName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">room&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">scenes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findRoom&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">roomName&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">room&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Unable to find room named&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">roomName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">scene&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">sceneName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sceneName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// Look for the scene
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">sceneId&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scenes&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scenes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">sceneId&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">sceneName&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">scene&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scenes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">sceneId&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">scene&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Unable to find scene named&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">sceneName&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">scenes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">printRoomInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">room&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Switching&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;to scene&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">scene&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">room&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">activateScene&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">scene&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instanceId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">scenes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">printRoomInfo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">room&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="c1">// Give the messages a chance to propogate
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">tradfri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="other-stuff">Other stuff&lt;/h2>
&lt;p>You can also update the settings of the devices in the controller, which we aren&amp;rsquo;t going to cover. You can also add additional scenes and update them. These are documented further in the fantastic library.&lt;/p>
&lt;p>Have fun playing around!&lt;/p>
&lt;hr>
&lt;p>References:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://learn.pimoroni.com/tutorial/sandyj/controlling-ikea-tradfri-lights-from-your-pi">https://learn.pimoroni.com/tutorial/sandyj/controlling-ikea-tradfri-lights-from-your-pi&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/AlCalzone/node-tradfri-client">https://github.com/AlCalzone/node-tradfri-client&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Playing with cabal</title><link>https://willschenk.com/articles/2019/playing_with_cabal/</link><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/playing_with_cabal/</guid><description>&lt;p>Cabal is a &amp;ldquo;experimental p2p community chat platform&amp;rdquo;. It&amp;rsquo;s fully distributed over the &lt;a href="https://www.datprotocol.com/">dat protocol&lt;/a>. When you create a new chat area &amp;ndash; something like a Slack &amp;ndash; it allows anyone with the same key to post and view messages everywhere. When you post a message, everyone gets it and shares it with everyone else, so even when your computer drops off there will still be a coherent view of the data.&lt;/p>
&lt;p>/Updated 2020-07-14 for cabal-core 5.0/&lt;/p>
&lt;h2 id="local-computer">Local computer&lt;/h2>
&lt;p>You&amp;rsquo;ll need at least two computers to really play with this. But we can simulate the situation by running a docker container as well as a local instance of the cabal cli client. We can then move that container (or at least the image) around to run it on a remote server if you don&amp;rsquo;t want to mess with anything on the remote machine. Lets first install it locally:&lt;/p>
&lt;h2 id="on-the-terminal">On the terminal&lt;/h2>
&lt;p>If you just want to play around you can use &lt;code>npx&lt;/code>, or install the cabal cli command using &lt;code>npm install --global cabal&lt;/code>. Either way, lets start up a new cabal chat.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npx cabal --new
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Take a note of the cabal URI on the top right of the screen, we&amp;rsquo;ll use that to connect with later. Keep this window running and start up a new Terminal window. Type in a test message such as &amp;ldquo;this is the first message&amp;rdquo; (or something less banal). There are also slash commands available, &lt;code>/help&lt;/code> will list them. Change your display nickname with &lt;code>/n local node&lt;/code> or something like that.&lt;/p>
&lt;h2 id="dockerizing">Dockerizing&lt;/h2>
&lt;p>This is optional, you can just repeat the same steps on the remote node if you want. I have this in a Docker container because I don&amp;rsquo;t want to install node on my remote server, but if you have you computers and aren&amp;rsquo;t anal about it its super simple to just install node and just run &lt;code>npx cabal&lt;/code> on them also.&lt;/p>
&lt;p>I like keeping things in Docker containers when playing around so that no unnecessary packages get installed on the machine and the data files are nicely cleaned up when I exit out.&lt;/p>
&lt;p>This is a very basic node-based Dockerfile. Cabal/Dat uses port &lt;code>3282&lt;/code> to communicate, so we&amp;rsquo;ll need to expose and open that.&lt;/p>
&lt;p>&lt;a href="Dockerfile">&lt;code>Dockerfile&lt;/code>&lt;/a>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:11&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">MAINTAINER&lt;/span>&lt;span class="s"> Will Schenk &amp;lt;wschenk@gmail.com&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 3282&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="s"> root&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install -g cabal&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> cabal&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Then build like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker build . -t &lt;span class="nv">$USER&lt;/span>/cabal
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a simple script to make it easier to run in the future. (Note I&amp;rsquo;m using &lt;code>--network host&lt;/code> here because I was having trouble getting dat to punch through the Docker networking/NAT stuff.)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
docker run -it --rm --name cabal --network host &lt;span class="nv">$USER&lt;/span>/cabal cabal &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This script is for running one off commands, and it throws away the container each time so you&amp;rsquo;ll lose the history. If you really wanted to use this for something more than an experiment you should mount the internal &lt;code>/root/.cabal&lt;/code> directory to a docker volume and/or not make it a temporary container.&lt;/p>
&lt;p>Push the container to the repository using &lt;code>docker push $USER/cabal&lt;/code>, and then move everything to a different computer. Then run:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">bash run.sh cabal://f6e83732c84fe310515fe7162376e5420c6f4a27d015094ccc22be658b62d3c8
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If all goes well, after a few moments of network dancing you should be able to see the original message you sent. Type away to see if things show up!&lt;/p>
&lt;h2 id="using-cabal-core-in-code">Using &lt;code>cabal-core&lt;/code> in code&lt;/h2>
&lt;p>That&amp;rsquo;s super cool already, but lets go a little deep and start writing our own handlers to see what we can do with &lt;code>cabal&lt;/code> programmaticly. &lt;code>cabal&lt;/code> isn&amp;rsquo;t secure at all so we probably shouldn&amp;rsquo;t use this for anything real, but its a nifty way to communicate and discover without having to setup very much at all!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm init
npm i add cabal-core tmp delay
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="printing-out-everything-that-is-in-a-swarm">Printing out everything that is in a swarm&lt;/h2>
&lt;ol>
&lt;li>First we create a &lt;code>Cabal&lt;/code> instance with a storage directory and our key, using &lt;code>cabel = Cabal(directoy,key)&lt;/code>&lt;/li>
&lt;li>Then we connect it to the swarm to start replicating using &lt;code>swarm(cabal)&lt;/code>&lt;/li>
&lt;li>Once the local database has been loaded and processed, the &lt;code>cabal.ready()&lt;/code> callback is called. Events received after this are new.&lt;/li>
&lt;li>We can watch peers join and disconnect using &lt;code>cabal.on('peer-added')&lt;/code> and &lt;code>cabal.on('peer-dropped')&lt;/code>&lt;/li>
&lt;li>We can listen for new messages and topics using &lt;code>cabal.messages.events.on('message')&lt;/code>&lt;/li>
&lt;li>(We can also listen for messages just in a specific channel, not shown below)&lt;/li>
&lt;li>We can listen for new channels &lt;code>cabal.channels.events.on( 'add' )&lt;/code>&lt;/li>
&lt;li>We can get a current channel list using &lt;code>cabal.channels.get()&lt;/code>&lt;/li>
&lt;li>We can listen for new nicknames using &lt;code>cabal.users.events.on('update')&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>Here&amp;rsquo;s it in code form &lt;a href="read.js">&lt;code>dump.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Cabal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cabal-core&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">swarm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cabal-core/swarm.js&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tmp&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Usage&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node dump.js cabalkey&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Strip out the awesome
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cabal://&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cbl://&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;dat://&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/\//g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Connecting to&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// For testing to keep things clean
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">storage_dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CABAL_DIR&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">tmp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dirSync&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Storing our database in&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">storage_dir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Create a cabal instance
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">cabal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Cabal&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">storage_dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">maxFeeds&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Connecting to swarm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">swarm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// This is called after the local database is loaded
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ready&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Database is ready!&amp;#34;&lt;/span>&lt;span class="p">)})&lt;/span>
&lt;span class="c1">// Print out connect and disconnect messages
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;peer-added&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Peer added&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;peer-dropped&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Peer dropped&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Prints messages as they come in
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">messages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">events&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Got a message&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">// Print user messages as they come in
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">events&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;update&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;user message&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="p">))&lt;/span>
&lt;span class="c1">// Print out channel list
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channels&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">channels&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Channels&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">channels&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channels&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">events&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;add&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">channel&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;new channel&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">channel&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">// Process will hang waiting for events
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now lets restart everything and see what happens! When I start up &lt;code>node dump.js key&lt;/code> on my machine, and then start up the &lt;code>cabal-cli&lt;/code> client on the other machine and:&lt;/p>
&lt;ol>
&lt;li>Type &lt;code>hello everyone&lt;/code>&lt;/li>
&lt;li>Type &lt;code>/n Will&lt;/code> - change my nickname to Will&lt;/li>
&lt;li>Type &lt;code>This is my new name&lt;/code>&lt;/li>
&lt;li>Type &lt;code>/join new channel&lt;/code>&lt;/li>
&lt;li>Type &lt;code>lets talk about this instead&lt;/code>&lt;/li>
&lt;li>Type &lt;code>/topic Serious Stuff&lt;/code>&lt;/li>
&lt;li>Type &lt;code>/quit&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">Connecting to f6e83732c84fe310515fe7162376e5420c6f4a27d015094ccc22be658b62d3c8
Storing our database in /tmp/tmp-5029E7feUNe8UiyB
Connecting to swarm
Database is ready!
Channels &lt;span class="o">[]&lt;/span>
Peer added 6a4ed8b325acf3cb4a7c47625d0e66610ebc9be75b775e934efdb5440bb09097
new channel default
Got a message &lt;span class="o">{&lt;/span> key:
&lt;span class="s1">&amp;#39;6a4ed8b325acf3cb4a7c47625d0e66610ebc9be75b775e934efdb5440bb09097&amp;#39;&lt;/span>,
seq: 0,
value:
&lt;span class="o">{&lt;/span> type: &lt;span class="s1">&amp;#39;chat/text&amp;#39;&lt;/span>,
content: &lt;span class="o">{&lt;/span> channel: &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span>, text: &lt;span class="s1">&amp;#39;hello everyone&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span>,
timestamp: &lt;span class="m">1556023954404&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
user message &lt;span class="o">{&lt;/span> key:
&lt;span class="s1">&amp;#39;6a4ed8b325acf3cb4a7c47625d0e66610ebc9be75b775e934efdb5440bb09097&amp;#39;&lt;/span>,
seq: 1,
value:
&lt;span class="o">{&lt;/span> type: &lt;span class="s1">&amp;#39;about&amp;#39;&lt;/span>,
content: &lt;span class="o">{&lt;/span> name: &lt;span class="s1">&amp;#39;Will&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span>,
timestamp: &lt;span class="m">1556023961901&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
Got a message &lt;span class="o">{&lt;/span> key:
&lt;span class="s1">&amp;#39;6a4ed8b325acf3cb4a7c47625d0e66610ebc9be75b775e934efdb5440bb09097&amp;#39;&lt;/span>,
seq: 2,
value:
&lt;span class="o">{&lt;/span> type: &lt;span class="s1">&amp;#39;chat/text&amp;#39;&lt;/span>,
content: &lt;span class="o">{&lt;/span> channel: &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span>, text: &lt;span class="s1">&amp;#39;This is my new name&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span>,
timestamp: &lt;span class="m">1556023967911&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
new channel new channel
Got a message &lt;span class="o">{&lt;/span> key:
&lt;span class="s1">&amp;#39;6a4ed8b325acf3cb4a7c47625d0e66610ebc9be75b775e934efdb5440bb09097&amp;#39;&lt;/span>,
seq: 3,
value:
&lt;span class="o">{&lt;/span> type: &lt;span class="s1">&amp;#39;chat/text&amp;#39;&lt;/span>,
content:
&lt;span class="o">{&lt;/span> channel: &lt;span class="s1">&amp;#39;new channel&amp;#39;&lt;/span>, text: &lt;span class="s1">&amp;#39;lets talk about this instead&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span>,
timestamp: &lt;span class="m">1556023978198&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
Got a message &lt;span class="o">{&lt;/span> key:
&lt;span class="s1">&amp;#39;6a4ed8b325acf3cb4a7c47625d0e66610ebc9be75b775e934efdb5440bb09097&amp;#39;&lt;/span>,
seq: 4,
value:
&lt;span class="o">{&lt;/span> type: &lt;span class="s1">&amp;#39;chat/topic&amp;#39;&lt;/span>,
content: &lt;span class="o">{&lt;/span> channel: &lt;span class="s1">&amp;#39;new channel&amp;#39;&lt;/span>, text: &lt;span class="s1">&amp;#39;Serious Stuff&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span>,
timestamp: &lt;span class="m">1556023983080&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
Peer dropped 6a4ed8b325acf3cb4a7c47625d0e66610ebc9be75b775e934efdb5440bb09097&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="publishing-a-message">Publishing a message&lt;/h2>
&lt;p>Publishing a message involves appending to your local feed and then synchronizing to the swarm. Which means waiting for the swarm to connect, a peer to join, and then them downloading everything. We don&amp;rsquo;t really know how long it will take, and there&amp;rsquo;s no real way to guarantee that it will show up. But we want a CLI tool that will eventually return, and not sit around forever. Here&amp;rsquo;s the logic we&amp;rsquo;ll use:&lt;/p>
&lt;ol>
&lt;li>Initialize cabal and try to connect to the swarm&lt;/li>
&lt;li>Post the message to the local store&lt;/li>
&lt;li>Once we get a peer connect message, wait 2 seconds for syncing and return success&lt;/li>
&lt;li>If we don&amp;rsquo;t get a peer connect in 10 seconds, then exit with error code.&lt;/li>
&lt;/ol>
&lt;p>Of course, if you just want to publish a message and serve the swarm forever, we could just take out the timeouts.&lt;/p>
&lt;p>&lt;a href="publish.js">&lt;code>publish.js&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Cabal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cabal-core&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">swarm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cabal-core/swarm.js&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;delay&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tmp&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Usage&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;node publish.js cabalkey channel message&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Strip out the awesome
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cabal://&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cbl://&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;dat://&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/\//g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Connecting to&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1">// For testing to keep things clean
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">storage_dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CABAL_DIR&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">tmp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dirSync&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Storing our database in&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">storage_dir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Create a cabal instance
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">cabal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Cabal&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">storage_dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">maxFeeds&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Connecting to swarm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">swarm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;peer-added&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Peer added&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">2000&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Quitting 2 seconds after peer connect&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">messageStored&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">publishCallback&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">messageStored&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Message stored locally&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// This is called after the local database is loaded
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ready&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Database is ready!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">cabal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">publish&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;chat/text&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">content&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">channel&lt;/span>&lt;span class="p">}},&lt;/span> &lt;span class="nx">publishCallback&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">10000&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">messageStored&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;10 second time before swarm connect, stored locally&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;10 second timeout before message was stored&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Then try running this code with a running cabal node on the remote host and without one. You&amp;rsquo;ll notice that the messages that were stored locally will eventually be delivered once a connection is made.&lt;/p>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>One thing that I&amp;rsquo;m interested in playing around with is using this as a message bus of sorts, to each have remote devices report in on what they are doing (raspberry pi&amp;rsquo;s for example) or be able to script it, to have a bot listening that takes commands in and run actions on the server and then pushes the results out (to IPFS for example.) But that&amp;rsquo;s for another post.&lt;/p>
&lt;hr>
&lt;p>References&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://cabal-club.github.io/">https://cabal-club.github.io/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.datprotocol.com/">https://www.datprotocol.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cabal-club">https://github.com/cabal-club&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cabal-club/cabal-core">https://github.com/cabal-club/cabal-core&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/datproject/dat/issues/841">https://github.com/datproject/dat/issues/841&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/datproject/dat/issues/858">https://github.com/datproject/dat/issues/858&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Splitting Git Repos and Work Directories</title><link>https://willschenk.com/articles/2019/splitting_git_repos_and_workdirectories/</link><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/splitting_git_repos_and_workdirectories/</guid><description>&lt;p>I found a tutorial on &lt;a href="https://www.atlassian.com/git/tutorials/dotfiles">how to manage your dotfiles&lt;/a>, that works by splitting up the git repository (normally the &lt;code>.git&lt;/code> directory) from the work directory. Since I have a lot of code that I put in my tutorials, I adapted the technique to have individual article directories mirrored in their own github repository.&lt;/p>
&lt;h2 id="repositories-and-work-directories">Repositories and Work Directories&lt;/h2>
&lt;p>The normal usage of &lt;code>git&lt;/code> is to type &lt;code>git clone &amp;lt;remote&amp;gt;&lt;/code> to get a copy of the local directory, mess with stuff, and then &lt;code>add&lt;/code> and &lt;code>commit&lt;/code> your changes. If you have multiple branches, you switch the files in your work directory to a different branch, but you are still using the same repository.&lt;/p>
&lt;p>The structure looks like this (you&amp;rsquo;ll see more files in the lsit if you do this command, I edited them out for clarity)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ git clone https://github.com/wschenk/willschenk.com
$ ls -la willschenk.com
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk wschenk &lt;span class="m">280&lt;/span> Apr &lt;span class="m">20&lt;/span> 14:32 .
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk wschenk &lt;span class="m">870&lt;/span> Apr &lt;span class="m">20&lt;/span> 14:58 ..
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk wschenk &lt;span class="m">102&lt;/span> Apr &lt;span class="m">18&lt;/span> 13:11 content
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk wschenk &lt;span class="m">204&lt;/span> Apr &lt;span class="m">20&lt;/span> 14:54 .git
-rw-r--r-- &lt;span class="m">1&lt;/span> wschenk wschenk &lt;span class="m">501&lt;/span> Apr &lt;span class="m">20&lt;/span> 14:32 .gitignore
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk wschenk &lt;span class="m">64&lt;/span> Apr &lt;span class="m">20&lt;/span> 14:22 layouts
drwxr-xr-x &lt;span class="m">1&lt;/span> wschenk wschenk &lt;span class="m">18&lt;/span> Mar &lt;span class="m">31&lt;/span> 22:21 themes
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>.git&lt;/code> directory inside of this folder is where the git database lives, all of the commits and history and branches and all that. At the same level you have the working copy, which in this case is the &lt;code>master&lt;/code> branch.&lt;/p>
&lt;p>What I&amp;rsquo;d like to do is to keep this whole structure intact, but also have the files in &lt;code>content/articles/2019/splitting_git_repos_and_workdirectories/&lt;/code> tracked in an additional github repository for better sharing and collaboration.&lt;/p>
&lt;h2 id="splitting">Splitting&lt;/h2>
&lt;p>This script is meant to be used as a replacement to the &lt;code>git&lt;/code> command line on the shell to interact with the mirrored repository.&lt;/p>
&lt;p>For this to work great create a remote repository somewhere &lt;a href="https://github.com/new">like GitHub&lt;/a> and then put the resulting &lt;code>repostory&lt;/code> in the front matter. (I use &lt;code>yml&lt;/code> so adjust the awk parsing if you use something else.)&lt;/p>
&lt;ol>
&lt;li>First it checks to see if there&amp;rsquo;s a local .gitignore, and if not creates one.&lt;/li>
&lt;li>Then it loads the &lt;code>.local-git&lt;/code> file where we are checkout out the repository. If this goes away we don&amp;rsquo;t care, because&amp;hellip;&lt;/li>
&lt;li>It pulls down the repo from the root.&lt;/li>
&lt;li>Then it passes all your commands to &lt;code>git&lt;/code> pointing to the seperate repository and with the working dir set to the current directory.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="seperate-git.bash">&lt;code>seperate-git.bash&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/env bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1"># Ensure that we dont inadvertantly checkin any node node_modules&lt;/span>
&lt;span class="c1"># or the file that we use to track our local_git repository&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -f .gitignore &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
cat &amp;gt; .gitignore &lt;span class="s">&amp;lt;&amp;lt; ENDIGNORE
&lt;/span>&lt;span class="s">node_modules
&lt;/span>&lt;span class="s">.local_git
&lt;/span>&lt;span class="s">ENDIGNORE&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># Look inside of our post to load up where the remote&lt;/span>
&lt;span class="c1"># is configured, bail if not set&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f index.md &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">REMOTE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>awk &lt;span class="s1">&amp;#39;/^remote:/ {print $2}&amp;#39;&lt;/span> index.md &lt;span class="p">|&lt;/span>head -n 1&lt;span class="k">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nv">REMOTE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>awk &lt;span class="s1">&amp;#39;/^\#\+remote:/ {print $2}&amp;#39;&lt;/span> index.org &lt;span class="p">|&lt;/span>head -n 1&lt;span class="k">)&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">REMOTE&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> remote is not defined in the front matter of index.md or index.org
&lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nv">LOCAL_GIT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat .local_git 2&amp;gt; /dev/null&lt;span class="k">)&lt;/span>
&lt;span class="c1"># If blank or doest exist checkout the bare repository&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOCAL_GIT&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">[&lt;/span> ! -d &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOCAL_GIT&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">LOCAL_GIT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>mktemp -d&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> Pulling down remote git repository into &lt;span class="nv">$LOCAL_GIT&lt;/span>
git clone --bare --progress &lt;span class="nv">$REMOTE&lt;/span> &lt;span class="nv">$LOCAL_GIT&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$LOCAL_GIT&lt;/span> &amp;gt; .local_git
&lt;span class="k">fi&lt;/span>
git --git-dir&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOCAL_GIT&lt;/span>&lt;span class="si">}&lt;/span> --work-tree&lt;span class="o">=&lt;/span>. &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="running">Running&lt;/h2>
&lt;p>Here&amp;rsquo;s a comparison of what running looks like using the new command&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bash seperate-git.bash status
Pulling down remote git repository into /tmp/tmp.p4KSGNKQNh
Cloning into bare repository &lt;span class="s1">&amp;#39;/tmp/tmp.p4KSGNKQNh&amp;#39;&lt;/span>...
warning: You appear to have cloned an empty repository.
On branch master
Initial commit
Untracked files:
&lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span> to include in what will be committed&lt;span class="o">)&lt;/span>
.gitignore
index.md
seperate-git.bash
nothing added to commit but untracked files present &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add&amp;#34;&lt;/span> to track&lt;span class="o">)&lt;/span>
$ bash seperate-git.bash remote -v
origin git@github.com:wschenk/split-git.git &lt;span class="o">(&lt;/span>fetch&lt;span class="o">)&lt;/span>
origin git@github.com:wschenk/split-git.git &lt;span class="o">(&lt;/span>push&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And compare that with the regular &lt;code>git&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ git status
Changes not staged &lt;span class="k">for&lt;/span> commit:
&lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span> to update what will be committed&lt;span class="o">)&lt;/span>
&lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git checkout -- &amp;lt;file&amp;gt;...&amp;#34;&lt;/span> to discard changes in working directory&lt;span class="o">)&lt;/span>
modified: index.md
no changes added to commit &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add&amp;#34;&lt;/span> and/or &lt;span class="s2">&amp;#34;git commit -a&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
$ git remote -v
origin git@github.com:wschenk/willschenk.com.git &lt;span class="o">(&lt;/span>fetch&lt;span class="o">)&lt;/span>
origin git@github.com:wschenk/willschenk.com.git &lt;span class="o">(&lt;/span>push&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And if this script actually works, you should be able to see the results here: &lt;a href="https://github.com/wschenk/split-git">https://github.com/wschenk/split-git&lt;/a>&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.atlassian.com/git/tutorials/dotfiles">https://www.atlassian.com/git/tutorials/dotfiles&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Setting up Indieweb Homepage</title><link>https://willschenk.com/articles/2019/setting_up_indieweb/</link><pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/setting_up_indieweb/</guid><description>&lt;p>Remember &lt;a href="http://microformats.org/">microformats&lt;/a>? Me neither!
Back when the web was open and we were trying to find ways to interconnect independent things?
Let&amp;rsquo;s bring them back!&lt;/p>
&lt;h2 id="steps-simple">Steps: Simple&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Get a domain&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Host your own site on it&lt;/p>
&lt;/li>
&lt;li>
&lt;p>On the index page, create an &lt;code>h-card&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Inside of that &lt;code>h-card&lt;/code> an identity markers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>That&amp;rsquo;s it.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="example">Example&lt;/h2>
&lt;p>You should replace this stuff with your own. Check out &lt;a href="http://microformats.org/wiki/h-card">the standard&amp;rsquo;s documentation&lt;/a>
for more details.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;h-card&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;p-name&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;u-photo&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;photo&amp;#34;&lt;/span> &lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;300&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
I work at
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://happyfuncorp.com&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;p-org&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>HappyFunCorp&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
where I am a
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;p-job-title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>software craftman&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://willschenk.com&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;u-url u-uid&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;me&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Will Schenk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mailto:wschenk@gmail.com&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;u-email&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;me&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>wschenk@gmail.com&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://twitter.com/@wschenk&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;me&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Twitter&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://instagram.com/wschenk&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;me&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Insta&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://linkedin.com/in/will-schenk-420266&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;me&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>LinkedIn&amp;gt;&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should obviously replace that information with your own.&lt;/p>
&lt;h2 id="testing">Testing&lt;/h2>
&lt;p>After you deploy, the easiest way to test is to go to &lt;a href="https://indiewebify.me/validate-h-card/">https://indiewebify.me/validate-h-card/&lt;/a>&lt;/p>
&lt;p>So do that.&lt;/p>
&lt;p>But lets build a simple tester so we can see how to interact with it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ mkdir indieweb
$ &lt;span class="nb">cd&lt;/span> indieweb
$ npm init
$ yarn add microformat-node node-fetch
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then create &lt;code>index.js&lt;/code> to pull it down and print it out:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">fetch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;node-fetch&amp;#39;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">microformat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;microformat-node&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;p>&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">page&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">'https://willschenk.com'&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">page&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">microformat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">})&lt;/span>&lt;/p>
&lt;p>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">info&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">})()&lt;/span>&lt;/p>
&lt;p>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>And you should see the nicely parsed information! Now what to do with this all!&lt;/p></description></item><item><title>Easy scraping with httpie and jq</title><link>https://willschenk.com/articles/2019/easy_scraping_with_httpie_and_jq/</link><pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/easy_scraping_with_httpie_and_jq/</guid><description>&lt;p>I recently saw a tweet mentioning the combination of using &lt;a href="https://httpie.org/">HTTPie&lt;/a> (a command line HTTP client), &lt;a href="https://stedolan.github.io/jq/">jq&lt;/a> (a lightweight and flexible command-line JSON processor) and &lt;a href="https://github.com/tomnomnom/gron">Gron&lt;/a> (Make JSON greppable!) was &amp;ldquo;all you needed to build a scraper.&amp;rdquo; Lets see if that&amp;rsquo;s true.&lt;/p>
&lt;h2 id="first-install">First install&lt;/h2>
&lt;p>Linux:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install httpie jq
&lt;/code>&lt;/pre>&lt;/div>&lt;p>OSX&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">brew install httpie
brew install jq
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lets-get-some-stars">Lets get some stars&lt;/h2>
&lt;p>We can pull down the list of repositories people have starred on Github using the URL scheme &lt;code>https://api.github.com/users/:username/starred&lt;/code>. Try this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">http https://api.github.com/users/wschenk/starred
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This returns a wall of data! &lt;code>HTTPie&lt;/code> does a nice job of formatting the JSON out and showing the response headers.&lt;/p>
&lt;p>Let&amp;rsquo;s use &lt;code>jq&lt;/code> to print out the first response:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">http https://api.github.com/users/wschenk/starred &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.[0]&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Weirdly, the Github API returns the items in the order starred, but doesn&amp;rsquo;t include the date that we starred them. There&amp;rsquo;s an &lt;a href="https://developer.github.com/v3/activity/starring/#alternative-response-with-star-creation-timestamps-1">alternative api call&lt;/a> that we can use to get the date that I pushed the Star button. For this to work we need to pass in an Accept header of &lt;code>application/vnd.github.v3.star+json&lt;/code> which is done like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">http https://api.github.com/users/wschenk/starred Accept:application/vnd.github.v3.star+json&lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.[0]&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>jq&lt;/code> lets us slice and dice the JSON. Lets pull out the fields that we want. We are using the &lt;code>.[]&lt;/code> syntax and piping it to a json writer, which is pulling only the fields out that we want. And we write the output to the data directory in our hugo app.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">
http https://api.github.com/users/wschenk/starred &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> Accept:application/vnd.github.v3.star+json &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> jq &lt;span class="s1">&amp;#39;[.[] | {name: .repo.name, full_name: .repo.full_name,
&lt;/span>&lt;span class="s1"> avatar_url: .repo.owner.avatar_url, login: .repo.owner.login,
&lt;/span>&lt;span class="s1"> description: .repo.description, starred_at: .starred_at,
&lt;/span>&lt;span class="s1"> html_url: .repo.html_url, language: .repo.language,
&lt;/span>&lt;span class="s1"> updated_at: .repo.updated_at}] &amp;#39;&lt;/span> &amp;gt; data/stars.json
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="using-the-hugo-data-directory">Using the hugo data directory&lt;/h2>
&lt;p>Now that we have the data in a JSON format that Hugo can understand, lets build a page to render this glory.&lt;/p>
&lt;p>Create a simple file in &lt;code>content/stars.md&lt;/code> that we&amp;rsquo;ll use to define a kind of &lt;code>stars&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">---
title: GitHub stars
type: stars
---
I like software. Here is some of the stuff I&amp;#39;ve found on GitHub that
I&amp;#39;ve marked as interesting.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we create a single page template that we&amp;rsquo;ll use to render it in &lt;code>layouts/stars/single.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display-4 text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Content&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;list-unstyled&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Site.Data.stars&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;media my-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mr-3 img-fluid&amp;#34;&lt;/span> &lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;64px&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.avatar_url&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.owner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s"> avatar&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;media-body&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h4&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mt-0 mb-1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="na">.html_url&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">small&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ml-1 text-muted&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.language&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h4&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead my-0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.description&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Starred &lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">dateFormat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.starred_at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>,
Updated &lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">dateFormat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.updated_at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now start up your server and go to http://localhost:1313/stars !&lt;/p>
&lt;h2 id="less-easy-scraping">Less easy scraping&lt;/h2>
&lt;p>So it turns out that I&amp;rsquo;ve been liking lots of things on GitHub and I have more than one page of results. The GitHub api used the HTTP &lt;code>Link&lt;/code> header to point to &lt;code>next&lt;/code>, &lt;code>prev&lt;/code>, &lt;code>first&lt;/code>, and &lt;code>last&lt;/code> last pages. We&amp;rsquo;ll write a little script that saves that and then parses it out.&lt;/p>
&lt;ol>
&lt;li>We create a small function that passes in &lt;code>-dh&lt;/code> flags to &lt;code>http&lt;/code>, redirecting stdout to our file &lt;code>&amp;gt;page1.json&lt;/code> and stderr to a file containing the headers &lt;code>2&amp;gt;headers&lt;/code>.&lt;/li>
&lt;li>Then we&amp;rsquo;ll parse the headers using grep, tr, and sed to pull out the url that&amp;rsquo;s matched with &lt;code>rel=&amp;quot;next&amp;quot;&lt;/code>.&lt;/li>
&lt;li>If there is one we&amp;rsquo;ll follow that and download &lt;code>page2.json&lt;/code> etc.&lt;/li>
&lt;li>Then we&amp;rsquo;ll merge all of the files together using &lt;code>jq --slurp '[.[][]]' *json&lt;/code> so the muliple files of JSON Arrays is one big JSON array.&lt;/li>
&lt;li>And then copy over our existing &lt;code>jq&lt;/code> parsing&lt;/li>
&lt;/ol>
&lt;p>Here&amp;rsquo;s &lt;code>update_github_stars.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1"># Download a url&lt;/span>
&lt;span class="k">function&lt;/span> scrape_page&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">echo&lt;/span> Downloading &lt;span class="nv">$1&lt;/span> to &lt;span class="nv">$2&lt;/span>
http &lt;span class="nv">$1&lt;/span> Accept:application/vnd.github.v3.star+json -dh &amp;gt;&lt;span class="nv">$2&lt;/span> 2&amp;gt;&lt;span class="nv">$3&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">function&lt;/span> next_link_from_header&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1"># grep - Filter for the Link header&lt;/span>
&lt;span class="c1"># tr - slit each of the entries into it&amp;#39;s own line&lt;/span>
&lt;span class="c1"># grep - look for the next link&lt;/span>
&lt;span class="c1"># sed - get rid of everything out side of the &amp;lt; &amp;gt;&lt;/span>
cat &lt;span class="nv">$1&lt;/span> &lt;span class="p">|&lt;/span> grep ^Link &lt;span class="p">|&lt;/span>tr &lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>grep &lt;span class="se">\&amp;#34;&lt;/span>next&lt;span class="se">\&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/.*&amp;lt;\(.*\)&amp;gt;.*/\1/&amp;#39;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nv">OUTDIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>mktemp -d&lt;span class="k">)&lt;/span>
&lt;span class="nv">PAGE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="nv">NEXTURL&lt;/span>&lt;span class="o">=&lt;/span>https://api.github.com/users/wschenk/starred
&lt;span class="k">while&lt;/span> &lt;span class="o">[&lt;/span> ! -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">NEXTURL&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
scrape_page &lt;span class="nv">$NEXTURL&lt;/span> &lt;span class="nv">$OUTDIR&lt;/span>/page&lt;span class="si">${&lt;/span>&lt;span class="nv">PAGE&lt;/span>&lt;span class="si">}&lt;/span>.json &lt;span class="nv">$OUTDIR&lt;/span>/headers
&lt;span class="nv">NEXTURL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>next_link_from_header &lt;span class="nv">$OUTDIR&lt;/span>/headers&lt;span class="k">)&lt;/span>
&lt;span class="nv">PAGE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$((&lt;/span> &lt;span class="nv">$PAGE&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="k">))&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nb">echo&lt;/span> Finished scraping pages
&lt;span class="c1"># Combine the files&lt;/span>
&lt;span class="c1"># Parse them into data/stars.json&lt;/span>
jq -s &lt;span class="s1">&amp;#39;[.[][]]&amp;#39;&lt;/span> &lt;span class="nv">$OUTDIR&lt;/span>/*json &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> jq &lt;span class="s1">&amp;#39;[.[] | {name: .repo.name, full_name: .repo.full_name,
&lt;/span>&lt;span class="s1"> avatar_url: .repo.owner.avatar_url, login: .repo.owner.login,
&lt;/span>&lt;span class="s1"> description: .repo.description, starred_at: .starred_at,
&lt;/span>&lt;span class="s1"> html_url: .repo.html_url, language: .repo.language,
&lt;/span>&lt;span class="s1"> updated_at: .repo.updated_at}] &amp;#39;&lt;/span> &amp;gt; data/stars.json
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>My &lt;a href="./stars/">Star List&lt;/a> is a little unwieldy right now with 120 entries (&lt;code>js '. | length' data/stars.json&lt;/code>) and not all of the descriptions are that informative, but this was all built with simple tools and minimal dependacies. We didn&amp;rsquo;t need any special libraries to script this, &lt;code>Gemfile&lt;/code> or &lt;code>package.json&lt;/code> installations, just a relatively simple bash script.&lt;/p></description></item><item><title>Building a slimmer go Docker container</title><link>https://willschenk.com/articles/2019/building_a_slimmer_go_docker_container/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/building_a_slimmer_go_docker_container/</guid><description>&lt;p>Go binaries are self contained, which means that they don&amp;rsquo;t need anything special installed in the environment to deploy them. When people make &lt;code>Dockerfiles&lt;/code> to build go projects, they often include the the golang compilers and build tools, which isn&amp;rsquo;t necessary for running the container. I&amp;rsquo;m going to use &lt;a href="https://github.com/somarat/healer">healer&lt;/a> Docker container that &amp;ldquo;Automatically heal docker containers that report themselves unhealthy&amp;rdquo; as an example of reducing the image size from 648MB to 17MB.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker images &lt;span class="p">|&lt;/span>grep healer
somarat/healer latest 76313596c92a &lt;span class="m">15&lt;/span> months ago 642MB
wschenk/healer latest 2502c0b68d5e About a minute ago 17.4MB
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="original-dockerfile">Original Dockerfile&lt;/h2>
&lt;p>The original file uses a golang image, copies everything into the work dir, installs some additional packages
a configuration and then uses the &lt;code>go-wrapper&lt;/code> command to build and run the app.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> golang:1.9.2-alpine3.7&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /go/src/app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apk --no-cache add -t build-deps build-base git &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apk --no-cache add ca-certificates &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> git config --global http.https://gopkg.in.followRedirects true&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> go-wrapper download&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> go-wrapper install&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;go-wrapper&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;run&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets change it around (also because new version of the golang images don&amp;rsquo;t have &lt;code>go-wrapper&lt;/code> anymore!)&lt;/p>
&lt;h2 id="build-and-deploy-containers">Build and deploy containers&lt;/h2>
&lt;p>The basic idea is that we first bring down a full development environment for the code, and build it using the standard ways of building go applications. Once that is done we will use a very slimmed down container and copy the built artifacts to it.&lt;/p>
&lt;p>While we still should create a &lt;code>.dockerignore&lt;/code> file to slim down the docker build context, none of the files will inadvertantly make it to the final image. (In this case we only really need to copy in one file at all, &lt;code>healer.go&lt;/code>, but we&amp;rsquo;re copying in everything.)&lt;/p>
&lt;p>We skip the additional package installs completely because they aren&amp;rsquo;t needed. We are relying upone the golang image being up to date and copying the certificates there over.&lt;/p>
&lt;p>To do the build, we simply run &lt;code>go get -d&lt;/code> to install the depenancies and then &lt;code>go build&lt;/code> to create final binary over.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> golang:1.12.3-stretch&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">MAINTAINER&lt;/span>&lt;span class="s"> Will Schenk &amp;lt;wschenk@gmail.com&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Get the TLS CA certificates, they&amp;#39;re not provided by busybox.&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y ca-certificates&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Copy the single source file to the app directory&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /go/src/app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Install depenancies&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> go get -d&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Build the app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> go build&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Switch to a small base image&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> busybox:1-glibc&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">MAINTAINER&lt;/span>&lt;span class="s"> Will Schenk &amp;lt;wschenk@gmail.com&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Copy the binary over from the deploy container&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> /go/src/app/app /usr/bin/healer&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="c"># Get the TLS CA certificates from the build container, they&amp;#39;re not provided by busybox.&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> --from&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> /etc/ssl/certs /etc/ssl/certs&lt;span class="err">
&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> healer&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then all we need to do is build and tag it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker build . -t wschenk/healer:latest
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="verifying">Verifying&lt;/h2>
&lt;p>I&amp;rsquo;m using my docker hub user id, you should replace it with your own.&lt;/p>
&lt;p>To test it out, you can start it up and make sure that you give it access to the &lt;code>docker.sock&lt;/code> socket file.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run -d --name healer -v /var/run/docker.sock:/tmp/docker.sock --restart unless-stopped wschenk/healer
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then check out the logs:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ docker logs healer
2019/04/09 20:07:05 Monitoring container health
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To make sure that everything is good.&lt;/p>
&lt;p>Finally, push it to the hub to be able to access it from other machines!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker push wschenk/healer
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Bootstrapping a react app</title><link>https://willschenk.com/articles/2019/bootstrapping_a_react_app_with_bootstrap/</link><pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/bootstrapping_a_react_app_with_bootstrap/</guid><description>&lt;p>Here&amp;rsquo;s a quick recipe for getting a blank react project with bootstrap up and running. We&amp;rsquo;ll walk
though all of the steps that you&amp;rsquo;ll need to get a basic bootstrap based framework up and running,
ready for theming and component implementation using redux.&lt;/p>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;p>Install the following packages.&lt;/p>
&lt;h3 id="install-nodenvm">Install node/nvm&lt;/h3>
&lt;p>If you don&amp;rsquo;t have it&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh &lt;span class="p">|&lt;/span> bash
&lt;span class="nb">source&lt;/span> ~/.profile
nvm install &lt;span class="m">10&lt;/span>
nvm global &lt;span class="m">10&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-yarn">Install &lt;code>yarn&lt;/code>&lt;/h3>
&lt;p>If you are into that&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm install -g yarn
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-react-app">&lt;code>create-react-app&lt;/code>&lt;/h3>
&lt;p>&lt;code>npx&lt;/code> is a fun tool to keep your global npm registry clean for seldom used packages.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npx create-react-app sampleapp
&lt;span class="nb">cd&lt;/span> sampleapp
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-packages">Install packages&lt;/h3>
&lt;ul>
&lt;li>&lt;code>redux&lt;/code>, &lt;code>react-redux&lt;/code> we are going to setup a redux project&lt;/li>
&lt;li>&lt;code>react-bootstrap&lt;/code>, &lt;code>bootstrap&lt;/code>, &lt;code>node-sass&lt;/code> This is bootstrap and theming components&lt;/li>
&lt;li>&lt;code>@fortawesome/react-fontawesome&lt;/code>, &lt;code>@fortawesome/fontawesome-svg-core&lt;/code>, &lt;code>@fortawesome/free-solid-svg-icons&lt;/code> Standard icon sets&lt;/li>
&lt;li>&lt;code>holderjs&lt;/code> utility to help mock out images&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">yarn add node-sass react-bootstrap bootstrap @fortawesome/react-fontawesome &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> @fortawesome/fontawesome-svg-core @fortawesome/free-solid-svg-icons &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> react-redux redux holderjs
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="changing-default-files">Changing default files.&lt;/h2>
&lt;p>We aren&amp;rsquo;t going to use the following files&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">rm src/App.css src/index.css src/logo.svg
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets make a simple bootstrap &lt;em>theme&lt;/em> in &lt;code>src/index.scss&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="c1">// Override default variables before the import
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$body-bg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#ddd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// Import Bootstrap and its default variables
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">@import&lt;/span> &lt;span class="s1">&amp;#39;~bootstrap/scss/bootstrap.scss&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then edit &lt;code>src/index.js&lt;/code> to use that instead. (Including the full file.)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">ReactDOM&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-dom&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;./index.scss&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./App&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">as&lt;/span> &lt;span class="nx">serviceWorker&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./serviceWorker&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">ReactDOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">render&lt;/span>&lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nt">App&lt;/span> &lt;span class="p">/&amp;gt;,&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="c1">// If you want your app to work offline and load faster, you can change
&lt;/span>&lt;span class="c1">// unregister() to register() below. Note this comes with some pitfalls.
&lt;/span>&lt;span class="c1">// Learn more about service workers: https://bit.ly/CRA-PWA
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">serviceWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">unregister&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create &lt;code>src/store.js&lt;/code> to initialize the &lt;code>redux&lt;/code> store:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">createStore&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;redux&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">reducers&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./reducers&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">createStore&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">reducers&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create &lt;code>src/reducers.js&lt;/code> to boostrap your reducers:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">combineReducers&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;redux&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">sample&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{},&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;PING&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pong&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">combineReducers&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">sample&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can update &lt;code>src/App.js&lt;/code> to tie it all together:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Provider&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-redux&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">store&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Provider&lt;/span> &lt;span class="na">store&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Provider&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point you should have a totally empty page that ready to start adding logic.&lt;/p>
&lt;h2 id="adding-some-bootstrap">Adding some Bootstrap&lt;/h2>
&lt;p>Create a sample navbar in &lt;code>src/components/navbar.js&lt;/code>.
We are importing only the navbar component of &lt;code>react-bootstrap&lt;/code>, only the parts of it that we need.
We also have an example of using &lt;code>react-fontawesome&lt;/code> to bring in an icon.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Navbar&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">FontAwesomeIcon&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@fortawesome/react-fontawesome&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">faAdjust&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@fortawesome/free-solid-svg-icons&amp;#39;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">N&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span> &lt;span class="na">bg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;light&amp;#39;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="na">.Brand&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#home&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">FontAwesomeIcon&lt;/span> &lt;span class="na">icon&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">faAdjust&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="kd">with&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Navbar.Brand&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="na">.Toggle&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="na">.Collapse&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;justify-content-end&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="na">.Text&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Signed&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">as&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#login&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Mark&lt;/span> &lt;span class="nx">Otto&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Navbar.Text&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Navbar.Collapse&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">N&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To see this work, we need to edit &lt;code>src/App.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Provider&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-redux&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">store&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./components/navbar&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Provider&lt;/span> &lt;span class="na">store&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Provider&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lets-make-some-pages">Lets make some pages&lt;/h2>
&lt;p>Here&amp;rsquo;s a simple example of a jumbotron with, with three columns of images with captions
below. On mobile they will only show one column.&lt;/p>
&lt;p>in &lt;code>src/components/pages/home.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Jumbotron&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Jumbotron&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Container&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Container&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Button&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Button&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Row&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Row&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Col&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Col&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Figure&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Figure&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;holderjs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Jumbotron&lt;/span> &lt;span class="na">fluid&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Welcome&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">app&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Templating&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">boilerplate&lt;/span> &lt;span class="nx">makes&lt;/span> &lt;span class="nx">it&lt;/span> &lt;span class="nx">easier&lt;/span> &lt;span class="nx">to&lt;/span>
&lt;span class="nx">focus&lt;/span> &lt;span class="nx">on&lt;/span> &lt;span class="nx">what&lt;/span> &lt;span class="nx">we&lt;/span> &lt;span class="nx">are&lt;/span> &lt;span class="nx">doing&lt;/span>&lt;span class="o">!&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">hr&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;my-4&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">variant&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span> &lt;span class="na">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lg&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#about&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">About&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Jumbotron&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Feature&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">description&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Col&lt;/span> &lt;span class="na">md&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Figure&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Figure&lt;/span>&lt;span class="na">.Image&lt;/span> &lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">400&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;400x300&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;holder.js/400x300&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Figure&lt;/span>&lt;span class="na">.Caption&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-centered&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;{&lt;/span>&lt;span class="nx">description&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Figure.Caption&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Figure&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Col&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Home&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Header&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Row&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Feature&lt;/span> &lt;span class="na">description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;This first&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Feature&lt;/span> &lt;span class="na">description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;This second&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Feature&lt;/span> &lt;span class="na">description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;This third&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Row&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">Home&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To see this, in &lt;code>src/App.js&lt;/code> import &lt;code>src/pages/home.js&lt;/code> as &lt;code>Home&lt;/code> and put the component
after the nav bar.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Provider&lt;/span> &lt;span class="na">store&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Home&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Provider&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="multiple-pages">Multiple pages&lt;/h2>
&lt;p>And why not a simple about page at &lt;code>src/pages/about.js&lt;/code>, since there&amp;rsquo;s always
going to be some sort of about situation.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Container&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Container&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Media&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-bootstrap/Media&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;holderjs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">About&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">About&lt;/span> &lt;span class="k">this&lt;/span> &lt;span class="nx">site&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Here&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">history&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">what&lt;/span> &lt;span class="nx">has&lt;/span> &lt;span class="nx">happened&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">hr&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;my-5&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Media&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span>
&lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mr-3&amp;#34;&lt;/span>
&lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;holder.js/64x64&amp;#34;&lt;/span>
&lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Generic placeholder&amp;#34;&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Media&lt;/span>&lt;span class="na">.Body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h5&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Media&lt;/span> &lt;span class="nx">Heading&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h5&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Cras&lt;/span> &lt;span class="nx">sit&lt;/span> &lt;span class="nx">amet&lt;/span> &lt;span class="nx">nibh&lt;/span> &lt;span class="nx">libero&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">gravida&lt;/span> &lt;span class="nx">nulla&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="nx">Nulla&lt;/span> &lt;span class="nx">vel&lt;/span> &lt;span class="nx">metus&lt;/span> &lt;span class="nx">scelerisque&lt;/span>
&lt;span class="nx">ante&lt;/span> &lt;span class="nx">sollicitudin&lt;/span> &lt;span class="nx">commodo&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="nx">Cras&lt;/span> &lt;span class="nx">purus&lt;/span> &lt;span class="nx">odio&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">vestibulum&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">vulputate&lt;/span> &lt;span class="nx">at&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">tempus&lt;/span> &lt;span class="nx">viverra&lt;/span> &lt;span class="nx">turpis&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="nx">Fusce&lt;/span> &lt;span class="nx">condimentum&lt;/span> &lt;span class="nx">nunc&lt;/span> &lt;span class="nx">ac&lt;/span> &lt;span class="nx">nisi&lt;/span> &lt;span class="nx">vulputate&lt;/span> &lt;span class="nx">fringilla&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="nx">Donec&lt;/span> &lt;span class="nx">lacinia&lt;/span> &lt;span class="nx">congue&lt;/span> &lt;span class="nx">felis&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">faucibus&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Media.Body&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Media&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">About&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="react-routing-and-actions">React routing and actions&lt;/h2>
&lt;p>We&amp;rsquo;re going to write out own router, since it&amp;rsquo;s actually fairly simple and it
seems cleaner to keep everything inside of the redux store. We&amp;rsquo;ll use hash based
routing for the time being as an example.&lt;/p>
&lt;p>First, lets update our &lt;code>src/reducers.js&lt;/code> to include storing the nav state. We&amp;rsquo;re using
&lt;code>window.location.hash&lt;/code> to set the initialState of the reducer.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">combineReducers&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;redux&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">nav&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;HASH_CHANGED&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hash&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">payload&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">combineReducers&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">nav&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets create a &lt;code>src/actions.js&lt;/code> file to actually change the hash when it happens.
I&amp;rsquo;m going to pull in the &lt;code>store&lt;/code> directly here so that we have access to &lt;code>dispatch&lt;/code>
and you can call this method directly from wherever you find yourself.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">store&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">hashChanged&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">store&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dispatch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;HASH_CHANGED&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">hash&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, let&amp;rsquo;s create &lt;code>src/pages/index.js&lt;/code> to pull all of this together.&lt;/p>
&lt;ol>
&lt;li>We are creating a &lt;code>Pages&lt;/code> component and registering an event listener when the url changes.&lt;/li>
&lt;li>If it does, we call the &lt;code>hashChanged&lt;/code> action to update the store.&lt;/li>
&lt;li>We create a &lt;code>ConnectedRouter&lt;/code> component which is passed in the &lt;code>hash&lt;/code> from the store to our &lt;code>Router&lt;/code>&lt;/li>
&lt;li>Right now our &lt;code>Router&lt;/code> is just looking for the &lt;code>#about&lt;/code> hash specifically, but this is a place to extend in the future.&lt;/li>
&lt;li>You can link to these pages using the normal href=&amp;rdquo;#anchor&amp;rdquo; style of links. Nothing more magical than that.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">connect&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-redux&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Home&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./home&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">About&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./about&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">hashChanged&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;../actions&amp;#39;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Pages&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">componentDidMount&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Listen for changes on the window object to update our store state
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">popListener&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;popstate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">hashChanged&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ConnectedRouter&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">hash&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;#about&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">About&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Home&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">mapStateToProps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">hash&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">nav&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hash&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">ConnectedRouter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mapStateToProps&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">Router&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">Pages&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then we need to change &lt;code>src/App.js&lt;/code> to use this new component. Here&amp;rsquo;s the full version:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Provider&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-redux&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">store&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./components/navbar&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Pages&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./pages&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Provider&lt;/span> &lt;span class="na">store&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Pages&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Provider&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="this-router-is-simplistic">This router is simplistic&lt;/h2>
&lt;p>We don&amp;rsquo;t do any parameter parsing, which is something that you could add. Additional this is set to use hash based routing, rather than the arguably more sexy HTML5 &amp;lsquo;pushState&amp;rsquo; and &amp;lsquo;replaceState&amp;rsquo; routing that would make the url &amp;ldquo;cleaner&amp;rdquo;. However I almost always deploy things off of a relative path, so that&amp;rsquo;s not interesting to me. It may be interesting to you however.&lt;/p>
&lt;p>Add &lt;code>&amp;quot;homepage&amp;quot;:&amp;quot;.&amp;quot;&lt;/code> inside of your &lt;code>package.json&lt;/code> to force the &lt;code>create-react-app&lt;/code> build process to use relative paths.&lt;/p>
&lt;h2 id="note-on-actions">Note on actions&lt;/h2>
&lt;p>This is not the normal way that people use &lt;code>actions&lt;/code> in a lot of the redux documentation that&amp;rsquo;s out there. Normally the &lt;code>actions.js&lt;/code> file contains &lt;em>action creators&lt;/em> which return a Object/hash containing at least an &lt;code>action.type&lt;/code>. Then you need to get a hole of a &lt;code>dispatch&lt;/code> method on the &lt;code>store&lt;/code> object, normally by passing in a second argument into &lt;code>connect&lt;/code> (&lt;code>mapDispatchToPros&lt;/code>).&lt;/p>
&lt;p>This seems unecessarily complicated to me. In our &lt;code>action.js&lt;/code> which import the store directly, and when you call one of the exported functions it dispatches to the store directly. I&amp;rsquo;m not sure what I&amp;rsquo;m missing but it seems to work well.&lt;/p>
&lt;h2 id="wrap-up">Wrap up&lt;/h2>
&lt;p>I hope this helps!&lt;/p></description></item><item><title>Setting up a chromebook for development</title><link>https://willschenk.com/articles/2019/setting_up_chromebook/</link><pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/setting_up_chromebook/</guid><description>&lt;p>I just switch my pixelbook back to the stable channel, and this is what I did to get back to developing on it.&lt;/p>
&lt;h2 id="first">First:&lt;/h2>
&lt;ol>
&lt;li>Open up settings&lt;/li>
&lt;li>Linux (Beta)&lt;/li>
&lt;li>Turn on&lt;/li>
&lt;li>Wait for it to download&lt;/li>
&lt;li>Startup the terminal app&lt;/li>
&lt;/ol>
&lt;p>Everything from here happens in the terminal app.&lt;/p>
&lt;h2 id="configure-git">Configure git&lt;/h2>
&lt;pre>&lt;code>git config --global user.email &amp;quot;you@example.com&amp;quot;
git config --global user.name &amp;quot;Your Name&amp;quot;
&lt;/code>&lt;/pre>&lt;h2 id="install-docker">Install Docker&lt;/h2>
&lt;p>Install docker the normal way&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># Update debian&lt;/span>
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> apt-transport-https &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> ca-certificates &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> curl &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> gnupg2 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> software-properties-common
&lt;span class="c1"># Add the gpg key if it;s not there&lt;/span>
curl -fsSL https://download.docker.com/linux/debian/gpg &lt;span class="p">|&lt;/span> sudo apt-key add -
&lt;span class="c1"># Add the docker repository&lt;/span>
sudo add-apt-repository &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;deb [arch=amd64] https://download.docker.com/linux/debian \
&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="k">$(&lt;/span>lsb_release -cs&lt;span class="k">)&lt;/span>&lt;span class="s2"> \
&lt;/span>&lt;span class="s2"> stable&amp;#34;&lt;/span>
&lt;span class="c1"># Update and add docker-ce&lt;/span>
sudo apt-get update
sudo apt-get install docker-ce
&lt;span class="c1"># Install docker-compose&lt;/span>
sudo curl -L &lt;span class="s2">&amp;#34;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-&lt;/span>&lt;span class="k">$(&lt;/span>uname -s&lt;span class="k">)&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="k">$(&lt;/span>uname -m&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -o /usr/local/bin/docker-compose
&lt;span class="c1"># Add yourself to the docker group if you aren&amp;#39;t already&lt;/span>
sudo groupadd docker
sudo usermod -aG docker &lt;span class="nv">$USER&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you may need to shutdown the linux installation to make sure that your user is in the docker group.&lt;/p>
&lt;ol>
&lt;li>Alt-click on the terminal icon in the dock&lt;/li>
&lt;li>Select &amp;ldquo;Shutdown Linux (Beta)&amp;rdquo;&lt;/li>
&lt;li>Restart terminal&lt;/li>
&lt;li>Run &lt;code>docker run hello-world&lt;/code> to test out the installation&lt;/li>
&lt;/ol>
&lt;h2 id="installing-atom">Installing atom&lt;/h2>
&lt;pre>&lt;code>cd /tmp
sudo apt-get install wget
wget https://atom.io/download/deb
mv deb atom.deb
sudo apt install ./atom.deb
&lt;/code>&lt;/pre>&lt;p>Test out the installation using &lt;code>atom&lt;/code>.&lt;/p>
&lt;h2 id="installing-sublimetext">Installing SublimeText&lt;/h2>
&lt;pre>&lt;code>sudo apt-get install wget
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
echo &amp;quot;deb https://download.sublimetext.com/ apt/stable/&amp;quot; | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt-get update
sudo apt-get install sublime-text
&lt;/code>&lt;/pre>&lt;p>Test out the installation using &lt;code>subl&lt;/code>&lt;/p>
&lt;h2 id="installing-nvm-and-node">Installing nvm and node&lt;/h2>
&lt;pre>&lt;code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
source ~/.profile
nvm install 10
&lt;/code>&lt;/pre>&lt;p>Test out using &lt;code>node -v&lt;/code>&lt;/p>
&lt;h2 id="installing-rbenv-and-ruby">Installing rbenv and ruby&lt;/h2>
&lt;pre>&lt;code>sudo apt-get install -y libssl-dev libreadline-dev zlib1g-dev
curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
echo 'export PATH=$PATH:$HOME/.rbenv/bin' &amp;gt;&amp;gt; $HOME/.profile
echo 'eval &amp;quot;$(rbenv init -)&amp;quot;' &amp;gt;&amp;gt; $HOME/.profile
source ~/.profile
rbenv install 2.5.5
rbenv global 2.5.5
&lt;/code>&lt;/pre>&lt;p>Test out using &lt;code>ruby --version&lt;/code>&lt;/p>
&lt;h2 id="installing-go">Installing go&lt;/h2>
&lt;pre>&lt;code>cd /tmp
wget https://dl.google.com/go/go1.12.1.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.12.1.linux-amd64.tar.gz
echo 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin' &amp;gt;&amp;gt; $HOME/.profile
source ~/.profile
&lt;/code>&lt;/pre>&lt;p>Test out using &lt;code>go version&lt;/code>&lt;/p>
&lt;h2 id="installing-hugo">Installing hugo&lt;/h2>
&lt;pre>&lt;code>cd /tmp
git clone https://github.com/gohugoio/hugo.git
cd hugo
go install
&lt;/code>&lt;/pre>&lt;h2 id="installing-heroku-toolbelt">Installing Heroku Toolbelt&lt;/h2>
&lt;pre>&lt;code>curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
&lt;/code>&lt;/pre>&lt;p>Test out using &lt;code>heroku login&lt;/code>&lt;/p>
&lt;h2 id="installing-google-cloud-cli">Installing Google Cloud CLI&lt;/h2>
&lt;pre>&lt;code># Create environment variable for correct distribution
export CLOUD_SDK_REPO=&amp;quot;cloud-sdk-$(lsb_release -c -s)&amp;quot;
# Add the Cloud SDK distribution URI as a package source
echo &amp;quot;deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
# Import the Google Cloud Platform public key
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
# Update the package list and install the Cloud SDK
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install google-cloud-sdk
&lt;/code>&lt;/pre>&lt;p>Test out using &lt;code>gcloud auth login&lt;/code>&lt;/p>
&lt;h2 id="installing-android-studio">Installing Android Studio&lt;/h2>
&lt;ol>
&lt;li>Visit &lt;a href="https://developer.android.com/studio/">https://developer.android.com/studio/&lt;/a>&lt;/li>
&lt;li>Accept the terms in order to download&lt;/li>
&lt;li>Open up the Files app&lt;/li>
&lt;li>Drag into linux files&lt;/li>
&lt;li>In the terminal, unzip the file. (In my case &lt;code>unzip android-studio-ide-182.5314842-linux.zip&lt;/code>)&lt;/li>
&lt;li>&lt;code>cd android-studio/bin&lt;/code>&lt;/li>
&lt;li>&lt;code>./studio.sh&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="installing-ipfs">Installing ipfs&lt;/h2>
&lt;pre>&lt;code>wget https://dist.ipfs.io/go-ipfs/v0.4.15/go-ipfs_v0.4.15_linux-amd64.tar.gz
tar xzvf go-ipfs_v0.4.15_linux-amd64.tar.gz
cd go-ipfs
sudo ./install.sh
&lt;/code>&lt;/pre>&lt;p>Test out using &lt;code>ipfs&lt;/code>&lt;/p>
&lt;h2 id="actually-its-all-standard-stuff">Actually it&amp;rsquo;s all standard stuff&lt;/h2>
&lt;p>There&amp;rsquo;s nothing specifically Chromebook about this, but its easier for me to keep this all written down in one place.&lt;/p></description></item><item><title>Setting up IPFS on a chromebook</title><link>https://willschenk.com/articles/2019/setting_up_ipfs_on_chromebook/</link><pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2019/setting_up_ipfs_on_chromebook/</guid><description>&lt;p>Lets look at how to run an ipfs node on a chromebook. We are using the linux container for this, and in order to get the experience right we&amp;rsquo;ll need to install some chrome extensions to make it work seamlessly.&lt;/p>
&lt;p>IPFS is a &lt;a href="https://ipfs.io">distributed hypermedia protocal&lt;/a> that is a way to access and share data using it&amp;rsquo;s cryptographic key. This way, it doesn&amp;rsquo;t matter where you get the data from, since you know that if it matches the key, then the data is what you requested. Once you request the data, you make it available to other computers on the network. As a result, the data doesn&amp;rsquo;t really live on any particular server, and the more people that access it the faster is it. Also, the data moves to where people access it, so if you publish something in New York and it becomes popular in New Zealand, the folks in New Zealand will end up downloading it from each other rather than over the underocean cables.&lt;/p>
&lt;p>Here&amp;rsquo;s the outline:&lt;/p>
&lt;ol>
&lt;li>Download the ipfs binary&lt;/li>
&lt;li>Init your repository&lt;/li>
&lt;li>Change the config to open up the linux container to the chromebook&lt;/li>
&lt;li>Start the daemon&lt;/li>
&lt;li>Install the chrome extension that maps localhost:5001 to penguin.linux.test:5001&lt;/li>
&lt;li>Install the IPFS companion chrome extenstion&lt;/li>
&lt;/ol>
&lt;p>Lets get started.&lt;/p>
&lt;h2 id="download-ipfs">Download IPFS&lt;/h2>
&lt;p>The &lt;a href="https://docs.ipfs.io/introduction/install/">instuctions for installing IPFS&lt;/a> are pretty simple. First download the binary from the &lt;a href="https://dist.ipfs.io/#go-ipfs">prebuilt repository&lt;/a>, unpack it, and run the install script.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">cd&lt;/span> /tmp
$ curl -O https://dist.ipfs.io/go-ipfs/v0.4.18/go-ipfs_v0.4.18_linux-amd64.tar.gz
$ tar xzf go-ipfs_v0.4.18_linux-amd64.tar.gz
$ &lt;span class="nb">cd&lt;/span> go-ipfs/
$ sudo ./install.sh
Moved ./ipfs to /usr/local/bin
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="init-the-repository">Init the repository&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ipfs init
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="change-the-config-to-open-up-the-linux-container-to-the-chromebook">Change the config to open up the linux container to the chromebook&lt;/h2>
&lt;p>We&amp;rsquo;ll need to edit the configuration so that the daemon binds to any network address, rather than being hardcoded to &lt;code>127.0.0.1&lt;/code>. Inside of &lt;code>.ipfs/config&lt;/code> changes the &lt;code>&amp;quot;Addresses&amp;quot;&lt;/code> stanza so that it looks like this when you run &lt;code>ipfs config Addreesses&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ipfs config Addresses
&lt;span class="o">{&lt;/span>
&lt;span class="s2">&amp;#34;API&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/ip4/0.0.0.0/tcp/5001&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;Announce&amp;#34;&lt;/span>: &lt;span class="o">[]&lt;/span>,
&lt;span class="s2">&amp;#34;Gateway&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/ip4/0.0.0.0/tcp/8080&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;NoAnnounce&amp;#34;&lt;/span>: &lt;span class="o">[]&lt;/span>,
&lt;span class="s2">&amp;#34;Swarm&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="s2">&amp;#34;/ip4/0.0.0.0/tcp/4001&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;/ip6/::/tcp/4001&amp;#34;&lt;/span>
&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="start-the-daemon">Start the Daemon&lt;/h2>
&lt;p>I&amp;rsquo;m enabling a few experimental features, but those are optional. Also, I prefer to have it run manually rather than in a start script, so I&amp;rsquo;m happy to do this by hand everytime I want to access the network but you may want to look into a writing it as a service to run whenever the container starts.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ipfs daemon --enable-pubsub-experiment --enable-namesys-pubsub
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-connection-forwarder">Install connection forwarder&lt;/h2>
&lt;p>Now we go to chrome and install &lt;a href="https://chrome.google.com/webstore/detail/connection-forwarder/ahaijnonphgkgnkbklchdhclailflinn/reviews">the connection forwarder&lt;/a>. What we want to do is to make &amp;ldquo;localhost:5001&amp;rdquo; redirect on the local box to &amp;ldquo;penguin.linux.test:5001&amp;rdquo; so that we can look at the web ui.&lt;/p>
&lt;p>Once it&amp;rsquo;s installed, select &amp;ldquo;Add a Rule&amp;rdquo;. The source address is &lt;code>localhost:5001&lt;/code>. For destination, select custom, and have the target address be &lt;code>penguin.linux.test:5001&lt;/code>.&lt;/p>
&lt;img src="screenshot.png" class="img-fluid" alt="config screenshot"/>
&lt;p>Now if you go to &lt;a href="http://localhost:5001/webui">localhost:5001/webui&lt;/a> you should be able to see your local node running! Note that you need to keep the Connection Forwarder window open for this to keep working, or manually turn on &amp;ldquo;run in background&amp;rdquo;&lt;/p>
&lt;h2 id="install-ipfs-companion">Install ipfs companion&lt;/h2>
&lt;p>Go to the chromestore again and &lt;a href="https://chrome.google.com/webstore/detail/ipfs-companion/nibjojkomfdiaoajekhjakgkdhaomnch?hl=en">install IPFS companion&lt;/a>. Once this is running you should be able to see the number of connected peers in the tab of the browser window:&lt;/p>
&lt;img src="extension.png" class="img-fluid" alt="extension screenshot"/>
&lt;h2 id="and-thats-it">And that&amp;rsquo;s it&lt;/h2>
&lt;p>It takes up a fair amount of ram and slows the computer down a bit, which is why I don&amp;rsquo;t have it running all the time. But its very fun to experiment with!&lt;/p></description></item><item><title>Image Manipulation in Firebase</title><link>https://willschenk.com/articles/2018/image_manipulation_in_firebase/</link><pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2018/image_manipulation_in_firebase/</guid><description>&lt;p>We can manipulate images using JavaScript directly, which can be run both on the server or browser environment. Lets take a look at how we&amp;rsquo;d do this using create-react-app and firebase. We will deploy a function on firebase that will download the user&amp;rsquo;s avatar, manipulate the image and overlay it with a mask, and then spit out an image.&lt;/p>
&lt;h2 id="project-setup">Project Setup&lt;/h2>
&lt;p>First make sure that you have &lt;code>nvm&lt;/code> installed. We&amp;rsquo;ll need a different version of node for &lt;code>create-react-app&lt;/code> then we will for firebase functions.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ npx create-react-app honey
$ &lt;span class="nb">cd&lt;/span> honey
$ firebase login
$ firebase init
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Select functions, hosting&lt;/li>
&lt;li>Select your proejct if you&amp;rsquo;ve already created it&lt;/li>
&lt;li>JavaScript&lt;/li>
&lt;li>Yes to ESLint&lt;/li>
&lt;li>No to install dependancies&lt;/li>
&lt;li>&lt;code>build&lt;/code> instead of &lt;code>public&lt;/code> directory&lt;/li>
&lt;li>Yes to single page app&lt;/li>
&lt;/ul>
&lt;p>Now we will create our functions to generate the image. Firebase only supports node 6, so we&amp;rsquo;ll need to set that up. If you don&amp;rsquo;t already have node 6 installed, make sure you do that with &lt;code>nvm install 6&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">cd&lt;/span> functions
$ nvm use &lt;span class="m">6&lt;/span>
$ npm install firebase-functions@latest firebase-admin@latest express jimp tempfile node-fetch blueimp-md5 --save
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since that&amp;rsquo;s installing another &lt;code>node_modules&lt;/code> directory inside of the &lt;code>functions&lt;/code> folder, be sure to add that to &lt;code>.gitignore&lt;/code> in the project root:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> /functions/node_modules &amp;gt;&amp;gt; ../.gitignore
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="write-and-test-our-function">Write and test our function&lt;/h2>
&lt;p>We are going to combine an avatar.jpg like this:&lt;/p>
&lt;img src="avatar.jpg"/>
&lt;p>with a mask image like this:&lt;/p>
&lt;div>&lt;span style="background:#aaa;height:480px;width:480px;display:inline-block">&lt;img src="results_mask.png"/>&lt;/span>&lt;/div>
&lt;p>to make an image like this:&lt;/p>
&lt;img src="output.png"/>
&lt;p>So right click and save the two images &lt;code>avatar.jpg&lt;/code> and &lt;code>results_mask.png&lt;/code> into your &lt;code>functions&lt;/code> directory. Then create the &lt;code>functions/applyMask.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Jimp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;jimp&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Tempfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;tempfile&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">maskFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">__dirname&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;/results_mask.png&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">font&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loadFont&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FONT_SANS_32_WHITE&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">applyMask&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">avatarFile&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">maskFile&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">mask&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">avatarFile&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">image&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loadFont&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FONT_SANS_32_WHITE&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">font&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">original&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clone&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">original&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">215&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">215&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// Resize clean avatar to fit in the circle
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">480&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">480&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// Resize avatar to fill larger square
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">blur&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// Blur it
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">[{&lt;/span> &lt;span class="nx">apply&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;darken&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">]}]&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// Darken the blurred colors
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// Center point is 238, 275
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Write the clean avatar into the &amp;#34;center&amp;#34; of the circle
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">composite&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">original&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">238&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">original&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bitmap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">275&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">original&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bitmap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BLEND_DESTINATION_OVER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="c1">// Write the mask on top
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">composite&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">mask&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BLEND_DESTINATION_OVER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="c1">// Write the text onto the image fitting it into the box
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// top left 156, 400 and 175 pixel across and 30 down
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">print&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">font&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">156&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">400&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">alignmentX&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HORIZONTAL_ALIGN_CENTER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">alignmentY&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Jimp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">VERTICAL_ALIGN_MIDDLE&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="mi">175&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">outputFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Tempfile&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;.png&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeAsync&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">outputFile&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">outputFile&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">argv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;--test&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">applyMask&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Will S&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">__dirname&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;/avatar.jpg&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">applyMask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">applyMask&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can test this function using &lt;code>node avatarMask.js --test&lt;/code>, this will run the method directly so we can test out the results and print the output filename. To open that file directly, you can do &lt;code>open $(node avatarMask.js --test)&lt;/code>&lt;/p>
&lt;p>This uses Jimp to:&lt;/p>
&lt;ol>
&lt;li>Load in the mask using &lt;code>Jimp.read&lt;/code>&lt;/li>
&lt;li>Load in the avatar again using &lt;code>Jimp.read&lt;/code>&lt;/li>
&lt;li>Load in a font file that we will use for running&lt;/li>
&lt;li>Clone the original image&lt;/li>
&lt;li>Resize, blur and darken the avatar&lt;/li>
&lt;li>Copy the original avatar onto the center point at 238, 275&lt;/li>
&lt;li>Apply the mask on top&lt;/li>
&lt;li>Write the user&amp;rsquo;s name into the attached box&lt;/li>
&lt;li>Create a tempfile to write the final image into&lt;/li>
&lt;li>Resolve the promise at the end with the name of the tempfile.&lt;/li>
&lt;/ol>
&lt;p>The &lt;code>Jimp&lt;/code> library is written in pure JavaScript so this code should be runnable in the browser also with some limited modifications.&lt;/p>
&lt;h2 id="write-a-firebase-function-that-returns-the-image">Write a Firebase function that returns the image&lt;/h2>
&lt;p>Lets first create a simple express function just to make sure that we can get the firebase functions to run inside of the emulator and attach to a https handler.&lt;/p>
&lt;p>In &lt;code>functions/index.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">functions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;firebase-functions&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">webApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Hello world&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">functions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">https&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onRequest&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The run&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ npm run serve
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To run the function locally. If it starts up correctly, you should see an &lt;code>localhost&lt;/code> url that you can use, in my case &lt;code>http://localhost:5000/honey-b6642/us-central1/createImage/&lt;/code>&lt;/p>
&lt;p>Once that works, lets actually wire up our function to use our method (again this is &lt;code>functions/index.js&lt;/code>)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">functions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;firebase-functions&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">applyMask&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./merge&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">webApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Generating image&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">applyMask&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Will S&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">__dirname&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;/avatar.jpg&amp;#34;&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">tempfile&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Uploading file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tempfile&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sendFile&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tempfile&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}).&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">functions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">https&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onRequest&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Again test with &lt;code>node run serve&lt;/code>. When you go the url, you should now see the image in the browser!&lt;/p>
&lt;h2 id="check-to-see-that-it-works-on-firebase-itself">Check to see that it works on firebase itself&lt;/h2>
&lt;p>&lt;code>firebase deploy&lt;/code> will push the code to the firebase servers. If you don&amp;rsquo;t get any errors, you can see where the function is deployed either in the output logs, or by going to the &lt;a href="https://console.firebase.google.com">Firebase Console&lt;/a> and click on the &lt;code>Functions&lt;/code> tab:&lt;/p>
&lt;img src="functions.png" class="img-fluid"/>
&lt;p>If you go to that url, &lt;a href="https://us-central1-honey-b6642.cloudfunctions.net/createImage/">https://us-central1-honey-b6642.cloudfunctions.net/createImage/&lt;/a> in the image above, (add a / at the end if you have a problem) you should see the image generated and loaded from the firebase function.&lt;/p>
&lt;h2 id="passing-in-the-email-and-name-and-loading-from-gravatar">Passing in the email and name and loading from gravatar&lt;/h2>
&lt;p>Lets change the code a bit to pass in the email and name, load the avatar from gravatar, and customize the image:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">functions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;firebase-functions&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">applyMask&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./applyMask&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Tempfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tempfile&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fetch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;node-fetch&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">md5&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;blueimp-md5&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">downloadGravatar&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">email&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">md5&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">email&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">downloadUrl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://www.gravatar.com/avatar/&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">hash&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;.jpg&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">downloadUrl&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;downloading &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">outputFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Tempfile&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;.jpg&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Streaming to &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">outputFile&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">dest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createWriteStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">outputFile&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dest&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">outputFile&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">webApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">email&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">email&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">email&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="kc">undefined&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Email not passed in&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">name&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">name&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="kc">undefined&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">email&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">downloadGravatar&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">email&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">avatarFile&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">applyMask&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">avatarFile&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">tempfile&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Uploading file &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">tempfile&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sendFile&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">tempfile&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}).&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">functions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">https&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onRequest&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then start up your local firebase function with &lt;code>npm run serve&lt;/code> and test it out with an email and name, for example: http://localhost:5000/honey-b6642/us-central1/createImage?email=wschenk@gmail.com&amp;amp;name=Will+S&lt;/p>
&lt;p>Finally, deploy it all to firebase!&lt;/p>
&lt;pre>&lt;code>$ firebase deploy
&lt;/code>&lt;/pre>&lt;p>The final code can be found &lt;a href="https://github.com/wschenk/image_building_in_firebase">https://github.com/wschenk/image_building_in_firebase&lt;/a>&lt;/p>
&lt;hr>
&lt;p>References&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://github.com/wschenk/image_building_in_firebase">https://github.com/wschenk/image_building_in_firebase&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/oliver-moran/jimp">https://github.com/oliver-moran/jimp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@rossbulat/image-processing-in-nodejs-with-jimp-174f39336153">https://medium.com/@rossbulat/image-processing-in-nodejs-with-jimp-174f39336153&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/43117124/how-to-read-local-files-in-the-google-cloud-functions-emulator">https://stackoverflow.com/questions/43117124/how-to-read-local-files-in-the-google-cloud-functions-emulator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.gravatar.com/site/implement/images/">https://en.gravatar.com/site/implement/images/&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Implementing Serverless OAuth</title><link>https://willschenk.com/articles/2018/implementing_serverless_oauth/</link><pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2018/implementing_serverless_oauth/</guid><description>&lt;p>Most of the serverless platforms have their own forms of authentication, but it might not support the specific service that you are looking to use. Lets go through how we can build a react single page app, hosting on firebase, that talks to the unsplash service directly. It will be hosted on firebase stoage, and with a tiny bit of firebase functions to tie it together.&lt;/p>
&lt;h2 id="how-oauth-works">How oauth works&lt;/h2>
&lt;p>Here is the overall process:&lt;/p>
&lt;img src="oauth.sequence.svg" alt="sequence flow" class="img-fluid"/>
&lt;p>There are 3 entities &amp;ndash; the user&amp;rsquo;s browser, our server, and the third party service.&lt;/p>
&lt;ol>
&lt;li>On user action, such as pressing a Log in With Google button, a request is made to your server.&lt;/li>
&lt;li>A signed request is generated which includes the access levels that we wish to be granted. The client ID and client secret, which are provided by the service provider (under something like Create An App) are used to sign this request so that the server knows which app is requesting permission.&lt;/li>
&lt;li>The browser is redirected to the third party service with this request.&lt;/li>
&lt;li>The user interacts with the third party service, and grants us the permission.&lt;/li>
&lt;li>The browser is redirected to the &amp;ldquo;call back url&amp;rdquo;, which is generally needs to be white listed at the same place you got your client id and secrets.&lt;/li>
&lt;li>The authcode is then used by our server to request an access_token from the service. authcode are very short lived so prevent play back attacks since they are exposed to the browser. Access tokens are longer lived and aren&amp;rsquo;t generally exposed to the browser.&lt;/li>
&lt;li>The server (optionally) gets information for the account, for example name and avatar photos, to configure a local account.&lt;/li>
&lt;li>A logged in version of the site is returned to the user&amp;rsquo;s browser.&lt;/li>
&lt;/ol>
&lt;p>In this scenario:&lt;/p>
&lt;ol>
&lt;li>The user&amp;rsquo;s password is never seen by our server.&lt;/li>
&lt;li>The user doesn&amp;rsquo;t need to remember yet another password for your site.&lt;/li>
&lt;li>The access token is never seen by the user.&lt;/li>
&lt;li>Access Tokens can be revoked by the third-party service at any time.&lt;/li>
&lt;li>Access Tokens can be tied to a developer, so bad actors on the server level can be locked out.&lt;/li>
&lt;li>The third party service can grant fine grained control of what data they grant access to.&lt;/li>
&lt;/ol>
&lt;h2 id="what-do-we-need-to-implement">What do we need to implement&lt;/h2>
&lt;ol>
&lt;li>A client ID from the third party service.&lt;/li>
&lt;li>A client secret from the third party service.&lt;/li>
&lt;li>An auth method to contruct the initial requests.&lt;/li>
&lt;li>An auth_callback method to process the final request.&lt;/li>
&lt;li>An auth callback url that is granted access by the third party service&amp;rsquo;s app configuration.&lt;/li>
&lt;/ol>
&lt;p>The first 2 are created at a third party service. For this example, I&amp;rsquo;m going to choose &lt;a href="https://firebase.google.com/">firebase&lt;/a> to host our functions and website, and &lt;a href="https://unsplash.com/developers">Unsplash&lt;/a> since it&amp;rsquo;s a pretty fun third-party service that&amp;rsquo;s a bit off the beaten path and its not too hard to get an app registered.&lt;/p>
&lt;h3 id="create-the-app-on-the-third-party-service">Create the app on the third party service&lt;/h3>
&lt;p>Go ahead and follow that the unsplash link and register as a developer.&lt;/p>
&lt;p>Then press the big &lt;code>New Application&lt;/code> button and verify that you are going to follow the rules. Give your application a name and a quick description, then create!&lt;/p>
&lt;p>Note your Application Key and Secret. This could aslo be called your client id and secret. We&amp;rsquo;ll need those later. Set your callback url to &lt;code>https://localhost:3000/auth_callback&lt;/code>. Once we deploy to firebase we&amp;rsquo;ll need to go back with our actual URL, but this is what we&amp;rsquo;ll use fore testing.&lt;/p>
&lt;h3 id="create-our-javascript-template">Create our javascript template&lt;/h3>
&lt;p>We are going to use &lt;code>create-react-app&lt;/code> and then going to add firebase to it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ npx create-react-app unsplash-test
$ &lt;span class="nb">cd&lt;/span> unsplash-test
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setup-firebase">Setup firebase&lt;/h3>
&lt;p>Now we setup our &amp;ldquo;server&amp;rdquo; on the &lt;a href="https://console.firebase.google.com/u/0/">FireBase console&lt;/a> Create a new application. Select the web integration, and copy the example config into &lt;code>src/firebaseConfig.js&lt;/code>, something like below:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">apiKey&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;AIzY....&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">authDomain&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;honey-b6642.firebaseapp.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">databaseURL&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;https://honey-b6642.firebaseio.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">projectId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;honey-b6642&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">storageBucket&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;honey-b6642.appspot.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">messagingSenderId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;847930143737&amp;#34;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you haven&amp;rsquo;t already, it&amp;rsquo;s time to install the &lt;code>firebase-tools&lt;/code> page. I&amp;rsquo;m using yarn here:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn global add firebase-tools
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then lets add firebase to our project:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn add firebase
$ firebase login
$ firebase init
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will first prompt you to login to firebase so your machine has development credentials. Then &lt;code>init&lt;/code> will configure your local project with the correct configuration.&lt;/p>
&lt;ol>
&lt;li>Select at least functions and hosting.&lt;/li>
&lt;li>Choose the application that you just created.&lt;/li>
&lt;li>I chose JavaScript instead of TypeScript.&lt;/li>
&lt;li>Yes to ESLint.&lt;/li>
&lt;li>Yes to install dependencies.&lt;/li>
&lt;li>&lt;code>build&lt;/code> as the hosting directory.&lt;/li>
&lt;li>Yes to single page app.&lt;/li>
&lt;li>No to overwriting &lt;code>index.html&lt;/code> if asked.&lt;/li>
&lt;/ol>
&lt;p>Firebase should now be configured. Lets do a quick test of the deploy.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn run build &lt;span class="c1"># Build the sample create-react-app project&lt;/span>
$ firebase deploy &lt;span class="c1"># Push everything to firebase&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And open your browser to the url that was &lt;code>firebase deploy&lt;/code> spit out at the end. If you see a blank screen, double check that in &lt;code>firebase.json&lt;/code> you have &lt;code>build&lt;/code> set as the &lt;code>public&lt;/code> directory in hosting.&lt;/p>
&lt;h3 id="set-the-secrets-for-your-firebase-functions">Set the secrets for your firebase functions&lt;/h3>
&lt;p>We are going to store the oauth secrets inside of firebase to keep them seperate from your code. These are the application id and application secret that we got from unsplash above that you should have taken note off. Lets set those in firebase now (and be sure you enter in your own secrets!)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ firebase functions:config:set oauth.client_id&lt;span class="o">=&lt;/span>yourclientid
$ firebase functions:config:set oauth.client_secret&lt;span class="o">=&lt;/span>yourclientsecret
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can then pull these secrets back down locally into a firebase env file so that when we are testing out our firebase code it will behave like it will in production.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ firebase functions:config:get &amp;gt; functions/.runtimeconfig.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We don&amp;rsquo;t want these files to go into git so&lt;/p>
&lt;pre>&lt;code>$ echo functions/.runtimeconfig.json &amp;gt;&amp;gt; .gitignore
&lt;/code>&lt;/pre>&lt;h3 id="setup-firebase-functions">Setup firebase functions&lt;/h3>
&lt;p>Lets go into the &lt;code>functions&lt;/code> directory and add a few npm modules. One for the http, and the other for the oauth flow.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">cd&lt;/span> functions
$ yarn add express
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets create a simple app that we can use to test out our install. Replace &lt;code>functions/index.js&lt;/code> with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">functions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;firebase-functions&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">oauth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">functions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">oauth&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">webApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/auth&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;my client id is: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">oauth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">functions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">https&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onRequest&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then run &lt;code>firebase serve --only functions&lt;/code> to start up the api locally. Be sure to check out the url that the proxy code is running on. In my case, it&amp;rsquo;s &lt;code>http://localhost:5001/honey-b6642/us-central1/oauth&lt;/code>. Once this is running you should be able to go to the url listed and see the client id from the configuration.&lt;/p>
&lt;h2 id="setup-the-react-app">Setup the react app&lt;/h2>
&lt;p>We need to point our react code to our firebase functions, and we are going to put that information into &lt;code>env&lt;/code> files so that there is one place to swap them out later. These need to be prefaced with &lt;code>REACT_APP_&lt;/code> in order to play well with the &lt;code>create-react-app&lt;/code> build process. Create a &lt;code>.env.development&lt;/code> file with your information in it&lt;/p>
&lt;pre>&lt;code>REACT_APP_BASE_URL=&amp;quot;http://localhost:5001/honey-b6642/us-central1/oauth&amp;quot;
&lt;/code>&lt;/pre>&lt;p>We also don&amp;rsquo;t want this file in source control:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">echo&lt;/span> .env.development &amp;gt;&amp;gt; .gitignore
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once we deploy the server to fire base, we can point this to our production instances. Also, we will create another &lt;code>.env.production&lt;/code> file for build time information. Note that we don&amp;rsquo;t want the oauth secrets here, since this is for the JavaScript code, not for the server functions.&lt;/p>
&lt;p>First lets add some small styling to that our eyes won&amp;rsquo;t hurt during development.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn add node-sass bootstrap reactstrap dotenv
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Rename &lt;code>src/index.css&lt;/code> to &lt;code>src/index.scss&lt;/code>, and include the bootstrap sass files. This is a bit overkill at the moment, but it will set things up for easy customization going forward.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="k">@import&lt;/span> &lt;span class="s2">&amp;#34;~bootstrap/scss/bootstrap.scss&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Be sure to update &lt;code>src/index.js&lt;/code> to point to the correct style sheet, change &lt;code>index.css&lt;/code> to &lt;code>index.scss&lt;/code>&lt;/p>
&lt;p>Now we can build out a scaffolding for &lt;code>src/App.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Jumbotron&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Container&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;reactstrap&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">LoginWindow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Jumbotron&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Unsplash&lt;/span> &lt;span class="nx">browser&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">This&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">an&lt;/span> &lt;span class="nx">example&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">how&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nx">something&lt;/span> &lt;span class="nx">amazing&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;btn btn-primary&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">REACT_APP_BASE_URL&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;/auth&amp;#34;&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">Connect&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Jumbotron&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">LoginWindow&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now start up the server using &lt;code>yarn start&lt;/code>, and press the &lt;code>Connect&lt;/code> button. You should now see the response from the firebase function running locally!&lt;/p>
&lt;h2 id="implementing-the-oauth-flow">Implementing the OAuth Flow&lt;/h2>
&lt;p>Now that all the pieces are in place, it&amp;rsquo;s time to start implementing the oauth logic inside of the firebase functions.&lt;/p>
&lt;p>First lets add a few libraries to the &lt;code>functions/package.json&lt;/code>:&lt;/p>
&lt;pre>&lt;code>$ cd functions
$ yarn add simple-oauth2 randomstring
&lt;/code>&lt;/pre>&lt;p>Also edit the local &lt;code>functions/.runtimeconfig.json&lt;/code> to include the callback url that we are going to pass to unsplash. Mine looks like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;oauth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;client_secret&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;56efa3a9c3ddc8ff50beab6.....&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;client_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;d69d777a78a53b95523cc4cbf.....&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;redirect_uri&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:5000/honey-b6642/us-central1/oauth/callback&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets write some code! Lets replace what we have in &lt;code>functions/index.js&lt;/code> with a method to create a authorization request to unplash and then redirect the user&amp;rsquo;s browser to it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">functions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;firebase-functions&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">simpleOauth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;simple-oauth2&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">randomstring&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;randomstring&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">oauth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">functions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">oauth&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">oauth2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">simpleOauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">client&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">secret&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client_secret&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">auth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">tokenHost&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;https://unsplash.com/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">tokenPath&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">token_path&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;/oauth/token&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">authorizePath&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authorize_path&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;/oauth/authorize&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">webApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/auth&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">authorizationUri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">oauth2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authorizationCode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authorizeURL&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">redirect_uri&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redirect_uri&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">scope&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scopes&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;public&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">state&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">randomstring&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">generate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">authorizationUri&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">oauth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">functions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">https&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onRequest&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">webApp&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>First we setup &lt;code>simpleOauth&lt;/code>. We are using the configuration id and secret that we got from unsplash, and the endpoints that are specified in the documentation for the &lt;code>token&lt;/code> and &lt;code>authorize&lt;/code> path. When we get a &lt;code>/auth&lt;/code> request we use create an authorization request using that configuration and then redirect the browser to it.&lt;/p>
&lt;p>We haven&amp;rsquo;t written a callback handler yet, but lets try it out. First go to &lt;a href="https://unsplash.com/">unsplash&lt;/a> and log out of your account to see the whole flow. Then go to http://localhost:3000 and press the auth button. You&amp;rsquo;ll be prompted to log in, and when you do you should see:&lt;/p>
&lt;img src="unsplash_auth.png" class="img-fluid"/>
&lt;p>If you don&amp;rsquo;t, a couple of things to check&lt;/p>
&lt;ul>
&lt;li>Is your client id and secret being set correctly?&lt;/li>
&lt;li>Is your redirect_uri configured correctly?&lt;/li>
&lt;li>Are you passing the correct scope? (In this case, &lt;code>public&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>OK, now it&amp;rsquo;s time to write the callback method!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">webApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/callback&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">code&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">code&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">scope&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scopes&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;public&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">redirect_uri&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redirect_uri&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">oauth2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authorizationCode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">oauth2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">accessToken&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// We could also ask unplash about the user profile here if we wanted
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// to setup a firebase user for this authorization
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setHeader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;application/json&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">token&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span> &lt;span class="p">}));&lt;/span>
&lt;span class="p">}).&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Access Token Error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">messsage&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">error&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When you press &amp;ldquo;Grant Access&amp;rdquo; on Unsplash, it will generate an authorization code and redirect the user&amp;rsquo;s browser back to this function. Here we use that code to get an access token from unsplash that we can then use to make requests on the user&amp;rsquo;s behalf.&lt;/p>
&lt;h2 id="using-the-token">Using the token&lt;/h2>
&lt;p>In the scenario we outlined at the top, the server would store the access_token and connect to the server with authenticated requests from there. In the case of firebase, we&amp;rsquo;d great something like an Anaonymous account, store the token there, and then proxy requests from the server to the third party service never exposing the access_token to the browser. This is a clean way to do this so that the access_token is never exposed.&lt;/p>
&lt;p>But it makes it more complicated, so we are going to hack through it for demo purposes to just finish up the demo. The code that we are writing is going to connect to the unsplash api from the browser directly, so we&amp;rsquo;ll change our fireback function code to redirect back to our static app with an url that contains the access_token.&lt;/p>
&lt;p>So, lets have the code redirect back to our react site with the query string as the parameter.&lt;/p>
&lt;p>First lets add where we&amp;rsquo;d like it to go to the configuration in &lt;code>functions/.runtimeconfig.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;oauth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;client_secret&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;56efa3a9c3ddc8ff50beab69bd530....&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;client_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;d69d777a78a53b95523cc4cbf8921....&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;redirect_uri&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:5000/honey-b6642/us-central1/oauth/callback&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;static_site_url&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:3000&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then lets change our function to redirect instead of spitting out json. So in &lt;code>functions/index.js&lt;/code> change:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setHeader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;application/json&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">token&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span> &lt;span class="p">}));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>to:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redirect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">oauth&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">static_site_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;?access_token=&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to update our react code so that it knows what to do with that access token. Lets first add a node module that understands how to parse query strings:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn add query-string
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And replace the App class in &lt;code>src/App.js&lt;/code> with the following:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">access_token&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">componentDidMount&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">QueryString&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">search&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="kc">undefined&lt;/span> &lt;span class="p">){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;looks like we&amp;#39;ve got an access_token!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">access_token&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">values&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;No token&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Unsplash&lt;/span> &lt;span class="na">access_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">access_token&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">LoginWindow&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We need to create that &lt;code>Unsplash&lt;/code> component, so lets do that now inside of &lt;code>src/Unsplash.js&lt;/code> (and don&amp;rsquo;t forget to &lt;code>import&lt;/code> this at the top of &lt;code>App.js&lt;/code>!)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Container&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Progress&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;reactstrap&amp;#39;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">authedGet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">access_token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">endpoint&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;Accept&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;application/json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;application/json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;Accept-Version&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;v1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">access_token&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;headers&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fetchInit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">headers&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">credentials&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;omit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://api.unsplash.com&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">endpoint&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fetchInit&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Loading&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Fetching&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">unsplash&lt;/span> &lt;span class="nx">api&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Progress&lt;/span> &lt;span class="na">animated&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span> &lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Profile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Hello&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">profile_image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">large&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;profile photo&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">Unsplash&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">loading&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">componentDidMount&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">access_token&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">authedGet&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">access_token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/me&amp;#34;&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Got response &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status_code&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">loading&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loading&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nt">Loading&lt;/span>&lt;span class="p">/&amp;gt;)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nt">Profile&lt;/span> &lt;span class="na">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">}/&amp;gt;)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Horrible&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first thing that we are doing is creating a utility function that uses the &lt;code>fetch&lt;/code> function and passes the &lt;code>Bearer&lt;/code> token, a/k/a &lt;code>access_token&lt;/code> to the api. In the &lt;code>componentDidMount&lt;/code> method of the &lt;code>Unsplash&lt;/code> class, we use that function to initiate the request. Once we get that data, we show the rather bare bones &lt;code>Profile&lt;/code> component that has a name and a picture in it.&lt;/p>
&lt;img src="profile.png" alt="profile image"/>
&lt;p>Proof of concept: working locally!&lt;/p>
&lt;h2 id="deploying-everything-to-firebase">Deploying everything to firebase&lt;/h2>
&lt;p>Now lets package this up to run on production. First we need to tell the react app where the firebase functions are. Go to the &lt;a href="https://console.firebase.google.com">FireBase Console&lt;/a>, select your project, and find the functions admin panel on the left side. See where the are deployed. Mine is &lt;code>https://us-central1-honey-b6642.cloudfunctions.net/oauth&lt;/code>, so in &lt;code>.env.production&lt;/code> lets add:&lt;/p>
&lt;pre>&lt;code>REACT_APP_BASE_URL=&amp;quot;https://us-central1-honey-b6642.cloudfunctions.net/oauth&amp;quot;
&lt;/code>&lt;/pre>&lt;p>Now lets kick off a production build of the react app:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to setup the config for the firebase functions. Lets make sure that we have an entry for everything that is in our &lt;code>functions/.runtimeconfig.json&lt;/code> file. First set the static_site_url value to the url you are looking at, in my case &lt;code>https://honey-b6642.firebaseapp.com/&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ firebase functions:config:set oauth.static_site_url&lt;span class="o">=&lt;/span>https://honey-b6642.firebaseapp.com/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For the redirect_uri, use the same as the &lt;code>REACT_APP_BASE_URL&lt;/code> above but add &lt;code>/callback&lt;/code>. Mine is &lt;code>https://us-central1-honey-b6642.cloudfunctions.net/oauth&lt;/code>, so&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ firebase functions:config:set oauth.redirect_uri&lt;span class="o">=&lt;/span>https://us-central1-honey-b6642.cloudfunctions.net/oauth/callback
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once that is done, lets push both the html/css/js code as well as the functions to firebase:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ firebase deploy
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you have the &lt;a href="https://github.com/firebase/firebase-tools/issues/775">problem listed here&lt;/a>, update &lt;code>functions/package.json&lt;/code> to downgrade &lt;code>simple-oauth2&lt;/code> to &lt;code>^1.6.0&lt;/code>, return &lt;code>yarn&lt;/code> in the &lt;code>functions&lt;/code> directory, and retry the firebase deploy.&lt;/p>
&lt;p>Finally, we need to whitelist our callback URL inside of the &lt;a href="https://unsplash.com/oauth/applications">Unsplash Application&lt;/a>. Follow that link, select your application, and add that same callback url from above after the localhost one that should already be there.&lt;/p>
&lt;p>Now lets test it out! Make sure that you have billing enabled in FireBase, otherwise you won&amp;rsquo;t be able to make external requests and you will get a host not found error.&lt;/p>
&lt;h2 id="final-thoughts">Final thoughts&lt;/h2>
&lt;p>The code is available on GitHub here: &lt;a href="https://github.com/wschenk/unsplash_api_firebase">https://github.com/wschenk/unsplash_api_firebase&lt;/a>&lt;/p>
&lt;p>We&amp;rsquo;ve covered a lot of ground here!&lt;/p>
&lt;ol>
&lt;li>Overview of the OAuth protocol&lt;/li>
&lt;li>Hosting a static create-react-app site on firebase&lt;/li>
&lt;li>Building firebase functions and testing them locally&lt;/li>
&lt;li>Environment config with create-react-app in production and development&lt;/li>
&lt;li>Environment config with firebase functions, also in production and development&lt;/li>
&lt;li>Using &lt;code>simple-oauth2&lt;/code>&lt;/li>
&lt;li>A quick and easy way to pass the access_token back to our react app&lt;/li>
&lt;li>How to use the &lt;code>Bearer&lt;/code> token using &lt;code>window.fetch&lt;/code> to get authenticated data from an API.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="references">References&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="https://github.com/wschenk/unsplash_api_firebase">https://github.com/wschenk/unsplash_api_firebase&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://firebase.google.com/docs/functions/get-started">https://firebase.google.com/docs/functions/get-started&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://firebase.google.com/docs/functions/local-emulator">https://firebase.google.com/docs/functions/local-emulator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.netlify.com/blog/2018/07/30/how-to-setup-serverless-oauth-flows-with-netlify-functions--intercom/">https://www.netlify.com/blog/2018/07/30/how-to-setup-serverless-oauth-flows-with-netlify-functions--intercom/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Herohtar/netlify-cms-oauth-firebase">https://github.com/Herohtar/netlify-cms-oauth-firebase&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://unsplash.com/documentation">https://unsplash.com/documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/unsplash/unsplash-js">https://github.com/unsplash/unsplash-js&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Adding Facebook Login with react</title><link>https://willschenk.com/articles/2018/adding_facebook_login_with_react/</link><pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2018/adding_facebook_login_with_react/</guid><description>&lt;p>Sometimes you just can&amp;rsquo;t get away from facebook. Here&amp;rsquo;s a quick tutorial on how to add facebook login to your react app.&lt;/p>
&lt;p>First you need to &lt;a href="https://developers.facebook.com/docs/apps#register">create a facebook app&lt;/a>, which is an involved process especially if you want to let, you know, other people log in to your app. Getting your app approved and otherwise up and running here is left as an excersize for you to figure out.&lt;/p>
&lt;p>In the navigation menu:&lt;/p>
&lt;ol>
&lt;li>click + Add Product&lt;/li>
&lt;li>locate the Facebook Login product&lt;/li>
&lt;li>click Set Up&lt;/li>
&lt;li>Add web&lt;/li>
&lt;li>Enter in the url for your site&lt;/li>
&lt;li>Note your app id&lt;/li>
&lt;/ol>
&lt;h2 id="create-your-react-app">Create your react app&lt;/h2>
&lt;p>Then create a simple react app to test it out to make sure that the basics are wired up.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ npx create-react-app facebook-login-test
$ &lt;span class="nb">cd&lt;/span> facebook-login-test
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add the &lt;code>react-facebook-login&lt;/code> npm package.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn add react-facebook-login
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets start up the server running under https, since Facebook will start rejecting api calls that arent from a secure site.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nv">HTTPS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> yarn run start
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We test it the facebook integration with some sample code in &lt;code>App.js&lt;/code>. Replace your &lt;code>appId&lt;/code> with what you had before.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">FacebookLoginWithButton&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-facebook-login&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">responseFacebook&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">componentClicked&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Clicked!&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FacebookLoginWithButton&lt;/span>
&lt;span class="na">appId&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;1206715649505081&amp;#34;&lt;/span>
&lt;span class="na">autoLoad&lt;/span>
&lt;span class="na">fields&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;name,email,picture&amp;#34;&lt;/span>
&lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">componentClicked&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">callback&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">responseFacebook&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">icon&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;fa-facebook&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now if you click on the link you should be able to see that the &lt;code>responseFacebook&lt;/code> function being called with the users information that was requested. Hopefully you were able to see your account information! Since we have &lt;code>autoLoad={true}&lt;/code> when you refresh the page &lt;code>responseFacebook&lt;/code> will also be triggered on load since it detects that you already granted permission to your site. Setting this to &lt;code>false&lt;/code> will force the user to click again to initiate the process.&lt;/p>
&lt;h2 id="a-slightly-more-elaborate-example">A slightly more elaborate example&lt;/h2>
&lt;p>I&amp;rsquo;ve talked about using &lt;a href="https://willschenk.com/articles/2017/authenticated_routes_using_react_router/">Authenticated Routes Using React Router&lt;/a> and if you want a more thorough explication that would be a good place to start. But quickly, lets just display the Facebook button if we don&amp;rsquo;t know who you are, and then a simple card once we have your information.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">FacebookLoginWithButton&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-facebook-login&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">componentClicked&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Clicked!&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">LoginButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">facebookResponse&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FacebookLoginWithButton&lt;/span>
&lt;span class="na">appId&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;1206715649505081&amp;#34;&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="na">autoLoad&lt;/span>
&lt;span class="na">fields&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;name,email,picture&amp;#34;&lt;/span>
&lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">componentClicked&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">callback&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">facebookResponse&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">icon&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;fa-facebook&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">UserScreen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Welcome&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;{&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">email&lt;/span> &lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">picture&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">picture&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">picture&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;avatar&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">facebookResponse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="p">);&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="nx">margin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;auto&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">textAlign&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;center&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">paddingTop&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;2em&amp;#34;&lt;/span> &lt;span class="p">}}&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">UserScreen&lt;/span> &lt;span class="na">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span> &lt;span class="o">:&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">LoginButton&lt;/span> &lt;span class="na">facebookResponse&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">facebookResponse&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>References:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://developers.facebook.com/docs/apps#register">https://developers.facebook.com/docs/apps#register&lt;/a> - Facebook documentation on registering an application&lt;/li>
&lt;li>&lt;a href="https://github.com/keppelen/react-facebook-login">https://github.com/keppelen/react-facebook-login&lt;/a> - The react plugin&lt;/li>
&lt;/ol></description></item><item><title>Automating hugo builds using CircleCI</title><link>https://willschenk.com/articles/2018/automating_hugo_with_circleci/</link><pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2018/automating_hugo_with_circleci/</guid><description>&lt;p class="lead">Here's a simple CircleCI configuration to pull down the latest version of your hugo site on GitHub commits, build it, and then push it to github pages.&lt;/p>
&lt;p>Let&amp;rsquo;s set that up, following &lt;a href="https://circleci.com/blog/automate-your-static-site-deployment-with-circleci/">their documentation on how configure CircleCI to build static sites&lt;/a>.&lt;/p>
&lt;p>Create &lt;code>.circleci/config.yml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ignore&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- gh-pages&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">docker&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>cibuilds/hugo&lt;span class="p">:&lt;/span>latest&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">working_directory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>~/hugo&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">HUGO_BUILD_DIR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>~/hugo/public&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># install git&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>apk&lt;span class="w"> &lt;/span>update&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>apk&lt;span class="w"> &lt;/span>add&lt;span class="w"> &lt;/span>git&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># checkout the repository&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- checkout&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># install git submodules for managing third-party dependencies&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>submodule&lt;span class="w"> &lt;/span>sync&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>submodule&lt;span class="w"> &lt;/span>update&lt;span class="w"> &lt;/span>--init&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Link the public dir to the gh-pages branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>rm&lt;span class="w"> &lt;/span>-fr&lt;span class="w"> &lt;/span>$HUGO_BUILD_DIR&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>worktree&lt;span class="w"> &lt;/span>add&lt;span class="w"> &lt;/span>-B&lt;span class="w"> &lt;/span>gh-pages&lt;span class="w"> &lt;/span>$HUGO_BUILD_DIR&lt;span class="w"> &lt;/span>origin/gh-pages&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># build with Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>HUGO_ENV=production&lt;span class="w"> &lt;/span>hugo&lt;span class="w"> &lt;/span>-v&lt;span class="w"> &lt;/span>-d&lt;span class="w"> &lt;/span>$HUGO_BUILD_DIR&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Set some variables to add to the commit message&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>config&lt;span class="w"> &lt;/span>--global&lt;span class="w"> &lt;/span>user.email&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;noreply@example.com&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>config&lt;span class="w"> &lt;/span>--global&lt;span class="w"> &lt;/span>user.name&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;CircleCI Bot&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Push the generated files back to github&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>cd&lt;span class="w"> &lt;/span>$HUGO_BUILD_DIR&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>add&lt;span class="w"> &lt;/span>--all&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>commit&lt;span class="w"> &lt;/span>-m&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Automated publish to gh-pages [ci skip]&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w"> &lt;/span>push&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Commit and add this file to your reposity on GitHub. This runs the hugo build image. It installs git, and then checkout the repo from GitHub. We pull down any submodules if you are using that for themes. We then configure the &lt;code>$HUGO_BUILD_DIR&lt;/code> to be a &lt;code>worktree&lt;/code> of the &lt;code>gh-pages&lt;/code> branch &amp;ndash; this is where we are going to host the files in GitHub pages. Then it runs the build itself, adds and commits those files in the &lt;code>gh-pages&lt;/code> branch back into the repository, and pushes back to &lt;code>GitHub&lt;/code>.&lt;/p>
&lt;p>For this to work you need to grant &lt;code>CircleCI&lt;/code> write access to your repo which is done by setting it up with your user&amp;rsquo;s key. Lets get CircleCI working now.&lt;/p>
&lt;ol>
&lt;li>Go to &lt;a href="https://circleci.com/">CircleCI&lt;/a> and create an account.&lt;/li>
&lt;li>Select the single linux container plan.&lt;/li>
&lt;li>Add your repository from GitHub that you want to build.&lt;/li>
&lt;li>Go to project settings, and under Permissions go to &lt;code>Checkout SSH Keys&lt;/code>.&lt;/li>
&lt;li>&lt;code>Add User Key&lt;/code> to grant permission.&lt;/li>
&lt;li>Remove the previous deploy key.&lt;/li>
&lt;/ol>
&lt;p>Now when you push your commits to &lt;code>GitHub&lt;/code>, you&amp;rsquo;ll be able to watch CircleCI build them and hopefully see your new content go up shortly!&lt;/p></description></item><item><title>Adding a CMS to hugo</title><link>https://willschenk.com/articles/2018/adding_a_cms_to_hugo/</link><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2018/adding_a_cms_to_hugo/</guid><description>&lt;p>Just because we have a static site doesn&amp;rsquo;t mean that we can&amp;rsquo;t have an admin tool to write and edit posts! Lets go through how we can &lt;a href="https://www.netlifycms.org/docs/add-to-your-site/">add the NetlifyCMS&lt;/a> to the site and host it wherever we want.&lt;/p>
&lt;p>In my case I&amp;rsquo;m storing the code on &lt;a href="https://github.com">GitHub&lt;/a> and also serving the pages from &lt;a href="https://pages.github.com/">GitHub Pages&lt;/a>. &lt;a href="https://www.netlify.com/">Netlify&lt;/a> also seems like a really promising company with a number of other services that they offer, so I&amp;rsquo;d encourage you to check it out. But since I&amp;rsquo;m changing one thing at a time, I&amp;rsquo;ll leave that for a later exercise.&lt;/p>
&lt;p>The CMS works by loading the code and it&amp;rsquo;s configuration from your site. These are 100% static so nothing needs to happen at build time. The configuration tells the admin &amp;ndash; which again runs totally in your browser &amp;ndash; where to get authentication and the data for your site. Once that&amp;rsquo;s done you&amp;rsquo;ll need to figure out how to setup the build process.&lt;/p>
&lt;h2 id="install-the-admin">Install the admin&lt;/h2>
&lt;p>in &lt;code>/static/admin/index.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Content Manager&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- Include the script that builds the page and powers Netlify CMS --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then in ``/static/admin/config.yml`:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>github&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">repo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>wschenk/willschenk.com&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">publish_mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>editorial_workflow&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">media_folder&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>static/img/uploads&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">public_folder&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>img/uploads&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">collections&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;articles&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">label&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Articles&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">folder&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;content/articles&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">create&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fields&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="k">label&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Title&amp;#34;&lt;/span>&lt;span class="k">, name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="k">, widget&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;string&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="k">label&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Date&amp;#34;&lt;/span>&lt;span class="k">, name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;date&amp;#34;&lt;/span>&lt;span class="k">, widget&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;date&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="k">label&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Body&amp;#34;&lt;/span>&lt;span class="k">, name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="k">, widget&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;markdown&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="what-if-i-dont-have-a-netlify-account">What if I don&amp;rsquo;t have a netlify account?&lt;/h2>
&lt;p>There are a number of ways to do this, but we are going to&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://developer.github.com/apps/building-oauth-apps/creating-an-oauth-app/">Create a GitHub application&lt;/a> that will do the granting&lt;/li>
&lt;li>Create a firebase application to handle the accounts&lt;/li>
&lt;li>Wire everything together.&lt;/li>
&lt;/ol>
&lt;h3 id="creating-the-github-app">Creating the GitHub app&lt;/h3>
&lt;p>Go to &lt;a href="https://github.com/settings/developers">GitHub developer settings&lt;/a>. You can access this by clicking on your profile, selecting &lt;code>Settings&lt;/code>, and then selecting &lt;code>Developer Settings&lt;/code>.&lt;/p>
&lt;p>Create a &lt;code>New OAuth App&lt;/code>.&lt;/p>
&lt;p>Leave the callback URL blank for now &amp;ndash; we&amp;rsquo;ll set that up with a url that we will get from firebase shortly.&lt;/p>
&lt;p>&lt;em>Take note of the client ID and client secret, we&amp;rsquo;ll need those shortly&lt;/em>&lt;/p>
&lt;h3 id="creating-the-firebase-application">Creating the firebase application&lt;/h3>
&lt;p>We will spin up something on firebase to help handle the oauth dance.&lt;/p>
&lt;p>First lets checkout some code that will handle the api interactions. We are going to install this code on firebase.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ git clone https://github.com/Herohtar/netlify-cms-oauth-firebase
$ &lt;span class="nb">cd&lt;/span> netlify-cms-oauth-firebase/functions/
$ npm i
$ &lt;span class="nb">cd&lt;/span> ..
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then install &lt;code>firebase-tools&lt;/code> if you haven&amp;rsquo;t already&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ npm add -g firebase-tools
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next log in to firebase&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ firebase login
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Go to the &lt;a href="https://console.firebase.google.com/">firebase console&lt;/a> and create an application. Then configure firebase to use that project&lt;/p>
&lt;pre>&lt;code>$ firebase use projectname
&lt;/code>&lt;/pre>&lt;p>Now lets setup the client id and secret that we got from GitHub:&lt;/p>
&lt;pre>&lt;code>$ firebase functions:config:set oauth.client_id=yourclientid oauth.client_secret=yourclientsecret
&lt;/code>&lt;/pre>&lt;p>This will take a few seconds to finish. Now we can deploy our functions, and get the URL that GitHub will use to pass back the authentication.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ firebase deploy --only functions
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the url of the application deployed, in my case it is &lt;code>https://us-central1-willschenkcom.cloudfunctions.net/oauth&lt;/code>&lt;/p>
&lt;h3 id="wiring-it-all-up">Wiring it all up&lt;/h3>
&lt;p>Go back to the GitHub app page and change your app&amp;rsquo;s callback to the hostname/oauth/callback &amp;ndash; in my case &lt;code>https://us-central1-willschenkcom.cloudfunctions.net/oauth/callback&lt;/code>.&lt;/p>
&lt;p>Then in &lt;code>static/admin/config.yml&lt;/code> set the &lt;code>baseURL&lt;/code> to your firebase application. In my case the relavent section looks like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>github&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">repo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>wschenk/willschenk.com&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">base_url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//us-central1-willschenkcom.cloudfunctions.net&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">auth_endpoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/oauth/auth&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>The NetlifyCMS is really interesting, though its still a work in progress. With this setup, we are using a couple of external services &amp;ndash; GitHub, Firebase &amp;ndash; all within their free tiers to edit and push out a website. This process would probably be even easier if we went all in with Netlify, so that&amp;rsquo;s another great service to start checking out.&lt;/p>
&lt;p>Originally I had &lt;a href="automating_hugo_with_circle_ci">configuring CircleCI&lt;/a> in this post, but I moved it to its own! Read next!&lt;/p></description></item><item><title>Building a hugo site and theme with Bootstrap</title><link>https://willschenk.com/articles/2018/building-a-hugo-site/</link><pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2018/building-a-hugo-site/</guid><description>&lt;p>Now that&amp;rsquo;s its 2018 its time to retool the blog using hugo. Why not? Hugo is built in golang and is blazing fast and everything is cleaner than it was in the middleman years.&lt;/p>
&lt;p>One of the reasons that I liked middleman &amp;ndash; it&amp;rsquo;s usage of the rails&amp;rsquo; Sprockets library &amp;ndash; is no longer a strength. The javascript and front-end world has moved over to WebPack and I&amp;rsquo;ve personally moved over to create-react-app. We&amp;rsquo;ll get into that later. First go and &lt;a href="https://gohugo.io/getting-started/installing/">download hugo from the main site&lt;/a>. And then we&amp;rsquo;ll create a blank site and theme.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new site mysite
$ &lt;span class="nb">cd&lt;/span> mysite
$ hugo new theme mytheme
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit the generated &lt;code>config.toml&lt;/code> to have it point to this new theme.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">theme&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;mytheme&amp;#34;&lt;/span>
&lt;span class="nx">relativeURLs&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I like to setup all the content sites so the urls are relative so I can host in subdirectories and the like. (I&amp;rsquo;ll talk about this at a later post, but this makes it easy to stick things in ipfs and load up development builds of the site on an actual mobile device for testing.) Finally, lets start the server:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo server --watch --verbose --buildDrafts --cleanDestinationDir --disableFastRender
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These are some useful development flags, &lt;code>---buildDrafts&lt;/code> does what you&amp;rsquo;d expect and &lt;code>--disableFastRender&lt;/code> helps make sure that your shift-reloading gets the latest version of the file.&lt;/p>
&lt;h2 id="layouts-blocks-and-partials">Layouts, blocks and partials&lt;/h2>
&lt;p>First we&amp;rsquo;ll start with the base layout in &lt;code>themes/mytheme/layouts/_default/baseof.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">partial&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;head.html&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">partial&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;header.html&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>
&lt;span class="cp">{{-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">block&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">partial&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;footer.html&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is the &lt;code>_default&lt;/code> base layout for everything in the site. You can have specific layouts for different content types, but this is the fallback one that we are going to define for when nothing else is specified. Inside of this we define a few &lt;code>partial&lt;/code>s and &lt;code>block&lt;/code>s. You can think of partials as included subtemplates that we can use both for structure as well as a convenient place to override the structure of a theme when you want to do big customizations. &lt;code>blocks&lt;/code> are replaced with the data from the content of your site, so are better thought of as the &lt;em>parts where the template is filled with data&lt;/em>.&lt;/p>
&lt;p>The &lt;code>{{ }}&lt;/code> stuff is the go templating language, so if you want to really figure out how that works you&amp;rsquo;ll eventually find yourself in the golang language docs, which is a little intense sometimes. The main thing to remember is that for every page that is rendered on the site its passed in a &lt;code>HugoPage&lt;/code> object which is where you need to pull out all of the data. So if you want to know what is available to you, that&amp;rsquo;s where you start looking.&lt;/p>
&lt;h3 id="head">Head&lt;/h3>
&lt;p>Inside &lt;code>themes/mytheme/layouts/partials/head.html&lt;/code> add bootstrap and the various bits of awesomeness required for that.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- Required meta tags --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://code.jquery.com/jquery-3.3.1.slim.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.AlternativeOutputFormats&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">printf&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">`&amp;lt;link rel=&amp;#34;%s&amp;#34; type=&amp;#34;%s+%s&amp;#34; href=&amp;#34;%s&amp;#34; title=&amp;#34;%s&amp;#34; /&amp;gt;`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Rel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.MediaType.Type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.MediaType.Suffix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Permalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Site.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">safeHTML&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">-}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This sets up bootstrap to load from the CDN, as well as adding a link to the generated rss feed. Here we can see a few other things. One is that we are setting the &lt;code>&amp;lt;title&amp;gt;&lt;/code> using &lt;code>{{ .Title }}&lt;/code>. We may want to change that later, but what that means is that we are using the current page&amp;rsquo;s title attribute to set the title, and if you wanted to include something from the &lt;code>.Site&lt;/code> data this is where you&amp;rsquo;d put the logic.&lt;/p>
&lt;p>The other thing here is the &lt;code>range&lt;/code> function. In practical terms we are putting in &lt;code>rss&lt;/code> discovery links, but what this literally is doing is looping over the &lt;code>AlternativeOutputFormats&lt;/code> slice inside of the page. &lt;code>range&lt;/code> is the golang looping idiom, which is like a &lt;code>for&lt;/code> loop but better.&lt;/p>
&lt;h3 id="footers">Footers&lt;/h3>
&lt;p>Lets put some of these variables into the footer to help debug a bit. This is in &lt;code>themes/mytheme/layouts/partials/footer.html&lt;/code> where we are going to expose the hugo page variables so we know what&amp;rsquo;s happening&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">footer&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;footer mt-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">table&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;table table-sm&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">caption&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hugo Variables for current page&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">caption&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Name&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Kind&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Kind&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Type&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>List Page&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>.Pages&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>IsPage&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.IsPage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>IsHome&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.IsPage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Next&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Prev&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Section&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">th&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.CurrentSection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">td&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">tr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">table&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">footer&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="page-templates">Page templates&lt;/h3>
&lt;p>Now we will define a basic single template, which will be used to render a single object, not a collection of anything. We are going to demo this with the index page initially.
&lt;code>themes/mytheme/layouts/_default/single.html&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This from the single page template&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And out first draft of the &lt;code>index.html&lt;/code> template for the site. We&amp;rsquo;ll put in a little jumbotron in &lt;code>themes/mytheme/layouts/index.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;jumbotron&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This could be the title&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Here&amp;#39;s some description stuff&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>There&amp;#39;s also other things that are super nice&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point you should be able to see the index page when you go to http://localhost:1313 (If hugo didn&amp;rsquo;t create an empty header.html partial the build might fail, so move on the next section if you don&amp;rsquo;t have that.)&lt;/p>
&lt;h2 id="header-and-menus">Header and menus&lt;/h2>
&lt;p>In &lt;code>config.toml&lt;/code> on the top level of your site (out of the theme) lets define a few menu items. We will then use that data to fill in the header.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[&lt;/span>&lt;span class="nx">menu&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">menu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">main&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;about&amp;#34;&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;About&amp;#34;&lt;/span>
&lt;span class="nx">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/about/&amp;#34;&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">menu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">main&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Posts&amp;#34;&lt;/span>
&lt;span class="nx">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/posts/&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then add a header in &lt;code>themes/mytheme/layouts/partials/header.html&lt;/code>. We are going to use a bootstrap navbar and pull the menu items out of the site configuration.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">nav&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar navbar-expand-lg navbar-light &amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-brand&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="na">.Site.Title&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-toggler&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span> &lt;span class="na">data-toggle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;collapse&amp;#34;&lt;/span> &lt;span class="na">data-target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#navbarSupportedContent&amp;#34;&lt;/span> &lt;span class="na">aria-controls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbarSupportedContent&amp;#34;&lt;/span> &lt;span class="na">aria-expanded&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;false&amp;#34;&lt;/span> &lt;span class="na">aria-label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Toggle navigation&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-toggler-icon&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;collapse navbar-collapse&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbarSupportedContent&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-nav ml-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$currentPage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Menus.main&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-item &lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">or&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nx">$currentPage&lt;/span>&lt;span class="na">.IsMenuCurrent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nx">$currentPage&lt;/span>&lt;span class="na">.HasMenuCurrent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s"> active&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;nav-link&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">nav&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are a couple of new concepts here, the first is &lt;code>{{ &amp;quot;/&amp;quot; | relURL }}&lt;/code> which is a helper function to transform a variable in somewhat that could make it more palatable to the user. In this case I&amp;rsquo;m just translating &amp;ldquo;/&amp;rdquo; to a relativeURL, which on subpages will have it be something like &amp;ldquo;../../index.html&amp;rdquo; or whatever.&lt;/p>
&lt;p>&lt;code>{{ $currentPage := . }}&lt;/code> is setting a variable so let us refer to the outcontext when we are in the &lt;code>range&lt;/code> below. The &lt;code>range&lt;/code> links over all of the menu items. The object that &lt;code>.&lt;/code> refers to changes inside of the &lt;code>range&lt;/code> to be the current item that it&amp;rsquo;s iterating over, so in order to make any comparisons to the currentPage in this case we need to give it a name. &lt;code>:=&lt;/code> is very golang.&lt;/p>
&lt;p>Also are &lt;code>if&lt;/code> statements, which we are using to determine if we include the &lt;code>active&lt;/code> class on the link. Note where the operator is, that is the &lt;code>or&lt;/code> comes first and the data comes afterwards. So lispy!&lt;/p>
&lt;h2 id="adding-post-content">Adding post content&lt;/h2>
&lt;p>Lets now add some basic posts.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new posts/sample_post.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you didn&amp;rsquo;t start hugo with -D, you&amp;rsquo;ll need to make sure that the draft flag isn&amp;rsquo;t true for it to show up&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">---
title: &amp;#34;Sample Post&amp;#34;
date: 2018-10-19T16:04:51-04:00
draft: false
---
One of the things I&amp;#39;m very interested in is writing words and seeing them on the page.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is pretty standard from most static site generators with the front matter on the top and the markdown on the bottom.&lt;/p>
&lt;h2 id="list-templates">List templates&lt;/h2>
&lt;p>Create a list template view in &lt;code>themes/mytheme/layouts/_default/list.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">humanize&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Pages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row mt-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;d-none d-sm-block col-sm-2 mt-auto offset-sm-2 text-right&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">time&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;post-date&amp;#34;&lt;/span> &lt;span class="na">datetime&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;2006-01-02T15:04:05Z07:00&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">safeHTML&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">time&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-body&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Draft&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>DRAFT: &lt;span class="cp">{{&lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We&amp;rsquo;re using a hugo function &lt;code>humanize&lt;/code> to capitalize the type of object that we are looking at, and a whole bunch of bootstrap utility classes to align and only show the published date on larger screens.&lt;/p>
&lt;p>The &lt;code>.Date.Format&lt;/code> format string is really weird &amp;ndash; I&amp;rsquo;m not sure that I really understand it but it expects the year to be 2006 for things to make sense. This is part of the way that the hugo&amp;rsquo;s underlying go date formating stuff works that.&lt;/p>
&lt;p>Now we click on posts in the nav bar you should see the list of posts. But when we click on the page itself, you&amp;rsquo;ll notice that we have the text &amp;ldquo;This from the single page template&amp;rdquo;. So lets update that &lt;code>themes/mytheme/layouts/_default/single.html&lt;/code> template now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Content&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="adding-tags">Adding tags&lt;/h2>
&lt;p>Since we mentioned tags above, lets go right ahead and add that taxonomy to our theme. Another common type of taxonomy is categories. Let&amp;rsquo;s go ahead and add that to the &lt;code>theme.toml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">tags&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;tags&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart your hugo server to see the magic!&lt;/p>
&lt;p>Lets add some tags to our first &lt;code>sample_post.md&lt;/code> file&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">---
title: &amp;#34;Sample Post&amp;#34;
date: 2018-10-19T16:10:36-04:00
draft: false
tags: [ &amp;#34;one&amp;#34;, &amp;#34;two&amp;#34; ]
---
This is the first paragraph of what I&amp;#39;d like to say.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then create another post&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">hugo new posts/sample_post_the_second.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And fill it in with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">---
title: &amp;#34;Sample Post The Second&amp;#34;
date: 2018-10-19T16:54:29-04:00
draft: false
tags: [&amp;#34;two&amp;#34;]
---
This is the second amazing post that will &lt;span class="ge">*blow your mind*&lt;/span>!
&lt;/code>&lt;/pre>&lt;/div>&lt;p>New lets add tags to our menu so we can put it on the nav bar. We&amp;rsquo;ll also specify menu weights to fix the order. This is done in the site configuration &lt;code>config.toml&lt;/code> where we are configuring how this specific site used the theme that we are defining.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[&lt;/span>&lt;span class="nx">menu&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">menu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">main&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;about&amp;#34;&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;About&amp;#34;&lt;/span>
&lt;span class="nx">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/about/&amp;#34;&lt;/span>
&lt;span class="nx">weight&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">menu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">main&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;tags&amp;#34;&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Tags&amp;#34;&lt;/span>
&lt;span class="nx">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/tags/&amp;#34;&lt;/span>
&lt;span class="nx">weight&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">110&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">menu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">main&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Posts&amp;#34;&lt;/span>
&lt;span class="nx">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/posts/&amp;#34;&lt;/span>
&lt;span class="nx">weight&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">120&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, lets add some logic to our theme&amp;rsquo;s &lt;code>theme/mytheme/partials/header.html&lt;/code>. You can replace the whole thing&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">nav&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar navbar-expand-lg navbar-light &amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-brand&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="na">.Site.Title&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-toggler&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span> &lt;span class="na">data-toggle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;collapse&amp;#34;&lt;/span> &lt;span class="na">data-target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#navbarSupportedContent&amp;#34;&lt;/span> &lt;span class="na">aria-controls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbarSupportedContent&amp;#34;&lt;/span> &lt;span class="na">aria-expanded&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;false&amp;#34;&lt;/span> &lt;span class="na">aria-label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Toggle navigation&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-toggler-icon&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;collapse navbar-collapse&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbarSupportedContent&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-nav ml-auto&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$currentPage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Menus.main&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">not&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">eq&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Identifier&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;tags&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbar-item &lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">or&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nx">$currentPage&lt;/span>&lt;span class="na">.IsMenuCurrent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nx">$currentPage&lt;/span>&lt;span class="na">.HasMenuCurrent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s"> active&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;nav-link&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;nav-item dropdown&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;nav-link dropdown-toggle&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbarDropdown&amp;#34;&lt;/span> &lt;span class="na">role&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span> &lt;span class="na">data-toggle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dropdown&amp;#34;&lt;/span> &lt;span class="na">aria-haspopup&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="na">aria-expanded&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;false&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dropdown-menu&amp;#34;&lt;/span> &lt;span class="na">aria-labelledby&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;navbarDropdown&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$name&lt;/span>&lt;span class="err">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$taxonomy&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$currentPage&lt;/span>&lt;span class="na">.Site.Taxonomies.tags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">with&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Site.GetPage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">printf&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;/tags/%s&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$name&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dropdown-item&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">nav&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We are checking to see if the menu item is tags, and if so look through the tags taxonomy to display the dropdown with all of the items. We need to go through some hoops to figure out exactly how to get the name and the url, but things are looking good now!&lt;/p>
&lt;h2 id="tag-list-page">Tag list page&lt;/h2>
&lt;p>If we look at the http://localhost:1313/tags we see that its showing the tags by date. Which doesn&amp;rsquo;t make sense. So lets create a list page for the tags. There are two types of things &amp;ndash; one is the list of tags, and one is the list of posts that for a specific tag. &lt;code>themes/mytheme/layouts/tag/list.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">humanize&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">eq&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Kind&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;taxonomyTerm&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Site.Taxonomies.tags.ByCount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row mt-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;d-none d-sm-block col-sm-2 mt-auto offset-sm-2 text-right&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span> Articles
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-body&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/tags&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$dateFormat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">default&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">index&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Params&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;date_format&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Scratch.Set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;lastYear&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Pages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$lastYear&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Scratch.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;lastYear&amp;#34;&lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row mt-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;d-none d-sm-block col-sm-2 mt-auto offset-sm-2 text-right&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">time&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;post-date&amp;#34;&lt;/span> &lt;span class="na">datetime&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;2006-01-02T15:04:05Z07:00&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">safeHTML&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">time&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ne&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$lastYear&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted mt-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Scratch.Set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;lastYear&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-body&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Draft&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>DRAFT: &lt;span class="cp">{{&lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We first look to see if we are on a the term page, and if so we get a list of tags based upon the count. He were list the number of posts per tag. If we are on the tag page itself, we use the same logic at the &lt;code>posts/list.html&lt;/code> page to show the articles for that tag by date.&lt;/p>
&lt;h2 id="adding-code-highlight">Adding code highlight&lt;/h2>
&lt;p>Hugo comes with pygments built in, so we are going to use that with a custom theme. Lets first generate the css and put it in our themes &lt;code>static&lt;/code> folder.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo gen chromastyles --style&lt;span class="o">=&lt;/span>tango &amp;gt; themes/mytheme/static/css/syntax.css
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And in config.toml add the following lines&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">pygmentsCodeFences&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="nx">pygmentsUseClasses&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, add a link to that stylesheet to &lt;code>themes/mytheme/layouts/partials/head.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/css/syntax.css&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="content-types-post">Content types: post&lt;/h2>
&lt;p>Since we created a post content type, lets add a different single page template for those to show additional post data. Create &lt;code>themes/mytheme/layouts/posts/single.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mt-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.Subtitle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;font-weight-light font-italic mb-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.Subtitle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted mt-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Permalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Published &lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;January 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.tags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;/tags/&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">urlize&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>#&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">article&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;article mt-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Content&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">article&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">or&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bg-light py-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Read next&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-md-6 text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
Previous Post:
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Prev.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Prev.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-md-6 text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
Next Post:
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Next.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Next.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$related&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.RegularPages.Related&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">first&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">with&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$related&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container mt-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>See also&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-md mb-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead mb-0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-body&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.Subtitle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead font-italic mb-0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.Subtitle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;font-weight-light mt-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Summary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;btn btn-primary&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Read more&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here we are adding some metadata to the top of the page, showing the subtitle if it&amp;rsquo;s set and putting in the published date and some tags. We are tweaking the layout a bit using the bootstrap utility classes to add some more spacing. Then the body content which we wrap it inside of an article.&lt;/p>
&lt;p>We are showing a few other features that hugo gives us. One is the &lt;code>Next&lt;/code> and &lt;code>Prev&lt;/code> posts in the section, which is by date and content type. Another is the related pages to this particular page.&lt;/p>
&lt;h3 id="adding-some-style-tweaks-to-headhtml">Adding some style tweaks to head.html&lt;/h3>
&lt;p>Here&amp;rsquo;s some small tweaks to the css to make things a little bit more readable on larger screens. We&amp;rsquo;ll get into really expanding on bootstrap later.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">article&lt;/span> &lt;span class="nt">p&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">article&lt;/span> &lt;span class="nt">ul&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">article&lt;/span> &lt;span class="nt">ol&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">article&lt;/span> &lt;span class="nt">blockquote&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">max-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">45&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">article&lt;/span> &lt;span class="nt">p&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">first-child&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.25&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-weight&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">max-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">36&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c">/* 45 / 1.25 */&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="post-list-view">Post list view&lt;/h2>
&lt;p>Adding a special list view for posts pages in &lt;code>themes/mytheme/layouts/posts/list.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$dateFormat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">default&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">index&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Params&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;date_format&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Scratch.Set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;lastYear&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">humanize&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Pages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$lastYear&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Scratch.Get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;lastYear&amp;#34;&lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row mt-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;d-none d-sm-block col-sm-2 mt-auto offset-sm-2 text-right&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">time&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;post-date&amp;#34;&lt;/span> &lt;span class="na">datetime&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;2006-01-02T15:04:05Z07:00&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">safeHTML&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">time&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ne&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$lastYear&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted mt-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">$.Scratch.Set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;lastYear&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$year&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-body&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Draft&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>DRAFT: &lt;span class="cp">{{&lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This uses the &lt;code>$.Scratch&lt;/code> object to help keep track of the last year that was shown. When we see a year for the first time, we show a small paragraph with muted text with the year to help split things out.&lt;/p>
&lt;h2 id="another-content-type-photos">Another content type: Photos&lt;/h2>
&lt;p>Lets add something different &amp;ndash; a photo album. We&amp;rsquo;ll look at how different content types work, and some image processing options. First thing we need to do is to grab some photos and create a few albums. I&amp;rsquo;ll let you sort that out. But create a couple folders under &lt;code>content/photos&lt;/code> and then an &lt;code>index.md&lt;/code> file in each of them. Here&amp;rsquo;s what the directory structure should look like:&lt;/p>
&lt;pre>&lt;code>content/photos
├── bear_mountain
│   ├── 20181006_131733.jpg
│   ├── 20181006_131749.jpg
│   ├── 20181006_131807.jpg
│   ├── 20181006_133024.jpg
│   ├── 20181006_135256.jpg
│   └── index.md
└── fall2018
├── 20181020_121433.jpg
├── 20181020_153242.jpg
├── 20181021_135744.jpg
└── index.md
&lt;/code>&lt;/pre>&lt;p>The &lt;code>index.md&lt;/code> files should have front matter with at least a title and a data, like this for example:&lt;/p>
&lt;pre>&lt;code>---
title: &amp;quot;Trip to bear mountain&amp;quot;
date: &amp;quot;2018-10-06&amp;quot;
---
This was our trip to bear mountain, super fun.
&lt;/code>&lt;/pre>&lt;p>Now if you go to http://localhost:1313 you should see the normal list of pages that is generated with the default list template. Let&amp;rsquo;s now create a list template for our new photos type in &lt;code>themes/mytheme/layouts/posts/list.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">humanize&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Pages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$images&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Resources.ByType&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;image&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">index&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$images&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="na">.Fill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;512x360 smart&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-md-6 col-lg-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;card-img-top&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;card-body&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h5&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;card-title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h5&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h6&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;card-subtitle mb-2 text-muted&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Jan 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h6&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;card-text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Summary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;btn btn-primary&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>See all&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We are iterating through all of the pages, and then looking for the first image page resource. Page resources are children of the page, and we are getting the 0 index of it. We then use &lt;a href="https://gohugo.io/content-management/image-processing/#smart-cropping-of-images">hugo smart image cropping&lt;/a> features to resize that image so it fits into the card. When you generate the site you will see a new &lt;code>resources&lt;/code> folder that is part of the root, this is done automatically for you.&lt;/p>
&lt;p>Now lets add the page for the gallery itself, in &lt;code>themes/mytheme/layouts/photos/single.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Content&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Resources.ByType&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;image&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Fit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;800x600&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-md-6 col-lg-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$image&lt;/span>&lt;span class="na">.RelPermalink&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;img-fluid&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This resizes the images to fit with in an 800x600 px box and then throws them on a grid. This is not a great looking gallery but shows a little bit of hugos image processing abilities as well how you can use different layouts for different page types.&lt;/p>
&lt;p>Don&amp;rsquo;t forget to edit the &lt;code>config.toml&lt;/code> if you want to add a link to photos in the header!&lt;/p>
&lt;h2 id="cleaning-up-index-page">Cleaning up index page&lt;/h2>
&lt;p>Lets cleanup the homepage. We are going to add recent posts and start filling in the jumbotron based upon site content. In the main content part of the site, we are going to create &lt;code>content/_index.md&lt;/code> This file will generate the &lt;code>.Content&lt;/code> that is displayed as well as showing an example of how to pass variables from the front matter into the template itself.&lt;/p>
&lt;pre>&lt;code>---
title: &amp;quot;This is a title&amp;quot;
recentposts: 10
---
Here is a bunch of amazing stuff about what it is that I'd like to see. It's super amazing.
&lt;/code>&lt;/pre>&lt;p>Now for the template in &lt;code>themes/mytheme/layouts/index.html&lt;/code>. We first figure out if the &lt;code>recentposts&lt;/code> parameter is set, and if not we default to 5. We are also going to only show pages that are of type &lt;code>posts&lt;/code>. If you want to show all recent entries on your site, replace &lt;code>(where .Pages &amp;quot;Type&amp;quot; &amp;quot;posts&amp;quot;)&lt;/code> with simply &lt;code>.Pages&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">define&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;jumbotron&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display-4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Title&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lead&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Params.Description&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Content&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$recentposts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">:=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.recentposts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$recentposts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.recentposts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Recent posts&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">first&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">$recentposts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nx">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Pages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Type&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;posts&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mt-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-body&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.Subtitle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h3&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;font-weight-light font-italic mb-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.Subtitle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">markdownify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted mt-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Permalink&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Published &lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Date.Format&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;January 2, 2006&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Params.tags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;/tags/&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">urlize&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>#&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">article&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;article&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Summary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">article&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-muted&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Reading time: about &lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.ReadingTime&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span> minutes&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;btn btn-primary&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Read more...&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="bootstrap-advanced-theming">Bootstrap advanced theming&lt;/h2>
&lt;p>Bootstrap is much more interesting when you start using the SASS version of it and are able to tweak the generated code. Let&amp;rsquo;s look at how we&amp;rsquo;d get this into our pipeline. This requires that you have &lt;code>npm&lt;/code> or &lt;code>yarn&lt;/code> installed.&lt;/p>
&lt;p>Create &lt;code>themes/mytheme/package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mytheme&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;build&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;node-sass --include-path node_modules theme.scss static/css/theme.css&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;watch&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;node-sass --watch --include-path node_modules theme.scss static/css/theme.css&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;dependencies&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bootstrap&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;^4.1.3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;node-sass&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;^4.9.4&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then run &lt;code>npm install&lt;/code>. Next, lets create a simple &lt;code>themes/mytheme/theme.scss&lt;/code> file that tweaks some base bootstrap settings:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nv">$body-bg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#fefefe&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$body-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#111&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$theme-colors&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s2">&amp;#34;primary&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#6f42c1&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="s2">&amp;#34;danger&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#ff4136&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="nv">$enable-rounded&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$enable-shadows&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$enable-gradients&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">@import&lt;/span> &lt;span class="s2">&amp;#34;bootstrap/scss/bootstrap&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>npm watch&lt;/code> to look for changes and generate the file as needed.&lt;/p>
&lt;p>Then in &lt;code>themes/mytheme/layouts/partials/head.html&lt;/code> replace the bootstrap that&amp;rsquo;s in the CDN with the version that we just generated:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/css/theme.css&amp;#34;&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://code.jquery.com/jquery-3.3.1.slim.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now your site should look slightly different! I&amp;rsquo;m not going to go into all of the things that can be tweaked but its really worth looking into what you can do with bootstrap to make it look like you want.&lt;/p>
&lt;h2 id="overriding-a-theme-file-on-the-local-site">Overriding a theme file on the local site&lt;/h2>
&lt;p>When you think about how you want to break things into partials you should consider how the end site might want to override things. One way is to pass in variables inside of the main site &lt;code>config.toml&lt;/code> that can switch features on and off, but another way is to override the partials themselves.&lt;/p>
&lt;p>The bootstrap header is such a recognizable thing that people might want something all together different, so lets see how we can change that. Create &lt;code>layouts/partials/header.html&lt;/code> in the top level site directory:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">nav&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container my-5&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pt-5 display-3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-dark&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">range&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Site.Menus.main&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-dark h4 mr-3&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.URL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nx">relURL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.Name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">nav&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now when you refresh the recognizable bootstrap header is gone and a big honking version of your site title is there in place of it! It&amp;rsquo;s clean.&lt;/p>
&lt;h2 id="internal-templates-of-note">Internal templates of Note&lt;/h2>
&lt;p>Hugo has a bunch of &lt;a href="https://gohugo.io/templates/internal/">internal templates&lt;/a> that can make things easier. Lets add a few, starting with google analytics.&lt;/p>
&lt;p>Inside of &lt;code>config.toml&lt;/code> set your GA id:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">googleAnalytics&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;UA-xxxxx-1&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and then in &lt;code>head.html&lt;/code> adding&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">template&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;_internal/google_analytics_async.html&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also open graph:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">template&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;_internal/opengraph.html&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And twitter cards. For this you need to add your twitter handle to &lt;code>config.toml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[&lt;/span>&lt;span class="nx">Social&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">twitter&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;wschenk&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-go-html-template" data-lang="go-html-template">&lt;span class="cp">{{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">template&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;_internal/twitter_cards.html&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="na">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Note&lt;/em> These interns use a different concept of &lt;code>.Site.Authors&lt;/code> which I don&amp;rsquo;t understand so it may be easier just to pull out the code as a partial.&lt;/p>
&lt;h2 id="summary--recap">Summary &amp;amp; Recap&lt;/h2>
&lt;ol>
&lt;li>Themes are composed of &lt;code>layouts&lt;/code>, &lt;code>partials&lt;/code>, &lt;code>single&lt;/code> page templates, &lt;code>list&lt;/code> templates, and &lt;code>blocks&lt;/code>.&lt;/li>
&lt;li>&lt;code>layouts&lt;/code> &lt;code>blocks&lt;/code> and &lt;code>partials&lt;/code> define the structure of templates.&lt;/li>
&lt;li>&lt;code>single&lt;/code> and &lt;code>list&lt;/code> templates are iterating over a collection of elements.&lt;/li>
&lt;li>There are different page types which can have their own &lt;code>single&lt;/code> and &lt;code>list&lt;/code> elements.&lt;/li>
&lt;li>These can all be overridden by the site using a file if there&amp;rsquo;s no provision for passing in a variable.&lt;/li>
&lt;li>Pages can have subelements that you can query and pass over.&lt;/li>
&lt;li>Pages have different representations.&lt;/li>
&lt;li>You&amp;rsquo;ll need to learn a few hugo variables to get around with things.&lt;/li>
&lt;li>&lt;code>range&lt;/code> is how you loop over things.&lt;/li>
&lt;li>Hugo is pretty fast.&lt;/li>
&lt;/ol></description></item><item><title>Living with a Chromebook</title><link>https://willschenk.com/articles/2017/living_with_a_chromebook/</link><pubDate>Fri, 22 Dec 2017 12:37:08 +0000</pubDate><guid>https://willschenk.com/articles/2017/living_with_a_chromebook/</guid><description>&lt;p>My experiment with the Chromebook has continued longer than I really expected. This machine is fun! Everything is so much faster and less cluttered, and I’m able to focus more.&lt;/p>
&lt;img src="living_with_a_chromebook_1.png" class="img-fluid"/>
&lt;p>This machine is something in between a laptop and a cellphone. Like a cellphone, it starts quickly, so dipping in and out is easy. Its just easy to grab the Chromebook to check something real quick, send out an email, whatever in the same way that unlocking your phone is easy. There’s also less distractions than a regular laptop since the UI basically assumes on big window that’s more or less full screen, again like a cell phone. No menu bar hovering over you, no desktop peeking out from behind, just one focused on one app.&lt;/p>
&lt;p>But it’s got a lot of advantages of a laptop. The keyboard is nice so entering in text is obviously way easier if that’s what you do. (I do a lot of coding and a lot of email, so I’m bunching these there buttons all the time.) The touch screen is actually very useful, I can’t believe Apple has blundered so far by resisting that. (I’m ignoring whatever it is that the touchbar is.) Flipping the thing over as a tablet is great if you want to do some long form reading, or consuming videos or whatever. My iPad is now fully dedicated to YouTube Kids and I haven’t touched it in months.&lt;/p>
&lt;p>So, on the plus side, it helps with focus, it’s much less cluttered, and there’s a whole lot less ceremony than there is on a laptop.&lt;/p>
&lt;p>My development career started out in the tail end of the minis and the beginning of the workstation days. These skills of working on the command line and transparently connecting to remote systems come into play here. Termux is still an amazing little linux environment to build software in, but you are back into the world of VIM or Emacs. This is a step back from the IDE days, so that’s a minus for sure. However I was never much of an IDE user so personally that isn’t a problem.&lt;/p>
&lt;p>Like cell phone apps everything lives in a sandboxed environment, so getting things to work together on the machine itself is a little… weird. Combined with the fact that Chromebook’s security features make the filesystem a little… weird… it’s a situation where you need to work around the constraints. But if you can live with your tmux to manage your terminal settings and, if you need something more, remote desktop off this machine onto a remote machine, then it does basically all you need.&lt;/p>
&lt;p>If you want to take the plunge, take a look at my other posts on it, &lt;a href="./articles/2017/writing_code_on_a_chromebook/">Writing Code on a Chrome book&lt;/a>, and &lt;a href="./articles/2017/more_lessons_learned_working_on_a_chromebook">More lessons learned&lt;/a>. Here are some usability things that I’v&lt;/p>
&lt;p>Full screen webpages have much fewer distractions. Pin them to the shelf so that you magically have an “app” for them. (And if they are PWAs, then they actually work off line also.&lt;/p>
&lt;img src="living_with_a_chromebook_2.png" class="img-fluid">
&lt;p>One charger to rule them all (USB-C) is actually really really nice. And they are much smaller than the big bricks. It seems silly, but getting rid of all the stupid chargers you need to carry around makes things clearly better.&lt;/p>
&lt;p>&lt;code>alt--&lt;/code> minimizes the current window&lt;/p>
&lt;p>Close and reopen tabs often, get rid of the clutter.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://support.google.com/chromebook/answer/1047367?hl=en" title="">https://support.google.com/chromebook/answer/1047367?hl=en&lt;/a>&lt;/li>
&lt;li>two fingers right click&lt;/li>
&lt;li>three fingers swipe goes from tab to tab&lt;/li>
&lt;li>alt-tab switches between windows&lt;/li>
&lt;/ul>
&lt;p>tmux and vi is the easiest way to keep going, especially since you lose your ssh connection to termux when reopening the laptop. much easier to do &lt;code>tmux a&lt;/code> and get everything back. &lt;a href="https://medium.com/@peterxjang/a-minimalist-guide-to-tmux-13675fb160fa" title="">https://medium.com/@peterxjang/a-minimalist-guide-to-tmux-13675fb160fa&lt;/a> is a good write up.&lt;/p>
&lt;p>&lt;code>tmux a&lt;/code>&lt;/p>
&lt;p>Add Secure Shell to your launch bar and have it open as window. Then you can use CNTL-W to move around in VI &lt;a href="https://chromium.googlesource.com/apps/libapps/+/master/nassh/doc/FAQ.md#How-do-I-send-Ctrl_W_Ctrl_N-or-Ctrl_T-to-the-terminal" title="">https://chromium.googlesource.com/apps/libapps/+/master/nassh/doc/FAQ.md#How-do-I-send-Ctrl_W_Ctrl_N-or-Ctrl_T-to-the-terminal&lt;/a>&lt;/p>
&lt;img src='living_with_a_chromebook_3.png' class="img-fluid"/>
&lt;p>But more often than not now, I just run everything out of termux directly and it’s simpler.&lt;/p></description></item><item><title>Getting firebase and grpc working under termux</title><link>https://willschenk.com/articles/2017/getting_firebase_and_grpc_working_under_termux/</link><pubDate>Sun, 10 Dec 2017 17:36:17 +0000</pubDate><guid>https://willschenk.com/articles/2017/getting_firebase_and_grpc_working_under_termux/</guid><description>&lt;p>&lt;code>firebase&lt;/code> depends on &lt;code>grpc&lt;/code>, which isn’t set to build right on the Chromebook. This is because &lt;code>node-pre-gyp&lt;/code>, which is used to download precompiled binaries, is not setup correctly. In then uses &lt;code>node-gyp&lt;/code> to compile the C++ bindings directly, which is also not setup correctly.&lt;/p>
&lt;p>We are going to adjust the settings of node-gyp to make it compile things right under &lt;code>termux&lt;/code>, and then we are going to tweak the &lt;code>grpc&lt;/code> package itself in our local cache to make it build correctly.&lt;/p>
&lt;p>This took way to long to sort out.&lt;/p>
&lt;h3 id="installing-thebasics">Installing the Basics&lt;/h3>
&lt;ol>
&lt;li>&lt;code>pkg install nodejs python2 make clang pkg-config&lt;/code>&lt;/li>
&lt;li>&lt;code>termux-chroot&lt;/code>&lt;/li>
&lt;li>&lt;code>cd /bin; ln -s python2 python&lt;/code>&lt;/li>
&lt;li>&lt;code>mkdir /tmp/t; cd /tmp/t&lt;/code>&lt;/li>
&lt;li>&lt;code>npm install -g yarn&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="start-the-grpcinstall">Start the grpc install&lt;/h3>
&lt;ol>
&lt;li>&lt;code>yarn add grpc&lt;/code>&lt;/li>
&lt;li>This should take a long time but then fail because &lt;code>-zdefs&lt;/code> is not a valid option.&lt;/li>
&lt;/ol>
&lt;h3 id="update-node-gypsettings">Update node-gyp settings&lt;/h3>
&lt;p>First we update node-gyp, as &lt;a href="http://blog.akehir.com/2017/05/building-node-sass-libsass-python.html" title="">talked about here&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>&lt;code>cd ~/. node-gyp/8.9.3/include/node&lt;/code> (or whatever version you have)&lt;/li>
&lt;li>Update &lt;code>common.gpyi&lt;/code> to change references of &lt;code>-fPIE&lt;/code> to &lt;code>-fPIC&lt;/code>, and get rid of &lt;code>-pie&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="update-the-grpc-npm-package-in-the-yarncache">Update the grpc npm package in the yarn cache&lt;/h3>
&lt;ol>
&lt;li>&lt;code>cd ~/.cache/yarn/v1/npm-grpc&lt;/code> (tab tab to find the actual version)&lt;/li>
&lt;li>open up &lt;code>bindings.gyp&lt;/code> and remove the line ‘&lt;code>-zdefs&lt;/code>’ which for me is line 941&lt;/li>
&lt;li>Also in &lt;code>deps/grpc/bindings.gyp&lt;/code> remove &lt;code>-zdefs&lt;/code> again. Not sure where this is coming from but &lt;code>clang&lt;/code> doesn’t like it.&lt;/li>
&lt;/ol>
&lt;p>Note that every time there’s another version of grpc released, you’ll need to update that version in your yarn cache!&lt;/p>
&lt;h3 id="try-to-addagain">Try to add again&lt;/h3>
&lt;ol>
&lt;li>&lt;code>cd /tmp/t&lt;/code>&lt;/li>
&lt;li>&lt;code>rm -rf node_modules/grpc&lt;/code>&lt;/li>
&lt;li>&lt;code>yarn add grpc&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>And there you go. Does anyone have a better fix that they could share?&lt;/p></description></item><item><title>Authenticated routes using react-router</title><link>https://willschenk.com/articles/2017/authenticated_routes_using_react_router/</link><pubDate>Tue, 05 Dec 2017 22:19:56 +0000</pubDate><guid>https://willschenk.com/articles/2017/authenticated_routes_using_react_router/</guid><description>&lt;p>Here&amp;rsquo;s a simple walk through on how to use authenticated routes with react-router.&lt;/p>
&lt;ol>
&lt;li>&lt;code>create-react-app route-test&lt;/code>&lt;/li>
&lt;li>&lt;code>cd route-test&lt;/code>&lt;/li>
&lt;li>&lt;code>yarn add react-router-dom&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>And for &lt;code>src/App.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">BrowserRouter&lt;/span> &lt;span class="nx">as&lt;/span> &lt;span class="nx">Router&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Route&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Link&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Switch&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-router-dom&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Nav&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">Link&lt;/span> &lt;span class="na">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Home&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Link&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">Link&lt;/span> &lt;span class="na">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;/about&amp;#39;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">About&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Link&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">Link&lt;/span> &lt;span class="na">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;/session&amp;#39;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Session&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Link&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">Link&lt;/span> &lt;span class="na">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;/secret&amp;#39;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Secret&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Link&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Welcome&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Welcome&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">This&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">some&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">About&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">About&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Sure&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">stuff&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">This&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">secret&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Sorry&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">not&lt;/span> &lt;span class="nx">everyone&lt;/span> &lt;span class="nx">can&lt;/span> &lt;span class="nx">see&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">Click&lt;/span> &lt;span class="nx">me&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">login&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Router&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Nav&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Logged&lt;/span> &lt;span class="k">in&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Switch&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Route&lt;/span> &lt;span class="na">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/secret&amp;#34;&lt;/span> &lt;span class="na">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Secret&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Route&lt;/span> &lt;span class="na">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/about&amp;#34;&lt;/span> &lt;span class="na">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">About&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Route&lt;/span> &lt;span class="na">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/session&amp;#34;&lt;/span> &lt;span class="na">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Session&lt;/span> &lt;span class="na">login&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Route&lt;/span> &lt;span class="na">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Welcome&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Switch&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Router&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>We are using &lt;a href="https://hackernoon.com/react-stateless-functional-components-nine-wins-you-might-have-overlooked-997b0d933dbc" title="">Stateless Functional Components&lt;/a> to model out our nav bar, and a few pages.&lt;/li>
&lt;li>&lt;code>Link&lt;/code> is what we use to create a link to something that we define in our router. This needs to be a child of a &lt;code>Router&lt;/code>, so our &lt;code>Nav&lt;/code> component must be a child of that.&lt;/li>
&lt;li>&lt;code>Switch&lt;/code> is where we are putting out routes to keep everything nice and tidy.&lt;/li>
&lt;li>We have a very simple login system here, where if you go to &lt;code>/session&lt;/code> and push a button, you are considered logged in.&lt;/li>
&lt;/ul>
&lt;h3 id="secret-isnt-sosecret">Secret isn’t so secret&lt;/h3>
&lt;p>Lets create an authenticated component. The idea is that if the user is not authenticated, we will redirect to &lt;code>/session&lt;/code> which will show whatever login form we have.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Route&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Redirect&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-router-dom&amp;#39;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">AuthenticatedRoute&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">authed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">component&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">rest&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">authed&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Route&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="na">...rest&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">render&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{(&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Component&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="na">...props&lt;/span> &lt;span class="p">}/&amp;gt;}/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Route&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="na">...rest&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">render&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{(&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Redirect&lt;/span> &lt;span class="na">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{{&lt;/span>&lt;span class="nx">pathname&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/session&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">}}}&lt;/span> &lt;span class="p">/&amp;gt;}/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">AuthenticatedRoute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we just need to update the switch to use the new &lt;code>AuthenticatedRoute&lt;/code>. We are passing in an &lt;code>authed&lt;/code> property that the main &lt;code>App&lt;/code> component is maintaining.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">AuthenticatedRoute&lt;/span> &lt;span class="na">authed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">”/&lt;/span>&lt;span class="na">secret&lt;/span>&lt;span class="err">”&lt;/span> &lt;span class="na">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Secret&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to update the &lt;code>Session&lt;/code> component to handle the login. In the case that we aren’t logged in, we show a button that calls the &lt;code>login&lt;/code> method on the container component. This will change the login state and trigger a rerender of the components. Once that happens, &lt;code>authed&lt;/code> will be true so we look inside of the &lt;code>location&lt;/code> property to see if there was a protected route stored in the router history state. If so, we redirect back to that. Otherwise, we redirect back to home.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">authed&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">authed&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">location&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">pathname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">l&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">from&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">pathname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pathname&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Redirect&lt;/span> &lt;span class="na">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">pathname&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">()}}&amp;gt;&lt;/span>&lt;span class="nx">Click&lt;/span> &lt;span class="nx">me&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And finally, we need to wire all this up in the main routes.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Route&lt;/span> &lt;span class="na">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/session&amp;#34;&lt;/span> &lt;span class="na">render&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{(&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Session&lt;/span> &lt;span class="na">location&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">location&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">login&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">authed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authed&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span> &lt;span class="p">}/&amp;gt;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here we aren’t just passing in &lt;code>component={Session}&lt;/code> but rather a function that gets wired up to a number of local callbacks. This is mainly so that the &lt;code>login&lt;/code> function can call &lt;code>setState&lt;/code> and then trigger the render. In a case where this would be something that came from a server, you could use the normal asynchronous methods and not need to force this directly.&lt;/p></description></item><item><title>Styling and theming with material-ui: React + Material Design</title><link>https://willschenk.com/articles/2017/styling_and_theming_with_material_ui_react__material_design/</link><pubDate>Mon, 04 Dec 2017 19:35:07 +0000</pubDate><guid>https://willschenk.com/articles/2017/styling_and_theming_with_material_ui_react__material_design/</guid><description>&lt;p>We’ve looked at &lt;a href="./articles/2017/styling_and_theming_with_rmwc_react__material_design/">building and styling with rmwc&lt;/a>, now lets look a the king of the React Material libraries, &lt;a href="https://material-ui-next.com/">Material-UI&lt;/a>!&lt;/p>
&lt;p>The implementation strategy here is different — instead of including a generated CSS file that applies to all of the elements, each component includes the CSS that it needs in an isolated way. &lt;code>import Button from ‘material-ui/Button’;&lt;/code> will include all of the necessary CSS to render that element. This is done with webpack basically. If we want to style it in a special way, we’ll need to put style attributes on it directly or use another react-based way of doing this, keeping the styling, html, and JS tightly coupled. Which actually makes a lot of sense…&lt;/p>
&lt;p>The basic way that material-ui does styling is with the &lt;code>withStyles&lt;/code> higher order component. The complete system is &lt;a href="https://material-ui-next.com/customization/overrides/" title="">explained in the documentation&lt;/a>, but since I’m learning React as well I didn’t full understand how it worked at first. You can treat it as boilerplate code for now, but lets first get started rebuilding the same site as we did last time and seeing what looks like.&lt;/p>
&lt;h3 id="create-theapp">Create the app&lt;/h3>
&lt;p>First thing we do is to add &lt;code>material-ui@next&lt;/code> and our favorite WebFont loader.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ yarn add material-ui@next material-ui-icons webfontloader
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then we load the Roboto font from the Google mothership. The Material Icons will come in as part of the npm package above.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">ReactDOM&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-dom&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;./index.css&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./App&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">registerServiceWorker&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./registerServiceWorker&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">WebFont&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;webfontloader&amp;#39;&lt;/span>
&lt;span class="nx">WebFont&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">load&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">google&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">families&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Roboto:300,500,700&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="nx">ReactDOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">render&lt;/span>&lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nt">App&lt;/span> &lt;span class="p">/&amp;gt;,&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="nx">registerServiceWorker&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets build out the nav bar component. This is going to look at lot more complicated than the &lt;code>rmwc&lt;/code> version! On the other hand, absolutely everything you need to understand what is going to be displayed is self-contained in this file.&lt;/p>
&lt;p>Lets walk through all the differences.&lt;/p>
&lt;ol>
&lt;li>The first thing you’ll notice is that each of the React components are in their own subpackage, which means that you’ll have a lot more import lines in your code&lt;/li>
&lt;li>The React Bits book is pretty awesome, and they have a section on &lt;a href="https://vasanthk.gitbooks.io/react-bits/styling/08.HOC-for-styling.html" title="">using Higher Order Components for Styling&lt;/a>, which is basically what we’re doing here.&lt;/li>
&lt;li>&lt;code>withStyles&lt;/code> is the higher order component that you use to merge in the styles. We create a function that accepts a &lt;code>theme&lt;/code> object, and then we set our special CSS in there. At the bottom of the file we &lt;code>export default withStyles(styles)(Navbar)&lt;/code> to expose our code to the rest of the app. What this does is merge our style overrides with the overall theme, and then lets us access the generated class name when we do the render.&lt;/li>
&lt;li>&lt;code>const {classes} = this.props&lt;/code> is how we pull those classes out. They can then be referenced in our components using, for example, &lt;code>&amp;lt;IconButton className={classes.menuButton}/&amp;gt;&lt;/code>. We start with our style definitions, which get passes a &lt;code>theme&lt;/code> object, and it gets wrapped onto the properties of our component using &lt;code>withStyles.&lt;/code> Clever, but not that simple.&lt;/li>
&lt;li>I’m setting the &lt;code>elevation={0}&lt;/code> of &lt;code>AppBar&lt;/code> to make it look the same as the other example.&lt;/li>
&lt;li>Each of the MaterialIcons have their own component in the &lt;code>material-ui-icons&lt;/code> package.&lt;/li>
&lt;/ol>
&lt;p>&lt;code>Navbar.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">PropTypes&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;prop-types&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">withStyles&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/styles&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">AppBar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/AppBar&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Toolbar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Toolbar&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Typography&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Typography&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">IconButton&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/IconButton&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">MenuIcon&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui-icons/Menu&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">AccountCircle&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui-icons/AccountCircle&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">styles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">theme&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">root&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">marginTop&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">unit&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;100%&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">flex&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">flex&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">menuButton&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">marginLeft&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">marginRight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">AppBar&lt;/span> &lt;span class="na">position&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;static&amp;#34;&lt;/span> &lt;span class="na">elevation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Toolbar&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">IconButton&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">menuButton&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;contrast&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">MenuIcon&lt;/span>&lt;span class="p">/&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">IconButton&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Typography&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">flex&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;title&amp;#34;&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;inherit&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Material&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">UI&lt;/span> &lt;span class="nx">Demo&lt;/span> &lt;span class="nx">App&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Typography&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">IconButton&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;contrast&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">AccountCircle&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">IconButton&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Toolbar&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">AppBar&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">Navbar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">propTypes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">classes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">PropTypes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isRequired&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">withStyles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">Navbar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>While &lt;code>material-ui&lt;/code> doesn’t use the &lt;a href="https://github.com/acdlite/recompose">&lt;code>recompose&lt;/code>&lt;/a> library, I found reading through it’s docs very helpful in sorting out what &lt;code>withStyles&lt;/code> actually is trying to accomplish.&lt;/p>
&lt;p>Whew.&lt;/p>
&lt;p>Lets do the login form now, and we’ll do something similar with a HOC. In this case we’ll use &lt;code>withMobileDialog&lt;/code> which will pass in the fullscreen property as true to our component if the screen is small. For example, on a mobile device. In that case will we show a full screen window. This is your &lt;code>src/login.js&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Button&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Button&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">TextField&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/TextField&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Dialog&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">DialogActions&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">DialogContent&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">DialogContentText&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">DialogTitle&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">withMobileDialog&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Dialog&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Login&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Dialog&lt;/span>
&lt;span class="na">open&lt;/span>
&lt;span class="na">onRequestClose&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleLogin&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">fullScreen&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fullScreen&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">DialogTitle&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Subscribe&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">DialogTitle&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">DialogContent&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">DialogContentText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">To&lt;/span> &lt;span class="nx">subscribe&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="k">this&lt;/span> &lt;span class="nx">website&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">please&lt;/span> &lt;span class="nx">enter&lt;/span> &lt;span class="nx">your&lt;/span> &lt;span class="nx">email&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="nx">here&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="nx">We&lt;/span> &lt;span class="nx">will&lt;/span> &lt;span class="nx">send&lt;/span>
&lt;span class="nx">updates&lt;/span> &lt;span class="nx">occationally&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">DialogContentText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">TextField&lt;/span>
&lt;span class="na">autoFocus&lt;/span>
&lt;span class="na">margin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dense&amp;#34;&lt;/span>
&lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>
&lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Email Address&amp;#34;&lt;/span>
&lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;email&amp;#34;&lt;/span>
&lt;span class="na">fullWidth&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">DialogContent&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">DialogActions&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleLogin&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Cancel&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleLogin&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Subscribe&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">DialogActions&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Dialog&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">withMobileDialog&lt;/span>&lt;span class="p">()(&lt;/span>&lt;span class="nx">Login&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let us now recreate the &lt;code>drawer.js&lt;/code>. (I’m using different Items in the drawer list since it’s just for example anyway, and this should give you a sense of how things are done.)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Drawer&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Drawer&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">List&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">ListItem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ListItemIcon&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ListItemText&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/List&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Divider&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Divider&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">InboxIcon&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui-icons/Inbox&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">MyDrawer&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Drawer&lt;/span>
&lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">open&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onRequestClose&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;persistent&amp;#34;&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>
&lt;span class="na">tabIndex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">role&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span>
&lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onKeyDown&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">List&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItem&lt;/span> &lt;span class="na">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItemIcon&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">InboxIcon&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItemIcon&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItemText&lt;/span> &lt;span class="na">primary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Inbox&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Divider&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItem&lt;/span> &lt;span class="na">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItemIcon&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">InboxIcon&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItemIcon&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItemText&lt;/span> &lt;span class="na">primary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Something Else&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">List&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Drawer&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">MyDrawer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now that we have the drawer in place, lets now build a simple little feed to start testing things on. I’m trying to recreate the same example that we did before, so I have two components defined in this class. This is for demo purposes only, and doesn’t really make sense.&lt;/p>
&lt;ol>
&lt;li>There’s some &lt;code>css&lt;/code> to get through in this class, but on the other hand, it’s all in the same place. For simple components or projects this is a pain. I think for larger projects that having these things isolated so that everything you need to understand about a specific component is in one place is better. This file should be split into at least 4 probably: &lt;code>feed.js&lt;/code>, &lt;code>feed.css.js&lt;/code>, &lt;code>feed_item.js&lt;/code>, and &lt;code>feed_item.css.js&lt;/code>.&lt;/li>
&lt;li>I’m wrapping &lt;code>FeedItem&lt;/code> with &lt;code>withStyles&lt;/code> here to make it more explicit what the &lt;code>withStyles&lt;/code> does. Alteratively, we could pass in the class name on &lt;code>&amp;lt;FeedItem className={classes.feedItem}/&amp;gt;&lt;/code> inside of &lt;code>FeedItem&lt;/code> itself, but this makes it more explicit that you are only dealing with styled components.&lt;/li>
&lt;li>Flexbox is pretty amazing once you get a hang of it.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">
&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">withStyles&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/styles&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Paper&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Paper&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Button&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/Button&amp;#39;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">styles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">theme&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">feed&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;100%&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;flex&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">flexDirection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;column&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">alignItems&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;center&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">feedItem&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">marginTop&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;15px&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;100%&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;5px&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">maxWidth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;800px&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">buttons&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;flex&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">alignItems&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;center&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">justifyContent&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;space-around&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">FeedItem&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">elevation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Paper&lt;/span>
&lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">feedItem&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">elevation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">elevation&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onMouseOver&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">elevation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)}&lt;/span>
&lt;span class="na">onMouseOut&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">elevation&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Im&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">feed&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Lots&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">fun&lt;/span> &lt;span class="nx">here&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">buttons&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">raised&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onClick&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">Primary&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">raised&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;accent&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onClick&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">Secondary&lt;/span> &lt;span class="nx">Button&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Paper&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">StyledFeedItem&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">withStyles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">FeedItem&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Feed&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">feed&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">StyledFeedItem&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">StyledFeedItem&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">StyledFeedItem&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTheme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">withStyles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">Feed&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And finally, lets update the &lt;code>App.js&lt;/code> to wrap it all together.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">withStyles&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/styles&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Drawer&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./drawer&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./navbar&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Login&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./login&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Feed&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./feed_basic&amp;#39;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">drawerWidth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">216&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">styles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">theme&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">narrowContainer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`calc(100% - &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">drawerWidth&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px)`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">marginLeft&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">drawerWidth&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">transition&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transitions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;margin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;width&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">easing&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transitions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">easing&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">easeOut&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">duration&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transitions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">duration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">enteringScreen&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">drawer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">toggleDrawer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">drawer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">toggleLogin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Login&lt;/span> &lt;span class="na">toggleLogin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleLogin&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Drawer&lt;/span> &lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">toggleDrawer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">narrowContainer&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span> &lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">toggleDrawer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">login&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleLogin&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Feed&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">withStyles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">App&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>One thing is strange with this is that I’m handling the opening/closing CSS logic inside of the main container. If I wasn’t trying to follow the same structure as the last example, I would split this out into a Sidebar/Main component that figured out the CSS logic so it wouldn’t polute this page.&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>calc(100% — ${drawerWidth}px)&lt;/code> is pretty amazing&lt;/p>
&lt;p>And this should look familiar!&lt;/p>
&lt;img src='styling_and_theming_with_material_ui_react__material_design_1.png' class="img-fluid"/>
&lt;h2 id="changing-theme-level-properties">Changing theme level properties&lt;/h2>
&lt;p>Themes in &lt;code>material-ui&lt;/code> are top level objects that get set using the &lt;code>MuiThemeProvider&lt;/code> component. This, in turn, will do some magic with the React &lt;code>context&lt;/code> and the &lt;code>theme&lt;/code> object will get passed into the function that you provided to &lt;code>withStyles&lt;/code>. Lets have an example to see what I mean.&lt;/p>
&lt;ol>
&lt;li>I’ve defined 3 different themes. One default, one with basic colors, and one with different fonts.&lt;/li>
&lt;li>There’s a lot more to wrap your head around to make this work initially, but it feels cleaner and more direct.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">MuiThemeProvider&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">createMuiTheme&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/styles&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">withStyles&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/styles&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Drawer&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./drawer&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./navbar&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Login&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./login&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Feed&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./feed_basic&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">purple&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/colors/purple&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">green&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;material-ui/colors/green&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">defaultTheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">createMuiTheme&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">purpleTheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">createMuiTheme&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">palette&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">primary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">purple&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">secondary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">green&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fontTheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">createMuiTheme&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">palette&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">secondary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">purple&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">primary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">green&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">typography&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fontFamily&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Courier&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Helvetica&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">themes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">defaultTheme&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">purpleTheme&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fontTheme&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">drawerWidth&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">216&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">styles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">theme&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">narrowContainer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`calc(100% - &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">drawerWidth&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px)`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">marginLeft&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">drawerWidth&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">transition&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transitions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;margin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;width&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">easing&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transitions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">easing&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">easeOut&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">duration&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transitions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">duration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">enteringScreen&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">drawer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">defaultTheme&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">toggleDrawer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">drawer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">toggleLogin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">setTheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">idx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">theme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">themes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">idx&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">MuiThemeProvider&lt;/span> &lt;span class="na">theme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">theme&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Login&lt;/span> &lt;span class="na">toggleLogin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleLogin&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Drawer&lt;/span> &lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">toggleDrawer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">narrowContainer&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span> &lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">toggleDrawer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleDrawer&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">login&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggleLogin&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Feed&lt;/span> &lt;span class="na">setTheme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTheme&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">MuiThemeProvider&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">withStyles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">App&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;img src='styling_and_theming_with_material_ui_react__material_design_2.png' class="img-fluid"/>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>The biggest take away from doing this various different ways is that the first three or four times I use a library I don’t have a great idea of how it works. So it’s important to keep going over the same thing again and again, starting from scratch once you figure something new out and reorganizing based upon what you’ve learned. Much like learning how to play an instrument, going back and repeating each section to learn it better makes the final performance that much easier.&lt;/p>
&lt;p>Material-UI has a lot more activity on the project than rmwc does. It’s using a different version of material design, and we aren’t using the library that Google provided directly. Some of the tools that Google provides can’t be effectively leveraged. But if you are building in React, which we are, MaterialUI seems like a much more effective and powerful choice.&lt;/p>
&lt;p>Final code can be found here: &lt;a href="https://github.com/wschenk/material-ui-demo" title="">https://github.com/wschenk/material-ui-demo&lt;/a>&lt;/p></description></item><item><title>Styling and theming with rmwc: React + Material Design</title><link>https://willschenk.com/articles/2017/styling_and_theming_with_rmwc_react__material_design/</link><pubDate>Wed, 29 Nov 2017 02:11:50 +0000</pubDate><guid>https://willschenk.com/articles/2017/styling_and_theming_with_rmwc_react__material_design/</guid><description>&lt;p>There are a couple of good material design libraries out there, and I’m going to build a basic site with &lt;code>create-react-app&lt;/code> to test out how to really make them work. Material design released a new version of their web components, and we’re going to look at a few React libraries that will help us use them.&lt;/p>
&lt;h2 id="material-components-for-webhttpmaterialio">&lt;a href="http://material.io">Material Components For Web&lt;/a>&lt;/h2>
&lt;p>These components were written in SASS and JS. There are various ways to customize them and build your design. We’re going to look at &lt;code>rmwc&lt;/code> today and show what it’s like to use it.&lt;/p>
&lt;p>&lt;a href="https://github.com/jamesmfriedman/rmwc">jamesmfriedman/rmwc&lt;/a> - A React wrapper for Material Design (Web) Components&lt;/p>
&lt;p>As it says in the description, this is a thin wrapper on top of Google’s work, which is nice to keep things in place and in sync.&lt;/p>
&lt;h3 id="the-basicidea">The basic idea&lt;/h3>
&lt;p>Google’s framework itself works by extensive &lt;code>CSS&lt;/code> classes that you put onto your &lt;code>HTML&lt;/code> elements. Overall themes can be customized using &lt;code>CSS&lt;/code> variables to change, for example, the theme colors. You can also get into the &lt;code>SCSS&lt;/code> itself to change how things are generated. This is how most of the demonstration pages of the components are customized.&lt;/p>
&lt;p>Basically though, we are going to bring in the material &lt;code>css&lt;/code>, add the correct &lt;code>css&lt;/code> classes to style our components, and use regular &lt;code>css&lt;/code> to help lay things out. If we want to go crazy we can start using the &lt;code>scss&lt;/code> directly.&lt;/p>
&lt;p>The &lt;code>rmwc&lt;/code> library basically bridges the gap between the &lt;code>DOM&lt;/code> tweaking stuff that React and the Material design library does.&lt;/p>
&lt;h3 id="create-theapp">Create the app&lt;/h3>
&lt;ol>
&lt;li>&lt;code>create-react-app rmwc-test&lt;/code>&lt;/li>
&lt;li>&lt;code>cd rmwc-test&lt;/code>&lt;/li>
&lt;li>&lt;code>yarn add rmwc webfontloader react-helmet&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>Inside of &lt;code>src/index.js&lt;/code> lets make sure that we include &lt;code>css&lt;/code> that’s included from the &lt;code>npm&lt;/code> package &lt;code>material-components-web&lt;/code>. Also, lets pull in some fonts from Google, both Roboto as well as the Material Design Icons.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">ReactDOM&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-dom&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;./index.css&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./App&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">registerServiceWorker&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./registerServiceWorker&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;material-components-web/dist/material-components-web.css&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">WebFont&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;webfontloader&amp;#39;&lt;/span>
&lt;span class="nx">WebFont&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">load&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">google&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">families&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Roboto:300,500,700&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;Material Icons&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="nx">ReactDOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">render&lt;/span>&lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nt">App&lt;/span> &lt;span class="p">/&amp;gt;,&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="nx">registerServiceWorker&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="add-some-components">Add some components&lt;/h3>
&lt;p>Lets add a quick Toolbar on the top of the page, putting this file in &lt;code>src/navbar.js&lt;/code>. A few things to note here:&lt;/p>
&lt;ol>
&lt;li>Everything is exported from &lt;code>rmwc&lt;/code> directly, its clear where to import from. (This is a preview of &lt;code>material-ui&lt;/code> which I’ll cover later.)&lt;/li>
&lt;li>We’re using the Material UI Icon fonts, and this is done using ligatures. What this means is that we pass in the name of the icon (“menu”, “print”, and “account_circle”) that will be rendered as text until the font is loaded. At that point, the text will be replaced as an icon, so it’s a nice experience.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Toolbar&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ToolbarRow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ToolbarSection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ToolbarMenuIcon&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ToolbarTitle&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ToolbarIcon&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;rmwc&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Toolbar&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ToolbarRow&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ToolbarSection&lt;/span> &lt;span class="na">alignStart&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ToolbarMenuIcon&lt;/span> &lt;span class="na">use&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;menu&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggle&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ToolbarTitle&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">RMWC&lt;/span> &lt;span class="nx">Test&lt;/span> &lt;span class="nx">Code&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ToolbarTitle&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ToolbarSection&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ToolbarSection&lt;/span> &lt;span class="na">alignEnd&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ToolbarIcon&lt;/span> &lt;span class="na">use&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;account_circle&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ToolbarSection&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ToolbarRow&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Toolbar&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets throw in a quick &lt;code>login.js&lt;/code> which shows an example of how to pop up a dialog, put a form it in with a couple of text fields. Couple of notes here:&lt;/p>
&lt;ol>
&lt;li>&lt;code>handleChange&lt;/code> is a function that returns a function that, when called as part of an &lt;code>onChange&lt;/code> handler updates a specific attribute of the state. Crazy what JavaScript can do, and I’m not sure if that’s an argument for it or not.&lt;/li>
&lt;li>I was having trouble using all of the &lt;code>Dialog&lt;/code>components to make a custom Dialog &lt;a href="https://jamesmfriedman.github.io/rmwc/dialogs" title="">as specified in the docs&lt;/a> so I’m doing this body trick of passing in a function. This seems like a bug.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">TextField&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Dialog&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;rmwc&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Login&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">email&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">password&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">handleChange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">evt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">val&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">evt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">loginForm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">TextField&lt;/span> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;email&amp;#34;&lt;/span> &lt;span class="na">fullwidth&lt;/span> &lt;span class="na">onChange&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;email&amp;#39;&lt;/span>&lt;span class="p">)}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">TextField&lt;/span> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Password&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span> &lt;span class="na">fullwidth&lt;/span> &lt;span class="na">onChange&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;password&amp;#39;&lt;/span>&lt;span class="p">)}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Dialog&lt;/span>
&lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">opened&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onClose&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggle&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;Login please!&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onAccept&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;span class="na">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loginForm&lt;/span>&lt;span class="p">()}&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">Login&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let’s also create a &lt;code>drawer.js&lt;/code> file that we can use as a sliding nav menu. This is ripped directly from the docs and doesn’t do anything, but it’s fun to have in there.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">PersistentDrawer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PersistentDrawerHeader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PersistentDrawerContent&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ListItem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ListItemText&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;rmwc&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">Drawer&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">PersistentDrawer&lt;/span> &lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">opened&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">PersistentDrawerHeader&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="nx">backgroundColor&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;#f6f6f6&amp;#39;&lt;/span> &lt;span class="p">}}&amp;gt;&lt;/span>
&lt;span class="nx">PersistentDrawerHeader&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">PersistentDrawerHeader&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">PersistentDrawerContent&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItemText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Cookies&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItemText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItemText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Pizza&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItemText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ListItemText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Icecream&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItemText&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ListItem&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">PersistentDrawerContent&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">PersistentDrawer&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets build out a basic feed page &lt;code>feed.js&lt;/code> so we can get some stuff on the screen.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Button&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Elevation&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;rmwc&amp;#39;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">FeedItem&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Elevation&lt;/span>
&lt;span class="na">z&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">transition&lt;/span>
&lt;span class="na">onMouseOver&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)}&lt;/span>
&lt;span class="na">onMouseOut&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Im&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">feed&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Lots&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">fun&lt;/span> &lt;span class="nx">stuff&lt;/span> &lt;span class="nx">here&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button_list&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">raised&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Primary&lt;/span> &lt;span class="nx">Button&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">raised&lt;/span> &lt;span class="na">theme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{[&lt;/span>&lt;span class="s1">&amp;#39;secondary-bg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text-primary-on-secondary&amp;#39;&lt;/span>&lt;span class="p">]}&amp;gt;&lt;/span>&lt;span class="nx">Secondary&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Elevation&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Feed&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;feed&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FeedItem&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FeedItem&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FeedItem&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">Feed&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can tie it all together with an updated &lt;code>App.js&lt;/code>. Here we are tying our components together&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Navbar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./navbar&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Drawer&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./drawer&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Login&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./login&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Grid&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./grid&amp;#39;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">drawer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">drawerToggle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">drawer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">loginToggle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;app&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Login&lt;/span> &lt;span class="na">opened&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">toggle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loginToggle&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Drawer&lt;/span> &lt;span class="na">opened&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawer&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;body&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Navbar&lt;/span> &lt;span class="na">toggle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drawerToggle&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">login&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loginToggle&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Grid&lt;/span>&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And finally, lets get some basic &lt;code>index.css&lt;/code> in place so that the Drawer doesn’t take up any vertical space when closed. (Also, I’m sure I could be using flex box better, but I’m learning as I go.)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">app&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">flex-direction&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">row&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">box-sizing&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">border-box&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">flex-direction&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">column&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">flex-grow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">box-sizing&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">border-box&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">feed&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">flex-direction&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">column&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">feed&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nt">div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">max-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">button_list&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">space&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">around&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That’s a lot of boiler plate to get through! But we have the basics of something simple, so lets start playing around with what can be done. This is what you should see:&lt;/p>
&lt;img src='styling_and_theming_with_rmwc_react__material_design_1.png' class="img-fluid"/>
&lt;h3 id="css-custom-properties">CSS Custom Properties&lt;/h3>
&lt;p>One simple way to change the colors and look and feed of things is to use CSS Custom Properties. Basically, we’ll inject some specific CSS rules and it will change the primary, accent, and other colors of the site. These variables are &lt;a href="https://material.io/components/web/catalog/theme/#css-custom-properties" title="">documented in the material design site&lt;/a>, and this method means that we’ll need to set each one individually, the light and dark variants aren’t calculated.&lt;/p>
&lt;p>Lets change our feed item to use &lt;code>react-helmet&lt;/code> to set some styles dynamically. I’m going to pass in the primary and secondary color options to each feed item, and when you click a button there, it passes it up to the main feed component to inject it into the head element using react-helmet. I picked the colors using &lt;a href="https://material.io/color/#!/?view.left=0&amp;amp;view.right=0" title="">the material design color picker&lt;/a>, which is a fun tool that helps you understand the theming options.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Component&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">Button&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Elevation&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;rmwc&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Helmet&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-helmet&amp;#39;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">FeedItem&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">click&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">theme&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primary&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">secondary&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Elevation&lt;/span>
&lt;span class="na">z&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">transition&lt;/span>
&lt;span class="na">onMouseOver&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)}&lt;/span>
&lt;span class="na">onMouseOut&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Set&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">theme&lt;/span> &lt;span class="nx">to&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primary&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">secondary&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button_list&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">raised&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">click&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">Primary&lt;/span> &lt;span class="nx">Button&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="na">raised&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">click&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">theme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{[&lt;/span>&lt;span class="s1">&amp;#39;secondary-bg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text-primary-on-secondary&amp;#39;&lt;/span>&lt;span class="p">]}&amp;gt;&lt;/span>&lt;span class="nx">Secondary&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Elevation&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Feed&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">primary&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;#3f51b5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">secondary&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;#ff4081&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">setTheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">primary&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">secondary&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setState&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">primary&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">secondary&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;feed&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Helmet&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;{&lt;/span>&lt;span class="s2">&amp;#34;:root { --mdc-theme-primary: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primary&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;; --mdc-theme-secondary: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">secondary&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;;}&amp;#34;&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Helmet&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FeedItem&lt;/span> &lt;span class="na">primary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#3f51b5&amp;#34;&lt;/span> &lt;span class="na">secondary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#ff4081&amp;#34;&lt;/span> &lt;span class="na">theme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTheme&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FeedItem&lt;/span> &lt;span class="na">primary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#00796b&amp;#34;&lt;/span> &lt;span class="na">secondary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#0277bd&amp;#34;&lt;/span> &lt;span class="na">theme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTheme&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">FeedItem&lt;/span> &lt;span class="na">primary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#6a1b9a&amp;#34;&lt;/span> &lt;span class="na">secondary&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#e64a19&amp;#34;&lt;/span> &lt;span class="na">theme&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTheme&lt;/span>&lt;span class="p">}/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">Feed&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And here’s an example of what that looks like:&lt;/p>
&lt;img src='styling_and_theming_with_rmwc_react__material_design_2.png' class="img-fluid"/>
&lt;p>So with the basic setup, you have access to the CSS file that comes pre-generated with the material-components-web package, CSS variables that help set overall colors and theming options, and you’re own CSS file that you can use to do layout and specific design tweaks. What if that’s not enough?&lt;/p>
&lt;h3 id="using-sass">Using SASS&lt;/h3>
&lt;p>(If you are running on a Chromebook,&lt;a href="http://blog.akehir.com/2017/05/building-node-sass-libsass-python.html" title=""> follow the instructions here&lt;/a> to get &lt;code>node-sass&lt;/code> to install correctly.) Otherwise we start with the instructions from the &lt;code>create-react-app&lt;/code> &lt;code>README.md&lt;/code> file.&lt;/p>
&lt;p>First we add node-sass and a utility package to our environment&lt;/p>
&lt;p>&lt;code>yarn add node-sass-chokidar node-run-app&lt;/code>&lt;/p>
&lt;p>Then in &lt;code>package.json&lt;/code> we change the scripts around to watch and process our scss files.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="s2">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;build-css&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;node-sass-chokidar --include-path ./src --include-path ./node_modules src/ -o src/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;watch-css&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;npm run build-css &amp;amp;&amp;amp; node-sass-chokidar --include-path ./src --include-path ./node_modules src/ -o src/ --watch --recursive&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;start-js&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;react-scripts start&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;start&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;npm-run-all -p watch-css start-js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;build-js&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;react-scripts build&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;build&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;npm-run-all build-css build-js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;react-scripts test --env=jsdom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;eject&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;react-scripts eject&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In &lt;code>index.js&lt;/code> lets remove the line that imports the compiled sass file from the material-web-components directory, just delete &lt;code>import ‘material-components-web/dist/material-components-web.css’&lt;/code>&lt;/p>
&lt;p>Now lets rename &lt;code>index.css&lt;/code> to &lt;code>index.scss&lt;/code> and at the top add:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nv">$mdc-theme-primary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#9c27b0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Purple 500
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$mdc-theme-secondary&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#ffab40&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Orange A200
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$mdc-theme-background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// White
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">@import&lt;/span> &lt;span class="err">‘&lt;/span>&lt;span class="n">material-components-web&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">material-components-web&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scss&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And in &lt;code>App.js&lt;/code> lets go back to the &lt;code>feed_basic&lt;/code> import, so we don’t override the theme using css variables. This is what you should get:&lt;/p>
&lt;img src='styling_and_theming_with_rmwc_react__material_design_3.png' class="img-fluid"/>
&lt;p>Now you have full access to building your own version of the &lt;code>material-web-components&lt;/code> using the &lt;code>sass&lt;/code> functionality that it was built with!&lt;/p>
&lt;h3 id="source-code">Source Code&lt;/h3>
&lt;p>You can find the final code at &lt;a href="https://github.com/wschenk/rmwc-demo">wschenk/rmwc-demo&lt;/a>&lt;/p>
&lt;h3 id="where-does-that-leaveus">Where does that leave us&lt;/h3>
&lt;p>Building off of the google work directly is pretty cool. There are a lot of other tools that are included that help make sense of what material design is, and what it can do for you. &lt;code>rmwc&lt;/code> is really just a small wrapper around this stuff, bridging the gap between the pure javascript that comes from Material design with the React. SASS could be familiar to people, and it’s a really nice way to make CSS. React has a different style, which this is not, but it’s pretty smooth to integrate into the tool chain.&lt;/p>
&lt;p>Here are a few awesome things that also come from the Material design mother ship:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://material.io/color/#!/?view.left=0&amp;amp;view.right=0" title="">Material Design Color Tool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://material.io/remixer/" title="">Remixer&lt;/a> — Collaborate on app design in real-time&lt;/li>
&lt;li>&lt;a href="https://material.io/gallery/" title="">Gallery&lt;/a> — Design workflow&lt;/li>
&lt;li>&lt;a href="https://material.io/resizer/" title="">Resizer&lt;/a> — An interactive viewer that helps designers test material design breakpoints across desktop, mobile, and tablet.&lt;/li>
&lt;li>&lt;a href="https://material.io/devices/" title="">Device Metrics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://material.io/stage/" title="">Stage&lt;/a> — Define dynamic interfaces with interactive motion&lt;/li>
&lt;/ul>
&lt;p>Next time we’ll look at how to do the same thing with &lt;a href="http://material-ui-next.com/" title="">http://material-ui-next.com/&lt;/a>&lt;/p></description></item><item><title>More lessons learned working on a Chromebook</title><link>https://willschenk.com/articles/2017/more_lessons_learned_working_on_a_chromebook/</link><pubDate>Mon, 20 Nov 2017 15:05:48 +0000</pubDate><guid>https://willschenk.com/articles/2017/more_lessons_learned_working_on_a_chromebook/</guid><description>&lt;img src='more_lessons_learned_working_on_a_chromebook_1.png' class="img-fluid"/>
&lt;p>The Pixelbook just feels exciting in my lap, so much lighter and zippier than my MacBookPro. The one that I can’t quite bring myself to upgrade. Lets continue down the path of &lt;a href="./articles/2017/writing_code_on_a_chromebook/">setting up this machine as a dev environment&lt;/a> and see how well we can make it work.&lt;/p>
&lt;p>First I should recognize my indebtedness to Kenneth White, who wrote up &lt;a href="https://blog.lessonslearned.org/building-a-more-secure-development-chromebook/" title="">a great guide to setting up a secure Chromebook environment&lt;/a>. I’m less security focused than he is, and he goes really deep so check it out.&lt;/p>
&lt;p>A quick recap&lt;/p>
&lt;ol>
&lt;li>Download &lt;code>termux&lt;/code> from the Google Playstore&lt;/li>
&lt;li>&lt;code>apt get update&lt;/code>&lt;/li>
&lt;li>&lt;code>pkg install termux-exec proot util-linux openssh&lt;/code>&lt;/li>
&lt;li>&lt;code>termux-setup-storage&lt;/code>&lt;/li>
&lt;li>&lt;code>termux-chroot&lt;/code>&lt;/li>
&lt;li>&lt;code>mkdir -p /storage/emulated/0/Download/devbox/ssh&lt;/code>&lt;/li>
&lt;li>&lt;code>ln -s /storage/emulated/0/Download/devbox /home/devbox&lt;/code>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>ssh-keygen -t rsa -b 4096 -C “wschenk@gmail.com”&lt;/code>(Replace with your email for good sanity.)
9.
&lt;code>cat /home/devbox/ssh/id_rsa.pub &amp;amp;gt;&amp;amp;gt; /home/.ssh/authorized_keys&lt;/code> (Use the newly created key to log in to the local termux box)
10. &lt;code>sshd&lt;/code>
11.
&lt;code>whoami&lt;/code> to get your user name
12.
&lt;code>ifconfig arc0 | awk '/inet /{print $2}'&lt;/code> to get your up address
13. Install the &lt;a href="https://chrome.google.com/webstore/detail/secure-shell/pnhechapfaindjhompbnflcldabbghjo?hl=en" title="">Chrome Secure Shell chrome book app&lt;/a>&lt;/p>
&lt;ol start="14">
&lt;li>Open a new shell session. Enter in the username ip you found above. Set the port to &lt;code>8022&lt;/code>. Import the identity that you just created, the private key is in &lt;code>Downloads/devbox&lt;/code> that you generated above.&lt;/li>
&lt;/ol>
&lt;img src='more_lessons_learned_working_on_a_chromebook_2.png' class="img-fluid"/>
&lt;h2 id="multiple-windows">Multiple windows&lt;/h2>
&lt;p>Having a lot of windows open is pretty key when developing. Termux’s interface is fine, but running Android apps in Chromeos isn’t totally fluid — it “works” for some definition of work, but needs a little help. Running the Secure Shell chromebook app is just a lot easier. Better copy and paste (which I do a lot) and it works with the window manager better. Once you have the app opened up, you can press &lt;code>cntr-alt-shift-N&lt;/code> to get a new window. Then you can move them around to have a nice coding environment.&lt;/p>
&lt;img src='more_lessons_learned_working_on_a_chromebook_3.png' class="img-fluid"/>
&lt;p>One nice thing about this is that Secure Shell is that it copies on select, but &lt;code>cntr-shift-v&lt;/code> pastes into it.&lt;/p>
&lt;h2 id="this-machine-isfast">This machine is fast&lt;/h2>
&lt;p>I’ve been resisting upgrading my 2015-era Macbook Pro, so I’m comparing an older top-of-the-line machine with a newer top-of-the-line machine, but this thing is a screamer. The hardware is more exciting than the new Macbooks, and being able to flip this to be a tablet, or into a tent which I’m sure will be great watching videos on an air plane. (A specific use case I know but right now I split my time on planes working or catching up on YouTube, so this is just about perfect for that.)&lt;/p>
&lt;p>It requires a facility with Linux to navigate around, so the learning curve is a little funky. I’m going to keep playing around with this for a few more weeks and give you a report on how it goes overall.&lt;/p></description></item><item><title>Writing code on a chromebook</title><link>https://willschenk.com/articles/2017/writing_code_on_a_chromebook/</link><pubDate>Wed, 15 Nov 2017 17:12:09 +0000</pubDate><guid>https://willschenk.com/articles/2017/writing_code_on_a_chromebook/</guid><description>&lt;p>I’ve been disappointed with the latest round of MacBooks and it got me wondering what else it out there. (On the phone side the lack of head phone jack have made me jump ship to Android, which has been liberating.)&lt;/p>
&lt;p>Chromebooks are pretty cheap and are super easy to use. I’m writing this on a Asus C100P. It’s small, has a touch screen, and folds into a tablet. There’s no backups to do, no security issues, it turns on immediately and there’s basically nothing to do to keep it working. It syncs up magically with your account, so if it blows up you can just grab another one and there’s little time wasted in fiddling with it to bring your files over. Also, it’s $250! Cell phones are more expensive.&lt;/p>
&lt;p>Lets see how to set it up as a development environment. Can we write and deploy websites with this thing?&lt;/p>
&lt;h3 id="installing-termux">Installing Termux&lt;/h3>
&lt;p>One constraint I have is that I want to leave it as a Chromebook — flipping it into developer mode and installing Linux directly is cool but a different excersize. (Check out &lt;a href="https://github.com/dnschneid/crouton" title="">https://github.com/dnschneid/crouton&lt;/a> if you want to bring a full Ubuntu or Debian environment onto your machine.)&lt;/p>
&lt;p>Can we make it work on it’s own terms? The latest version of ChromeOS has access to the Google Play store, and lets you download Android apps to the device. Most apps “work”, in the sense that you can download them and get them to run, but Android tablet isn’t a huge market that developers target so quality is a bit spotty. &lt;code>Termux&lt;/code>, however, it pretty amazing. It has a linux environment in it, and we’ll be using that to install software and run our development environment. The environment runs inside of the application, which keeps it separate from the rest of the system. This is nice for security but makes interacting with other Chrome-based apps a little difficult. Lets get started!&lt;/p>
&lt;p>Open up the Google Play store:&lt;/p>
&lt;img src='writing_code_on_a_chromebook_1.png' class="img-fluide"/>
&lt;p>Or go the the installation link directly here: &lt;a href="https://play.google.com/store/apps/details?id=com.termux" title="">https://play.google.com/store/apps/details?id=com.termux&lt;/a>.&lt;/p>
&lt;h3 id="configuring-termux">Configuring Termux&lt;/h3>
&lt;p>When you first run the app, it gives you a linux prompt.&lt;/p>
&lt;img src='writing_code_on_a_chromebook_2.png' class="img-fluid"/>
&lt;p>This is a linux environment that lets you install software and run some code. First though, lets update the packages to the latest, and get things integrated with your ChromeOS environment. Also check out &lt;a href="https://wiki.termux.com/wiki/Main_Page" title="">the wiki &lt;/a>for some more useful information.&lt;/p>
&lt;p>Termux has great support for hardware keyboards and command options are documented here: &lt;a href="https://termux.com/hardware-keyboard.html" title="">https://termux.com/hardware-keyboard.html&lt;/a>&lt;/p>
&lt;ol>
&lt;li>&lt;code>ctrl-alt-v&lt;/code> for past&lt;/li>
&lt;li>&lt;code>ctrl-alt-c&lt;/code> creates a new terminal&lt;/li>
&lt;li>&lt;code>ctrl-alt-n&lt;/code> or &lt;code>ctrl-alt-p&lt;/code> to switch between them&lt;/li>
&lt;/ol>
&lt;p>One annoyance is that copy and paste works differently across Chrome and Termux. In chrome, &lt;code>ctrl-c&lt;/code> and &lt;code>ctrl-v&lt;/code> copy and paste, but in termux you need to long click to bring up the android copy dialog, and &lt;code>ctrl-alt-v&lt;/code> pastes the text. Why, Google, why?&lt;/p>
&lt;p>Now lets grant termux access to your chromebooks filesystem, so you can write files everywhere.&lt;/p>
&lt;img src='writing_code_on_a_chromebook_3.png' class="img-fluid"/>
&lt;p>This creates a folder called “storage” that has links to different parts of the file-system. &lt;a href="https://wiki.termux.com/wiki/Internal_and_external_storage" title="">More information is in the wiki&lt;/a>. The filesystem outside of termux behaves slightly differently then it does inside of termux, one main annoyance is that it doesn’t seem to support symlinks. This makes most development a non-starter outside of the sandbox, and limits the ability of other chrome based editors, such as Carat, to access your code. (Someone please show me that I’m wrong about this!)&lt;/p>
&lt;p>Then exit out of termux and restart it. &lt;code>termux-exec&lt;/code> will make it so the shebang path of scripts work correctly. Now we’ll install &lt;code>nodjse&lt;/code>, &lt;code>yarn&lt;/code>, and all the usual suspects for a basic &lt;code>create-react-app&lt;/code> site.&lt;/p>
&lt;p>Ok, we are ready to go.&lt;/p>
&lt;h3 id="creating-and-running-theapp">Creating and running the app&lt;/h3>
&lt;p>Inside of &lt;code>termux&lt;/code>, in the internal storage area, run&lt;/p>
&lt;p>And let it install everything. There will be an error with &lt;code>.gitignore&lt;/code> but you can &lt;em>regular&lt;/em>-ignore that. More symlinking madness.&lt;/p>
&lt;h3 id="linux-inception">Linux inception&lt;/h3>
&lt;p>&lt;code>termux&lt;/code> runs a linux environment inside of an Android app that’s running inside of the Chromebook’s OS. &lt;code>localhost&lt;/code> means something different inside of &lt;code>termux&lt;/code> than it does in your Chrome browser, so we can’t connect to &lt;a href="http://localhost:3000" title="">http://localhost:3000&lt;/a> when it starts. We’ll need to find out what &lt;code>termux&lt;/code>’s IP address is, and this is done using &lt;code>ifconfig&lt;/code>, or interface config:&lt;/p>
&lt;p>In my case, this is &lt;code>100.115.92.2&lt;/code> which you can see in the &lt;code>inet addr&lt;/code> section under &lt;code>arc0&lt;/code>. Remember, that &lt;code>termux&lt;/code> is an Android app running on your Chromebook, and so to copy you long press the mouse to get the selection dialog up. Ok, back to the show.&lt;/p>
&lt;h3 id="running-theserver">Running the server&lt;/h3>
&lt;p>Now it slowly begins, and you need to point to ip address of the server to load. In my case &lt;a href="http://100.115.92.2:3000/" title="">http://100.115.92.2:3000/&lt;/a> and then you should see:&lt;/p>
&lt;img src='writing_code_on_a_chromebook_4.png'/>
&lt;h3 id="lets-do-some-development">Lets do some “development”&lt;/h3>
&lt;p>Lets install some fonts and styling and just play around. Leave the &lt;code>termux&lt;/code> terminal running &lt;code>yarn start&lt;/code> and press &lt;code>cntr-alt-c&lt;/code> to create a new screen. Inside that window lets install some packages. First, we install &lt;code>vim&lt;/code> and then open up the main &lt;code>App.js&lt;/code> file&lt;/p>
&lt;p>And replace it with:&lt;/p>
&lt;p>Once you &lt;code>ZZ&lt;/code> to save the file, if you flip back to chrome you should see:&lt;/p>
&lt;img src='writing_code_on_a_chromebook_5.png' class="img-fluid"/>
&lt;p>Ok, but those fonts are boring! Lets now add some styling and sweet web-fonts. I’m going to use a &lt;code>typography.js&lt;/code> theme that you can find here &lt;a href="https://kyleamathews.github.io/typography.js/" title="">https://kyleamathews.github.io/typography.js/&lt;/a> just to keep things simple.&lt;/p>
&lt;p>We are going to use the webfont loader from typekit so that the page gets rendered first with the fonts that are available, and once our custom font is loaded from the internet it adjusts in place.&lt;/p>
&lt;p>Add the following lines to &lt;code>src/index.js&lt;/code> after the last &lt;code>import&lt;/code>:&lt;/p>
&lt;p>Now flip back to your page and you should see:&lt;/p>
&lt;img src='writing_code_on_a_chromebook_6.png' class="img-fluid"/>
&lt;h3 id="lets-deployit">Lets deploy it&lt;/h3>
&lt;p>There’s obviously a lot more you could do with that, but lets deploy this app right now and get it onto the internet for people to see. We’re going to use &lt;code>surge.sh&lt;/code> for this.&lt;/p>
&lt;p>This will walk you through creating an account if you don’t have one, and show you the progress of the upload and where the code went&lt;/p>
&lt;p>You should see a different url from that, and when you visit it you should see your site.&lt;/p>
&lt;h3 id="living-on-thecloud">Living on the cloud&lt;/h3>
&lt;p>So there you have it, step by step instructions on how to publish your first website from a cheapo chromebook for free. There are a couple of things that are a challenge with this, mainly that you are working inside of a linux environment segmented from the rest of the chromebook. This mean, in effect, that you need to learn &lt;code>vi&lt;/code> to get anything done. Its a great tool and worth learning, but it does have quite a learning curve.&lt;/p>
&lt;p>We should setup git and connect to github to make this more realistic, but I’ll leave that for now. It’s pretty exciting what can be done. This is a local environment that could be used without network connectivity, on an airplane, or somewhere where there’s spotty wifi service. It has all the security updates and security that Google provides, so you don’t need to worry about much.&lt;/p>
&lt;p>Its very easy to wipe the machine if needed. Leaving some cheap machines around to pick up and use if and as needed works, it’s no longer something precious. If your source code is stored in git, which it should be, then swapping computers becomes easy. Your web environment gets synced over without having to spend a lot of time downloading and configuring, and so your laptop becomes a brief places where data comes down from the cloud, lets you work on it locally, and then it all fades away when you aren’t using it.&lt;/p>
&lt;p>It’s not quite as powerful as a “real laptop” but it works!&lt;/p></description></item><item><title>Why Short Term memory is a thing: forgetting as a creative act</title><link>https://willschenk.com/articles/2017/why_short_term_memory_is_a_thing_forgetting_as_a_creative_act/</link><pubDate>Wed, 08 Mar 2017 21:48:09 +0000</pubDate><guid>https://willschenk.com/articles/2017/why_short_term_memory_is_a_thing_forgetting_as_a_creative_act/</guid><description>&lt;p>Our new app &lt;a href="http://tezlabapp.com">TezLab&lt;/a> pulls in data from your phone and your car to show you how to use your car better. It helps you understand your driving habits, how you use your battery, and shows you what other drivers are up to. In order to do this, we need fairly sophisticated ways of understanding the world.&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>Here, again, the role of the active faculty of forgetfulness, a kind of guardian, a supervisor responsible for maintaining the psychic, tranquility label. We immediately conclude that no happiness, no serenity, no hope, no pride, no enjoyment of the present moment could not exist without the possibility of forgetting. — Neitzsche, Geneology of Morals&lt;/p>
&lt;/blockquote>
&lt;p>Humans make math mistakes; computers don’t. Humans forget things, computers don’t. These are features of humans, and if we want to make computers smarter we need to understand the value in fuzzy thinking and forgetfulness. There are people who are capable of great feats of logic and memory, but evolution has instead selected for a goldilocks level of memory, remembering some things but not too much.&lt;/p>
&lt;p>In &lt;a href="./articles/2016/yes-no-maybe/">our last discussion I wrote about the limits of binary logic&lt;/a>, and how reality can be better represented by treating things not as true or false, but as more or less truthy. Knowing about knowing, being aware of the moment when your knowledge of the world went from being certain to being hazy, or acting on the moment where confusion becomes clear, actually makes understanding the world easier. It makes the math part of it a little more complicated but lets you design the types of “mistakes” you make. These “mistakes” can then be things that are self-correcting or otherwise helpful. Letting the computer make math “mistakes” helps.&lt;/p>
&lt;p>In this post I’ll talk about how perfect memory actually makes things more complicated. Short Term memory — controlled forgetfulness — can simplifying reasoning and reduce cognitive load so that it’s less effort to reason more effectively about the world. Short Term and Long Term memory both have uses, but for many things techniques using short term memory out performs total recall.&lt;/p>
&lt;h3 id="levels-of-understanding">Levels of Understanding&lt;/h3>
&lt;p>Before we get into the solution, lets talk a little bit about the problem we are trying to solve. Our app tracks data points from the car and the phone in order to show interesting things to the drivers. We have partial information, meaning we don’t always don’t get all the data that exists, so we need to figure out ways to fill in the gaps. We transform the raw data points to things that are understandable and hopefully actionable to the driver.&lt;/p>
&lt;img src='why_short_term_memory_is_a_thing_forgetting_as_a_creative_act_1.png' class="img-fluid"/>
&lt;p>There are 4 main raw event streams that we get: phone location and speed, car odometer reading, car battery readings, and car transmission and location. These raw events are tied to a physical device that has a time and place, such as a phone or a car. As these raw events come in they get translated and digested.&lt;/p>
&lt;p>The raw events get processed into SensorEvents. This is where we determine if the car is moving, or what the charge rate is as the battery warms up, things like that. Each of the different streams has a different type of Short Term memory that understands what the different events signify.&lt;/p>
&lt;p>Sensor Events in turn get translated into drives, charges, and phantoms drives, and we can tell which phone was moving with which car. (In the case of multi-car multi-driver families, for example, all sorts of streams can get crossed and we’re actively tuning this now.) Each of these different types of trip has their own Short Term memory, which knows what to remember and what to forget as the events stream in from the other events.&lt;/p>
&lt;p>Trips in turn get processed into charge reports, activities, and badges. Again with their own type of memory. And those in turn get organized into leaderboards, commutes, and road trips, which in turn get translated into etc. etc. etc.&lt;/p>
&lt;p>As data comes in, we make a hypothesis about the world. This hypothesis colors and changes how we see the world. If the phone is moving, maybe the car is active. If the car is active maybe we monitor it. If the phone stops moving but we know the car is active we’ll keep monitoring. (For example, charging the car over night.) If we thought the car was active at some point, we’ll keep probing it even if we haven’t gotten a response in a while, hoping that if it gets back on the network we will capture as much data as possible.&lt;/p>
&lt;p>Of course, maybe it’s just gone. Without the driver triggering us in some way, though motion of the app or starting it up, the server relaxes, winds down and quits pestering your car. Our idea of the world slowly fades away into forgetfulness as it doesn’t get updated.&lt;/p>
&lt;h3 id="paying-attention">Paying Attention&lt;/h3>
&lt;p>Our first level of forgetfulness is actually before remembering at all: it begins with choosing what we pay attention to. Attention itself is something that changes the world. You behave differently if someone is watching than when you are alone. In the case of the car it will go to sleep when it’s inactive reducing power consumption to a minimum. Once you use the app to see what the state of the car is, it partially powers up increasing drain.&lt;/p>
&lt;p>We do nothing until the phone moves from one cell tower to another. If the phone is moving fast enough it triggers a check to with the car, which may or may not wake up. Based upon what we find the servers will perk up and start watching the car.&lt;/p>
&lt;p>In our data then, we should expect gaps to occur for two reasons: we aren’t looking, or we aren’t seeing. We aren’t monitoring the car, or the car has stopped responding for some reason. Cell connectivity is spotty and it regularly takes 4–5 minutes for the car to connect back to the internet when I leave the underground parking for example. If we had access to the data — the car must know all of this stuff, and presumably there’s a database somewhere to query — but we don’t have access to any of that, and we need to build up what knowledge we can from staring at what is displayed in the app.&lt;/p>
&lt;p>What triggers paying attention? Transmission, odometer activity, and battery power level changes. The phone wakes us from the slumber, where we peek a quiet eye at the car, and if we see something is happening we keep watching until it’s over. The two things we look for are if the driver is in the car or if the car is plugged in.&lt;/p>
&lt;h3 id="time-is-anillusion">Time is an Illusion&lt;/h3>
&lt;p>The natural question is to ask what is happening right now? What’s going on in the present? The present though doesn’t actually exist. Is an event that happened 30 seconds ago the same as right now? 2 minutes? 15 minutes?&lt;/p>
&lt;p>The first challenge we have is that data doesn’t come in real time. The latency between when the event occurred and we know about it can be upwards of 15 minutes. Streams come in a different rates, so when reasoning based upon these events &lt;em>sometimes we see the effects before we see the causes.&lt;/em>&lt;/p>
&lt;p>Our memory logic then needs to be able to separate when the event happened with the time of when it got the sample — there’s the timestamp of the event itself, and then the timestamp of when we know about it. If we learned something more about the past, then we need to reevaluate what we know about the present from that time forward forward.&lt;/p>
&lt;p>We’re forced into some sort of imaginary time, where what we thought we knew then is different from what we now think we thought then. It’s a grammatical disaster. In the present, which is some blurry window of time between the past and the future, we are never really certain of what’s going on, things are constantly in flux as history gets revised.&lt;/p>
&lt;p>The car’s API isn’t optimized for how we are using it. For example, there are 3 different endpoints we need to query to get what we need, and the sampling timestamps can get out of sync. The API doesn’t always return or give valid data, so there can be gaps between readings. If there’s a 5 minute gap between consecutive battery samples, and a different but overlapping gap between odometer readings, how do you calculate efficiency during that time? How detailed can you make the graph?&lt;/p>
&lt;p>Luckily, the past doesn’t go anywhere. As events come in with greater or lesser latency “the present” dilates, our interpretations of the past changes but the underling reality doesn’t.&lt;/p>
&lt;h3 id="optimizing-memorylength">Optimizing Memory Length&lt;/h3>
&lt;p>Each stream’s memory needs are different. How you deal with gaps in certain values, or how you thing about ranges and fluctuations for each value is different. How do you decide the right way to remember things?&lt;/p>
&lt;p>Lets take the battery memory for example. This type of memory interprets the raw data from the car’s battery. The data points we get are timestamp, battery range, battery state (disconnected, charging, charging paused, charging complete, etc) and rate of charge.&lt;/p>
&lt;p>In the case of the battery readings generally we want to know when the battery is becomes active or is idling, if it’s charging, and what the range of battery readings are during that time. These are the things that we care about.&lt;/p>
&lt;p>Lets say that we want to remember the battery range for 20 minutes. And if the battery state is “charging”, “charge complete”, “charging complete” then we want to remember that we are charging for 30 minutes. And then each sample we get in, we tell our memory object that we know the data points as a specific amount of time.&lt;/p>
&lt;p>What happens with a 15 minute gap of data? In this example, since range and charging are remembered for more than 15 minutes, if we query the memory we “know” what the values to be. The gap can get smoothed over, and based upon how it expects the world to be, it can give an estimation of the value if you ask about it in the middle of the gap. If you are adding 1.5 mile of charge a minute, and 8 minutes have passed, you’ve probably added 12 miles.&lt;/p>
&lt;p>On the other hand, If you were adding 1.5 miles of charge per minute, and 25 minutes have passed, we have no idea what has happened. Too much time has passed to know that detail, but if we might be able to guess that you are still charging, even if we don’t know amount that you’ve added.&lt;/p>
&lt;p>If there’s a larger gap in time, lets say 2 hours, then there’s a gap in the memory that can’t be estimated, and when trying to tell the story of what happened there’s a blank spot.&lt;/p>
&lt;h3 id="a-brief-digression-into-a-different-domain">A brief digression into a different domain&lt;/h3>
&lt;p>When thinking about optimizing these values a story from a different domain can help illuminate the trade offs. Let imagine how ants go and find food in the world. In their little ant brains they have a map of the world, and we want to know how long to remember where the food is. (This is normally used as example of emergent behavior, but lets instead look at their collective memory.)&lt;/p>
&lt;p>Imagine a scenario where there’s one area near the nest that can be harvested every 7 days, after which is it’s empty until it grows back.&lt;/p>
&lt;p>What’s the right level of detail for your map of the world? How long does it make sense for you to remember how much food was in a particular area? The temptation is to turn these ants into omniscient biologists, who not only make a super detailed map of the world and remember where things are, but also when they were there last, how often things grew, how this plant does in this soil, is the weather currently good for that plant etc.&lt;/p>
&lt;p>This model of the world takes a huge amount of cognitive load to keep up to date, and is also likely to be suboptimal. There’s a big chance of obsessive compulsion, where the logic goes wrong and you get stuck in a loop, and there needs to be safeguard to avoid getting trapped into a local maximum.&lt;/p>
&lt;p>This is not how evolution solved that problem. What it does instead is have the ants wander around, and they only remember where food is for a short period of time. If the knowledge is constantly reenforced by ants returning food, then the collectively remember where food is, but after a short period this knowledge fades away.&lt;/p>
&lt;p>They basically just forget where the food was, and just have no information at all. After 7 days they would wander there by chance, and as an additional benefit they explore the whole environment. There’s less cognitive load and it also increases the likelihood to find some newly introduced novelty. The forgetting is both simpler to implement and is potentially a superior search algorithm.&lt;/p>
&lt;p>Controlled forgetfulness simplifies the way of making sense of the world. Back to cars.&lt;/p>
&lt;h3 id="remembering-thefuture">Remembering the future&lt;/h3>
&lt;p>Time is an illusion, the present is this fuzzy period of time between the past and the future. On further inspection, its not totally clear why the past is different from the future. The past is continually refining our idea of the present, which is constantly in flux, and the different possible pasts help us constrain the different possible futures.&lt;/p>
&lt;p>There are situations where you want to ask memory about what it thinks will happen based upon what it knows now, in the future based upon the past and what it knows know. Charging and commuting are like this.&lt;/p>
&lt;p>Lets imagine that you are at a super charger, and you want to know how long you need to stay there. We’ve rolled up the data to the point where we know you are started charging the car and haven’t stopped yet. We want to ask what do we remember/predict about the future: how fast is the car charging now, how fast will it be charging 10, 20, 30 minutes from now, how much range will be added to the car? If you plug into a 50 amp circuit or less its almost always a constant rate of charge, while supercharging rates vary based upon battery capacity, charge level, and temperature.&lt;/p>
&lt;p>If we remember the battery range for 20 minutes, these memories of the future are entirely transient, they only exist when asked for, and are completely provisional.&lt;/p>
&lt;h3 id="windows-how-to-know-aboutchange">Windows: how to know about change&lt;/h3>
&lt;p>In order to be aware of change we need to need to have some memory of context. Its not enough to remember the individual data points and compare them to each other, but we need to make sure that we have enough points to make a conclusion either way.&lt;/p>
&lt;p>And given that data points don’t come in any regular interval, its not the last 10 points that matter, it’s the points in the last 10 minutes that matter.&lt;/p>
&lt;p>For example, using the odometer as a data stream how can we decide if the car is moving or not? In our case we say we need at minimum of 5 data points in the last 20 minutes, and every data point needs to be the same. If that changes to true then the car is fixed in place. (This is used as a heuristic for when we are trying to figure out the start time of a trip.)&lt;/p>
&lt;h3 id="highwater-marks">Highwater Marks&lt;/h3>
&lt;p>When you are actively trying to make sense of the world, forgetfulness is useful in order to simplify the process and to help keep you out of local maximums. But there are always things that make sense to remember forever. Car software versions, for example, should always go up. Odometers always go up.&lt;/p>
&lt;p>One of the biggest use of this is when we “carve the past in stone”. There’s a point before which we don’t look further back, where we’ve decided, that’s the end of history, the present will never go back further than that. For different types of memories these timescales are vastly different. For things like battery readings it’s in hours, but if we are looking for battery charge reports, how far did that charge take you, it’s in days and week time scales.&lt;/p>
&lt;p>When we are thinking about commutes, and figuring out where you home vs work is, these timescales are on months. It’s the closest thing to long term memory.&lt;/p>
&lt;h3 id="short-term-memory-makes-thingssimpler">Short Term memory makes things simpler&lt;/h3>
&lt;p>Forgetfulness is a cheaper way to deal with change than making your analysis more sophisticated. The cost you pay is that you need to revisit things, but with a simpler model of the world you gain a lot of adaptability when dealing with a changing world that you have limiting knowledge of.&lt;/p>
&lt;p>Robustly making sense of partial information is a lot more complicated then you might think.&lt;/p></description></item><item><title>Save your Medium articles to your computer in markdown</title><link>https://willschenk.com/articles/2016/save_your_medium_articles_to_your_computer_in_markdown/</link><pubDate>Thu, 27 Oct 2016 22:34:00 +0000</pubDate><guid>https://willschenk.com/articles/2016/save_your_medium_articles_to_your_computer_in_markdown/</guid><description>&lt;p>I really like the editing tools and community on Medium, but I want to keep all my writing in a centralized place. So I wrote a script based upon my &lt;a href="http://willschenk.com/using-rake-for-dataflow-programming-and-data-science/" title="">dataflow programming with Rake post&lt;/a> that pulls down my latest medium articles, converts to markdown, and downloads any associated images so I can keep my own copy on my domain.&lt;/p>
&lt;p>I really like the tools, but I want to own my data.&lt;/p>
&lt;ol>
&lt;li>Save the file below as “Rakefile”&lt;/li>
&lt;li>install the upmark gem by typing “upmark”&lt;/li>
&lt;li>replace “wschenk” with your username on line 5&lt;/li>
&lt;li>type “rake”&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s2">&amp;#34;upmark&amp;#34;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;fileutils&amp;#39;&lt;/span>
&lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;wschenk&amp;#34;&lt;/span>
&lt;span class="n">workingdir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;medium&amp;#34;&lt;/span>
&lt;span class="n">outputdir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;articles&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="n">dest&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Loading &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exists?&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">mkdir_p&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pathmap&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;curl -L &amp;#39;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39; &amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">file_loop&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/.csv$/&lt;/span>
&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Parse an HTML file into CSV&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">parse_html&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">parser&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;nokogiri&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="n">dest&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Parsing &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> -&amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">mkdir_p&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pathmap&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Nokogiri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wb&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">csv&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">parser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">html&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">csv&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">url&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/latest.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;https://medium.com/@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/latest&amp;#34;&lt;/span>
&lt;span class="n">parse_html&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/latest_urls.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/latest.html&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">latest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">html&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;h4&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="n">latest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">children&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">div&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;h1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">link&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">div&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">link&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last&lt;/span>
&lt;span class="n">link&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">link&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">link&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">link&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/\?.*/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">link&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://medium.com&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">link&lt;/span>
&lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># html.css( &amp;#34;.streamItem--postPreview&amp;#34;).each do |div|&lt;/span>
&lt;span class="c1"># title = div.css( &amp;#34;h3&amp;#34;).text&lt;/span>
&lt;span class="c1"># link = div.css( &amp;#39;a[data-action=&amp;#34;open-post&amp;#34;]&amp;#39; )&lt;/span>
&lt;span class="c1"># link = link.first[&amp;#39;href&amp;#39;]&lt;/span>
&lt;span class="c1"># link = link.gsub( /\?.*/, &amp;#34;&amp;#34;)&lt;/span>
&lt;span class="c1"># out &amp;lt;&amp;lt; [title,link]&lt;/span>
&lt;span class="c1"># end&lt;/span>
&lt;span class="c1"># end&lt;/span>
&lt;span class="n">file_loop&lt;/span> &lt;span class="s2">&amp;#34;download_and_convert_to_md&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/latest_urls.csv&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clean_title&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/articles/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.article.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.article.html&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.md&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">clean_title&lt;/span> &lt;span class="n">full&lt;/span>
&lt;span class="n">full&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">downcase&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/’/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/[^0-9a-z]/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;_&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/__/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;_&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">rule&lt;/span> &lt;span class="s2">&amp;#34;.md&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;.article.html&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Nokogiri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">article&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">html&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;.postArticle-content&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="n">image_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">basename&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;.md&amp;#34;&lt;/span>
&lt;span class="n">image_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="s2">&amp;#34;---&amp;#34;&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="s2">&amp;#34;title: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">article&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;h1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">html&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;time&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;datetime&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="s2">&amp;#34;date: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="s2">&amp;#34;---&amp;#34;&lt;/span>
&lt;span class="n">article&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;h1,h2,h3,h4,p,blockquote,ol,ul,hr,img&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">elem&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="c1"># puts elem.to_s&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">elem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">downcase&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="s1">&amp;#39;hr&amp;#39;&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="s2">&amp;#34;* * *&amp;#34;&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="s1">&amp;#39;blockquote&amp;#39;&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="s2">&amp;#34;&amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">Upmark&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">convert&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">elem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="s1">&amp;#39;img&amp;#39;&lt;/span>
&lt;span class="n">src_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">elem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;src&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extname&lt;/span> &lt;span class="n">src_url&lt;/span>
&lt;span class="n">image_count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">output_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/articles/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">image_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">image_count&lt;/span>&lt;span class="si">}#{&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">output_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">src_url&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">output_name&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;img src=&amp;#39;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">image_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">image_count&lt;/span>&lt;span class="si">}#{&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39;/&amp;gt;&amp;#34;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="no">Upmark&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">convert&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">elem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:articles&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:download_and_convert_to_md&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:copy_to_final&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">file_loop&lt;/span> &lt;span class="ss">:copy_to_final&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/latest_urls.csv&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clean_title&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">outdir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">outputdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">mkdir_p&lt;/span> &lt;span class="n">outdir&lt;/span>
&lt;span class="n">cp&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/articles/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.md&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">outdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/index.md&amp;#34;&lt;/span>
&lt;span class="no">Dir&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">glob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/articles/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_*&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">cp&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">outdir&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:reload&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">Dir&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">glob&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">workingdir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/articles/*md&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">unlink&lt;/span> &lt;span class="n">f&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">default&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:articles&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Yes, No, Maybe, Don't Know, WTF</title><link>https://willschenk.com/articles/2016/yes-no-maybe/</link><pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2016/yes-no-maybe/</guid><description>&lt;p>Boolean logic is the basis for how computers work — digital means ones and zeroes, and ones and zeros is another way of saying boolean logic. In this world things are either true or they are false, there is no maybe, no hesitant pause,no anxiety provoking second thoughts. This type of logic goes back to Aristotle with the “law of the excluded middle”. Here’s &lt;a href="https://en.wikipedia.org/wiki/Law_of_excluded_middle">wikipedia weighing in&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>In logic, the law of excluded middle (or the principle of excluded middle) is the third of the three classic laws of thought. It states that for any proposition, either that proposition is true, or its negation is true.&lt;/p>
&lt;/blockquote>
&lt;p>On the one hand, this works incredibly well. (See Math, Science, going to the moon, etc.) But there are limits to this sort of thinking, especially when we are dealing with partial and unfolding knowledge of the world. We need to build (yet another) layer on top of boolean logic to help understand events as they happen.&lt;/p>
&lt;hr>
&lt;h2 id="are-you-driving">Are you driving&lt;/h2>
&lt;img src="yes_no_maybe_dont_know_wtf_the_limits_of_binary_logic_and_the_importance_of_forgetting_1.jpeg" class="float-left mr-2">
&lt;p>We’re building an app that will track how you use your Tesla. It’s called &lt;a href="http://teslatracks.happyfuncorp.com/" title="">TeslaTracks&lt;/a> and it looks at your driving habits, battery usage, how efficiently you are using energy and helping you understand the economics and overall awesomeness of electric car ownership.&lt;/p>
&lt;p>Let’s talk the most simple question we could ask and explore some of the challenges of understanding the answer to it.&lt;/p>
&lt;p>Are you driving?&lt;/p>
&lt;p>Logically, this statement could be true or it could be false. But how do we know the answer to this question? The simplified version is&lt;/p>
&lt;ol>
&lt;li>We are paying attention.&lt;/li>
&lt;li>The cloud server tries to connect to your car over the cellular network.&lt;/li>
&lt;li>If the car is on the network, it returns the transmission state.&lt;/li>
&lt;li>If the transmission state is either D, N, R then we know you are driving at a specific time.&lt;/li>
&lt;/ol>
&lt;p>&lt;em>(The actual logic coordinates more data-points than this, including phone accelerometer and GPS.)&lt;/em>&lt;/p>
&lt;h2 id="representing-logic">Representing Logic&lt;/h2>
&lt;p>In the world of boolean logic, the car is driving, or it is not driving. In the real world, if any of those steps fail — the most common reason is that you are driving through an area will no cell reception, which is a huge part of the North Eastern US where I mainly drive, and also plenty of parts inside of New York City where the buildings block things, or maybe that you are in a tunnel or parking underground or whatever — then we don’t know what you re doing. The statement isn’t true or false, the statement has an absence of evidence, it could be truish or falsish, it exists in a limbo state.&lt;/p>
&lt;p>In most programming languages you don’t deal with ones and zeros, you actually deal with variables that have values which is nice because one of those values is “no value set”. The database language SQL even has a nice NULL for those values that just aren’t known yet, and I’m going to use that 70s all caps awesomeness to break it down.&lt;/p>
&lt;p>How do we answer the question, “Is the car driving?” when we can only sample the car at an irregular frequency and some amount communication failure guaranteed?&lt;/p>
&lt;hr>
&lt;h2 id="hypothesis-guides-analysis">Hypothesis guides analysis&lt;/h2>
&lt;p>First, we need to keep track of when we know something, knowledge of the world must be tied to a time and never exists outside of that. Then we need to decide how long we remember that without a sample. The vast majority of things are temporary, and a theory of the world needs to be constantly propped up with incoming data and slowly unwind itself over time when nothing is there. When nothing is happening we should quietly go hibernate.&lt;/p>
&lt;p>&lt;strong>Step 1:&lt;/strong>&lt;/p>
&lt;p>This says, remember the knowledge of driving for 10 minutes without an event.&lt;/p>
&lt;img src="yes_no_maybe_dont_know_wtf_the_limits_of_binary_logic_and_the_importance_of_forgetting_2.jpeg" class="img-fluid">
&lt;p>Lets talk though a series of events where someone drove from 8:12 to 8:45 though a cell deadzone into an underground garage where they parked. We get a few events, first that the car was parked, then a few driving events before we enter into a area with really spotty service at 8:20, and finally a few before we leave the thing in the garage for a while. Then the car drove at 11:40 until 12:00, but we only got one measly data point, all listed on the left.&lt;/p>
&lt;p>Lets break down what the system knows now about the existing data. Before we have data, we don’t know anything. Then we know the car is parked, and driving for a while. Since we remember for 10 minutes, at 8:28 we “forget” that the car is driving and go back to not knowing anything. Then we know about that the car is driving from 8:30 but we again forget what’s happening at 8:42 until we know that they car is stopped at 8:45. Similarly the trip around lunch only has limited data. We know something is happening, but its not really clear, just one event at 11:45.&lt;/p>
&lt;h2 id="transition-states">Transition states&lt;/h2>
&lt;p>&lt;strong>Step 2:&lt;/strong>&lt;/p>
&lt;p>The question now becomes, how do we interpret these changes? What does it mean that we were driving and then we don’t know that we were driving, what do we do in these situations?&lt;/p>
&lt;p>We look at the transitions between states. 2 values with 3 states means that there are 6 total things to think about.&lt;/p>
&lt;img src="yes_no_maybe_dont_know_wtf_the_limits_of_binary_logic_and_the_importance_of_forgetting_3.jpeg" class="img-fluid">
&lt;p>We can pivot that around to see what’s happening, and based upon our knowledge of the world and what we thing is probable, we can use that to interpret the state changes:&lt;/p>
&lt;img src="yes_no_maybe_dont_know_wtf_the_limits_of_binary_logic_and_the_importance_of_forgetting_4.jpeg" class="img-fluid">
&lt;h2 id="let-me-tell-you-a-story">Let me tell you a story&lt;/h2>
&lt;p>So lets take our example above. At 8:12, driving &lt;strong>&lt;code>possibly_stayed_false&lt;/code>&lt;/strong> or &lt;strong>&lt;code>possibly_turned_false&lt;/code>&lt;/strong>, which is all the same to us.&lt;/p>
&lt;p>At 8:14 driving &lt;strong>&lt;code>turned_true&lt;/code>&lt;/strong>, which is super exciting and we can look at other sensors to figure out what’s happening with the battery, if the users phone is near the car, whatever.&lt;/p>
&lt;p>At 8:28 driving &lt;strong>&lt;code>possibly_turned_false&lt;/code>&lt;/strong>, or &lt;strong>&lt;code>possibly_stayed_true&lt;/code>&lt;/strong>. What to do here? Since we know that we don’t know for sure, we’ll tentatively mark the trip as stopped and look for other data streams that will tell us something, such as the GPS data on the phone which is queued up and sent once we get into signal.&lt;/p>
&lt;p>At 8:30 driving &lt;strong>&lt;code>turned_true&lt;/code>&lt;/strong> or &lt;strong>&lt;code>possibly_stayed_true&lt;/code>&lt;/strong>. If there was a trip recently, maybe they are part of the same one? Here’s a place to add in those heuristics. &lt;em>(We do this by looking a phone speed between the potentially new trip and the old trip and comparing start and end odometer values.)&lt;/em>&lt;/p>
&lt;p>At 8:42 driving &lt;strong>&lt;code>possibly_turned_false&lt;/code>&lt;/strong>, or &lt;strong>&lt;code>possibly_stayed_true&lt;/code>&lt;/strong>. We’ve been here before.&lt;/p>
&lt;p>At 8:45 driving &lt;strong>&lt;code>turned_false&lt;/code>&lt;/strong> or &lt;strong>&lt;code>possibly_turned_false&lt;/code>&lt;/strong>. Now the last trip, marked as tentatively closed, is closed for sure. Somewhere the car stopped, between 8:45 and the last knowledge of the car moving at 8:32. We can look at odometer data, gps data, etc to make an educated guess on the actual stopping time.&lt;/p>
&lt;p>At 8:55 driving &lt;strong>&lt;code>possibly_stayed_false&lt;/code>&lt;/strong>, or &lt;strong>&lt;code>possibly_turned_true&lt;/code>&lt;/strong>. We knew that the car was stopped, and now we’ve forgotten that since time 10 minutes has passed. Not driving is the quiescent state, meaning this is what the world looks like when at rest, so we *forget everything that we know. *This way when we start up again it will be as if the first time.&lt;/p>
&lt;p>At 11:45, driving &lt;strong>&lt;code>possibly_turned_true&lt;/code>&lt;/strong>, or &lt;strong>&lt;code>possibly_stayed_true&lt;/code>&lt;/strong>. but we don’t have a potentially open trip to result, so we can deduce that the trip is started. Where? When? Need to pull in other data sources.&lt;/p>
&lt;p>At 11:55, driving &lt;strong>&lt;code>possibly_turned_false&lt;/code>&lt;/strong>, or &lt;strong>&lt;code>possibly_stayed_true&lt;/code>&lt;/strong>. We basically have no good start time and no good end time.** Good luck with that! **Any wacky logic that you need to figure something out is now isolated to this case, while the other cases can rely upon better data.&lt;/p>
&lt;hr>
&lt;h2 id="you-see-what-you-are-looking-for">You see what you are looking for&lt;/h2>
&lt;p>We touched only upon the logical state changes for binary values. There are other things to track, like increasing things (&lt;strong>odometer&lt;/strong>, &lt;strong>time&lt;/strong>, &lt;strong>car software version&lt;/strong>) plus things that have local ranges, like &lt;strong>speed&lt;/strong>, &lt;strong>battery energy expenditure&lt;/strong>, or &lt;strong>charging rate&lt;/strong>. These require different techniques of dealing with partial and incomplete data. The basic idea is the same:&lt;/p>
&lt;ol>
&lt;li>Get a new piece of data.&lt;/li>
&lt;li>Interpret the new data with your current hypothesis of reality&lt;/li>
&lt;li>Update that hypothesis based upon the data or the time passed.&lt;/li>
&lt;/ol>
&lt;p>There are plenty of things that are neither true nor false, most of the time you are doing the best to guess. In those times you need to look at other co-occuring things to come up with a theory of what is reality and what you just forgot.&lt;/p></description></item><item><title>Deploying ActionCable on Heroku with Sidekiq</title><link>https://willschenk.com/articles/2016/deploying-actioncable-on-heroku/</link><pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2016/deploying-actioncable-on-heroku/</guid><description>&lt;p>ActionCable is WebSockets on rails. This lets you create realtime, interactive systems, where you can push data from one client to another client without reloading or polling. But how do we deploy it on heroku?&lt;/p>
&lt;p>ActionCable is composed to two main parts: a javascript client library, and a backend pub/sub system built upon Redis. We&amp;rsquo;re also going to use ActiveJob to offload the publishing tasks from the main user thread, so we&amp;rsquo;ll also be setting up sidekiq.&lt;/p>
&lt;p>Let&amp;rsquo;s go through the steps of how to deploy things on heroku.&lt;/p>
&lt;h2 id="first-the-app">First, the app&lt;/h2>
&lt;p>I&amp;rsquo;m going to use an app that &lt;a href="https://medium.com/@dhh/rails-5-action-cable-demo-8bba4ccfc55e#.q92qfr3c2">dhh made as a walk through.&lt;/a> What it does is&lt;/p>
&lt;ul>
&lt;li>creates a message model&lt;/li>
&lt;li>creates a rooms controller with a show action&lt;/li>
&lt;li>opens a websocket with the server&lt;/li>
&lt;li>that receives rendered messages on the &lt;code>rooms_channel&lt;/code>&lt;/li>
&lt;li>and accepts messages to be broadcast to everyone else&lt;/li>
&lt;li>uses a background worker to render the message and broadcast it back to everyone&lt;/li>
&lt;/ul>
&lt;p>I&amp;rsquo;ve &lt;a href="https://github.com/HappyFunCorp/actioncable_chatapp/blob/master/README.md">transcribed it here&lt;/a> to see what was added. The code is available to &lt;a href="https://github.com/HappyFunCorp/actioncable_chatapp">clone the code from github&lt;/a> if you don&amp;rsquo;t have an app that you are working on already.&lt;/p>
&lt;h2 id="now-lets-talk-about-deployment">Now lets talk about deployment&lt;/h2>
&lt;p>The app we generated was done using basic rails 5 commands, and it&amp;rsquo;s out of the box stuff. (Unlike most of the walkthroughs on this site which were done with &lt;a href="http://seed.happyfuncorp.com">seed&lt;/a>. It&amp;rsquo;s setup to use puma (good), which will handle the WebSockets. It&amp;rsquo;s also setup with ActiveJob and ActionCable, both on which are in async local mode and won&amp;rsquo;t use redis in development. ActionCable will also need to know where it&amp;rsquo;s websocket is going to connect to. Lets walk through everything that needs to get done.&lt;/p>
&lt;h2 id="gemfile">Gemfile&lt;/h2>
&lt;p>First we need to add some things to the Gemfile, specifically redis, postgres, and the sidekiq gems. Add the following to your &lt;code>Gemfile&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;redis&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;~&amp;gt; 3.0&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;pg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">group&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:production&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;sqlite3&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">group&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:development&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;sidekiq&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;sinatra&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">git&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;https://github.com/sinatra/sinatra&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:require&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you remove the &lt;code>sqlite3&lt;/code> on the top of the file, we only want it in development. We are installing &lt;code>sinatra&lt;/code> out of the master branch since the current release doesn&amp;rsquo;t play well with Rails 5. (If it tries to install Sinatra 1.0 you&amp;rsquo;ll get rake exception errors.) If you don&amp;rsquo;t want the web interface to sidekiq you can omit.&lt;/p>
&lt;h2 id="setup-sidekiq">Setup sidekiq&lt;/h2>
&lt;p>First we need to create a &lt;code>Procfile&lt;/code> that defines our dynos&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="ss">web&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">bundle&lt;/span> &lt;span class="nb">exec&lt;/span> &lt;span class="n">puma&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">C&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">puma&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rb&lt;/span>
&lt;span class="ss">worker&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">bundle&lt;/span> &lt;span class="nb">exec&lt;/span> &lt;span class="n">sidekiq&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;m running sidekiq with a concurrency of 2 to limit the number of redis connections. You&amp;rsquo;ll probably want that a lot higher in real life if you are using Sidekiq for other things..&lt;/p>
&lt;p>Now create &lt;code>config/initializers/active_job.rb&lt;/code> and tell ActiveJob to use &lt;code>sidekiq&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">active_job&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queue_adapter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:sidekiq&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And let&amp;rsquo;s add the sidekiq web interace to your &lt;code>config/routes.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;sidekiq/web&amp;#39;&lt;/span>
&lt;span class="n">mount&lt;/span> &lt;span class="no">Sidekiq&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Web&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;/sidekiq&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If this was a real app, you&amp;rsquo;d limit who can get to that engine. If you installed devise, the way to do that is:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">authenticate&lt;/span> &lt;span class="ss">:admin_user&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">mount&lt;/span> &lt;span class="no">Sidekiq&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Web&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;/sidekiq&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="a-brief-digression-to-test-locally">A brief digression to test locally&lt;/h2>
&lt;p>It&amp;rsquo;s always nice to change as little as we can, so when everything blows up in our face we can limit our investigations to a small change set. So lets first migrate our development environment to communicate over redis, so the ActiveJobs are run in a seperate process, and that ActionCable will be able to communicate from that process, back to the main web server, back to the client.&lt;/p>
&lt;p>Edit &lt;code>config/cable.yml&lt;/code> to set the development environment use to use redis.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">development&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">adapter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>redis&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>redis&lt;span class="p">:&lt;/span>//localhost&lt;span class="p">:&lt;/span>&lt;span class="m">6379&lt;/span>/&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you don&amp;rsquo;t have redis installed, use &lt;a href="http://brew.sh">homebrew&lt;/a> to do that now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ brew install redis
$ redis-server
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you don&amp;rsquo;t have foreman installed, do that now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ gem install foreman
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets run that app!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails db:migrate
$ foreman start
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Using foreman will start both the web interace as well as the sidekiq worker.&lt;/p>
&lt;p>Now you should be able to go to &lt;code>http://localhost:3000&lt;/code> in multiple windows and talk with yourself. I really like talking with myself, and I assume that you do as well.&lt;/p>
&lt;p>And &lt;code>http://localhost:3000/admin&lt;/code> should load up the sidekiq admin console. Validate that everything is working, since now we are going to spin up everything on heroku!&lt;/p>
&lt;h2 id="heroku-and-redis">Heroku and Redis&lt;/h2>
&lt;p>Create a new app:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ heroku create
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then we create a redis instance&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ heroku addons:create heroku-redis:hobby-dev
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We now need to tell ActionCable where it&amp;rsquo;s redis server is. Lets find out the answer and put in into the production section of &lt;code>config/cable.yml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ heroku config &lt;span class="p">|&lt;/span> grep REDIS
REDIS_URL: redis://h:p75fl9as.........
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>config/cable.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">production&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">adapter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>redis&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>redis&lt;span class="p">:&lt;/span>//h&lt;span class="p">:&lt;/span>p75fl9as.........&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="set-the-right-actioncable-websocket-address">Set the right ActionCable websocket address&lt;/h2>
&lt;p>We need to tell rails where it&amp;rsquo;s expected to receive the websocket connection from. &lt;code>heroku info&lt;/code> will show us our external application. If you deploy on a custom url, you&amp;rsquo;ll need to add that as well.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ heroku &lt;span class="nv">info&lt;/span>
&lt;span class="o">===&lt;/span> aqueous-thicket-49913
Addons: heroku-postgresql:hobby-dev
heroku-redis:hobby-dev
Dynos: web: 1, worker: &lt;span class="m">1&lt;/span>
Git URL: https://git.heroku.com/aqueous-thicket-49913.git
Owner: operations@happyfuncorp.com
Region: us
Repo Size: &lt;span class="m">34&lt;/span> KB
Slug Size: &lt;span class="m">29&lt;/span> MB
Stack: cedar-14
Web URL: https://aqueous-thicket-49913.herokuapp.com/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets tell rails about it. Edit &lt;code>config/environments/production.rb&lt;/code>. Obviously update the urls for your application.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">action_cable&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;wss://aqueous-thicket-49913.herokuapp.com/cable&amp;#39;&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">action_cable&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowed_request_origins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s1">&amp;#39;https://aqueous-thicket-49913.herokuapp.com&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that &lt;code>wss&lt;/code> is WebSockets over over SSL. You should use that, for a number of reasons including but not limited to security. However, if you don&amp;rsquo;t use SSL, use &lt;code>ws&lt;/code> instead.&lt;/p>
&lt;p>Now we need to tell the javascript where to connect. Lets open up &lt;code>app/views/layouts/application.html.erb&lt;/code> and add this into the &lt;code>&amp;lt;HEAD&amp;gt;&lt;/code>:&lt;/p>
&lt;pre>&lt;code> &amp;lt;%= action_cable_meta_tag %&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="commit-and-push">Commit and push&lt;/h2>
&lt;p>First we add the code to repo&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ git add .
$ git commit -a -m &lt;span class="s2">&amp;#34;Added heroku configuration&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we push to heroku itself:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ git push heroku master
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If that goes well, lets create the database tables and spin up the worker process&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ heroku run rake db:migrate
$ heroku ps:scale &lt;span class="nv">worker&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now, lets run the app and look at the logs:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ heroku open
$ heroku open
$ heroku log --tail
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We ran open twice, so you could see what was there in two windows. Does it work? Do 3 windows work?&lt;/p>
&lt;p>Do you like talking to yourself as much as I do?&lt;/p>
&lt;h2 id="but-does-it-scale">But does it scale&lt;/h2>
&lt;p>Right now you have 1 web dyno, running puma with 5 threads, and 1 worker dyno running sidekiq with 2 concurrent worker. This should be at least 5 redis connections, up to 2 more depending upon how many jobs have gone through sidekiq. Lets look at the redis info:&lt;/p>
&lt;pre>&lt;code class="language-basg" data-lang="basg">$ heroku redis:cli
ec2-54-243-230-243.compute-1.amazonaws.com:24949&amp;gt; info
....
# Clients
connected_clients:7
client_longest_output_list:0
client_biggest_input_buf:0
blocked_clients:2
....
&lt;/code>&lt;/pre>&lt;p>So we see that we have 7 active connections now. As you get more people listening to redis, those will go up. Adding more dynos will push the number of active connections up, so you need to be careful in sizing both your postgres install as well as your redis install.&lt;/p>
&lt;p>&lt;em>Image credit &lt;a href="https://www.flickr.com/photos/flintman45/15521201146/in/photolist-pDydmj-4EmYXp-5iGRcG-4KrLFJ-rjnz22-9Cpo2C-azDiP-adi58f-aSgSYP-7Uc2y7-bmGghk-a4pD4T-5wDbbf-a3zri3-7rDRMh-9Z3c6a-471ZjP-8qQ2fX-kYdZ28-9Z6fc9-9ap1TR-2nhNUA-93VFQa-76jVr-4Q3WXY-bbVhbt-9Z3ij2-kx5BP4-59LXDM-nnav37-eTfHYC-p3JqVp-k6dTdF-qxURpr-ay5db9-5vk21b-oC9hPd-n4bS2m-476583-pMvQCn-CffNFE-rbndpL-6QP35H-d1mxVf-9Wrx53-a1LCGS-d1mxZJ-9ugrWA-9XFZPm-46WZVf">Lee Roberts&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Owning a Tesla in Brooklyn</title><link>https://willschenk.com/articles/2016/owning-a-tesla-in-brooklyn/</link><pubDate>Wed, 09 Mar 2016 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2016/owning-a-tesla-in-brooklyn/</guid><description>&lt;p>I’ve owned a Tesla in Brooklyn for about 10 months now. This is what I’ve learned so far. A Tesla in Brooklyn isn’t that hard.&lt;/p>
&lt;p>I park my car on the street and have no regular place to plug in the car. This is very much like having a cell phone that you can only charge at the office or in coffee shops — kind of weird, takes a little bit of planning, but it can work. The car is so much fun that dealing with it is actually fun. The city is a tough environment. When I’m worried about leaving it on the street, mainly during snow storms where I don’t want to get buried in by a snow plow, I park it in a garage. See how well that works out when the snow all suddenly melts:&lt;/p>
&lt;p>I picked up the car from the Syosett service center 10 months ago and I’ve put over 11,000 miles on it since then. I drive the car to work everyday, through the soupy New York summers and through the increasingly mild winters. I’ve taken the car camping up in the woods away from the Supercharging network, as well as up in the mountains where we had few days of -20 degree weather. (Coldest it got was -31F, which for the metric folks around is about -34C, which for anyone or anything is not a great temperature to be in. The ice skating was fun.)&lt;/p>
&lt;p>The best thing is flooring it off of a stop sign and going to 40 MPH in a second or so. Faster than a Ferrari, greener than a Prius.&lt;/p>
&lt;h2 id="the-threezones">The three zones&lt;/h2>
&lt;p>When you own an electric car, you are in one of 3 zones:&lt;/p>
&lt;ol>
&lt;li>Radius of home, where you plug in every night and drive less than the range.&lt;/li>
&lt;li>Road trips, highway driving on the Supercharger network, where you go from charger to charger to final destination, basically taking a bathroom break every 2 hours.&lt;/li>
&lt;li>Range mode: Repurposing the public electric network, charging from regular outlets, the (suprisingly extensive) RV power network, or public charging stations. &lt;em>This is my Brooklyn tesla experience.&lt;/em>&lt;/li>
&lt;/ol>
&lt;h2 id="zone-1-homezone">Zone 1: Home Zone&lt;/h2>
&lt;p>I imagine that most Tesla drivers live in Zone 1, where honestly there’s nothing to think about. The Oatmeal wrote a comic about just using the regular 110v outlet to charge his car at &lt;a href="http://theoatmeal.com/comics/tesla_model_s" title="">http://theoatmeal.com/comics/tesla_model_s&lt;/a> not even bothering with a “fancy plug”. This gives you about 4 miles of charge per hour. If you drive for less then 40 miles a day and leave it plugged in for 10 hours at night the car is always full. (And even if it’s not, you probably are at home over the weekend enough to top off the rest.)&lt;/p>
&lt;p>I have a house outside of the city I use in the summer, and I asked an electritian to put a drier plug in my garage, a standard 220volt 40 amp circuit, which cost a couple hundred dollars to install. This puts 17 miles of charge per hour on the car, so an overnight charge puts 170 miles per night on the car. Which is way more than my normal driving day, but cooincidently the distance of the house from Brooklyn, so once I get up there I’m ready to turn around the next morning&lt;/p>
&lt;p>So if you live in Zone 1, charge-wise you never really need to think about anything.&lt;/p>
&lt;h2 id="zone-2-highway-superchargers">Zone 2: Highway Superchargers&lt;/h2>
&lt;p>The next thing is the supercharger network, which is amazing. It takes about 20 minutes to fill up halfway, and about 1 hour 10 minutes to fill up the 85 kWh battery. But there’s a better way.&lt;/p>
&lt;img src="owning_a_tesla_in_brooklyn_1.jpeg" class="img-fluid">
&lt;p>The trick here is that since the battery charge faster when they are empty, you want to only charge what you need to get to the next charger. The more charge that’s in the battery, the slower it charges, which in practice means that you want “just enough” charge in the batteries to get you to the next charger. As a rule of thumb, it takes 20 minutes to go from 0% to 50%, then 20 minutes to go to 75%, then 20 minutes to go to 87%, etc. The return on investment time goes down the higher you charge it.&lt;/p>
&lt;p>I tend to give myself about a 30% buffer, so if the route says I have 100 miles to go I try to get up to 130 miles range so I don’t need to think about driving speed. More buffer (50%) if its cold, if you have a lot of vertical, or if you are planning on speeding.&lt;/p>
&lt;p>Range of the car at 85 mph is roughly half of the range at 55 mph, so speed has the largest factor on range.&lt;/p>
&lt;h2 id="zone-3-rangemode">Zone 3: Range mode&lt;/h2>
&lt;p>Range anxiety is a real thing, but only for people who don’t own an electric car. You are driving around, slowly watching the battery meter go down down down, there’s no place obvious place to top it off, maybe you won’t charge it for a few days, unless you figure out a plan the car will just stop somewhere, probably in the middle of a highway… When you own a car in Brooklyn, this is the Zone you are in most of the time.&lt;/p>
&lt;img src="owning_a_tesla_in_brooklyn_2.jpeg" class="img-fluid">
&lt;p>What happens when you are driving and you run out of juice? Answer: no clue. Never happened. Of the Tesla owners that I’ve spoken to — and we are in a secret club where flash our little Tesla car keys to each other in liue of a handshake — they don’t know either. It happens about as much as you run out of gas, which I’ve never done either. It’s does take a little planning to avoid it, and you need to put some thought into it, but they are very simple thoughts to have.&lt;/p>
&lt;p>The biggest difference with a ICE Car, or Internal Combustion Engine, is that there’s a hundred years of infrastructure built out there. You don’t need to think about putting gas in the car because there are gas stations everywhere, with the possible exception of right near where you need to return a rental car where you can never find anything. An while in fact the electric grid is in many many more places, regular outlets take forever to charge and are only practical if you are staying overnight, not if you are on the go.&lt;/p>
&lt;h2 id="brooklyn-charging">Brooklyn Charging&lt;/h2>
&lt;p>When I need to top off, I’ll park the car in a garage that has a charger in it. There’s one in my neighborhood that is part of the ChargePoint network (&lt;a href="http://www.chargepoint.com" title="">http://www.chargepoint.com&lt;/a>). I signed up for that, they sent me a little RFID thingie, and I swipe it and plug in. I drop the car before work and head home with a full charge. This can take 8–9 hours to go from 40 mile left to fully charged. I tend to charge to 100%, rather than the recommended 90%, since I also tend to directly drive out of the city and so the battery is only full transiently.&lt;/p>
&lt;p>There are free chargers at the Whole Foods, which are very slow and usually broken. It’s really more of a gimmick, but it works in so far as I shop and find reasons to hang out there which I never did before. It’s a nice place to hang out and talk to other electric car drivers.&lt;/p>
&lt;p>Another in city option is the Supercharger in JFK. If you have phone calls to make, or want some undistracted time to get some work done, or want a nice drive down the belt parkway to enjoy the autopilot and catch up on some podcasts it works, but it’s a 3 hour process and traffic back always sucks.&lt;/p>
&lt;p>Since I live 2 block from the new Brooklyn Tesla dealership I’m hoping there’s a charging solution there for me, but no word yet.&lt;/p>
&lt;h2 id="summer-driving">Summer Driving&lt;/h2>
&lt;p>In the summer I can go a little more than 2 weeks driving in the city without charging it. However, I tend to go away on the weekends, so I hit a supercharger on my way out. The Paramus supercharger is about 30 miles away, so if I have more than 50 miles of range when I leave I stop there first. Newburgh is about 90 miles away, and it’s got a better resteraunt.&lt;/p>
&lt;p>&lt;strong>If you hit a super charger on the way in and out of the city and you go away every other weekend, you could probably not charge in the city at all during the summer. It’s more convient to top off before long trips though.&lt;/strong>&lt;/p>
&lt;h2 id="winter-driving-regen-and-phantomdrain">Winter Driving, Regen and Phantom Drain&lt;/h2>
&lt;img src="owning_a_tesla_in_brooklyn_3.jpeg" class="img-fluid">
&lt;p>The winters are where things get very different. The regenerative braking only works when the batteries are a certain temperature, and if it’s say 40 degrees outside, the car isn’t going to warm up enough to full use it. I would figure that you need a good 30 minutes of driving to warm up the car. The preconditioning stuff only works if you plug in, and since you don’t plug in, no luck. When the temperature is lower, the regen just turns itself off and you are back to driving a car that &lt;em>coasts&lt;/em>! Quelle horror!&lt;/p>
&lt;p>Between 50 and 30 degrees you lose 2–5 miles a night in phantom drain, which is energy that battery is using to keep itself warm. When it’s windy it seems to lose more drain. Around 20 degrees I’d figure you lose like 15 miles a night, which means that you need to be a lot more agressive in charging the car.&lt;/p>
&lt;p>So when it’s cold, the car drives less effeciently because you lose regen, and then the battery uses a lot more energy keeping itself warm. &lt;strong>You basically you need to plug it in once or twice a week to keep things safe.&lt;/strong>&lt;/p>
&lt;h2 id="charging-in-thecold">Charging in the cold&lt;/h2>
&lt;p>Everything is slow when it’s cold. I left the car at the airport for a few days, let it get nice and cold, and the supercharger didn’t work well when I returned. The car was probably 40 degrees and it was adding 10 miles per range rather than the normal 300+ miles per hour. I gave it about 15 minutes before I left which probably wasn’t enough for it to warm up.&lt;/p>
&lt;p>To give you a sense of what cold is like, here is some data from a few winter weekends ago when we went up to Lake Placid and it was cold. We left the city with whatever charge we had, made a bathroom pitstop at the Newburgh charger, then had lunch at the Albany supercharger, where we tooled around for a bit and went to LLBean and Whole Foods. (I never went to WholeFoods before this car now that I think about it.) Then from there we went to Lake Placid. If we weren’t in the Tesla we probably would have taken a little less time for lunch, but in Zone 2 travelling the overall trip time is actually very similar.&lt;/p>
&lt;p>Then we were in the mountains, in Zone 3. I emailed the hotel before I left and they provided me an extension cord to a regular wall plug. This was going to have to do. We left the car plugged in while we were there. If plugging in here didn’t work there were a few other options on plugshare.com. This is what the charging looked like, compared to what it should look like:&lt;/p>
&lt;img src="owning_a_tesla_in_brooklyn_4.jpeg" class="img-fluid">
&lt;p>The difference between the lines represent the energy it takes to keep the batteries in their operating temperature range. This is “phantom drain”. A 110 outlet is the “worst” way to charge, but its still enough to fill up while outside in the coldest weather in 3 days. Parking inside would have helped a lot as well.&lt;/p>
&lt;p>Lake Placid is 133 miles from the Albany supercharger, so with a 50% buffer that’s about 200 miles. In regular weather then, eyeballing the chart you’d be good after 30 hours charging, and super cold weather than was doubled to 60 hours charging. Alternatively, you could change the way you drive and slow down and you don’t need to have quite so much buffer, though the car does need to warm up and that takes a lot of juice.&lt;/p>
&lt;p>Here’s a graph of rate of charge vs outside temperature:&lt;/p>
&lt;img src="owning_a_tesla_in_brooklyn_5.jpeg" class="img-fluid">
&lt;p>I was worried that it would get down to 0, since you aren’t supposed to keep the car below -20F for more than 24 hours, but no issues.&lt;/p>
&lt;p>Handles great in the snow.&lt;/p>
&lt;h2 id="in-conclusion">In conclusion&lt;/h2>
&lt;img src="owning_a_tesla_in_brooklyn_6.jpeg" class="img-fluid">
&lt;p>It totally works.&lt;/p></description></item><item><title>Using seed to explore APIs</title><link>https://willschenk.com/articles/2015/using-seed-to-explore/</link><pubDate>Thu, 17 Sep 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/using-seed-to-explore/</guid><description>&lt;p>I&amp;rsquo;ve been working to update seed, which is HappyFunCorp&amp;rsquo;s app generator to make it easy to kick off MVPs. Check out the website for more information. One of the things that I&amp;rsquo;ve started to do is to seperate out the dependancies more, and being tutorials on how to use each of the different features. After I link to that stuff, let&amp;rsquo;s walk through a way to combine different techniques we&amp;rsquo;ve discussed together.&lt;/p>
&lt;ul>
&lt;li>Check out &lt;a href="http://seed.happyfuncorp.com">the site&lt;/a>&lt;/li>
&lt;li>Or watch the video:&lt;/li>
&lt;/ul>
&lt;div class="embed-responsive embed-responsive-16by9">
&lt;iframe src="https://www.youtube.com/embed/hCsPDaKHw6I?rel=0" allowfullscreen>&lt;/iframe>
&lt;/div>
&lt;h2 id="the-basic-process">The basic process&lt;/h2>
&lt;ol>
&lt;li>Get access to the API.&lt;/li>
&lt;li>Open up a console and start playing with commands.&lt;/li>
&lt;li>Start storing the data locally once we need to get more.&lt;/li>
&lt;li>Play around with the data.&lt;/li>
&lt;li>Design a UI around in.&lt;/li>
&lt;li>Refactor the test &amp;ldquo;scripts&amp;rdquo; into ruby classes that fit that UI.&lt;/li>
&lt;/ol>
&lt;h2 id="using-seed-oauth-and-rake-to-explore-github-data">Using Seed, OAuth, and Rake to explore github data&lt;/h2>
&lt;p>What I want to do is to look at all of the &lt;code>Gemfile&lt;/code>s for all of our projects, and see which gems are the most popular, which versions we are using, and if we can develop some more expertise around it. But first, I want to get the data.&lt;/p>
&lt;p>I could go to each of the repos in github, but there are well over a hundred so that doesn&amp;rsquo;t work. Github has an API, which is great, but I need oauth2 to access it. Let&amp;rsquo;s get going.&lt;/p>
&lt;h2 id="creating-a-github-application">Creating a github application&lt;/h2>
&lt;p>The first step is to make sure you have a github application.&lt;/p>
&lt;ol>
&lt;li>Go to &lt;a href="https://github.com/settings/developers">developer applications&lt;/a>&lt;/li>
&lt;li>Click &lt;em>Register New Application&lt;/em>&lt;/li>
&lt;li>Enter in &lt;code>http://localhost:3000/users/auth/github/callback&lt;/code> as the callback URL.&lt;/li>
&lt;li>Fill in whatever else.&lt;/li>
&lt;li>&lt;em>Resister the Application&lt;/em>&lt;/li>
&lt;/ol>
&lt;p>At this point you should have the &lt;em>Client ID&lt;/em> and the &lt;em>Client Secret&lt;/em>.&lt;/p>
&lt;h2 id="create-a-seed_defaults-file">Create a seed_defaults file&lt;/h2>
&lt;p>Once I create a remote app, I like to put the credentials into the &lt;code>~/.seed_defaults&lt;/code> file. This will make it so the next time I generate a seed app, these are the default credentials that are used.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">GITHUB_APP_ID&lt;/span>&lt;span class="o">=&lt;/span>replace with client id
&lt;span class="nv">GITHUB_APP_SECRET&lt;/span>&lt;span class="o">=&lt;/span>replace with client secret
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="generate-the-app">Generate the app&lt;/h2>
&lt;p>If you haven&amp;rsquo;t installed &lt;a href="http://seed.happyfuncorp.com">happy_seed&lt;/a> yet, do so now by typing &lt;code>gem install happy_seed&lt;/code>.&lt;/p>
&lt;p>Then generate the app:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ happy_seed rails project_stats
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now it&amp;rsquo;s going to install things. Inititally, just say no to everything. Once it&amp;rsquo;s done, install the github generator:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">cd&lt;/span> project_status
$ rails g happy_seed:github
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That will do its thing. Then we need to create the database and get going:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake db:migrate
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ask-for-more-scope">Ask for more scope&lt;/h2>
&lt;p>When the &lt;em>github&lt;/em> generator is run, it configures the oauth scope that it requests in &lt;code>config/initializers/devise.rb&lt;/code>. We need to ask for a bit more permissions, so open up that file and change the scope requested to be &lt;code>&amp;quot;user,repo,read:org&amp;quot;&lt;/code>, so:&lt;/p>
&lt;pre>&lt;code class="language-vash" data-lang="vash">config.omniauth :github, ENV['GITHUB_APP_ID'], ENV['GITHUB_APP_SECRET'], scope: &amp;quot;user,repo,read:org&amp;quot;
&lt;/code>&lt;/pre>&lt;p>Now lets start the server and see what&amp;rsquo;s up:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails s
&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>Point your browser to http://localhost:3000&lt;/li>
&lt;li>Select &amp;ldquo;Sign up&amp;rdquo; from the &amp;ldquo;Account&amp;rdquo; menu.&lt;/li>
&lt;li>Press &amp;ldquo;Sign in with Github&amp;rdquo;&lt;/li>
&lt;li>You should be bounced to github and you have to accept.&lt;/li>
&lt;li>You should be back on localhost with the message &lt;code>Successfully authenticated from Github account.&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="lets-play">Lets play&lt;/h2>
&lt;ol>
&lt;li>&lt;del>Get access to the API.&lt;/del>&lt;/li>
&lt;li>Open up a console and start playing with commands.&lt;/li>
&lt;li>Start storing the data locally once we need to get more.&lt;/li>
&lt;li>Play around with the data.&lt;/li>
&lt;li>Design a UI around in.&lt;/li>
&lt;li>Refactor the test &amp;ldquo;scripts&amp;rdquo; into ruby classes that fit that UI.&lt;/li>
&lt;/ol>
&lt;p>Lets get in that console and see what we can do. If you look at &lt;code>app/models/user.rb&lt;/code> you can see that there&amp;rsquo;s code to setup the github client, and we can access it like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails c
Loading development environment &lt;span class="o">(&lt;/span>Rails 4.2.3&lt;span class="o">)&lt;/span>
2.2.1 :001 &amp;gt; &lt;span class="nv">gc&lt;/span> &lt;span class="o">=&lt;/span> User.first.github_client
User Load &lt;span class="o">(&lt;/span>0.2ms&lt;span class="o">)&lt;/span> SELECT &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>.* FROM &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span> ORDER BY &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> ASC LIMIT &lt;span class="m">1&lt;/span>
User Load &lt;span class="o">(&lt;/span>0.2ms&lt;span class="o">)&lt;/span> SELECT &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>.* FROM &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span> ORDER BY &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> ASC LIMIT &lt;span class="m">1&lt;/span>
Identity Load &lt;span class="o">(&lt;/span>0.4ms&lt;span class="o">)&lt;/span> SELECT &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.* FROM &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span> WHERE &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> ? AND &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> ? ORDER BY &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> ASC LIMIT &lt;span class="m">1&lt;/span> &lt;span class="o">[[&lt;/span>&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span>, 1&lt;span class="o">]&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;github&amp;#34;&lt;/span>&lt;span class="o">]]&lt;/span>
Identity Load &lt;span class="o">(&lt;/span>0.4ms&lt;span class="o">)&lt;/span> SELECT &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.* FROM &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span> WHERE &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> ? AND &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> ? ORDER BY &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>.&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> ASC LIMIT &lt;span class="m">1&lt;/span> &lt;span class="o">[[&lt;/span>&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span>, 1&lt;span class="o">]&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;github&amp;#34;&lt;/span>&lt;span class="o">]]&lt;/span>
&lt;span class="o">=&lt;/span>&amp;gt; &lt;span class="c1">#&amp;lt;Octokit::Client:0x007fe1f7bec7e8&lt;/span>
2.2.1 :002 &amp;gt; gc.org_repos&lt;span class="o">(&lt;/span> &lt;span class="s1">&amp;#39;HappyFunCorp&amp;#39;&lt;/span>, &lt;span class="o">{&lt;/span>:type &lt;span class="o">=&lt;/span>&amp;gt; &lt;span class="s1">&amp;#39;private&amp;#39;&lt;/span>&lt;span class="o">}&lt;/span> &lt;span class="o">)&lt;/span>.count
&lt;span class="o">=&lt;/span>&amp;gt; &lt;span class="m">30&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ok, now we can start figuring out what we need to do to get access to the data. We have an authenticated user account, and we can start hitting the API. I know for a fact that I have way more than 30 repos &amp;ndash; I mean, seriously &amp;ndash; so first thing is to figure out why that is and how to get more. It&amp;rsquo;s probably related to pagination.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mo">003&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">gc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org_repos&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;HappyFunCorp&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:type&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;private&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">per_page&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>OK, looking through the &lt;a href="https://github.com/octokit/octokit.rb/issues/255">octokit issues&lt;/a> this can be dealt with by turning &lt;code>auto_paginate: true&lt;/code> on when we load up the client. So let&amp;rsquo;s edit &lt;code>app/models/user.rb&lt;/code> to do that:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="vi">@github_client&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">Octokit&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">access_token&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">github&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">accesstoken&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">auto_paginate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Back to the console, do &lt;code>reload!&lt;/code> and load up our client again. Notice that I&amp;rsquo;m making this a one liner, since we&amp;rsquo;re going to be doing it over and over its nice to use the arrow keys.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mo">004&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">reload!&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">gc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">github_client&lt;/span>
&lt;span class="no">Reloading&lt;/span>&lt;span class="o">...&lt;/span>
&lt;span class="no">User&lt;/span> &lt;span class="no">Load&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">SELECT&lt;/span> &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">*&lt;/span> &lt;span class="no">FROM&lt;/span> &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span> &lt;span class="no">ORDER&lt;/span> &lt;span class="no">BY&lt;/span> &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="no">ASC&lt;/span> &lt;span class="no">LIMIT&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="no">User&lt;/span> &lt;span class="no">Load&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">SELECT&lt;/span> &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">*&lt;/span> &lt;span class="no">FROM&lt;/span> &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span> &lt;span class="no">ORDER&lt;/span> &lt;span class="no">BY&lt;/span> &lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="no">ASC&lt;/span> &lt;span class="no">LIMIT&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="no">Identity&lt;/span> &lt;span class="no">Load&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">SELECT&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">*&lt;/span> &lt;span class="no">FROM&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span> &lt;span class="no">WHERE&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="no">AND&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="no">ORDER&lt;/span> &lt;span class="no">BY&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="no">ASC&lt;/span> &lt;span class="no">LIMIT&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">[[&lt;/span>&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;github&amp;#34;&lt;/span>&lt;span class="o">]]&lt;/span>
&lt;span class="no">Identity&lt;/span> &lt;span class="no">Load&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="no">SELECT&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">*&lt;/span> &lt;span class="no">FROM&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span> &lt;span class="no">WHERE&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="no">AND&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="no">ORDER&lt;/span> &lt;span class="no">BY&lt;/span> &lt;span class="s2">&amp;#34;identities&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="no">ASC&lt;/span> &lt;span class="no">LIMIT&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">[[&lt;/span>&lt;span class="s2">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;provider&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;github&amp;#34;&lt;/span>&lt;span class="o">]]&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="c1">#&amp;lt;Octokit::Client:0x007fe1f7d986f0 @access_token=&amp;#34;*.......&lt;/span>
&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mo">005&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">gc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org_repos&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;HappyFunCorp&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:type&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;private&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">169&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>OK, that looks better. That will give us a list of all the repos, so now we just need to see how to get the contents of our file, and then we can put it all together.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mo">006&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">repo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org_repos&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;HappyFunCorp&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:type&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;private&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:id&lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="mi">988713&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:name&lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;benchcoach&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:full_name&lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;HappyFunCorp/benchcoach&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:owner&lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>
&lt;span class="o">.....&lt;/span>
&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mo">007&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">repo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">full_name&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;HappyFunCorp/benchcoach&amp;#34;&lt;/span>
&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mo">00&lt;/span>&lt;span class="mi">8&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contents&lt;/span> &lt;span class="n">repo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">full_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Gemfile&amp;#39;&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:name&lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;Gemfile&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:path&lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;Gemfile&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:sha&lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;1d67bb85e43adab5b68ecc0eb3a5304e6ee2588e&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">....&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Looking at this, we see that github returns the contents of the file base64 encoded. I guess that makes sense, so if we want to print it out:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mo">00&lt;/span>&lt;span class="mi">9&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="no">Base64&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode64&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="using-rake-to-pull-the-data-down">Using Rake to pull the data down&lt;/h2>
&lt;ol>
&lt;li>&lt;del>Get access to the API.&lt;/del>&lt;/li>
&lt;li>&lt;del>Open up a console and start playing with commands.&lt;/del>&lt;/li>
&lt;li>Start storing the data locally once we need to get more.&lt;/li>
&lt;li>Play around with the data.&lt;/li>
&lt;li>Design a UI around in.&lt;/li>
&lt;li>Refactor the test &amp;ldquo;scripts&amp;rdquo; into ruby classes that fit that UI.&lt;/li>
&lt;/ol>
&lt;p>Lets use rake to start managing the data. We&amp;rsquo;re going to be using some of the techniques that were outlined in the &lt;a href="./using-rake-for-dataflow-programming-and-data-science/%5D">using rake for dataflow programming and data science&lt;/a> post. First step is to create a &lt;code>lib/tasks/github.rake&lt;/code> file that we&amp;rsquo;re going to put our tasks.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;fileutils&amp;#39;&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="s2">&amp;#34;data/projects.json&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;environment&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="no">FileUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkdir_p&lt;/span> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>
&lt;span class="n">gc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">github_client&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org_repos&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;HappyFunCorp&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:type&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;private&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:name&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">full_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:full_name&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">url&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:url&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;data/projects.json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">unparse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Be sure to change the &lt;code>HappyFunCorp&lt;/code> to your organization, or use the &lt;code>repos&lt;/code> call instead of the organization one.&lt;/em>&lt;/p>
&lt;p>Now lets run &lt;code>rake data/projects.json&lt;/code>. If you run it a second time, notice that rake returns imediately and doesn&amp;rsquo;t hit the remote server.&lt;/p>
&lt;ol>
&lt;li>The &lt;code>file&lt;/code> task only runs if the file doesn&amp;rsquo;t exist.&lt;/li>
&lt;li>&lt;code>Rake::Task[&amp;quot;environment&amp;quot;].invoke&lt;/code> is a way to ensure that a task as been run without forcing it to run.&lt;/li>
&lt;li>The API calls are from our console experiments.&lt;/li>
&lt;li>Just save it to a file.&lt;/li>
&lt;/ol>
&lt;p>OK, now lets be able to loop over everything to load the files that we want. First we define a method that lets us define a task to loop over all the entries in a JSON array, and then we&amp;rsquo;ll call it with our block which loads up the contents. (Add this to the end of the &lt;code>github.rake&lt;/code> file)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">def&lt;/span> &lt;span class="nf">for_each_elem&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">record&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">for_each_elem&lt;/span> &lt;span class="s2">&amp;#34;load_gemfiles&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;data/projects.json&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">outfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;data/gemfiles/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.Gemfile.lock&amp;#34;&lt;/span>
&lt;span class="no">FileUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkdir_p&lt;/span> &lt;span class="s2">&amp;#34;data/gemfiles&amp;#34;&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="n">outfile&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;environment&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="n">gc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">github_client&lt;/span>
&lt;span class="k">begin&lt;/span>
&lt;span class="n">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contents&lt;/span> &lt;span class="n">repo&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;full_name&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Gemfile.lock&amp;#39;&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span> &lt;span class="n">outfile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="no">Base64&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode64&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">rescue&lt;/span> &lt;span class="no">Octokit&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">NotFound&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;No Gemfile.lock found for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;full_name&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">outfile&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And run it, &lt;code>rake load_gemfiles&lt;/code>. Depending upon how many repos you have, this could take a few seconds. (Also make sure you&amp;rsquo;ve updated the organization!)&lt;/p>
&lt;ol>
&lt;li>Define a file task for each output file, that we will &lt;code>invoke&lt;/code> at the very end.&lt;/li>
&lt;li>Inside the task, make sure that the &lt;code>environment&lt;/code> is loaded.&lt;/li>
&lt;li>Pull down the contents of the Gemfile.lock from the API.&lt;/li>
&lt;/ol>
&lt;p>If you run this a second time, notice that it only attempts to load from the files that weren&amp;rsquo;t loaded before.&lt;/p>
&lt;p>For fun, delete the &lt;code>data&lt;/code> directly and run the rake task again. BOOM!&lt;/p>
&lt;h2 id="massaging-the-data-into-something-usable">Massaging the data into something usable&lt;/h2>
&lt;ol>
&lt;li>&lt;del>Get access to the API.&lt;/del>&lt;/li>
&lt;li>&lt;del>Open up a console and start playing with commands.&lt;/del>&lt;/li>
&lt;li>&lt;del>Start storing the data locally once we need to get more.&lt;/del>&lt;/li>
&lt;li>Play around with the data.&lt;/li>
&lt;li>Design a UI around in.&lt;/li>
&lt;li>Refactor the test &amp;ldquo;scripts&amp;rdquo; into ruby classes that fit that UI.&lt;/li>
&lt;/ol>
&lt;p>OK, now that we have all the data, lets figure out how to slice and dice it. Lets just wire together some standard UNIX tools to filter and get some info.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">for_each_elem&lt;/span> &lt;span class="s2">&amp;#34;filter_gemfiles&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;data/projects.json&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">sourcefile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;data/gemfiles/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.Gemfile.lock&amp;#34;&lt;/span>
&lt;span class="n">outfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;data/filtered/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">repo&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.gems&amp;#34;&lt;/span>
&lt;span class="no">FileUtils&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkdir_p&lt;/span> &lt;span class="s2">&amp;#34;data/filtered&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exists?&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">sourcefile&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="n">outfile&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">system&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;awk &amp;#39;/^ [^ ]/ { print $1, $2 }&amp;#39; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">sourcefile&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">outfile&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">outfile&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Running &lt;code>rake filter_gemfiles&lt;/code> will go through and only show the specific gems that were locked out the Gemfile.locks. Obviously, filtering the file based on the fact that it has exactly 4 spaces isn&amp;rsquo;t robust, but it works.&lt;/p>
&lt;p>Lets add a couple of other nifty methods:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">file&lt;/span> &lt;span class="s2">&amp;#34;data/versioned.list&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">system&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;cat data/filtered/* | sort | uniq -c | sort -rn &amp;gt; data/versioned.list&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="s2">&amp;#34;data/gems.list&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">system&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;awk &amp;#39;{print $1}&amp;#39; data/filtered/* | sort | uniq -c | sort -rn &amp;gt; data/gems.list&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;m going to stop here, but in case you are wondering the top gems that we use are:&lt;/p>
&lt;ol>
&lt;li>(82) json&lt;/li>
&lt;li>(81) tzinfo&lt;/li>
&lt;li>(81) i18n&lt;/li>
&lt;li>(81) activesupport&lt;/li>
&lt;li>(79) rack&lt;/li>
&lt;li>(79) multi_json&lt;/li>
&lt;li>(78) sass&lt;/li>
&lt;li>(77) rack-test&lt;/li>
&lt;li>(76) tilt&lt;/li>
&lt;li>(76) mime-types&lt;/li>
&lt;/ol>
&lt;h2 id="repeatable-data-in-10-minutes">Repeatable data in 10 minutes&lt;/h2>
&lt;p>There&amp;rsquo;s lots of stuff you can do from there, the most likely one being &amp;ldquo;sending an email and forgetting about it.&amp;rdquo; But lets look at what we have.&lt;/p>
&lt;ol>
&lt;li>The access key isn&amp;rsquo;t hard coded anywhere. When you come back to this, if it expires, you just reconnect on the website.&lt;/li>
&lt;li>Way easier to get access keys this way, only a few oauth providers make this simple. (Twitter does, for example, github doesn&amp;rsquo;t.)&lt;/li>
&lt;li>There&amp;rsquo;s a direct process transitioning from &amp;lsquo;playing around&amp;rsquo; to automated.&lt;/li>
&lt;li>Loading the data from the remote API is automated and repeatable. If you&amp;rsquo;ve setup the dependancies correctly, you can run the rake tasks and things magically get up to date.&lt;/li>
&lt;li>If you do want to build a UI around this, you already have a webapp up and running&amp;hellip;&lt;/li>
&lt;/ol>
&lt;p>Importantly, this is something that you can get up and going with in under 10 minutes, at least if you know how the API works. It takes less that 1 minute to get to the point where you have an authenticated client to the remote service and you can spend time exploring.&lt;/p>
&lt;p>One of the reasons I like having seed around to help prototype and explore ideas!&lt;/p>
&lt;p>Source code can be found: &lt;a href="https://github.com/wschenk/project_stats_demo">https://github.com/wschenk/project_stats_demo&lt;/a>&lt;/p></description></item><item><title>Building a GUI for managing middleman blogs</title><link>https://willschenk.com/articles/2015/building-a-gui-for-managing-middleman-blogs/</link><pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/building-a-gui-for-managing-middleman-blogs/</guid><description>&lt;p>Can we make static site generators work like a normal site? Lets take a look at how we&amp;rsquo;d start to implement &lt;a href="./slow-data-and-fast-sites/">Slow Data and Fast Sites&lt;/a> using the example of building an admin UI for a Middleman blog.&lt;/p>
&lt;h2 id="tldr">TLDR&lt;/h2>
&lt;p>Given a middleman app with &lt;code>middleman-blog&lt;/code> and &lt;code>middleman-blog-drafts&lt;/code> configured:&lt;/p>
&lt;ol>
&lt;li>Add &lt;code>middleman-blog-ui&lt;/code> in your &lt;code>Gemfile&lt;/code>. &lt;em>This document describes how &lt;code>middleman-blog-ui&lt;/code> works.&lt;/em>&lt;/li>
&lt;li>Add &lt;code>activate :blog_ui&lt;/code> in &lt;code>config.rb&lt;/code>&lt;/li>
&lt;li>Start &lt;code>middleman server&lt;/code>&lt;/li>
&lt;li>Visit &lt;a href="http://localhost:4567/admin">http://localhost:4567/admin&lt;/a>.&lt;/li>
&lt;/ol>
&lt;p>And now you are living in the fabulous world where you can, from your browser:&lt;/p>
&lt;ul>
&lt;li>Edit existing drafts and posts&lt;/li>
&lt;li>Create new drafts&lt;/li>
&lt;li>Publish drafts into posts&lt;/li>
&lt;li>Run some basic &lt;code>git&lt;/code> commands.&lt;/li>
&lt;li>Run &lt;code>middleman build&lt;/code>&lt;/li>
&lt;li>Run &lt;code>middleman deploy&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="why-do-this">Why do this&lt;/h2>
&lt;p>This is explained in more detail in the &lt;a href="./slow-data-and-fast-sites/">Slow Data and Fast Sites&lt;/a> post, but basically what we&amp;rsquo;re trying to do it seperate out runtime tooling with development time tooling. &lt;em>Future work will be around differentiating when components are rendered and from which data source.&lt;/em>&lt;/p>
&lt;p>Static sites have a huge runtime benefit, but actually setting them up and running them can &lt;a href="http://veekaybee.github.io/static-sites-suck/">really suck unless you already know how to do it&lt;/a>. This is a proof of concept of how to add a CMS to a static site so that it&amp;rsquo;s easier to manage. This doesn&amp;rsquo;t address the &amp;ldquo;pain in the ass to setup&amp;rdquo; part, but it helps with the usability.&lt;/p>
&lt;p>Lets walk through what we&amp;rsquo;re doing if we were to implement this in your own app directly. The gem packages this up with a slightly different directory scheme, but the code below is the same but slightly easier to understand.&lt;/p>
&lt;h2 id="the-basic-idea">The basic idea&lt;/h2>
&lt;p>We&amp;rsquo;re going to add a static JavaScript application in the &lt;code>source/admin&lt;/code> directory which will interact with the local filesystem and middleman install. This application will consume data from your middleman app on the local system, in the &amp;ldquo;development&amp;rdquo; environment, such as the lists of published and draft articles, and will interact with a API server that will be mounted as part of the middleman preview server. This will allow the Javascript app to change the filesystem, which will in turn be monitored and rendered by the middleman application.&lt;/p>
&lt;p>Examples of the commands that can be triggered are:&lt;/p>
&lt;ul>
&lt;li>create new draft&lt;/li>
&lt;li>publish draft into article&lt;/li>
&lt;li>&lt;code>git status&lt;/code>&lt;/li>
&lt;li>&lt;code>bundle exec middleman build&lt;/code>&lt;/li>
&lt;/ul>
&lt;img src="arch.dot.svg" class="img-fluid">
&lt;p>Let go through each of the components as if we were building them in our app directly. The &lt;code>gem&lt;/code> does a lot of this for you, but it&amp;rsquo;s always nice to see how it works.&lt;/p>
&lt;h2 id="static-middleman-site">Static Middleman Site&lt;/h2>
&lt;p>We&amp;rsquo;re going to add our files in &lt;code>source/admin&lt;/code>, and &lt;code>source/javascript/admin&lt;/code> and &lt;code>source/stylesheets/admin.scss&lt;/code>. All of these files will be rendered in development mode, so when the server is running locally and you load up &lt;a href="http://localhost:4567/admin">http://localhost:4567/admin&lt;/a> we can use the middleman build process to load up our UI. This, in turn, will use AJAX to pull in data from the running middleman instance.&lt;/p>
&lt;p>Inside of &lt;code>config.rb&lt;/code>, we tell middleman about our pages, and we tell the build process to ignore these files as part of the build process since we don&amp;rsquo;t want to release them into production:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">page&lt;/span> &lt;span class="s2">&amp;#34;/admin/*html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">layout&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;admin/layout&amp;#34;&lt;/span>
&lt;span class="c1"># Build-specific configuration&lt;/span>
&lt;span class="n">configure&lt;/span> &lt;span class="ss">:build&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">ignore&lt;/span> &lt;span class="s1">&amp;#39;/admin/*&amp;#39;&lt;/span>
&lt;span class="n">ignore&lt;/span> &lt;span class="s1">&amp;#39;/stylesheets/admin/*&amp;#39;&lt;/span>
&lt;span class="n">ignore&lt;/span> &lt;span class="s1">&amp;#39;/javascripts/admin/*&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If they were not ignored, then you would be deploying a read-only version of the admin tools, since the production build would include the javascript application but not the API which is needed to make changes.&lt;/p>
&lt;p>This will allow us to create files like &lt;code>/source/admin/drafts.json.erb&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-erb" data-lang="erb">&amp;lt;%% d = drafts.collect do |d|
{ path: d.path, title: d.title }
end
%&amp;gt;&amp;lt;%%=
{drafts: d }.to_json
%&amp;gt;
&lt;/code>&lt;/pre>&lt;p>That we can load from our JS app like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;/admin/drafts.json&amp;#39;&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that when we do &lt;code>middleman build&lt;/code> these files &lt;em>will not&lt;/em> be generated, since we&amp;rsquo;ve specified them as &lt;code>ignore&lt;/code>. These files only are in the &lt;code>:development&lt;/code> environment.&lt;/p>
&lt;h2 id="the-sinatra-app">The Sinatra App&lt;/h2>
&lt;p>That&amp;rsquo;s fine for static data, or data that can be exposed using normal middleman ways of doing things, but we&amp;rsquo;ll also want to be able to interact with the filesystem and run commands. It&amp;rsquo;s also going to be useful to interact with the middleman &lt;em>Sitemap&lt;/em> as it understands it, so we can build a simple sinatra app that acts as a bridge. The current version of the code I&amp;rsquo;m using for this blog can be found &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/blob/master/lib/middleman/blog/ui/api_server.rb">on github&lt;/a>.&lt;/p>
&lt;p>First we need to &lt;code>require&lt;/code> and &lt;code>mount&lt;/code> our app on &lt;code>config.rb&lt;/code>. This is done like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;lib/apiserver.rb&amp;#39;&lt;/span>
&lt;span class="n">map&lt;/span> &lt;span class="s2">&amp;#34;/api&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">run&lt;/span> &lt;span class="no">ApiServer&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The commands we want to support are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>get /api/post&lt;/code> - load a specific post and metadata&lt;/li>
&lt;li>&lt;code>post /api/post&lt;/code> - save a post and update metadata&lt;/li>
&lt;li>&lt;code>post /api/images&lt;/code> - upload an image (for drag and drop) (not implemented)&lt;/li>
&lt;li>&lt;code>post /api/draft&lt;/code> - create a new draft post&lt;/li>
&lt;li>&lt;code>post /api/publish&lt;/code> - change a draft into an article&lt;/li>
&lt;li>&lt;code>post /api/update&lt;/code> - run &lt;code>git pull origin master 2&amp;gt;&amp;amp;1&lt;/code>&lt;/li>
&lt;li>&lt;code>post /api/diff&lt;/code> - run &lt;code>git diff 2&amp;gt;$1&lt;/code>&lt;/li>
&lt;li>&lt;code>post /api/status&lt;/code> - run &lt;code>git status 2&amp;gt;&amp;amp;1&lt;/code>&lt;/li>
&lt;li>&lt;code>post /api/build&lt;/code> - run &lt;code>bundle exec middleman build 2&amp;gt;&amp;amp;1&lt;/code>&lt;/li>
&lt;li>&lt;code>post /api/deploy&lt;/code> - run &lt;code>bundle exec middleman deploy 2&amp;gt;&amp;amp;1&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>To reiterate right now the code is in more of a proof of concept, butso please feel free to make suggestions. Lets take a look at a few of these methods in &lt;code>lib/api_server.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;sinatra/base&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;sinatra/json&amp;#39;&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">ApiServer&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Sinatra&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>
&lt;span class="n">get&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="s2">&amp;#34;This is the api server&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">get&lt;/span> &lt;span class="s1">&amp;#39;/post&amp;#39;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_app&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span> &lt;span class="s2">&amp;#34;Looking up &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:path&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sitemap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_resource_by_path&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:path&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:path&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">file&lt;/span>
&lt;span class="n">status&lt;/span> &lt;span class="mi">404&lt;/span>
&lt;span class="n">json&lt;/span> &lt;span class="ss">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Unknown path &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:path&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">raw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source_file&lt;/span>
&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">raw&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/^---\n.*?---\n*/m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1"># Remove the preyaml&lt;/span>
&lt;span class="n">json&lt;/span> &lt;span class="ss">meta&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">body&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="kp">private&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">load_app&lt;/span>
&lt;span class="n">opts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inst&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">set&lt;/span> &lt;span class="ss">:environment&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">opts&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:environment&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">to_sym&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">opts&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:environment&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">logger&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">app&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">logger&lt;/span>
&lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">singleton&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-javascript-app">The Javascript App&lt;/h2>
&lt;p>I also wanted to see how to build this in &lt;a href="http://facebook.github.io/react/index.html">React&lt;/a> and &lt;a href="https://github.com/reflux/refluxjs">Reflux&lt;/a> to start exploring how we can start to add build-type rendering into the equation. While this doesn&amp;rsquo;t do any server side rendering, its still good to explore how a React app actually works.&lt;/p>
&lt;p>The main html file simple calls &lt;code>React.render( React.createElement(App, null), document.getElementById('content') );&lt;/code> to setup the page. The &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/blob/master/source/javascripts/admin/components/app.js.coffee">App&lt;/a> component works off of the &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/blob/master/source/javascripts/admin/stores/article.coffee">pathStore&lt;/a> component, which keeps track of what page the user is currently editing. Lets take a quick look at how the &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/blob/master/source/javascripts/admin/components/dashboard_draft_list.js.coffee">DashboardDraftList&lt;/a> component works:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-coffeescript" data-lang="coffeescript">&lt;span class="vi">@DashboardDraftList = &lt;/span>&lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createClass&lt;/span>
&lt;span class="nv">mixins: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">Reflux&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">draftStore&lt;/span>&lt;span class="p">)],&lt;/span>
&lt;span class="nv">getInitialState: &lt;/span>&lt;span class="nf">-&amp;gt;&lt;/span>
&lt;span class="nv">drafts: &lt;/span>&lt;span class="p">[]&lt;/span>
&lt;span class="nv">componentDidMount: &lt;/span>&lt;span class="nf">-&amp;gt;&lt;/span> &lt;span class="nx">updateDraftList&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nv">render: &lt;/span>&lt;span class="nf">-&amp;gt;&lt;/span>
&lt;span class="nv">drafts = &lt;/span>&lt;span class="nx">@state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">drafts&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span> &lt;span class="nf">(item) -&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">li&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nx">a&lt;/span> &lt;span class="nx">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">viewPath&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nx">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="nx">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;maincontent&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Drafts&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">ul&lt;/span> &lt;span class="nx">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;nav nav-pills nav-stacked&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">drafts&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nx">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first thing that this does is wire itself up to the &lt;code>draftStore&lt;/code> store which manages the communication to the server and the state received from the server. When this changes, &lt;code>draftStore&lt;/code> will trigger a state change and all components that have been connected will receive a &lt;code>setState&lt;/code> message, which will then call the &lt;code>render&lt;/code> method of the component keeping the UI up to date. As part of the React component life cycle &lt;code>componentDidMount&lt;/code>, we call the &lt;code>updateDraftList()&lt;/code> action when the component is first loaded on the page. This is defined in &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/blob/master/source/javascripts/admin/stores/drafts.coffee">drafts store&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-coffeescript" data-lang="coffeescript">&lt;span class="vi">@updateDraftList = &lt;/span>&lt;span class="nx">Reflux&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createAction&lt;/span>
&lt;span class="nv">asyncResult: &lt;/span>&lt;span class="kc">true&lt;/span>
&lt;span class="vi">@draftStore = &lt;/span>&lt;span class="nx">Reflux&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createStore&lt;/span>
&lt;span class="nv">init: &lt;/span>&lt;span class="nf">-&amp;gt;&lt;/span>
&lt;span class="vi">@drafts = &lt;/span>&lt;span class="p">[]&lt;/span>
&lt;span class="nx">@listenTo&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">updateDraftList&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">@onUpdateDrafts&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nv">onUpdateDrafts: &lt;/span>&lt;span class="nf">-&amp;gt;&lt;/span>
&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span> &lt;span class="s">&amp;#34;/admin/drafts.json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">(err, response) =&amp;gt;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ok&lt;/span>
&lt;span class="nx">updateDraftList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">completed&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="vi">@drafts = &lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>
&lt;span class="nx">@trigger&lt;/span> &lt;span class="nx">@drafts&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nx">updateDraftList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">failed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first thing we do is to define and export a &lt;code>Reflux&lt;/code> action called &lt;code>updateDraftList&lt;/code>. This action is what the &lt;code>componentDidMount&lt;/code> function triggeres. Inside of the &lt;code>draftStore&lt;/code> we listen for that action, and when it get it, call &lt;code>onUpdateDrafts&lt;/code>. This uses request.get to load up the json from &lt;code>/admin/drafts.json&lt;/code> and then pushes it out to all of the components that have subscribed to it.&lt;/p>
&lt;p>The other components are &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/tree/master/source/javascripts/admin/components">defined here&lt;/a> and the different stores can be &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/tree/master/source/javascripts/admin/stores">found here&lt;/a>. This is my first real React app so I&amp;rsquo;m sure there&amp;rsquo;s cleaner/better ways of doing things&amp;hellip;&lt;/p>
&lt;h2 id="putting-it-all-together">Putting it all together&lt;/h2>
&lt;p>When I was working on this I did it out of the source directory of this blog, but I wanted to package it up into a gem so that other folks could use it. I pulled the relavent code out from &lt;code>willschenk.com/source&lt;/code> into &lt;code>middleman-blog-ui/source&lt;/code> and then created a middleman extension to put the various templates in the sitemap, tell sprockets where to find the javascript files, and setup coffee script.&lt;/p>
&lt;p>The &lt;a href="https://github.com/HappyFunCorp/middleman-blog-ui/blob/master/lib/middleman/blog/ui/extension.rb">full code&lt;/a> is found on github, but to explain how it works:&lt;/p>
&lt;ol>
&lt;li>Define &lt;code>SOURCE_DIR&lt;/code>&lt;/li>
&lt;li>Map the sinatra app &lt;code>ApiServer&lt;/code> in the extentions &lt;code>initialize&lt;/code> method, using &lt;code>app.map&lt;/code>.&lt;/li>
&lt;li>Register the CoffeeScript processing using &lt;code>::Sprockets.register_preprocessor 'application/javascript', ::Sprockets::CoffeeReact&lt;/code>&lt;/li>
&lt;li>Use &lt;code>after_configuration&lt;/code> to register the application templates, by creating &lt;code>Middleman::Sitemap::Resource&lt;/code> objects mapping the sitemap urls with the filesytem paths.&lt;/li>
&lt;li>Adding each of the javascript and stylesheet files to &lt;code>app.sprockets&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>This is mainly a proof of concept, but I&amp;rsquo;m using it right now to write this post. The app itself needs&lt;/p>
&lt;ol>
&lt;li>A decent UI&lt;/li>
&lt;li>Support for other static generators other than middleman&lt;/li>
&lt;li>A concept of users&lt;/li>
&lt;li>Shared drafts&lt;/li>
&lt;li>Better error handling&lt;/li>
&lt;/ol>
&lt;p>If you are at all interested in this, please let me know!&lt;/p></description></item><item><title>Receiving posted JSON with Sinatra</title><link>https://willschenk.com/articles/2015/receiving-posted-json-with-sinatra/</link><pubDate>Mon, 27 Jul 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/receiving-posted-json-with-sinatra/</guid><description>&lt;p>Here&amp;rsquo;s some simple code to accept a JSON string posted to a &lt;a href="http://www.sinatrarb.com">Sinatra&lt;/a> end point rather than a form. I switched from using &lt;a href="http://jquery.com">jQueries&lt;/a> &lt;code>$.ajax&lt;/code> method to &lt;a href="https://github.com/visionmedia/superagent">superagent&lt;/a> as part of my exploration of the node javascript package universe, and it has a different way of serializing nest objects when posting as a form. Specifically, it doesn&amp;rsquo;t.&lt;/p>
&lt;p>I needed something that could do both.&lt;/p>
&lt;h2 id="code-to-use-form-encoding-or-json-blob">Code to use form encoding or JSON blob&lt;/h2>
&lt;p>This first tries and loads the parameters using the normal form encoding methods. If it doesn&amp;rsquo;t find the &lt;code>path&lt;/code> parameter, it attempts to parse the body&amp;rsquo;s payload, found in &lt;code>request.body.read&lt;/code>, using &lt;code>JSON.parse&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">post&lt;/span> &lt;span class="s1">&amp;#39;/post&amp;#39;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">params&lt;/span>
&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">symbolize_keys&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:path&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span> &lt;span class="s2">&amp;#34;Saving &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:path&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> with &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:meta&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">load_app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sitemap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_resource_by_path&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:path&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="javascript">Javascript&lt;/h2>
&lt;p>The coffeescript that calls this is:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-coffeescript" data-lang="coffeescript">&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span> &lt;span class="s">&amp;#34;/api/post&amp;#34;&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#39;application/json&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span> &lt;span class="nv">path: &lt;/span>&lt;span class="nx">@state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">meta: &lt;/span>&lt;span class="nx">@state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">metadata&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">body: &lt;/span>&lt;span class="nx">@state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">markdown&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span> &lt;span class="nf">(err, response) =&amp;gt;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ok&lt;/span>
&lt;span class="vi">@state.saving = &lt;/span>&lt;span class="kc">false&lt;/span>
&lt;span class="vi">@state.dirty = &lt;/span>&lt;span class="kc">false&lt;/span>
&lt;span class="nx">@trigger&lt;/span> &lt;span class="nx">@state&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, &lt;code>@state.metadata&lt;/code> is also a complex object, and posting it as JSON ensures that it&amp;rsquo;s marshalled correctly.&lt;/p>
&lt;p>Not too complicated.&lt;/p></description></item><item><title>Bower with Rails</title><link>https://willschenk.com/articles/2015/bower-with-rails/</link><pubDate>Sat, 25 Jul 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/bower-with-rails/</guid><description>&lt;p>Let&amp;rsquo;s look at how we can integrate bower with rails and Sprockets. &lt;a href="http://bower.io">Bower&lt;/a> is one of the two major javascript package managers, the other being the Node Package Manager, or &lt;a href="https://www.npmjs.com">npm&lt;/a>. The biggest difference between the two is how the javascript is packaged up. Bower is the more straightforward of the two, and it mainly a way to distribute javascript and keep things up to date.&lt;/p>
&lt;h2 id="install-bower">Install Bower&lt;/h2>
&lt;p>The first step is to install bower. Ironically, we need to use npm to do that! On OSX, the easiest way is to use the &lt;a href="http://brew.sh">Homebrew&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ brew install node
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then let&amp;rsquo;s install bower in your local command path so you can run it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ npm install -g bower
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setup-bower">Setup Bower&lt;/h2>
&lt;p>Now let&amp;rsquo;s setup rails to work with bower. This section assumes that you already have a rails application.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> rails_application
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a &lt;code>.bowerrc&lt;/code> file. This is going to tell bower where to install the packages it needs, and we&amp;rsquo;re going to say put it in &lt;code>vendor/assets/bower_components&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;directory&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vendor/assets/bower_components&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run &lt;code>bower init&lt;/code> to create a &lt;code>bower.json&lt;/code> file. This file is similar to a &lt;code>Gemfile&lt;/code>, in that it lists out the dependancies, and when you run bower again, it will download the specific versions from the intertubes.&lt;/p>
&lt;h2 id="tell-rails-where-to-look">Tell rails where to look&lt;/h2>
&lt;p>Inside of &lt;code>config/application.rb&lt;/code> we&amp;rsquo;re going to tell spockets and additional directory to look for javascript components.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">paths&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;vendor&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;assets&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;bower_components&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="small-walk-through">Small walk through&lt;/h2>
&lt;p>Let&amp;rsquo;s say you want to use Google Maps with Angular. &lt;a href="http://angular-ui.github.io/angular-google-maps/#!/">angular-google-maps&lt;/a> is a package that does a lot of the heavy lifting for you, so lets install that. We&amp;rsquo;re going to tell bower to keep track of the packages we want inside of our &lt;code>bower.json&lt;/code> file by passing in the &lt;code>--save&lt;/code> option:&lt;/p>
&lt;pre>&lt;code>$ bower install --save angular-google-maps
[...]
angular-google-maps#2.1.5 vendor/assets/bower_components/angular-google-maps
├── angular#1.4.3
└── lodash#3.10.0
lodash#3.10.0 vendor/assets/bower_components/lodash
angular#1.4.3 vendor/assets/bower_components/angular
&lt;/code>&lt;/pre>&lt;p>I&amp;rsquo;ve cleaned up some of the output, but you can see that bower installed angular-google-maps and it&amp;rsquo;s dependancies, angular itself and lodash. Lets go to our &lt;code>application.js&lt;/code> file now to tell Sprockets that we want to use this awesome stuff:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">//= require lodash
&lt;/span>&lt;span class="c1">//= require angular
&lt;/span>&lt;span class="c1">//= require angular-google-maps
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since we&amp;rsquo;ve added &lt;code>vendor/assets/bower_components&lt;/code> in Sprockets load path, it should be able to find all of these files. Notice that you don&amp;rsquo;t need to know where to get all of the dependancies from, but you do need to make sure that you specify them in your &lt;code>application.js&lt;/code> in the right order. We&amp;rsquo;ll be talking about &lt;code>browersify&lt;/code> in future posts that assuages this issue.&lt;/p>
&lt;h2 id="to-check-in-or-not-to-check-in">To check in or not to check in&lt;/h2>
&lt;p>I prefer to check in the dependancies inside of my source control. This isn&amp;rsquo;t necessary and in some ways is a waste of disk space, but I think it&amp;rsquo;s easier to figure out what&amp;rsquo;s going on if there&amp;rsquo;s less magic. This can be confusion if you start to make local tweaks of the javascript, which you should never do.&lt;/p>
&lt;p>However, it&amp;rsquo;s not necessary to check things in if you expand your build process a bit. If you look inside of your &lt;code>bower.json&lt;/code> file, you&amp;rsquo;ll see that it specifies the specific version of the bower package that you installed.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;rails_app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;0.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;authors&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;Will Schenk &amp;lt;wschenk@gmail.com&amp;gt;&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="s2">&amp;#34;license&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;MIT&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;ignore&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;**/.*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;node_modules&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;bower_components&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tests&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="s2">&amp;#34;dependencies&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;angular-google-maps&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;~2.1.5&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This should contain all the information needed so that when you run &lt;code>bower install&lt;/code> again, all of the correct versions of the files will be downloaded. You could make it part of your build process, much like how running &lt;code>bundle install&lt;/code> is part of the standard rails build pack. Bundler looks through &lt;code>Gemfile.lock&lt;/code> and installs those specific packages. The version is always specified inside of &lt;code>bower.json&lt;/code> so there doesn&amp;rsquo;t need to be two files.&lt;/p></description></item><item><title>Adding search to a middleman blog</title><link>https://willschenk.com/articles/2015/adding-search-to-a-middleman-blog/</link><pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/adding-search-to-a-middleman-blog/</guid><description>&lt;p>We&amp;rsquo;re going to build a simple, niave search for middleman blogs. We&amp;rsquo;re going to build a &lt;em>search index&lt;/em> at build time, and then use that index to perform the search itself on the client side.&lt;/p>
&lt;h2 id="building-the-index">Building the index&lt;/h2>
&lt;p>When you typed in something in google, it doesn&amp;rsquo;t then go and hit every page on the internet to check to see if there&amp;rsquo;s a match. It doesn&amp;rsquo;t even look at every page that it has squirreled away somewhere in the googleplex. What it consults is an &lt;em>index&lt;/em> of the documents out there, and the index points to the page information. (We all know that it&amp;rsquo;s a lot more complicated than that really, but run with it.)&lt;/p>
&lt;p>First thing we&amp;rsquo;re going to do is create a very simple version of this index for your site. This is going to be in a file called &lt;code>source/article.index.json.erb&lt;/code>.&lt;/p>
&lt;ol>
&lt;li>Go through all of the articles.&lt;/li>
&lt;li>Add meta data for the article into the master map.&lt;/li>
&lt;li>Find all of the words in the article, by stripping out all of the html tags, making things lowercase, and breaking it apart by white space.&lt;/li>
&lt;li>Insert all of those words into our index.&lt;/li>
&lt;li>Convert the whole sucker to JSON.&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-erb" data-lang="erb">&amp;lt;%
map = {articles:{}}
index = {}
blog.articles.each do |article|
map[:articles][article.url] = {
title: article.title,
date: article.date,
tags: article.tags
}
words = &amp;quot;#{article.title} #{article.body}&amp;quot;
words = words
.downcase # make lowercase
.gsub( /&amp;lt;.*?&amp;gt;/, &amp;quot;&amp;quot; ) # get rid of tags
.gsub( /[^\w ]/, &amp;quot;&amp;quot; ) # get rid of not letters
.split( /\s+/ ) # split by words
.sort.uniq
words.each do |w|
index[w] ||= []
index[w] &amp;lt;&amp;lt; article.url
end
end
map[:index] = index
%&amp;gt;
&amp;lt;%= map.to_json %&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="now-lets-add-some-markup-to-the-blog">Now lets add some markup to the blog&lt;/h2>
&lt;p>I&amp;rsquo;m sticking this in the header, as you see above:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">%form.navbar-form.navbar-right#search{ role: &amp;quot;search&amp;quot; }
.form-group.dropdown
.input-group
%input.form-control#search_box{ type: &amp;quot;text&amp;quot;, placeholder: &amp;quot;Search&amp;quot;, autocomplete: &amp;quot;off&amp;quot; }
%span.input-group-btn
%button.btn.btn-default
%span.glyphicon.glyphicon-search
%ul.dropdown-menu.dropdown-menu-left.results
= link_to &amp;quot;Title&amp;quot;, &amp;quot;/url&amp;quot;
&lt;/code>&lt;/pre>&lt;h2 id="loading-and-querying-the-index">Loading and Querying the index&lt;/h2>
&lt;p>Ok, lets build this from the ground up. All this goes into &lt;code>application.js&lt;/code>.First we&amp;rsquo;re create a method that loads up the index if we need it. We&amp;rsquo;re going to use a promise here, so if multiple request come in at the same time only one will go to the server:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">article_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">article_promise&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="kc">undefined&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Loading article index&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">article_promise&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Deferred&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;/articles.index.json&amp;#34;&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">done&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Loaded article index&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">article_promise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">article_promise&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is called like &lt;code>article_index().done( function( index ) { console.log( index )})&lt;/code> The second time it calls, it returns the first promise again so everything is nice and fast.&lt;/p>
&lt;p>To query the index itself we need to look through all of the words and return a list of urls that match:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">match_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">matcher&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">RegExp&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">word&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">matcher&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exec&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">idx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets build a simple search. This is a little complicated, since we need to compute the intersection of the results if the user types in multiple words. Here&amp;rsquo;s what&amp;rsquo;s happening:&lt;/p>
&lt;ol>
&lt;li>We create a promise, since we may need wait for the index to load.&lt;/li>
&lt;li>We split the search term into multiple words.&lt;/li>
&lt;li>Collect the results of the &lt;code>match_index&lt;/code> function.&lt;/li>
&lt;li>Compute the intersections of all the results&lt;/li>
&lt;li>Look up the meta data based on the url.&lt;/li>
&lt;li>Resolve the promise with the results.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">find_article&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">search&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">search_results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Deferred&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">article_index&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">done&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">index&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Split the search by widespace
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">words&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">search&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/\s+$/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/\s+/&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Lookup the matches for each word
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Note using $.map seems to flatten the result.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">full_results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">words&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">word&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">full_results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">match_index&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">word&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">full_results&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="c1">// If there are multiple words, compute the intersection
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">full_results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">url_counts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">full_results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">set&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">url_counts&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">url_counts&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url_counts&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">count&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">full_results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">urls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Pull in the metadata
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">urls&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">results&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">articles&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">search_results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">results&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">search_results&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="wiring-it-up">Wiring it up&lt;/h2>
&lt;p>First we need to call our code when the user inputs something in the text area:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;#search_box&amp;#34;&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;input&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">search_typing&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then we wire everything together:&lt;/p>
&lt;ol>
&lt;li>If the field is empty, hide the dropdown.&lt;/li>
&lt;li>Otherwise show the dropdown and a loading message&lt;/li>
&lt;li>Call &lt;code>find_article&lt;/code> and when it returns&lt;/li>
&lt;li>Put the results in the result dropdown.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">search_typing&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">val&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;#search .dropdown&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">removeClass&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;open&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;#search .dropdown&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">addClass&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;open&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;#search .dropdown-menu&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;li class=&amp;#39;disabled&amp;#39;&amp;gt;&amp;lt;a href=&amp;#39;#&amp;#39;&amp;gt;Loading &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">find_article&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="p">).&lt;/span>&lt;span class="nx">done&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">results&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">menu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;#search .dropdown-menu&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isEmptyObject&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">results&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;#search .dropdown-menu&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;li class=&amp;#39;disabled&amp;#39;&amp;gt;&amp;lt;a href=&amp;#39;#&amp;#39;&amp;gt;No results for: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">info&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">menu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;li&amp;gt;&amp;lt;a href=\&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;\&amp;#34;&amp;gt;&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">info&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">title&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;ol>
&lt;li>Language stemming&lt;/li>
&lt;li>Logical operations&lt;/li>
&lt;li>Showing more metadata in the search results.&lt;/li>
&lt;/ol></description></item><item><title>OSX Script for Kiosk Mode</title><link>https://willschenk.com/articles/2015/osx-script-for-kiosk-mode/</link><pubDate>Wed, 20 May 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/osx-script-for-kiosk-mode/</guid><description>&lt;p>In the office, we run &lt;a href="http://jenkins-ci.org">Jenkins&lt;/a> on the same machine that we run &lt;a href="http://gaze.happyfuncorp.com">Benevolent Gaze&lt;/a>. During iOS builds, the iOS simulator will take over the screen for the build, and then leave the beautiful screen on the desktop, hiding our smiling faces. We want to return to Safari in this case, but we also want to make sure that if someone is actually in front of the machine it will let them do their thing.&lt;/p>
&lt;p>Here&amp;rsquo;s a little script that check if the user hasn&amp;rsquo;t touched the keyboard or mouse in a while, and if so it will pull Safari to the front.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">while&lt;/span> &lt;span class="nb">true&lt;/span>
&lt;span class="k">do&lt;/span>
&lt;span class="nv">IDLE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>ioreg -c IOHIDSystem &lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;/HIDIdle/ {print int($(NF)/1000000000 + 0.5)}&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span> sort -n &lt;span class="p">|&lt;/span>head -1&lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> Idle &lt;span class="nv">$IDLE&lt;/span> seconds
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nv">$IDLE&lt;/span> -gt &lt;span class="m">30&lt;/span> &lt;span class="o">]&lt;/span>
&lt;span class="k">then&lt;/span>
cat &lt;span class="s">&amp;lt;&amp;lt;- EOF | osascript
&lt;/span>&lt;span class="s"> tell application &amp;#34;Safari&amp;#34;
&lt;/span>&lt;span class="s"> activate
&lt;/span>&lt;span class="s"> end tell
&lt;/span>&lt;span class="s"> EOF&lt;/span>
&lt;span class="k">fi&lt;/span>
sleep &lt;span class="m">1&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first thing that this does is to call the &lt;code>ioreg&lt;/code> command to pull data from the &lt;code>IOHIDSystem&lt;/code>. This is what OSX uses to track &lt;em>inactivity&lt;/em>, which is used to start powering things down to conserve battery life. The units of this measurement are &lt;em>small&lt;/em>, so we divide by &lt;code>1000000000&lt;/code> to get them into seconds. We round that number to the nearest integer by adding &lt;code>0.5&lt;/code> and lopping off the right of the decimal place with &lt;code>int&lt;/code>. Then we get the shortest number in the list using &lt;code>sort | head&lt;/code>.&lt;/p>
&lt;p>This script waits &lt;code>30&lt;/code> seconds (&lt;code>if [ $IDLE -gt 30 ]&lt;/code>) and then will run &lt;code>osascript&lt;/code> to activate Safari. The here-doc between &lt;code>EOF&lt;/code> is AppleScript which will activate &lt;em>Safari&lt;/em> and bring it to the front. Replace that with &lt;em>Google Chrome&lt;/em> if that&amp;rsquo;s your preferred browser.&lt;/p></description></item><item><title>Slow data and Fast Sites</title><link>https://willschenk.com/articles/2015/slow-data-and-fast-sites/</link><pubDate>Fri, 08 May 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/slow-data-and-fast-sites/</guid><description>&lt;p>This article walks through the motivations driving and benefits of using a the Seed Architecture for building performant websites using Middleman, React, and a seperate API server such as Parse. The benefits are:&lt;/p>
&lt;ol>
&lt;li>You get full SEO with a heavy client JavaScript site without having to do crazy things with PhantomJS or meta fragments.&lt;/li>
&lt;li>Hosting and operations become both cheap and doesn&amp;rsquo;t require a support team.&lt;/li>
&lt;li>Scaling out the system is mainly a bandwidth problem, and secondarily a API scaling problem for a subset of behavior.&lt;/li>
&lt;li>The system breaks gracefully. If you overwhelm the API server the site is still available for browsing. Assuming that most usage of the sites are reads, this means that if you try to &lt;em>break the internet&lt;/em> with &lt;a href="http://www.papermag.com/2014/11/kim_kardashian.php">Kim Kardashian&amp;rsquo;s ass&lt;/a> maybe user login will slow down, but everything else is still available.&lt;/li>
&lt;li>You are able to build your front end using modern and clean fancy JavaScript technologies and don&amp;rsquo;t need to mess around with back-end coding.&lt;/li>
&lt;/ol>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Sometimes I feel bad for what we make servers do. I will occasionally get a cringing feeling because we&amp;rsquo;re just not being very nice to the fancy machines around us. It&amp;rsquo;s similar to being in the car with someone who is learning how to drive a standard transmission and they grind the gears lurching the car into a stall. Ahhh!&lt;/p>
&lt;p>I especially get this feeling when trying to make poorly built websites scale, e.g. wordpress sites that jam up the server when the slightest breeze of traffic wafts in, or Rails sites that are slamming the database with N+1 unindexed queries of largely static data. I really enjoyed the &lt;a href="https://medium.com/message/how-paper-magazines-web-engineers-scaled-kim-kardashians-back-end-sfw-6367f8d37688">backstory to the back-end&lt;/a>, but surely there has to be a better way to do this.&lt;/p>
&lt;p>The reality is the computer is mostly doing the same exact thing, over and over again. For a lot of sites, there are only a few parts of the page that change based upon who is looking or when they are looking at it, and the bulk of what everyone seems is the same same same. The computer doesn&amp;rsquo;t complain about it but silently and stoically gets crushed under the load. But we can fix it. If we can break down the data on the page into different categories based upon its rate of change the bulk of the processing can happen at &amp;ldquo;compile&amp;rdquo; or &amp;ldquo;build&amp;rdquo; time, while only a small part of it needs to happen at run-time. And when a wave of people come in the servers are fully prepared to serve them up what they need.&lt;/p>
&lt;p>There is so much computer power available both in desktop browsers and mobile browsers, and we should use it. If we can find a way to precompute the repetitive stuff and push the computing of the dynamic stuff out to the edges, we vastly lower the load on the servers which simplifies operations and scaling. There are some challenges with doing this; how to deal with SEO, increasing the &amp;ldquo;build&amp;rdquo; frequency to handle the &amp;ldquo;slow data&amp;rdquo; updates, and how to make it easy to do front-end development. We&amp;rsquo;ll go through a strategy below to address those challenges.&lt;/p>
&lt;p>At the end of this meandering article we are going to have a way to build super scalable sites that give you SEO and full client side interactivity without having any servers (or at least only a small cheap one) which will nevertheless be able to scale to huge amounts of traffic cheaply.&lt;/p>
&lt;h2 id="the-outline">The Outline&lt;/h2>
&lt;p>Let&amp;rsquo;s take a step back from how we normally build websites, and see what we can we do better based upon the challenges and current reality of operating sites:&lt;/p>
&lt;ol>
&lt;li>The first insight is that once your site is built and running, things change at a different rate than they do in development. The difference between tooling and run-time evaluation becomes more pronounced, and usage patterns of the data become clearly stratified. Even though we dump everything into the database, there are distinct classes of data that have different change patterns.&lt;/li>
&lt;li>The second insight is websites are about sitemaps, not about URLs. SEO thinks in terms of Sitemaps, and webapps thinks in terms of Routes, but if we could get the best of both worlds if we had a static build process that can pull data from a datastore and understands the concepts of a Sitemap and a Router.&lt;/li>
&lt;li>The third insight is that we need a templating language that can run equally well on the server and the client in order to keep developers sane and effective. The bulk of the application needs to be written using the same tooling.&lt;/li>
&lt;li>The fourth insight is that web services don&amp;rsquo;t need to be hidden behind the server, and with rich client apps we can consume them directly from the client.&lt;/li>
&lt;/ol>
&lt;p>I&amp;rsquo;ll walk through these in turn, deconstructing what they mean, and outline a way of building a prerendered website that will let you add all the fancy front-end features and full SEO support - all of the benefits of so-called database backed web-sites with content management systems and complex logic - that will be able to scale up quickly without any ops support, and be able to degrade gracefully under spikes.&lt;/p>
&lt;h2 id="data-changes-at-different-rates">Data changes at different rates&lt;/h2>
&lt;p>Lets take 4 classes of sites that we all build regularly:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Marketing Sites&lt;/strong>, which after they launch rarely change, but may have a form that&amp;rsquo;s the beginning of a sales or conversion funnel. &lt;em>e.g. Mobile App landing pages, like &lt;a href="http://getpyne.com">getpyne.com&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;strong>Publishing Sites&lt;/strong>, which change when new content is created, comments get posted, or with changes in a list of most emailed or most read articles. Blogs, magazines and newspapers fit in here, though they have different user types and publishing schedules. &lt;em>e.g. Newspapers, like &lt;a href="http://nytimes.com">nytimes.com&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;strong>Ecommerce Sites&lt;/strong>, which change when the product catalog gets updated, orders are placed, inventory changes, cross and up sells are calculated, and people add things to their cart. &lt;em>e.g. &lt;a href="http://teepublic.com">teepublic.com&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;strong>Social Sites&lt;/strong>, which you only can access as a user, who your connections are, what gets added by other users, how you interact with that content, and any real time messaging between them. &lt;em>e.g. &lt;a href="http://instagram.com">instagram.com&lt;/a>&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>&lt;em>If the word social bothers you, just replace it with &amp;ldquo;all views are customized to the user and you need to log in to see anything&amp;rdquo;.&lt;/em>&lt;/p>
&lt;p>Let&amp;rsquo;s look at the rate of change of the different types of data on these sites:&lt;/p>
&lt;img src="data.dot.svg" class="img-fluid">
&lt;p>Lets walk through this. A &lt;em>data model&lt;/em> is the structure that all of the site data fits into. This represents the heart of what your database model, object model, and product design are all orbiting around. In the beginning of development this rapidly changes, but once the site is released changes are incremental and relatively rare. It&amp;rsquo;s easy to add functionality that doesn&amp;rsquo;t change the data model, but when you start making drastic changes, the nature of what you are building changes. Wordpress sites have pages, posts, categories and users, and if you try and jam in a product catalog then it becomes something different than a standard blog.&lt;/p>
&lt;p>The next level is the bulk of the data on the site. &lt;em>Marketing&lt;/em> sites have pages that change rarely. &lt;em>Publishing&lt;/em> sites keep adding more articles, but these really don&amp;rsquo;t change that much and the bulk of the access pattern is read only. &lt;em>Commerce&lt;/em> sites have product catalogs, and while merchandizers add and remove things from time to time, you largely expect to have things on there forever. Again this is mostly, though not completely, read-only.&lt;/p>
&lt;p>For SEO to work correctly, the data in the gray boxes really should be rendered on the server. The &lt;em>Social Site&lt;/em> is a bit of an outlier here, in that the root object is actually the user and the user&amp;rsquo;s content.&lt;/p>
&lt;p>Let&amp;rsquo;s compare &lt;a href="https://medium.com">medium.com&lt;/a> with &lt;a href="http://facebook.com">facebook.com&lt;/a>. Since the bulk of the content of Medium is accessable to anyone once it&amp;rsquo;s published. For this discussion its considered to be a publishing site rather than a social site. Bits and elements of the page change based upon who is accessing the site, but for the most part, everyone sees the same stuff. Facebook on the other hand looks different for each of the users. Individual items may be public, but the main consumption is through the feed and that&amp;rsquo;s based upon your friends &lt;em>and magic&lt;/em>, so scaling has a whole different set of challenges. Probably involving something very esoteric.&lt;/p>
&lt;h2 id="towards-a-more-nerdy-taxonomy-of-data">Towards a more nerdy taxonomy of data&lt;/h2>
&lt;p>We can look at each of the elements on a website and break down the type of data source it came from:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Static Data&lt;/strong>: Templates, Images, Fonts, Assets&lt;/li>
&lt;li>&lt;strong>Structural Data&lt;/strong>: Pages, Articles, Product Catalog, Categories, &amp;ldquo;Content&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>Dynamic Data&lt;/strong>: Inventory, Comments&lt;/li>
&lt;li>&lt;strong>Session Data&lt;/strong>: User names, Items in cart, Likes, etc.&lt;/li>
&lt;/ul>
&lt;p>As we go down the list, the rate in which these things change increases. &lt;em>Static data&lt;/em>, as the name implies, rarely changes. Most of these are artifacts that come out of the development process or development tooling. Templates, for example, are created during the site development process and once the site is deployed they change only in response to bug fixes or feature requests.&lt;/p>
&lt;p>&lt;em>Structural Data&lt;/em> changes during the operations of the business, but not very frequently, and generally in response to things that are outside of the site &lt;em>per se&lt;/em>. These include things like marketing material, product pages (less inventory information), categories, articles, and really the bulk of the content on a site. There are many reasons why you want to generate these pages using some sort of CMS, but rarely does this data change at &lt;em>run-time&lt;/em>. This stuff doesn&amp;rsquo;t really need to be in a run-time database as such, but it&amp;rsquo;s convient to stick this stuff there if you have one laying around.&lt;/p>
&lt;p>&lt;em>Dynamic Data&lt;/em> is &lt;em>run-time&lt;/em> data, that is to say, things that change as part of site operations, things like newsletter signups, orders and credit card transactions. Most &lt;em>User Generated Content&lt;/em> falls in the this category, and depending upon your feature set, that could be the majority of the pages. Unlike &lt;em>Structural Data&lt;/em>, where it&amp;rsquo;s merely a good idea to use a database, this is &lt;em>neccessarily&lt;/em> stored in some sort of database.&lt;/p>
&lt;p>&lt;em>Session Data&lt;/em> is &lt;em>specific to the user&lt;/em> and renders the page differently based upon their session, such as their name, whether they&amp;rsquo;ve added an item into the cart or not, etc. One of the things that makes straight &lt;em>page caching&lt;/em> useless in practice is that the header is different on most sites based on if you are logged in or not, or if there are items in the cart. This gets persisted from page to page, but generally can get thrown away if the user wanders off.&lt;/p>
&lt;h2 id="what-do-we-need-to-assemble-a-website">What do we need to assemble a website&lt;/h2>
&lt;p>A website is a series of interconnected webpages. These pages are referenced by URLs, and the world of linking and SEO demands that these URLs return self-contained data so that you can deep link and get yourself found on the search engines. From the outside, it looks like:&lt;/p>
&lt;img src="sitemap.dot.svg" class="img-fluid">
&lt;p>The main entry point is the &lt;em>Sitemap&lt;/em>. Conceptually, this is the overview of what can be found on the site. In a specific, SEO sense, a sitemap is a way of communicating to search engines the structure of your site so the search results can be better organized. But in a more general sense, the sitemap is a collection of all of the pages that make up the site.&lt;/p>
&lt;p>The conceptual sitemap is a list of URLs that makes up your site. If you have a completely static &lt;em>Marketing&lt;/em> site, then the sitemaps is just the collection of the static HTML files that is on the webserver filesystem. If you have a &lt;em>Publishing&lt;/em> or &lt;em>Commerce&lt;/em> site, the list of page urls depend upon the templates and the data in the database: even if they use the same template, every individual post has it&amp;rsquo;s own permalink or &lt;em>canonical URL&lt;/em>, every product in the catalog has it&amp;rsquo;s own product detail page.&lt;/p>
&lt;h2 id="how-urls-are-made-on-the-inside">How urls are made on the inside&lt;/h2>
&lt;p>Lets take an example of a &lt;em>Commerce&lt;/em> site, and how those URLs are generated. I don&amp;rsquo;t know the actual details, but lets look at how &lt;code>http://www.thinkgeek.com/product/1dbd/&lt;/code> could be generated.&lt;/p>
&lt;p>From the inside of a website, it looks a little more like this:&lt;/p>
&lt;img src="routing.dot.svg" class="img-fluid">
&lt;p>A request comes into the server and the &lt;code>router&lt;/code> determines what the user is asking for. In our example, since the path of the url is &lt;code>/product/1dbd/&lt;/code>, the router looks at that and says &amp;ldquo;this is a product page&amp;rdquo; so let&amp;rsquo;s hand the request off to the &lt;code>product&lt;/code> controller, which is the part of the code that knows about product stuff.&lt;/p>
&lt;p>The controller would load up the product with the id &lt;code>1dbd&lt;/code> from the product catalog in the database, in this case &lt;em>Flux Capacitor USB Car Charger&lt;/em>, which we can all agree is a necessary car accessory, and then use those details to fill out the product template.&lt;/p>
&lt;p>The developers of this site didn&amp;rsquo;t code up each of these product pages, they coded up one &lt;code>template&lt;/code> that represents all of the possible product pages that could be served up, they coded up a &lt;code>controller&lt;/code> which knows how to pull the data from the database, and they wired up the whole thing using a &lt;code>router&lt;/code>.&lt;/p>
&lt;h2 id="sitemaps-in-static-site-generators">Sitemaps in static site generators&lt;/h2>
&lt;p>Our conceptual sitemap then is composed then of the set routes and database ids. The pages themselves are a cross product of the templates and the data for each of the pages:&lt;/p>
&lt;p>&lt;strong>Data x Templates = Pages&lt;/strong>&lt;/p>
&lt;p>One of the things that&amp;rsquo;s exciting about &lt;a href="https://middlemanapp.com">Middleman&lt;/a> is that it has a &lt;a href="./building-middleman-extensions/#manipulating-the-sitemap">manipulatable concept of a sitemap&lt;/a>.&lt;/p>
&lt;p>The main thing that middleman does it to give front-end developers tooling to build sites, so you get the benefits of layouts and partials and SASS and helper methods and javascript minification all the other front-end tooling that you get with rails, but without needing to run a server. This lets you build fancy sites using the &amp;ldquo;normal&amp;rdquo; tools and you can still host them on github pages or divshot or a cheap server.&lt;/p>
&lt;p>I&amp;rsquo;ve written about Middleman before:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="./building-sites-with-middleman/">Building Sites with Middleman&lt;/a>&lt;/li>
&lt;li>&lt;a href="./middleman-tricks-and-hacks/">Middleman Tricks and Hacks&lt;/a>&lt;/li>
&lt;li>&lt;a href="./building-middleman-extensions/">Building Middleman Extensions&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If we want to pre-render the pages on the server at build time we&amp;rsquo;ll need both the routes as well as the &amp;ldquo;database IDs&amp;rdquo;. That gives us the list of files, and to generate the files themselves we&amp;rsquo;ll need the data for each specific page. In a basic way, this can be done using &lt;a href="./advanced/dynamic_pages/">page proxies&lt;/a>, excerpt from the Middleman docs:&lt;/p>
&lt;pre>&lt;code>[&amp;quot;tom&amp;quot;, &amp;quot;dick&amp;quot;, &amp;quot;harry&amp;quot;].each do |name|
proxy &amp;quot;/about/#{name}.html&amp;quot;, &amp;quot;/about/template.html&amp;quot;, :locals =&amp;gt; { :person_name =&amp;gt; name }, :ignore =&amp;gt; true
end
&lt;/code>&lt;/pre>&lt;p>If you put that code in your &lt;code>config.rb&lt;/code> it will create 3 pages in the middleman sitemap. (Found on &lt;code>http://localhost:4567/__middleman/sitemap/&lt;/code> if you have a local build running.) These files will be named &lt;code>/about/tom.html&lt;/code>, &lt;code>/about/dick.html&lt;/code>, and &lt;code>/about/tom.html&lt;/code>, all generated from the &lt;code>/about/template.html&lt;/code> template.&lt;/p>
&lt;p>You could imagine instead passing in a complex object instead of a string. I touched on this in a basic way before in the &lt;a href="./middleman-tricks-and-hacks/#site-data-as-database">Using Site Data as a Database&lt;/a>.&lt;/p>
&lt;p>In the simpliest form, you could dump your data in the &lt;code>data/&lt;/code> directory as &lt;code>books.json&lt;/code>, and then put this in your &lt;code>config.rb&lt;/code> to generate a product catalog:&lt;/p>
&lt;pre>&lt;code>data.books.each do |book|
proxy &amp;quot;/book/#{book.slug}.html&amp;quot;, &amp;quot;/book.html&amp;quot;, locals: { book: book }, ignore: true
end
&lt;/code>&lt;/pre>&lt;p>As a proof of concept this works, but for a real system there would at least need to be a mechanism to sync the json from the database. For a more robust mechanism, remember that Middleman exposes a &lt;a href="./building-middleman-extensions/#manipulating-the-sitemap">manipulatable concept of a sitemap&lt;/a> to extensions.&lt;/p>
&lt;h2 id="making-front-end-development-easy">Making front-end development easy&lt;/h2>
&lt;p>The story thus far is that we can split out data into static, dynamic, and session data, and we can use Middleman&amp;rsquo;s sitemap concept to generate static pages that can be served straight from S3 for all we care and it will all be indexable by Google. Sweet!!!&lt;/p>
&lt;p>Now lets talk about how we can actually implement some of these templates.&lt;/p>
&lt;p>We&amp;rsquo;ve broken down pages and split out when different parts will be rendered based upon our &lt;a href="#towards-a-more-nerdy-taxonomy-of-data">taxonomy of data&lt;/a>. We&amp;rsquo;ve figured out a basic structure of how to render the &lt;em>Structural Data&lt;/em> into the page, and now we need to figure out a good way to render the &lt;em>Dynamic&lt;/em> and &lt;em>Session&lt;/em> data in there too. And we also want to make this friendly for front-end developers. It&amp;rsquo;s not practical to have different templating engines and coding styles for bits of data that, during the development process, may turn out to be &lt;em>Site&lt;/em> or &lt;em>Dynamic&lt;/em> data.&lt;/p>
&lt;p>This is different than using Varnish, CloudFront or Rails Page Level caching. In those scenarios, there&amp;rsquo;s no easy way to distinguish between elements on the page that everyone can see, vs elements that only specific people can see. It&amp;rsquo;s all or nothing.&lt;/p>
&lt;p>For example, when Admins are logged into wordpress sites, they have a toolbar that regular browsers don&amp;rsquo;t see, so the page caching mechanisms need to have a way to subvert the caching process for logged in users. In this mechanism, we are going to send the same basic page data to all of the users, and then use client side javascript templating to change the DOM for the user based upon API calls that we make on their request.&lt;/p>
&lt;h2 id="enter-react">Enter React&lt;/h2>
&lt;p>&lt;a href="https://facebook.github.io/react/">React&lt;/a> is a javascript view framework from Facebook that focuses solely on the view layer. (We&amp;rsquo;re only going to be talking about the React part, and you can use &lt;a href="https://facebook.github.io/flux/">flux&lt;/a> or not, up to you.)&lt;/p>
&lt;p>React works by enforcing a specific dataflow model on how components are rendered into the DOM. React lets you build heirachies of components that know how to render themselves and deal with different user actions. Much of what we&amp;rsquo;ve been talking about above thinking about page generation from a dataflow perspective, splitting the data up into different sources based upon their rate of change, and breaking up the page based upon how the data flows into it.With the goal of trying to prerender all of the stuff that&amp;rsquo;s the same for everyone.&lt;/p>
&lt;p>React has a more focused dataflow model, working by passing in a component, data, and a DOM element, and it render out the HTML in that element. Components can be nested and have complex logic, and when you change the state of a particular component, all of the subcomponents will be refreshed as needed.&lt;/p>
&lt;p>React has two concepts of data, one is called &lt;em>properties&lt;/em> which is inherited from above and considered to be immutable. The other is called &lt;em>state&lt;/em>, which is owned by a component and can be changed and passed to any children components. In React, this is about data ownership and to keep the page updates efficient.&lt;/p>
&lt;h2 id="rendering-react-on-the-server-side">Rendering React on the server side&lt;/h2>
&lt;p>One of the most interesting things about React is that you can render the HTML on the server side as well as the client side. Rendering on the server will include data attributes on the DOM so that the client Javascript can pick it up from there. In other words, if the data is available, you can render a template on the server or the client and it will &lt;em>work the exact same way&lt;/em>. This is the one templating system that will be easy to move from &lt;em>Structural Data on the server&lt;/em> to &lt;em>Dynamic Data on the client&lt;/em>!&lt;/p>
&lt;p>Obviously you need to have the data available on the server at render time, and you&amp;rsquo;ll pass it to the precompiler in a different way than you would on the client (one is passed to the JavaScript engine and the other is probably a result of a JSON AJAX call but all of the interaction and user logic remains the same), but outside of the wiring the business and interaction logic completely shared.&lt;/p>
&lt;p>If you are using &lt;a href="https://github.com/reactjs/react-rails">&lt;code>react-rails&lt;/code>&lt;/a> this looks like:&lt;/p>
&lt;pre>&lt;code>&amp;lt;%%= react_component('HelloMessage', {name: 'John'}, {prerender: true}) %&amp;gt;
&amp;lt;!-- becomes: --&amp;gt;
&amp;lt;div data-react-class=&amp;quot;HelloMessage&amp;quot; data-react-props=&amp;quot;{&amp;amp;quot;name&amp;amp;quot;:&amp;amp;quot;John&amp;amp;quot;}&amp;quot;&amp;gt;
&amp;lt;h1&amp;gt;Hello, John!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code>&lt;/pre>&lt;p>When you instantiate the javascript environment in the client, it will look for the &lt;code>data-react-*&lt;/code> attributes and plug in your components there.&lt;/p>
&lt;p>I&amp;rsquo;ve ported this functionality over to HappyFunCorp&amp;rsquo;s fork of the &lt;a href="https://github.com/HappyFunCorp/middleman-react">middleman-react gem&lt;/a> that you can use in middleman.&lt;/p>
&lt;h2 id="javascript-and-web-services-sitting-in-a-tree">Javascript and web services sitting in a tree&lt;/h2>
&lt;p>The trick is that React can also be rendered on the server, and then the javascript that&amp;rsquo;s run on the client side can pick it up from there. At this point in the process all of the &lt;em>Structural Data&lt;/em> is available both in rendered HTML and also in the React components themselves, passed in as &lt;em>properties&lt;/em> or &lt;em>state&lt;/em>.&lt;/p>
&lt;p>Our components are ready to go! They&amp;rsquo;ve either rendered &lt;em>Site Data&lt;/em> from the server, or they can pull in &lt;em>Dynamic and Session Data&lt;/em> in from an API, and use that to render the page. These components are written in the same way, using the same technology, so you don&amp;rsquo;t need to have a different style of building or constructing the front end, other than breaking down where the components get data from. Which ones get rendered on the server? Do they have enough data to render what they need? Do they need to have additional data that can be loaded in at client-run-time? Or is it all straight from an API?&lt;/p>
&lt;h2 id="enter-parse">Enter Parse&lt;/h2>
&lt;p>One of the benefits of this is that there are API-as-services out there, like &lt;a href="https://parse.com">Parse&lt;/a> or &lt;a href="https://www.firebase.com">Firebase&lt;/a>. All of your data could live in these systems, and you can pull certain stuff out during the build process, and other data out at Runtime, and they handle both security, user accounts, and, more importantly, operational scaling support. From an ops perspective, you don&amp;rsquo;t need to do anything other than build the site and pay the hosting builds, and all of the tricky scaling stuff handled is by a third party.&lt;/p>
&lt;p>&amp;lt;%= image_tag &amp;ldquo;seed_sequence.dot.svg&amp;rdquo;, class: &amp;ldquo;img-responsive&amp;rdquo; %&amp;gt;&lt;/p>
&lt;h2 id="bringing-back-a-build-server">Bringing back a build server&lt;/h2>
&lt;img src="build.dot.svg" class="img-fluid">
&lt;p>There still needs to be a way to get new versions of &lt;em>Structural Data&lt;/em> onto the site. For this, we need to host middleman somewhere on a build server, and everytime &lt;em>Structural Data&lt;/em> changes we need to trigger another build that pushes up the static content. Parse has &lt;a href="https://parse.com/docs/js/guide#cloud-code-aftersave-triggers">afterSave triggers&lt;/a> that could, for example, ping your build server to first pull down the data changes, and then push the code out.&lt;/p>
&lt;p>Remember, this would only be for &lt;em>Structural Data&lt;/em> updates, for example if an Admin user updated a product description. If a customer added an item to their cart or placed an order, this would all be dynamic data inside of the data store and managed on the client site. It would only update Parse, not the site that everyone would access.&lt;/p>
&lt;h2 id="advantages">Advantages&lt;/h2>
&lt;p>The advantages of this way of building things are:&lt;/p>
&lt;ol>
&lt;li>You get full SEO with a heavy client JavaScript site without having to do crazy things with PhantomJS or meta fragments.&lt;/li>
&lt;li>Hosting and operations become both cheap and doesn&amp;rsquo;t require a support team.&lt;/li>
&lt;li>Scaling out the system is mainly a bandwidth problem, and secondarily a API scaling problem for a subset of behavior.&lt;/li>
&lt;li>The system breaks gracefully. If you overwhelm the API server the site is still available for browsing. Assuming that most usage of the sites are reads, this means that if you try to &lt;em>break the internet&lt;/em> with &lt;a href="http://www.papermag.com/2014/11/kim_kardashian.php">Kim Kardashian&amp;rsquo;s ass&lt;/a> maybe user login will slow down, but everything else is still available.&lt;/li>
&lt;li>You are able to build your front end using modern and clean fancy JavaScript technologies and don&amp;rsquo;t need to mess around with back-end coding.&lt;/li>
&lt;/ol></description></item><item><title>Why Engineers build crappy products</title><link>https://willschenk.com/articles/2015/why-engineers-build-crappy-products/</link><pubDate>Sat, 21 Feb 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/why-engineers-build-crappy-products/</guid><description>&lt;p>There&amp;rsquo;s a certain user interface that, when you first see it, screams out of you that it was designed by an engineer.&lt;/p>
&lt;img src="mainfull.png" class="img-fluid">
&lt;p>(&lt;em>via &lt;a href="http://daringfireball.net">Daring Fireball&lt;/a> &lt;a href="https://www.google.com/search?client=safari&amp;amp;rls=en&amp;amp;q=daring+fireball+user+interface+of+the+week&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8">User Interface of the Week&lt;/a>&lt;/em>)&lt;/p>
&lt;p>Why does that happen? What is it in the nature of engineering or software development process that leads to user interfaces that are impossible for the users to actually use?&lt;/p>
&lt;h2 id="perfect-storm-of-user-discontent">Perfect Storm of User Discontent&lt;/h2>
&lt;p>The short version:&lt;/p>
&lt;ul>
&lt;li>The most interesting part of engineer&amp;rsquo;s jobs is the obsession with the possibilities in the solution space - all the cool shit you can make computers do.&lt;/li>
&lt;li>Engineers don&amp;rsquo;t want to make choices that limit power and flexibly.&lt;/li>
&lt;li>Engineers value adding potential functionality higher than removing unneeded complexity.&lt;/li>
&lt;li>Engineers want to engineer their way out of design problems.&lt;/li>
&lt;/ul>
&lt;h2 id="being-a-people-person">Being a people person&lt;/h2>
&lt;p>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/RAY27NU1Jog" frameborder="0" allowfullscreen>&lt;/iframe>&lt;/p>
&lt;p>The process of thinking about a new product begins with an attempt to understand what it is that the software supposed to do, that is, it starts with specifying a solution to a problem. This is assuming that the problem itself is correctly framed, which it often isn&amp;rsquo;t. These specifications generally take form in things like user stories and wireframes which are ways of specifying both what the user is trying to do and the specific interface that the user will use to achieve those goals.&lt;/p>
&lt;p>Implicit in this is the understanding of what technology is able to do. Sometimes, especially for a product with a novel technical solution, what technology is able to do it isn&amp;rsquo;t completely understood. And regardless of whether or not the solution is in a known problem space, there will always be different challenges that will come up when building something. Building software is actually very difficult.&lt;/p>
&lt;p>Given that fact, engineering will look at design, start thinking about what the general shape of the solution looks like, and should structure their development efforts around the parts of the product that seem the most risky &amp;ndash; the parts that will be technically the most challenging. If we can prove that those parts will work, with a prototype or make it functional with a sort of mock interface, then and only then does it make sense to flush out the rest of the product.&lt;/p>
&lt;h2 id="the-fractal-nature-of-engineering">The fractal nature of engineering&lt;/h2>
&lt;p>This is the fun part. Every engineer loves greenfield development because it allows them to explore the terrain without having to deal with the trade-offs, constraints, and messiness of existing code. The process is one of exploration, of being able to explore a technical space of possibilities and potentialities. This is really awesome, and a large part of what makes engineering interesting.&lt;/p>
&lt;p>The experience is of building little things, putting them together in novel ways, and build things which are increasingly powerful. This leads engineers to put knobs and buttons and gizmos on different functionality to make it easier to explore all of what it can do. It&amp;rsquo;s socially rewarding to show off all this cool stuff, not just what it does not, but also what it&amp;rsquo;s capable of doing. Focusing on the technology aspect of it leads people to optimize the functionality in both breath and power.&lt;/p>
&lt;h2 id="interface-ecstasy">Interface ecstasy&lt;/h2>
&lt;img src="nosql_query.png" class="img-fluid">
_Engineers Keeping it Real: Go Fuck Yourself_
&lt;p>The problem is products aren&amp;rsquo;t about technology. Technology is necessary but not sufficient to build products. Technology is just the plumbing, the thing which makes it possible, but not actually the thing that people care about.&lt;/p>
&lt;p>The ecstasy of possibility is in conflict with producing elegant products, because products are fundamentally about making choices and creating clarity around something which is very complicated. This is more than missing the forest for the trees; the ideals and aspirations of both efforts are directly contradictory.&lt;/p>
&lt;h2 id="example-me-doing-yet-another-dumb-thing">Example: Me doing Yet Another Dumb Thing&lt;/h2>
&lt;p>We were recently &lt;a href="http://shoutouts.happyfuncorp.com/">building a product&lt;/a> that would use email as an interface touch point. Specifications, being what they are, didn&amp;rsquo;t really explain what should happen when a user attempted to interact with another user who had only partially setup their account. We were just playing around with some stuff, so it&amp;rsquo;s not even fair to blame the specifications on being vague; as it often goes when building something, we ended up way deeper in the weeds than anyone intended.&lt;/p>
&lt;p>Looking at this from the edge case perspective, that is, while focusing on the engineering implementation and building in robustness of response based upon stuff that could happen, my instinct was to start building out code that would deal with this. It also uses slack as an endpoint, and in that set of scenarios it does something clever, so naturally email should do something clever as well.&lt;/p>
&lt;p>I started down the path of being able to store partial requests that would get queued up and in the user interface to resolve in the future. I started going down the path of creating a whole bunch of functionality because I was thinking about things in terms of the technology, the other interfaces had something &amp;ldquo;elegant&amp;rdquo;, and I wanted to build something complete. Madness was creeping into the interface, because I was in the mind set of searching for a technology solution.&lt;/p>
&lt;p>This is not something that&amp;rsquo;s core to the product. No one actually cares. In the situation like this, the answer really isn&amp;rsquo;t to be a lot of technology solution. I thought that there isn&amp;rsquo;t a problem, but that a technology solution is not the most effective way to solve the problem. It&amp;rsquo;s actually a design problem.&lt;/p>
&lt;h2 id="technology-is-the-easy-part">Technology is the easy part&lt;/h2>
&lt;p>If the teams aren&amp;rsquo;t integrated, if the design team &amp;ldquo;finishes&amp;rdquo; their work and then lobs it over the fence to the engineering team, this conversation will take the form of engineering requesting designs for something that &amp;ldquo;was missed and we need to solve&amp;rdquo;. It may have been missed, but it doesn&amp;rsquo;t need to be solved. The solution, in this case, is not to &amp;ldquo;solve it&amp;rdquo; at all, but to reframe the problem. And this reframing puts it into a place that engineers don&amp;rsquo;t like to be. It was not to build out a whole partially-completed-request queuing system that the user could resolve, be alerted of outstanding tasks or whatever, it was instead to simply keep the email interface simple and redirect them to the main flow on the website.&lt;/p>
&lt;p>In short, the reason why engineers tend to be crappy product designers is that&lt;/p>
&lt;ul>
&lt;li>The most interesting part of engineer&amp;rsquo;s jobs is the obsession with the possibilities in the solution space - all the cool shit you can make computers do.&lt;/li>
&lt;li>Engineers don&amp;rsquo;t want to make choices that limit power and flexibly.&lt;/li>
&lt;li>Engineers value adding potential functionality higher than removing unneeded complexity.&lt;/li>
&lt;li>Engineers want to engineer their way out of design problems.&lt;/li>
&lt;/ul></description></item><item><title>Setting up Rails testing with rspec, devise, and the gang</title><link>https://willschenk.com/articles/2015/setting-up-testing/</link><pubDate>Fri, 23 Jan 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/setting-up-testing/</guid><description>&lt;p>The goal is to get features out fast, and iterate on them quickly. Does anyone care about it? What do they care about? How do we make it better?&lt;/p>
&lt;p>As projects get bigger, both in terms of people using the site as well as people &lt;em>working&lt;/em> on the site, testing and quality become relatively more important. Adding tests introduces drag, and the theory is that you invest now for payoffs later. What&amp;rsquo;s the least amount of drag we can add to the process to get us in a good place for when it will start to pay off?&lt;/p>
&lt;p>RSpec feature specs lets developers create testing click paths through the application, looking at the flow though the app. It doesn&amp;rsquo;t focus enough on the design details, and going through a test driving development process with this way will end up with sites &amp;lsquo;working&amp;rsquo; using only an engineer&amp;rsquo;s defination, so as a MVP implementor you&amp;rsquo;ll need to find a way to resist the temptation, no matter how nifty the backend flow state is.&lt;/p>
&lt;p>This article will go through how the testing environment is set up on &lt;a href="http://seed.happyfuncorp.com">HappySeed&lt;/a> where we focus mainly on RSpec feature specs. Seed does this all automatically, but its nice to have it written down in a one place so we all know what&amp;rsquo;s going on. Let&amp;rsquo;s get into it.&lt;/p>
&lt;h2 id="install-rspec-factorygirl-capybara-and-guard">Install RSpec, FactoryGirl, Capybara, and Guard&lt;/h2>
&lt;p>Lets fire up a new rails app, and pass the &lt;code>-T&lt;/code> option to not include TestUnit.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails new test_app -T
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now add some gems to the &lt;code>Gemfile&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">group&lt;/span> &lt;span class="ss">:development&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:test&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;rspec-rails&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;factory_girl_rails&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;capybara&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;guard-rspec&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;spring-commands-rspec&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;vcr&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">group&lt;/span> &lt;span class="ss">:test&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;webmock&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets go through this:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://rspec.info">&lt;code>rpsec&lt;/code>&lt;/a> (implied as a dependancy) is the testing framework that we are going to use&lt;/li>
&lt;li>&lt;a href="https://github.com/thoughtbot/factory_girl">&lt;code>factory_girl&lt;/code>&lt;/a> (implied) lets us code smart database fixtures in ruby, in things called &lt;em>factories&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://github.com/jnicklas/capybara">&lt;code>capybara&lt;/code>&lt;/a> lets helps you test web applications by simulating how a real user would interact with your app.&lt;/li>
&lt;li>&lt;a href="https://github.com/guard/guard">&lt;code>guard&lt;/code>&lt;/a> (implied) makes rerunning tests a snap, by watching the filesystem for when you save files and triggering events automatically&lt;/li>
&lt;li>&lt;a href="https://github.com/bblimke/webmock">&lt;code>webmock&lt;/code>&lt;/a> locks down your test environment from talking to the internet&lt;/li>
&lt;li>&lt;a href="https://github.com/vcr/vcr">&lt;code>vcr&lt;/code>&lt;/a> record your test suite&amp;rsquo;s HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests&lt;/li>
&lt;li>&lt;a href="https://github.com/rspec/rspec-rails">&lt;code>rspec-rails&lt;/code>&lt;/a> is the rails integration with rspec, which depends upon rspec itself.&lt;/li>
&lt;li>&lt;a href="https://github.com/thoughtbot/factory_girl_rails">&lt;code>factory_girl_rails&lt;/code>&lt;/a> is the rails integration with factory_girl.&lt;/li>
&lt;li>&lt;a href="https://github.com/guard/guard-rspec">&lt;code>guard-rspec&lt;/code>&lt;/a> is rspec integration with guard&lt;/li>
&lt;li>&lt;a href="https://github.com/jonleighton/spring-commands-rspec">&lt;code>spring-commands-rspec&lt;/code>&lt;/a> lets you integrate rspec with spring, which means that your tests will run much faster.&lt;/li>
&lt;/ul>
&lt;p>If you are interested in using cucumber, see below for steps to integrate it.&lt;/p>
&lt;h2 id="base-configuration-of-rspec-and-guard">Base configuration of rspec and guard&lt;/h2>
&lt;p>Lets make sure that spring knows about rspec:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle install
$ spring binstub --all
* bin/rake: spring already present
* bin/rspec: generated with spring
* bin/rails: spring already present
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates a &lt;code>bin/rspec&lt;/code> command that lets us run our tests. Lets create a Guardfile and then tell guard to use this command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ guard init
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then edit the newly generated &lt;code>Guardfile&lt;/code> to use the spring version of the rspec runner. I also like to run all of the tests when I start up guard, because the more the merrier. In &lt;code>Guardfile&lt;/code>, change the &lt;code>guard :rspec&lt;/code> line to:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">guard&lt;/span> &lt;span class="ss">:rspec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">cmd&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;bin/rspec&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">all_on_start&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we install the rspec files:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails g rspec:install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates 3 files:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">create .rspec
create spec
create spec/spec_helper.rb
create spec/rails_helper.rb
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I like to have the output in documentation format by default, so we can edit the &lt;code>.rspec&lt;/code> file to be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="o">--&lt;/span>&lt;span class="n">color&lt;/span>
&lt;span class="o">--&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="n">spec_helper&lt;/span>
&lt;span class="o">--&lt;/span>&lt;span class="nb">format&lt;/span> &lt;span class="n">documentation&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="add-login-support-and-factory-girl-to-spec_helper">Add login support and factory girl to spec_helper&lt;/h2>
&lt;p>Getting feature and controller specs to work with authentication is a bit tricky. We&amp;rsquo;re going to assume that you use &lt;a href="./setting-up-devise-with-twitter-and-facebook-and-other-omniauth-schemes-without-email-addresses/">devise for authentication&lt;/a>, but this should support anything that uses &lt;a href="https://github.com/hassox/warden">warden&lt;/a>:&lt;/p>
&lt;p>Add devise to &lt;code>Gemfile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;devise&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create &lt;code>spec/support/controller_helpers.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">module&lt;/span> &lt;span class="nn">ControllerHelpers&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">login_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">double&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">scope&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:user&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">current_user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;current_&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">scope&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_sym&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="n">allow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;warden&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:authenticate!&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">and_throw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:warden&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:scope&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="n">allow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">controller&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current_user&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">and_return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kp">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">allow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;warden&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:authenticate!&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">and_return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">allow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">controller&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current_user&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">and_return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>At the top of &lt;code>spec_helper.rb&lt;/code> add:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">require_relative&lt;/span> &lt;span class="s1">&amp;#39;support/controller_helpers&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;devise&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and in the config block add:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="no">ControllerHelpers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:controller&lt;/span>
&lt;span class="no">Warden&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_mode!&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">after&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">Warden&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_reset!&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then edit &lt;code>rails_helper.rb&lt;/code> and put the following in the config block:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="no">FactoryGirl&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Syntax&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Methods&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="no">Devise&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">TestHelpers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:controller&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="no">Warden&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Test&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Helpers&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>If you are getting uncaught throw :warden errors then make sure you have the right includes in the right config files!&lt;/strong>&lt;/p>
&lt;p>This gives you a few things:&lt;/p>
&lt;ul>
&lt;li>&lt;code>FactoryGirl&lt;/code> syntax methods, which let you use things like &lt;code>create( :user )&lt;/code> in your tests, which uses &lt;code>FactoryGirl&lt;/code> to generate a database object.&lt;/li>
&lt;li>helper methods to &lt;code>sign_in&lt;/code> a user for a specific scope. This could be used as &lt;code>sign_in create( :user )&lt;/code> at the beginning of your controller test methods, and &lt;code>sign_in nil&lt;/code> to simulate an anonymous user.&lt;/li>
&lt;/ul>
&lt;h2 id="example-controller-spec">Example controller spec&lt;/h2>
&lt;p>This example assumes that you&amp;rsquo;ve already setup devise. If not, you can get something up and running doing:&lt;/p>
&lt;pre>&lt;code>$ rails g devise:install &amp;amp;&amp;amp; rails g devise User &amp;amp;&amp;amp; rake db:migrate
&lt;/code>&lt;/pre>&lt;p>(I go into slightly more detail in setting up &lt;a href="./setting-up-devise-with-twitter-and-facebook-and-other-omniauth-schemes-without-email-addresses/">devise for authentication&lt;/a>.)&lt;/p>
&lt;p>Assuming that you&amp;rsquo;ve already setup devise, lets look at how to implement a controller spec. First lets create a simple scaffold for a post:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails g scaffold post name:string
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And lets make it require authentication in &lt;code>posts_controller.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">PostsController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;span class="n">before_action&lt;/span> &lt;span class="ss">:authenticate_user!&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And replace &lt;code>posts_controller_spec.rb&lt;/code> with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;rails_helper&amp;#39;&lt;/span>
&lt;span class="no">RSpec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">describe&lt;/span> &lt;span class="no">PostsController&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:type&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ss">:controller&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">describe&lt;/span> &lt;span class="s2">&amp;#34;anonymous user&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">before&lt;/span> &lt;span class="ss">:each&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="c1"># This simulates an anonymous user&lt;/span>
&lt;span class="n">login_with&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">it&lt;/span> &lt;span class="s2">&amp;#34;should be redirected to signin&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">get&lt;/span> &lt;span class="ss">:index&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">redirect_to&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">new_user_session_path&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we run &lt;code>guard&lt;/code>, a few of the scaffold generate things will fail, since we are now forcing signin to check out this page. Our spec will correctly redirect the user to sign in.&lt;/p>
&lt;p>Lets now simulate a logged in user:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">it&lt;/span> &lt;span class="s2">&amp;#34;should let a user see all the posts&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">login_with&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:user&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">get&lt;/span> &lt;span class="ss">:index&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">render_template&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:index&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Guard should try and run this tests but fail because we can&amp;rsquo;t configured a user factory.&lt;/p>
&lt;p>Lets set that up now in &lt;code>spec/factories/user.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">FactoryGirl&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">define&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">sequence&lt;/span> &lt;span class="ss">:email&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="s2">&amp;#34;person&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">@example.com&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="no">FactoryGirl&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">define&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">factory&lt;/span> &lt;span class="ss">:user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:class&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;User&amp;#39;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">email&lt;/span>
&lt;span class="n">password&lt;/span> &lt;span class="s1">&amp;#39;12345678&amp;#39;&lt;/span>
&lt;span class="n">password_confirmation&lt;/span> &lt;span class="s1">&amp;#39;12345678&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Going back to the guard window, press &lt;em>return&lt;/em> to run everything again and verify. (Guard doens&amp;rsquo;t know that the &lt;code>posts_controller_spec.rb&lt;/code> depends upon the user factory changing.)&lt;/p>
&lt;h2 id="example-rspec-feature">Example rspec feature&lt;/h2>
&lt;p>Feature specs are more interesting, since they let you walk through the site and how it works. Lets build one now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails g rspec:feature add_new_post
create spec/features/add_new_posts_spec.rb
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And lets add something there now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;rails_helper&amp;#39;&lt;/span>
&lt;span class="n">feature&lt;/span> &lt;span class="s2">&amp;#34;AddNewPosts&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:type&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ss">:feature&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">it&lt;/span> &lt;span class="s2">&amp;#34;should require the user log in before adding a post&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;123456789&amp;#34;&lt;/span>
&lt;span class="n">u&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">password_confirmation&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">visit&lt;/span> &lt;span class="n">new_post_path&lt;/span>
&lt;span class="n">within&lt;/span> &lt;span class="s2">&amp;#34;#new_user&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">fill_in&lt;/span> &lt;span class="s2">&amp;#34;user_email&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>
&lt;span class="n">fill_in&lt;/span> &lt;span class="s2">&amp;#34;user_password&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">password&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">click_button&lt;/span> &lt;span class="s2">&amp;#34;Log in&amp;#34;&lt;/span>
&lt;span class="n">within&lt;/span> &lt;span class="s2">&amp;#34;#new_post&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">fill_in&lt;/span> &lt;span class="s2">&amp;#34;post_name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Post title&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">click_link_or_button&lt;/span> &lt;span class="s2">&amp;#34;Create Post&amp;#34;&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Post title&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This first creates a new user in the database, and then&lt;/p>
&lt;ol>
&lt;li>Visits the &lt;code>new_post_path&lt;/code> url.&lt;/li>
&lt;li>We should be shown the login form, and we fill it out&lt;/li>
&lt;li>Click the log in button&lt;/li>
&lt;li>Fill out the new post form&lt;/li>
&lt;li>Create the post&lt;/li>
&lt;li>Make sure that it&amp;rsquo;s in the database&lt;/li>
&lt;/ol>
&lt;p>If you want to skip the steps of manually logging in the user, you can use the &lt;code>login_as&lt;/code> method like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">it&lt;/span> &lt;span class="s2">&amp;#34;should create a new post with a logged in user&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">login_as&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:user&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="ss">scope&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:user&lt;/span>
&lt;span class="n">visit&lt;/span> &lt;span class="n">new_post_path&lt;/span>
&lt;span class="c1"># puts page.body&lt;/span>
&lt;span class="n">within&lt;/span> &lt;span class="s2">&amp;#34;#new_post&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">fill_in&lt;/span> &lt;span class="s2">&amp;#34;post_name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Post title&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">click_link_or_button&lt;/span> &lt;span class="s2">&amp;#34;Create Post&amp;#34;&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Post title&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setting-up-webmock-and-vcr">Setting up webmock and VCR&lt;/h2>
&lt;p>Webmock stops requests from hitting the network in the test environment. Lets turn this on by editing &lt;code>rails_helper.rb&lt;/code>:&lt;/p>
&lt;p>In &lt;code>rails_helper.rb&lt;/code>, below &lt;code>require 'rails/rspec'&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;webmock/rspec&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And VCR lets you record and play back tests in the test environment, so the first time it&amp;rsquo;s called it lets it get through, and then on subsequent requests it plays back a known response. Put this at the bottom of &lt;code>rails_helper.rb&lt;/code> to configure:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">VCR&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configure&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cassette_library_dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;spec&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;vcr&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hook_into&lt;/span> &lt;span class="ss">:webmock&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="example-usage-of-webmock-and-vcr">Example usage of webmock and VCR&lt;/h2>
&lt;p>Word comes down from up high that to facilitate decision making, a key bit of information is the current phase of the moon when something is posted to the site. We can pull the data from the &lt;a href="http://cerridwen.readthedocs.org/en/latest/index.html">Cerridwen&lt;/a> site, but how do we set up tests for this? We certainly don&amp;rsquo;t want our test suite to fail because the phase of the moon changed!&lt;/p>
&lt;p>This is where webmock and VCR comes in. Webmock by itself will throw an error when a request is made over the network. VCR will let us record and play back network request &amp;ndash; using &lt;em>cassettes&lt;/em> no less &amp;ndash; so that we isolate changing API responses from our tests.&lt;/p>
&lt;p>First lets write our code to look up the phase of the moon on the create post action. Let&amp;rsquo;s add a field&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="err">$&lt;/span> &lt;span class="n">rails&lt;/span> &lt;span class="n">g&lt;/span> &lt;span class="n">migration&lt;/span> &lt;span class="n">add_phase_of_moon_to_posts&lt;/span> &lt;span class="ss">moon_phase&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">rake&lt;/span> &lt;span class="ss">db&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">migrate&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then add the lookup to our &lt;code>app/controllers/posts_controller.rb&lt;/code> and replace the &lt;code>def create&lt;/code> method:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;net/http&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">create&lt;/span>
&lt;span class="vi">@post&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">post_params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">moon_json&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Net&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">HTTP&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://cerridwen.viridian-project.de/api/v1/moon&amp;#34;&lt;/span> &lt;span class="p">))&lt;/span>
&lt;span class="n">moon&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">moon_json&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="vi">@post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">moon_phase&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">moon&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;phase&amp;#39;&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="s1">&amp;#39;trend&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> in &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">moon&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;position&amp;#39;&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="s1">&amp;#39;sign&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="vi">@post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save&lt;/span>
&lt;span class="n">respond_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vi">@post&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(This is not good style.)&lt;/p>
&lt;p>Now lets run our test again.&lt;/p>
&lt;p>Lots of unhandled http request errors! I&amp;rsquo;m going to ignore the scaffold generate tests and focus on our rspec feature. So, inside of &lt;code>spec/features/add_new_posts_spec.rb&lt;/code> we can link the click action inside of a use_cassette block like so::&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">it&lt;/span> &lt;span class="s2">&amp;#34;should create a new post with a logged in user&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">login_as&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:user&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="ss">scope&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:user&lt;/span>
&lt;span class="n">visit&lt;/span> &lt;span class="n">new_post_path&lt;/span>
&lt;span class="c1"># puts page.body&lt;/span>
&lt;span class="n">within&lt;/span> &lt;span class="s2">&amp;#34;#new_post&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">fill_in&lt;/span> &lt;span class="s2">&amp;#34;post_name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Post title&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="no">VCR&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use_cassette&lt;/span> &lt;span class="s2">&amp;#34;waxing_in_pisces&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">click_link_or_button&lt;/span> &lt;span class="s2">&amp;#34;Create Post&amp;#34;&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Post title&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">moon_phase&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;waxing in Pisces&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And let the tests run. When tests are run, VCR is going to look for the file &lt;code>spec/vcr/waxing_in_pisces&lt;/code>. If it&amp;rsquo;s not found, then it will make the request to the server. If the API requires authentication, for example an accesstoken when accessing a OAuth protected call, then you&amp;rsquo;ll need to configure you tests to have valid credentials for the first time. These credentials could be written into the spec/vcr directory, so make sure that you scrub that before things get checked in. (Or expire the access tokens.)&lt;/p>
&lt;p>If it is found, then it plays it back and so the next time the suite is run it plays it back. Which is way faster.&lt;/p>
&lt;h2 id="final-notes">Final notes&lt;/h2>
&lt;p>Testing has a place in software development, but it&amp;rsquo;s not actually clear where that is. Setting up test haresses and building out tests for every feature really slows things down in the beginning, and probably isn&amp;rsquo;t appropriate for one off, exploratory things. On the other hand, things tend to grow way past what anyone ever initially expected, and you always say &amp;ldquo;I wish there was a test suite&amp;rdquo; when inheriting code &amp;ndash; or even more likely, looking at something you haven&amp;rsquo;t seen for a few months.&lt;/p>
&lt;p>The rails community has a &lt;a href="http://martinfowler.com/articles/is-tdd-dead/">long history with Test Driven Development&lt;/a>. The biggest advantage of this is that you write code that is testable, and code that is testable has all sorts of other qualities that is great, from clearly defined boundries of responsibility, good encapulation, and being able to look at small isolated pieces of the system and having it make sense. On the other hand, thebest code is the stuff you don&amp;rsquo;t need to maintain, and in some projects the weight of the test code is as large or larger than the code for the application features.&lt;/p>
&lt;p>The biggest problem with testing is that it gets you in a wonderful, but wrong, flow state of development. In the begining of projects you should be focused on the user experience, and how the system is experienced from the outside. The highest level tests tend to be are user stories, which is below the level of brand and user experience.&lt;/p></description></item><item><title>Setting up Devise with Twitter and Facebook and other Omniauth schemes without email addresses</title><link>https://willschenk.com/articles/2015/setting-up-devise-with-twitter-and-facebook-and-other-omniauth-schemes-without-email-addresses/</link><pubDate>Fri, 16 Jan 2015 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2015/setting-up-devise-with-twitter-and-facebook-and-other-omniauth-schemes-without-email-addresses/</guid><description>&lt;p>Adding social login to your sites really makes it easier to get users onboard. Devise is great to help get an authentication system up and running, but there are a few tricky things to get right. The first challenge is that you don&amp;rsquo;t always get the user&amp;rsquo;s email address when the first connect. The second challenge is that we want to request the minimum permissions first so that the user is more likely to sign up, and gradually ask more as the time arises.&lt;/p>
&lt;p>This post is going to go through the strategy that &lt;a href="http://seed.happyfuncorp.com">happy_seed&lt;/a> uses to support these use cases. The easiest way to get started is to use seed to get things up and running, but we&amp;rsquo;ll walk through how to do it all in detail below.&lt;/p>
&lt;h2 id="install-devise-and-omniauth">Install devise and omniauth&lt;/h2>
&lt;p>Let&amp;rsquo;s install a few gems. We&amp;rsquo;ll go through how to install twitter, facebook, and google.&lt;/p>
&lt;p>&lt;code>Gemfile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;devise&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;~&amp;gt; 3.4&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;omniauth&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;omniauth-twitter&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;omniauth-facebook&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;omniauth-instagram&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;twitter&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;instagram&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;omniauth-google-oauth2&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;google-api-client&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">require&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;google/api_client&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to run the &lt;code>devise&lt;/code> generators. I like to copy over the views so that I can fix them up to look like the rest of my app. If you are using seed, these views will be generated with &lt;code>HAML&lt;/code> and the &lt;code>bootstrap helpers&lt;/code> gem.&lt;/p>
&lt;p>First install devise:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails generate devise:install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>devise:install&lt;/code> copies over &lt;code>config/initializers/devise.rb&lt;/code> and a localized message file. We will configure devise here. &lt;em>Follow the outputed instuctions to setup flashes and mailer configs.&lt;/em>&lt;/p>
&lt;p>Now create a model, call it user:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails generate devise User
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates a &lt;code>User&lt;/code> model and configures devise routes to use it. We will edit both of these.&lt;/p>
&lt;p>Finally, copy over the views so you can style them as you need:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails generate devise:views
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="make-sure-regular-login-in-works">Make sure regular login in works&lt;/h2>
&lt;p>Lets create a basic controller to see if our login works:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails g controller welcome index
$ rake db:migrate
$ rails s
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit &lt;code>routes.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">get&lt;/span> &lt;span class="s1">&amp;#39;welcome/index&amp;#39;&lt;/span>
&lt;span class="n">root&lt;/span> &lt;span class="s1">&amp;#39;welcome#index&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And change your &lt;code>WeclomeController&lt;/code> to require user authentication:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">WelcomeController&lt;/span>
&lt;span class="n">before_action&lt;/span> &lt;span class="ss">:authenticate_user!&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">index&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now if you go to &lt;a href="http://localhost:3000/">http://localhost:3000/&lt;/a> you should get redirected to a login page. If you create a user you should be able to then see the protected page.&lt;/p>
&lt;p>Let&amp;rsquo;s add a logout button to the index page for testing: &lt;code>app/views/welcome/index.html.erb&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-erb" data-lang="erb">&amp;lt;%= link_to &amp;quot;Signout&amp;quot;, destroy_user_session_path, method: :delete %&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Now we can go back and forth. The &lt;code>method: :delete&lt;/code> part is something that I often forget about.&lt;/p>
&lt;h2 id="configure-omniauth">Configure Omniauth&lt;/h2>
&lt;p>We need to tell devise and omniauth how to talk to the various outside services. The first thing you&amp;rsquo;ll need to do is configure those services and collect their app ids and app secrets. Then you put that information inside of &lt;code>config/initializers/devise.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:google_oauth2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;GOOGLE_OAUTH2_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;GOOGLE_OAUTH2_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">scope&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;email,profile,offline&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">prompt&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;consent&amp;#34;&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:instagram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;INSTAGRAM_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;INSTAGRAM_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:facebook&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;FACEBOOK_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;FACEBOOK_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">scope&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:twitter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;TWITTER_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;TWITTER_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since we are building nice &lt;a href="http://12factor.net">12 Factor Apps&lt;/a> we pull the config from the environment. seed uses the &lt;a href="https://github.com/bkeepers/dotenv">dotenv gem&lt;/a> to keep track of these things in a &lt;code>.env&lt;/code> file, and when you deploy to heroku you will use heroku config variables.&lt;/p>
&lt;p>We also pass in &lt;code>scope&lt;/code>s to a few strategies, which is where we can configure omniauth to request specific permissions. Sometimes you need to enable them on the remote side before you can request things (&lt;em>e.g.&lt;/em> google, twitter) so make sure that things are setup there.&lt;/p>
&lt;p>We&amp;rsquo;ll go into how to dynamically set that scope later on.&lt;/p>
&lt;h2 id="tell-devise-about-omniauthable">Tell Devise about omniauthable&lt;/h2>
&lt;p>Open up &lt;code>app/models/user.rb&lt;/code> and add &lt;code>:omniauthable&lt;/code> to your &lt;code>devise&lt;/code> line and remove &lt;code>:validatable&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">devise&lt;/span> &lt;span class="ss">:omniauthable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:database_authenticatable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:registerable&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:recoverable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:rememberable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:trackable&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you should see that there are a list of connect with our services when you go to your sign in or login pages.&lt;/p>
&lt;h2 id="create-a-formuser-to-handle-validations">Create a FormUser to handle validations&lt;/h2>
&lt;p>Not all services return email addresses, and by default the devise validations expect them. Let&amp;rsquo;s move those validations out of the base &lt;code>User&lt;/code> class into a &lt;code>FormUser&lt;/code> class.&lt;/p>
&lt;ol>
&lt;li>Remove &lt;code>:validatable&lt;/code> from &lt;code>app/models/user.rb&lt;/code> (which you&amp;rsquo;ve done above)&lt;/li>
&lt;li>Tell devise to use our new model.&lt;/li>
&lt;li>Create the forms_user.rb class.&lt;/li>
&lt;/ol>
&lt;p>Inside of &lt;code>config/routes.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">devise_for&lt;/span> &lt;span class="ss">:users&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">class_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;FormUser&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And &lt;code>app/models/form_user.rb&lt;/code> should look like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">FormUser&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">User&lt;/span>
&lt;span class="kp">attr_accessor&lt;/span> &lt;span class="ss">:current_password&lt;/span>
&lt;span class="n">validates_presence_of&lt;/span> &lt;span class="ss">:email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:email_required?&lt;/span>
&lt;span class="n">validates_uniqueness_of&lt;/span> &lt;span class="ss">:email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">allow_blank&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:email_changed?&lt;/span>
&lt;span class="n">validates_format_of&lt;/span> &lt;span class="ss">:email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">Devise&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email_regexp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">allow_blank&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:email_changed?&lt;/span>
&lt;span class="n">validates_presence_of&lt;/span> &lt;span class="ss">:password&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:password_required?&lt;/span>
&lt;span class="n">validates_confirmation_of&lt;/span> &lt;span class="ss">:password&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:password_required?&lt;/span>
&lt;span class="n">validates_length_of&lt;/span> &lt;span class="ss">:password&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">within&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">Devise&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">password_length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">allow_blank&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">password_required?&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kp">false&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">blank?&lt;/span>
&lt;span class="o">!&lt;/span>&lt;span class="n">persisted?&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">password_confirmation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">email_required?&lt;/span>
&lt;span class="kp">true&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>class_name&lt;/code> inside of the devise config will tell it to use this class for building forms, and we have the validations on this class so our error messages will work on the site, but we&amp;rsquo;ll be able to save objects without it.&lt;/p>
&lt;h2 id="create-identity-model-to-store-access_keys-and-metadata">Create Identity model to store access_keys and metadata&lt;/h2>
&lt;p>Now we are ready to plug in oauth authentications. The flow is:&lt;/p>
&lt;ol>
&lt;li>User requests &lt;code>/users/auth/:provider&lt;/code>, where provider one of the strategies that you defined above.&lt;/li>
&lt;li>Omniauth does magic and directs the user to the remote service.&lt;/li>
&lt;li>The user grants us access and is redirected to the callback path.&lt;/li>
&lt;li>The OmniauthCallbacks controller is called on our application with the relavent info.&lt;/li>
&lt;/ol>
&lt;p>We will use this info to create the user. We are also going to store it to be able to access the service on behalf of the user, and we&amp;rsquo;ll need to store the &lt;code>access_token&lt;/code> in order to do so.&lt;/p>
&lt;p>Google is slightly more complicated and we&amp;rsquo;ll need to store a &lt;code>refresh_token&lt;/code> as well.&lt;/p>
&lt;p>Lets create that model now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rails model identity user:references provider:string accesstoken:string refreshtoken:string uid:string name:string email:string nickname:string image:string phone:string urls:string
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And flesh out &lt;code>app/models/identity.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">Identity&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>
&lt;span class="n">belongs_to&lt;/span> &lt;span class="ss">:user&lt;/span>
&lt;span class="n">validates_presence_of&lt;/span> &lt;span class="ss">:uid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:provider&lt;/span>
&lt;span class="n">validates_uniqueness_of&lt;/span> &lt;span class="ss">:uid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:scope&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ss">:provider&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">find_for_oauth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">auth&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">identity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">find_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">provider&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">provider&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">uid&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uid&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">identity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">uid&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">provider&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">provider&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">accesstoken&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">credentials&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">token&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">refreshtoken&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">credentials&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">refresh_token&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nickname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nickname&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">image&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phone&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">urls&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_json&lt;/span>
&lt;span class="n">identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save&lt;/span>
&lt;span class="n">identity&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to tell devise to use this model.&lt;/p>
&lt;h2 id="create-omniauthcallbackscontroller-to-pull-in-data">Create OmniauthCallbacksController to pull in data&lt;/h2>
&lt;p>We&amp;rsquo;re going to build one method to handle the different authentication callbacks, called &lt;code>generic_callback&lt;/code>. The logic of this controller is:&lt;/p>
&lt;ol>
&lt;li>Find or create an &lt;code>Identity&lt;/code> object for the incoming oauth data. Update it with the latest info.&lt;/li>
&lt;li>If there is no user associated with the Identity, associate it with the current_user.&lt;/li>
&lt;li>If there is no current_user, create a new User object.&lt;/li>
&lt;li>If the User object doesn&amp;rsquo;t have an email address set yet, but we do have one from the remote service, set the email address to that.&lt;/li>
&lt;li>Log the user in and let the continue on their way.&lt;/li>
&lt;/ol>
&lt;p>First we need to tell devise about our controller in &lt;code>routes.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">devise_for&lt;/span> &lt;span class="ss">:users&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">class_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;FormUser&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:controllers&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">omniauth_callbacks&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;omniauth_callbacks&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create &lt;code>app/controllers/omniauth_callback_controller.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">OmniauthCallbacksController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Devise&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">OmniauthCallbacksController&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">instagram&lt;/span>
&lt;span class="n">generic_callback&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;instagram&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">facebook&lt;/span>
&lt;span class="n">generic_callback&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;facebook&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">twitter&lt;/span>
&lt;span class="n">generic_callback&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;twitter&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">google_oauth2&lt;/span>
&lt;span class="n">generic_callback&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;google_oauth2&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">generic_callback&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">provider&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="vi">@identity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_for_oauth&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;omniauth.auth&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="vi">@user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="vi">@identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">current_user&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vi">@user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="vi">@user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="vi">@identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="vi">@identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_attribute&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:user_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vi">@user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vi">@user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">blank?&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="vi">@identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>
&lt;span class="vi">@user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_attribute&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vi">@identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vi">@user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">persisted?&lt;/span>
&lt;span class="vi">@identity&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_attribute&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:user_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vi">@user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="c1"># This is because we&amp;#39;ve created the user manually, and Device expects a&lt;/span>
&lt;span class="c1"># FormUser class (with the validations)&lt;/span>
&lt;span class="vi">@user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">FormUser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span> &lt;span class="vi">@user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;span class="n">sign_in_and_redirect&lt;/span> &lt;span class="vi">@user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">event&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:authentication&lt;/span>
&lt;span class="n">set_flash_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:notice&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:success&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">kind&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">provider&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">capitalize&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">is_navigational_format?&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">session&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;devise.&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">provider&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_data&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;omniauth.auth&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">redirect_to&lt;/span> &lt;span class="n">new_user_registration_url&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="override-registrationscontroller-to-handle-adding-email-address-and-password">Override RegistrationsController to handle adding email address and password&lt;/h2>
&lt;p>We want to let the user add an email address if they haven&amp;rsquo;t already, and also let them set a password if they haven&amp;rsquo;t already set one. (Otherwise it requires the user to enter in &lt;code>current_password&lt;/code>.) Lets first tell devise about our new controller:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">devise_for&lt;/span> &lt;span class="ss">:users&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">class_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;FormUser&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:controllers&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">omniauth_callbacks&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;omniauth_callbacks&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">registrations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;registrations&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then create that controller:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">RegistrationsController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Devise&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">RegistrationsController&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">update_resource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encrypted_password&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">blank?&lt;/span> &lt;span class="c1"># || params[:password].blank?&lt;/span>
&lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:email&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:email&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:password&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">blank?&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:password&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:password_confirmation&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span> &lt;span class="s2">&amp;#34;Updating password&amp;#34;&lt;/span>
&lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:password&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">valid?&lt;/span>
&lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_without_password&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_with_password&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now we should be good! Give it a go and see how it looks!&lt;/p>
&lt;h2 id="adding-methods-to-user-to-get-to-the-clients">Adding methods to User to get to the clients&lt;/h2>
&lt;p>This goes into &lt;code>app/models/user.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">has_many&lt;/span> &lt;span class="ss">:identities&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">twitter&lt;/span>
&lt;span class="n">identities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:provider&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;twitter&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">twitter_client&lt;/span>
&lt;span class="vi">@twitter_client&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">access_token&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">twitter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">accesstoken&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">facebook&lt;/span>
&lt;span class="n">identities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:provider&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;facebook&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">facebook_client&lt;/span>
&lt;span class="vi">@facebook_client&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">Facebook&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">access_token&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">facebook&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">accesstoken&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">instagram&lt;/span>
&lt;span class="n">identities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:provider&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;instagram&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">instagram_client&lt;/span>
&lt;span class="vi">@instagram_client&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">Instagram&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">access_token&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">instagram&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">accesstoken&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">google_oauth2&lt;/span>
&lt;span class="n">identities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:provider&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;google_oauth2&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">google_oauth2_client&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="vi">@google_oauth2_client&lt;/span>
&lt;span class="vi">@google_oauth2_client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Google&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">APIClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:application_name&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;HappySeed App&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:application_version&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;1.0.0&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="vi">@google_oauth2_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authorization&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_token!&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="ss">:access_token&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">google_oauth2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">accesstoken&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:refresh_token&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">google_oauth2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">refreshtoken&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="vi">@google_oauth2_client&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you can access a configured API client using things like &lt;code>current_user.twitter&lt;/code>.&lt;/p>
&lt;h2 id="passing-dynamic-scopes-to-omniauth">Passing dynamic scopes to omniauth&lt;/h2>
&lt;p>In the current scheme above, you have to hard code the scopes that you want to request for the user which doesn&amp;rsquo;t always work. It would be better to only request write access if the user really needs to have it, and by default only get read-only access. In order to do this we can leverage the &lt;code>Omniauth&lt;/code> setup property. Inside of &lt;code>devise.rb&lt;/code> add &lt;code>setup: true&lt;/code> to each of the services you want to be able to upgrade.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:google_oauth2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;GOOGLE_OAUTH2_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;GOOGLE_OAUTH2_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">scope&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;email,profile,offline&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">prompt&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;consent&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">setup&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:instagram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;INSTAGRAM_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;INSTAGRAM_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">setup&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:facebook&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;FACEBOOK_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;FACEBOOK_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">scope&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">setup&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">omniauth&lt;/span> &lt;span class="ss">:twitter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;TWITTER_APP_ID&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">ENV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;TWITTER_APP_SECRET&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">setup&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s add a few routes in &lt;code>routes.rb&lt;/code> that we can have the user link to:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">devise_scope&lt;/span> &lt;span class="ss">:user&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">get&lt;/span> &lt;span class="s1">&amp;#39;/users/auth/:provider/upgrade&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;omniauth_callbacks#upgrade&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">as&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:user_omniauth_upgrade&lt;/span>
&lt;span class="n">get&lt;/span> &lt;span class="s1">&amp;#39;/users/auth/:provider/setup&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:to&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;omniauth_callbacks#setup&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first route is something that we&amp;rsquo;ll have the user link to, using &lt;code>user_omniauth_upgrade_path( :google_oauth2 )&lt;/code> for example. The second &lt;code>setup&lt;/code> route is what omniauth will call internally that we can use to change the &lt;code>scope&lt;/code> parameter. These go into &lt;code>omniauth_callbacks_controller.rb&lt;/code>.&lt;/p>
&lt;p>The first &lt;code>upgrade&lt;/code> method looks at the provider and sets a &lt;code>flash&lt;/code> variable for the additional access. In this case, we are asking for the &lt;code>https://www.googleapis.com/auth/admin.directory.user&lt;/code> also.&lt;/p>
&lt;pre>&lt;code> def upgrade
scope = nil
if params[:provider] == &amp;quot;google_oauth2&amp;quot;
scope = &amp;quot;email,profile,offline,https://www.googleapis.com/auth/admin.directory.user&amp;quot;
end
redirect_to user_omniauth_authorize_path( params[:provider] ), flash: { scope: scope }
end
&lt;/code>&lt;/pre>&lt;p>Then it directs the user back to the normal flow.&lt;/p>
&lt;p>When you specify &lt;code>setup: true&lt;/code> inside of the omniauth configuration, there is magic that calls the &lt;code>setup_path&lt;/code> by default, and this is the method where we change the scope from the default in the strategy:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">setup&lt;/span>
&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;omniauth.strategy&amp;#39;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;scope&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">flash&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:scope&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;omniauth.strategy&amp;#39;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;scope&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">render&lt;/span> &lt;span class="ss">:text&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;Setup complete.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:status&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">404&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now in your views, you can do&lt;/p>
&lt;pre>&lt;code class="language-erb" data-lang="erb">&amp;lt;%= link_to &amp;quot;Upgrade Access&amp;quot;, user_omniauth_upgrade_path( :google_oauth2 ) %&amp;gt;
&lt;/code>&lt;/pre>&lt;p>And the user will go through the oauth flow again requesting the additional access.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Making all of this work is possible, but there are a lot of fiddly little bits to make it work. Both devise and all of the many omniauth strategies out there make it easy to add this functionality to your application.&lt;/p>
&lt;p>Check out &lt;a href="http://seed.happyfuncorp.com">seed&lt;/a> to quickly create an application will all of this stuff done for you!&lt;/p></description></item><item><title>Using rake for dataflow programming and data science</title><link>https://willschenk.com/articles/2014/using-rake-for-dataflow-programming-and-data-science/</link><pubDate>Fri, 19 Dec 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/using-rake-for-dataflow-programming-and-data-science/</guid><description>&lt;p>I&amp;rsquo;ve been using Rake more and more for data collection and processing tasks. Rake is pretty pretty powerful. Most people know it as way to add external tasks to a Rails app, but it&amp;rsquo;s actually very powerful build system. We&amp;rsquo;re going to take advantage of that to build out a &lt;a href="https://github.com/HappyFunCorp/rake-data">framework&lt;/a> that will make it easy to collect, process, and interpret data while keeping it all in sync.&lt;/p>
&lt;p>In fact, if you just want to start playing with stuff now, head over to the &lt;a href="https://github.com/HappyFunCorp/rake-data">rake-data&lt;/a> site to go through some walk throughs. Read on to setup a fun world of your own!&lt;/p>
&lt;h2 id="rejected-titles-of-this-post">Rejected titles of this post&lt;/h2>
&lt;ul>
&lt;li>rake and bake&lt;/li>
&lt;li>rake me up before you go-go&lt;/li>
&lt;li>let them eat rake&lt;/li>
&lt;li>rake it until you make it&lt;/li>
&lt;/ul>
&lt;h2 id="tasks-and-dependancies">Tasks and Dependancies&lt;/h2>
&lt;p>Rake is a a Make-like Ruby program that people know mostly in terms of rails apps. We can define a few tasks and define their interdependancies:&lt;/p>
&lt;img src="1.dot.svg" class="img-fluid">
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">task&lt;/span> &lt;span class="ss">:mail_daily_leader_boards&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ss">:update_leader_boards&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mail_leader_boards!&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:flush_data&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ss">:environment&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">Leaderboard&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">flush!&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:update_leader_boards&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ss">:environment&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">Leaderboard&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update!&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="ss">:environment&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we run &lt;code>mail_daily_leaderboards&lt;/code> it makes sure that &lt;code>update_leader_boards&lt;/code> is run first. This in turn depends upon &lt;code>environment&lt;/code>, and Rake makes sure that all dependancies are met before executing the task.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake mail_daily_leaderboards --dry-run
** Invoke mail_daily_leader_boards &lt;span class="o">(&lt;/span>first_time&lt;span class="o">)&lt;/span>
** Invoke update_leader_boards &lt;span class="o">(&lt;/span>first_time&lt;span class="o">)&lt;/span>
** Invoke environment &lt;span class="o">(&lt;/span>first_time&lt;span class="o">)&lt;/span>
** Execute &lt;span class="o">(&lt;/span>dry run&lt;span class="o">)&lt;/span> environment
** Execute &lt;span class="o">(&lt;/span>dry run&lt;span class="o">)&lt;/span> update_leader_boards
** Execute &lt;span class="o">(&lt;/span>dry run&lt;span class="o">)&lt;/span> mail_daily_leader_boards
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Rake is also smart enough to only run a task once. Lets look at what happens when we try to run two tasks:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake flush_data mail_daily_leader_boards --dry-run
** Invoke flush_data &lt;span class="o">(&lt;/span>first_time&lt;span class="o">)&lt;/span>
** Invoke environment &lt;span class="o">(&lt;/span>first_time&lt;span class="o">)&lt;/span>
** Execute &lt;span class="o">(&lt;/span>dry run&lt;span class="o">)&lt;/span> environment
** Execute &lt;span class="o">(&lt;/span>dry run&lt;span class="o">)&lt;/span> flush_data
** Invoke mail_daily_leader_boards &lt;span class="o">(&lt;/span>first_time&lt;span class="o">)&lt;/span>
** Invoke update_leader_boards &lt;span class="o">(&lt;/span>first_time&lt;span class="o">)&lt;/span>
** Invoke environment
** Execute &lt;span class="o">(&lt;/span>dry run&lt;span class="o">)&lt;/span> update_leader_boards
** Execute &lt;span class="o">(&lt;/span>dry run&lt;span class="o">)&lt;/span> mail_daily_leader_boards
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice here that even though &lt;code>update_leader_boards&lt;/code> and &lt;code>flush_data&lt;/code> both depend on &lt;code>environment&lt;/code>, so it needs to be run for either of the dependant tasks to run, and it is only invoked once.&lt;/p>
&lt;p>So far so good.&lt;/p>
&lt;h2 id="dataflow-programming">Dataflow programming&lt;/h2>
&lt;p>So Rake gives us a dependancy specification and resolution process. We can visualize this in two ways. One way is where the arrows are pointing to sub tasks, top down, where the arrow direction represents the control flow control of the process. When you want A, it makes sure that B and C are there, which in turn have their own dependancies.&lt;/p>
&lt;p>What does it mean if we were to reverse the arrows on the graph?&lt;/p>
&lt;table class="table table-bordered">
&lt;tr>
&lt;th style="text-align: center">Top Down&lt;/th>
&lt;th style="text-align: center">Bottom Up&lt;/th>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">
&lt;img src="top.dot.svg">
&lt;/td>
&lt;pre>&lt;code>&amp;lt;td style=&amp;quot;text-align: center&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;bottom.dot.svg&amp;quot;&amp;gt;
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
&lt;/tr>
&lt;/table>
&lt;p>If we think about rake in terms of managing a build process, what we called &lt;em>dependancies&lt;/em> are actually the source of the data. If we want an object file, we start with the source file. If we want to generate C, we need to have generated the data for D and E.&lt;/p>
&lt;h2 id="file-tasks">File Tasks&lt;/h2>
&lt;p>Rake also knows about building files. &lt;code>Rake::FileTask&lt;/code> is a subtask of &lt;code>Rake::Task&lt;/code> which will only run the target if the &lt;em>file is out of date&lt;/em> : if the source file is newer than the destination file.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">file&lt;/span> &lt;span class="s2">&amp;#34;Rakefile.gz&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;Rakefile&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;gzip -fkv &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This defined as task called &lt;code>Rakefile.gz&lt;/code> that when invoked will look to see if either the file doesn&amp;rsquo;t exist, or if it&amp;rsquo;s older than the source file &lt;code>Rakefile&lt;/code>, and gzips it up.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake Rakefile.gz
gzip -fkv Rakefile
Rakefile: -20.6% -- replaced with Rakefile.gz
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run it again and nothing happens!&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake Rakefile.gz
$
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Touch the source file and it gets rebuilt:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ touch Rakefile
$ rake Rakefile.gz
gzip -fkv Rakefile
Rakefile: -20.6% -- replaced with Rakefile.gz
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="rake-as-a-build-system">Rake as a build system&lt;/h2>
&lt;p>Files and rules come from Rake&amp;rsquo;s &lt;code>make&lt;/code> heritage. We can think of regular &lt;code>Task&lt;/code>s as being a general sort of &lt;em>action&lt;/em>, meaning you are packaging up certain set of imperitives in a particular context to achieve some goal. &lt;code>FileTask&lt;/code>s are a more specific type of action, where we want to generate a specific file from a specific source file. For a full build system we want to be able to translate whole classes of files into other files, like source files into object files, or XML files into HTML files. We use &lt;code>Rules&lt;/code> to set these up.&lt;/p>
&lt;h2 id="tasks-defined-as-rules">Tasks defined as Rules&lt;/h2>
&lt;p>The third main bit of magic that Rake gives us is rules. The file task can magically bring a file into being when invoked, but in a build process its more common to translate files with a certain extention to other files in a different extension. The canonical example is probably compiling &lt;code>.c&lt;/code> source files into &lt;code>.o&lt;/code> objects, but since it&amp;rsquo;s the 21 first century lets look at how to run the Graphviz dot file to process into svg or.dot.svg files.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">rule&lt;/span> &lt;span class="s2">&amp;#34;.svg&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;.dot&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;dot -Tsvg &amp;lt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">rule&lt;/span> &lt;span class="s2">&amp;#34;.dot.svg&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;.dot&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;dot -.dot.svg &amp;lt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can ask Rake to build a &lt;em>type&lt;/em> of file, and will look for a source file based upon the name that you request. For example, if we were to run the command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake bottom.svg
dot -Tsvg &amp;lt; bottom.dot &amp;gt; bottom.svg
$
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Rake would try to instantiate the file &lt;code>bottom.svg&lt;/code> by first requesting file called &lt;code>bottom.dot&lt;/code>. Since this is part of the rake dependancy system, this could in turn be built by a seperate rake task!&lt;/p>
&lt;p>Note that Rake doesn&amp;rsquo;t know anything specifically about these extension. It just knows what you have defined. We can define other formats and build rules around that.&lt;/p>
&lt;h2 id="using-rake-to-pull-data-from-a-url">Using Rake to pull data from a url&lt;/h2>
&lt;p>Let&amp;rsquo;s extend the Rake DSL to be able to download files from the internet. You can put this at the top of your &lt;code>Rakefile&lt;/code> for now.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">def&lt;/span> &lt;span class="nf">url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="n">dest&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Loading &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exists?&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">mkdir_p&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pathmap&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;curl -L &amp;#39;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#39; &amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets use this to download a file from the internet do we can parse it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">url&lt;/span> &lt;span class="s2">&amp;#34;source/weather.json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://api.openweathermap.org/data/2.5/weather?id=5128581&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we run &lt;code>rake source/weather.json&lt;/code> the first time, the file is downloaded. The second time we run the rake command nothing happens since the &lt;code>source/weather.json&lt;/code> file already exists. Lets add a quick task to parse the JSON.&lt;/p>
&lt;h2 id="parse-json-using-simple-ruby-commands">Parse JSON using simple ruby commands&lt;/h2>
&lt;p>Lets parse the file:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="s2">&amp;#34;report.txt&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;source/weather.json&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Parsing sun times&amp;#34;&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span> &lt;span class="p">))&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wb&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printf&lt;/span> &lt;span class="s2">&amp;#34;%-15s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;sunrise&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;sys&amp;#39;&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="s1">&amp;#39;sunrise&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printf&lt;/span> &lt;span class="s2">&amp;#34;%-15s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;sunset&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;sys&amp;#39;&lt;/span>&lt;span class="o">][&lt;/span>&lt;span class="s1">&amp;#39;sunset&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>rake report.txt&lt;/code>. This should generate the file the first time, and on subsequent runs, do nothing. If you remove &lt;code>source/weather.json&lt;/code> file and run &lt;code>rake report.txt&lt;/code> again, you&amp;rsquo;ll see that Rake is smart enough to download a new version of the file.&lt;/p>
&lt;h2 id="parsing-html">Parsing HTML&lt;/h2>
&lt;p>Another common thing to do is to download a webpage and parse through the results. &lt;code>Nokogiri&lt;/code> makes this really easy since you can identify DOM elements using CSS selectors more or less the same a jQuery selectors.&lt;/p>
&lt;p>Lets make a function to help us parse html files into CSV files:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Parse an HTML file into CSV&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">parse_html&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">parser&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;nokogiri&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="n">dest&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Parsing &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> -&amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">mkdir_p&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pathmap&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Nokogiri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wb&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">csv&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">parser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">html&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">csv&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This defines a file task to convert one file type into another. When it needs to run &amp;ndash; and this will only happen of the source file changes or the destination file doesnt exist &amp;ndash; it loads up the file into Nokogiri, creates a CSV output file, and passes control to a passed in block for processing.&lt;/p>
&lt;p>Let&amp;rsquo;s pull out a list of the top 10 popular books on project gutenberg for the last month:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Load the html file with statistics&lt;/span>
&lt;span class="n">url&lt;/span> &lt;span class="s2">&amp;#34;source/top.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://www.gutenberg.org/browse/scores/top&amp;#34;&lt;/span>
&lt;span class="n">parse_html&lt;/span> &lt;span class="s2">&amp;#34;processed/month_top_100.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;source/top.html&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">html&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;h2#books-last30 + ol a&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;href&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">file&lt;/span> &lt;span class="s2">&amp;#34;processed/month_top_10.csv&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;processed/month_top_100.csv&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;head -n 10 &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now run &lt;code>rake processed/month_top_10.csv&lt;/code> and watch what happens. This only hits the server the first time it&amp;rsquo;s run. If we want to process things again, we simply delete the files in the &lt;code>source&lt;/code> directory and everything in the &lt;code>processed&lt;/code> directory will get regenerated.&lt;/p>
&lt;h2 id="tasks-over-multiple-files">Tasks over multiple files&lt;/h2>
&lt;p>We have a few CSV files that contain a list of books. How would we do something with these books? The natural thing would be to use Rake&amp;rsquo;s &lt;code>FileList&lt;/code>, but this doesn&amp;rsquo;t work the way you&amp;rsquo;d expect because &lt;code>FileList&lt;/code> caches its results and it therefor doesn&amp;rsquo;t know about files that are created during the build process. We don&amp;rsquo;t want to have to run rake twice to get our results, we want to be able to trust the process!&lt;/p>
&lt;p>Let&amp;rsquo;s extend the DSL again to add a command that will loop over a file and call our block for each line:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Loop over a file and yield the block for each line&lt;/span>
&lt;span class="c1"># If name ends with .csv, parse the csv and yield each line&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">file_loop&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">task&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/.csv$/&lt;/span>
&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">source&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">line&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can use this to create a task that goes through each of the lines of the file. We&amp;rsquo;ll do this to define url tasks for the file and then immediately invoke them so make sure that the file was loaded.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Loop through the top ten books and make sure that they exist&lt;/span>
&lt;span class="n">file_loop&lt;/span> &lt;span class="s2">&amp;#34;processed/top_10_books_text&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;processed/month_top_10.csv&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/^\//&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.txt&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">path&lt;/span>
&lt;span class="n">url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://www.gutenberg.org/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">Rake&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Task&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">invoke&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Running &lt;code>rake processed/top_10_books_text&lt;/code> will first make sure that &lt;code>processed/month_top_10.csv&lt;/code> is up-to-date, doing whatever it needs too to make it happen, and then loop through each of the lines and download the ebook file.&lt;/p>
&lt;p>&lt;em>Note, we are going to be making a bunch of requests to the Project Gutenberg website, a total of 11 in all. You might be flagged as a bot, so take a look at the generated &lt;code>.txt&lt;/code> files to make sure that they actually contain the book content. &lt;strong>But no matter how many times you run your commands, unless you delete the downloaded files there will be no more than 11 requests to the server!&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="using-rules-to-parse-data">Using rules to parse data&lt;/h2>
&lt;p>Lets create a rule that will give us a count of all the words in a book:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Count and sort the list of words&lt;/span>
&lt;span class="n">rule&lt;/span> &lt;span class="s2">&amp;#34;.word_count&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;.words&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;cat &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> | sort | uniq -c | sort -nr&amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If we try to run this now, say &lt;code>rake ebooks/1342.word_count&lt;/code> we&amp;rsquo;ll get an error saying it doesn&amp;rsquo;t know how to build that file. Let&amp;rsquo;s add a rule to go from &lt;code>.txt&lt;/code> to &lt;code>.words&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Covert txt to words&lt;/span>
&lt;span class="n">rule&lt;/span> &lt;span class="s2">&amp;#34;.words&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;.txt&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">sh&lt;/span> &lt;span class="s2">&amp;#34;cat &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> | tr -cs &amp;#39;[:alpha:]&amp;#39; &amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#39; | tr &amp;#39;[:upper:]&amp;#39; &amp;#39;[:lower:]&amp;#39; &amp;gt; &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now when we run it, we first generate a list of words, and then from that we find the unique count of them.&lt;/p>
&lt;h2 id="get-your-own-rake-data">Get your own rake-data&lt;/h2>
&lt;p>It&amp;rsquo;s simple enough to setup this on your own, but I&amp;rsquo;ve put together a few useful things that I&amp;rsquo;ve been using to process data into it&amp;rsquo;s own gem. You should head over to &lt;a href="https://github.com/HappyFunCorp/rake-data">https://github.com/HappyFunCorp/rake-data&lt;/a> now to check it out!&lt;/p>
&lt;p>Other things to check out:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://blog.kaggle.com/2012/10/15/make-for-data-scientists/">http://blog.kaggle.com/2012/10/15/make-for-data-scientists/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.factual.com/introducing-drake-a-kind-of-make-for-data">http://blog.factual.com/introducing-drake-a-kind-of-make-for-data&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://datascienceatthecommandline.com">http://datascienceatthecommandline.com&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Building Middleman Extensions</title><link>https://willschenk.com/articles/2014/building-middleman-extensions/</link><pubDate>Wed, 17 Dec 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/building-middleman-extensions/</guid><description>&lt;p>Middleman extensions, like rails plugins, are packaged as gems. There are three main ways to extend middleman. You can add helpers, add middleman commands, or extend the sitemap generation in someway. Lets go through those in detail.&lt;/p>
&lt;h2 id="creating-the-extension">Creating the extension&lt;/h2>
&lt;p>Create a gem using &lt;code>bundle gem _name_&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle gem middleman-graphviz
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add &lt;code>middleman-core&lt;/code> to your gem dependancies in the &lt;code>.gemspec&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_runtime_dependency&lt;/span> &lt;span class="s1">&amp;#39;middleman-core&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;&amp;gt;= 3.0.0&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Register your extension into middleman. Our gem will be activated in the sites &lt;code>config.rb&lt;/code> using &lt;code>activate :graphviz&lt;/code> and this is how middleman knows what to load. &lt;code>lib/middleman/graphviz.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;middleman-core&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s2">&amp;#34;middleman/graphviz/version&amp;#34;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s2">&amp;#34;middleman/graphviz/extension&amp;#34;&lt;/span>
&lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:graphviz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Graphviz&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Extension&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Replace with your gem name!&lt;/em>&lt;/p>
&lt;p>Write the code that actually plugs into middleman. The we are going to add some helpers to the site, so let&amp;rsquo;s register them here. Create &lt;code>lib/middleman/graphviz/extension.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;middleman/graphviz/helpers&amp;#39;&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Middleman&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Graphviz&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Extension&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Extension&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options_hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{},&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">block&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">super&lt;/span>
&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">helpers&lt;/span> &lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Graphviz&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Helpers&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Replace with your gem name!&lt;/em>&lt;/p>
&lt;h2 id="writing-helpers">Writing helpers&lt;/h2>
&lt;p>Lets create a basic helper method now in the file &lt;code>lib/middleman/graphviz/helpers.rb&lt;/code>. This is going to accept one parameter and a block. We are going to get the content of that block and then spit it back directly for now.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">module&lt;/span> &lt;span class="nn">Middleman&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Graphviz&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Helpers&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">basic_helper_example&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">param&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="s2">&amp;#34;&amp;lt;h1&amp;gt;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;/h1&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">html_safe&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">block_helper_example&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">block&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">block_given?&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capture_html&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">block&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">upcase&lt;/span>
&lt;span class="n">concat_content&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">html_safe&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These can be used like&lt;/p>
&lt;pre>&lt;code class="language-erb" data-lang="erb">&amp;lt;%%= basic_helper_example( &amp;quot;My Title&amp;quot;) %&amp;gt;
&lt;/code>&lt;/pre>&lt;p>or as a block&lt;/p>
&lt;pre>&lt;code class="language-erb" data-lang="erb">&amp;lt;%% block_helper( &amp;quot;My Title&amp;quot;) do %&amp;gt;
This is going to be in upcase
&amp;lt;%% end %%&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="add-it-to-an-active-middleman-project">Add it to an active middleman project&lt;/h2>
&lt;p>Have bundler reference this new gem inside of an existing middleman project. &lt;code>Gemfile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">gem&lt;/span> &lt;span class="s2">&amp;#34;middleman-graphviz&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;../middleman-graphviz&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Inside of the middleman project&amp;rsquo;s &lt;code>config.rb&lt;/code> activate it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">activate&lt;/span> &lt;span class="ss">:graphviz&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now startup the middleman server, and use your helper in the page! Note that, just like when you use a helper defined in &lt;code>config.rb&lt;/code> you need to restart &lt;code>middleman server&lt;/code> to see your change take effect.&lt;/p>
&lt;h2 id="adding-configuration-to-your-extension">Adding configuration to your extension&lt;/h2>
&lt;p>If you want to include configurable options in your extension, here&amp;rsquo;s some skeleton code for &lt;code>extension.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;middleman/graphviz/helpers&amp;#39;&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Middleman&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Graphviz&lt;/span>
&lt;span class="n">cattr_accessor&lt;/span> &lt;span class="ss">:options&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Extension&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Extension&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options_hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{},&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">block&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">super&lt;/span>
&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">helpers&lt;/span> &lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Graphviz&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Helpers&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">registered&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options_hash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{},&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">block&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options_hash&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="n">options&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">block_given?&lt;/span>
&lt;span class="c1"># Default options for the rsync method.&lt;/span>
&lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">theme&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>
&lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate_file&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="kp">false&lt;/span>
&lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Graphviz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">options&lt;/span>
&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">helpers&lt;/span> &lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Graphviz&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Helpers&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">after_configuration&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;After configuration&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Helpers&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">options&lt;/span>
&lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Graphviz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">options&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="adding-additional-middleman-commands">Adding additional middleman commands&lt;/h2>
&lt;p>The middleman command is built on &lt;a href="./making-a-command-line-utility-with-gems-and-thor">thor&lt;/a>, which as we know is awesome. To add a command to the middleman, use the following template for each &lt;code>command.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;middleman-core/cli&amp;#39;&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Middleman&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Cli&lt;/span>
&lt;span class="c1"># This class provides a &amp;#34;deploy&amp;#34; command for the middleman CLI.&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Graphviz&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Thor&lt;/span>
&lt;span class="kp">include&lt;/span> &lt;span class="no">Thor&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Actions&lt;/span>
&lt;span class="n">check_unknown_options!&lt;/span>
&lt;span class="n">namespace&lt;/span> &lt;span class="ss">:graphviz&lt;/span>
&lt;span class="c1"># Tell Thor to exit with a nonzero exit code on failure&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">exit_on_failure?&lt;/span>
&lt;span class="kp">true&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s1">&amp;#39;graphviz [options]&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Run this amazing command&amp;#39;&lt;/span>
&lt;span class="n">method_option&lt;/span> &lt;span class="s1">&amp;#39;clean&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:boolean&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">aliases&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;-c&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">desc&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Clean all the build files&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">graphviz&lt;/span>
&lt;span class="vi">@shared_instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inst&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Running my command&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, inside of &lt;code>middleman/graphviz.rb&lt;/code> simply &lt;code>require 'middleman/graphviz/command'&lt;/code>.&lt;/p>
&lt;p>The &lt;a href="http://www.rubydoc.info/github/wycats/thor/Thor/Actions">&lt;code>Thor::Actions&lt;/code>&lt;/a> class gives you access to many different helper commands that make it easy to move, filter, template, and otherwise mangle files, and of course you have access to the full middleman app.&lt;/p>
&lt;h2 id="manipulating-the-sitemap">Manipulating the sitemap&lt;/h2>
&lt;p>The most awesomest way to extend middleman is by modifying the sitemap. This lets us create whole new URLs that are derived and generated from other sources. This is how the &lt;a href="https://github.com/middleman/middleman-blog">middleman-blog&lt;/a> extension really works, and if you want to start an indepth exploration that&amp;rsquo;s a good place to start spelunking.&lt;/p>
&lt;p>Lets build an extesion that creates pages from an external datasource. In this case, a CSV file, but you could imagine having this come out of a database instead. This lets us manipulate the sitemap of the site it&amp;rsquo;s been created, and will let us add and remove different pages based upon what middleman knows about the site.&lt;/p>
&lt;p>First we add an &lt;code>after_configuration&lt;/code> handler to &lt;code>Middleman::Graphviz::Extension&lt;/code> to register our class as a &lt;code>resource_list_manipulator&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">after_configuration&lt;/span>
&lt;span class="vi">@csv_pages&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">CSV&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="vi">@app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">self&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="vi">@app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sitemap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">register_resource_list_manipulator&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:&amp;#34;csv_pages&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vi">@csv_pages&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kp">false&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then we create &lt;code>lib/middleman/csv/page.rb&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Middleman&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">CSV&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Page&lt;/span>
&lt;span class="c1"># include UriTemplates&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">controller&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="vi">@sitemap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sitemap&lt;/span>
&lt;span class="vi">@page_link_template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;pages/{page}.html&amp;#34;&lt;/span>
&lt;span class="vi">@page_template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;page.html&amp;#34;&lt;/span>
&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ignore&lt;/span> &lt;span class="vi">@page_template&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Update the main sitemap resource list&lt;/span>
&lt;span class="c1"># @return [void]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">manipulate_resource_list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resources&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">resources&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;pages.csv&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">create_page_resource&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="kp">private&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">::&lt;/span>&lt;span class="no">Middleman&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Util&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">normalize_path&lt;/span> &lt;span class="vi">@page_link_template&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/\{page\}/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">page&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">create_page_resource&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">page&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="no">Sitemap&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vi">@sitemap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tap&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">p&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">proxy_to&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="vi">@page_template&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_metadata&lt;/span> &lt;span class="ss">locals&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ss">row&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">row&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When &lt;code>initialized&lt;/code> is called, we are grabbing references to the middleman app. We&amp;rsquo;ve hard coded two things in this example that should be from the options, the page name template, and the page template itself. Since the &lt;code>page.html&lt;/code> isn&amp;rsquo;t meant to be standalone, we tell middleman to ignore it in the sitemap with &lt;code>app.ignore @page_template&lt;/code>.&lt;/p>
&lt;p>When &lt;code>manipulate_resource_list&lt;/code> is called it is passed a list of resources that middleman currently knows about. We return a new list of resources based on that list. What we are doing in this example is loading up the list of pages from a file called &lt;code>pages.csv&lt;/code>, creating new pages based on that, and then returning the new list.&lt;/p>
&lt;p>This example is contrived and we are loading in the list of pages from the filesystem. At this point in the rendering process we do have access to all of the pages, instead of loading up a file you could inspect the site map, go through all of the pages and make additional pages for subsets of those. The &lt;code>middleman-blog&lt;/code> does this for both &lt;code>tag&lt;/code> pages and &lt;code>calendar&lt;/code> pages. Instead of calling &lt;code>::CSV.open&lt;/code> it goes through all of the pages on the site and collects a dynamic list of pages based upon the metatag, either &lt;code>tag&lt;/code> or published dates.&lt;/p>
&lt;p>Then we create the entries in the sitemap themselves. These first get proxied to our page template. Then we set the metadata of the particular page to be what we loaded in from the file.&lt;/p>
&lt;p>Here&amp;rsquo;s an example template &lt;code>page.html.haml&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">%h1= row[1]
= row[0]
&lt;/code>&lt;/pre>&lt;p>This example is equivelent to looping over a file in &lt;code>config.rb&lt;/code> and setting up page proxies there. However in that case we don&amp;rsquo;t have access to the sitemap overall, so we couldn&amp;rsquo;t generate a dynamic list of new pages based upon existing pages. With this extension we can insert ourselves into the rendering process and add the &lt;em>awesome&lt;/em>.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Building these extensions is a very complicated way to achive things that would be simplier if you just build the site in rails and had a database with you at runtime. But it works, and you can achieve plug into the rendering process to create a more &lt;em>dynamic&lt;/em> static site. Helpers are by far the easiest way to package things together, and as you can see from the example I&amp;rsquo;m working through I&amp;rsquo;m working on an easy way to integrate Graphviz images in middleman documents without a seperate workflow. (&lt;em>Coming soon.&lt;/em>)&lt;/p>
&lt;p>Middleman CLI commands are also easy to build, though here you do start to need to know more about how the internals of how middleman is setup. Things like the &lt;code>middleman-deploy&lt;/code> gem are pretty amazing and can really help with the overall publishing workflow.&lt;/p>
&lt;p>And sitemap manipulation is the most powerful, which lets you recreate pages based upon site and page metadata that is collected throughout the process. The entire &lt;code>middleman-blog&lt;/code> extention is build using this functionality.&lt;/p>
&lt;p>Happy building!&lt;/p></description></item><item><title>Middleman Tricks and Hacks</title><link>https://willschenk.com/articles/2014/middleman-tricks-and-hacks/</link><pubDate>Sat, 13 Dec 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/middleman-tricks-and-hacks/</guid><description>&lt;p>As part of the process of getting this site to work, I learned some more things about how to better build a site with middleman. Building off of our &lt;a href="./building-sites-with-middleman/">foundational article&lt;/a> here are a few other things that I found very useful when using middleman to build a static site with a bunch of dynamically generated content.&lt;/p>
&lt;h2 id="partials">Partials&lt;/h2>
&lt;p>The &lt;code>index.html.haml&lt;/code>, &lt;code>articles.html.haml&lt;/code>, &lt;code>tag.html.haml&lt;/code> and &lt;code>calendar.html.haml&lt;/code> pages all use the same partial to list out the post archives, which are mostly the same.&lt;/p>
&lt;p>On the &lt;em>index&lt;/em> page it&amp;rsquo;s called like this, where I&amp;rsquo;m supressing the date heading:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">= partial &amp;quot;post_list&amp;quot;, :locals =&amp;gt; {:page_articles =&amp;gt; blog.articles[1..4], :no_date =&amp;gt; true }
&lt;/code>&lt;/pre>&lt;p>and in the &lt;em>articles&lt;/em> I&amp;rsquo;m including draft posts for my own reference, and since they don&amp;rsquo;t have a published date we need to check for that.&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">= partial &amp;quot;post_list&amp;quot;, :locals =&amp;gt; {:page_articles =&amp;gt; (drafts + page_articles)}
&lt;/code>&lt;/pre>&lt;p>The &lt;code>_post_list.haml&lt;/code> file then has some logic to show date headings based upon the published dates of the articles. (This assumes that the posts are sorted by time, either ascending or descending.)&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">- last_date = nil
- no_date = !!no_date
%ul
- page_articles.each do |current_post|
- if !no_date &amp;amp;&amp;amp; current_post.date
- date_string = current_post.date.strftime('%b %Y')
- if last_date != date_string
%li.date
%h2= date_string
- last_date = date_string
%li
.more
- unless current_post.is_a? ::Middleman::Blog::Drafts::DraftArticle
= current_post.date.strftime( '%b %e' )
- else
Draft
%div= link_to current_post.title, current_post
%div
= current_post.data['subtitle']
.tags
- current_post.tags.sort.each do |tag|
.tag= link_to tag, tag_path( tag )
&lt;/code>&lt;/pre>&lt;p>Partials also work better when using &lt;a href="./bootstrap-advanced-grid-tricks/">semantic CSS classes&lt;/a> to define my layouts, since the same class can have different meaning depending upon what it is embedded in.&lt;/p>
&lt;h2 id="layouts-and-partials-for-articles">Layouts and partials for articles&lt;/h2>
&lt;p>Middleman posts are generally written in markdown, which translates into a series of &lt;code>&amp;lt;p&amp;gt;&lt;/code> tags that are dumped into a layout file. In order to create the table of contents on the left, the navigation to other articles on the right, the unique header and footer, I used a seperate &lt;code>article_layout&lt;/code> for article pages. Setting up &lt;strong>Scrollspy&lt;/strong> and &lt;strong>Affix&lt;/strong> means we need to change things on the &lt;code>&amp;lt;body&amp;gt;&lt;/code> tag that we don&amp;rsquo;t need to do for other pages, so it makes more sense to use a seperate file here rather than a &lt;em>nested layout&lt;/em>.&lt;/p>
&lt;p>This means that all the things that are shared between the two layouts, the main layout for all the meta pages and the article layout for the content pages, should be factored into partials. I put these partials in the &lt;code>layouts/&lt;/code> directory.&lt;/p>
&lt;h2 id="communication-between-partials">Communication between partials&lt;/h2>
&lt;p>The top and the bottom of these pages change together. If the page has a header image &amp;ndash; something I specify in the YAML preamble of my post &amp;ndash; then both the &lt;code>article_header&lt;/code> and &lt;code>footer&lt;/code> partials display slightly different things. The logic for this check is in the &lt;code>article_header&lt;/code>, where I set a &lt;em>instance variable&lt;/em> that I use in a later partial to add a class.&lt;/p>
&lt;p>In &lt;code>layouts/_article_header.haml&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">- @lighter ||= &amp;quot;&amp;quot;
- @dark_header = &amp;quot;dark_header&amp;quot; if current_article.data['dark_header']
- if !current_article.data['header_image'].nil? &amp;amp;&amp;amp; current_article.data['header_image'] != &amp;quot;&amp;quot;
- @lighter = &amp;quot;lighter&amp;quot;
.banner
= image_tag current_article.data['header_image'], class: &amp;quot;fadeInDown animated&amp;quot;
%div{ class: &amp;quot;article-header #{@lighter} #{@dark_header}&amp;quot; }
&lt;/code>&lt;/pre>&lt;p>and then in &lt;code>layouts/_footer.haml&lt;/code> I use the same variable to add a class to the &lt;code>footer&lt;/code> element which changes the background.&lt;/p>
&lt;pre>&lt;code>%footer{ class: &amp;quot;footer #{@lighter} #{@dark_header}&amp;quot; }
&lt;/code>&lt;/pre>&lt;h2 id="markdown-with-toc-data">Markdown with toc data&lt;/h2>
&lt;p>Inside of &lt;code>config.rb&lt;/code> we can add some better markdown processing options. I switched to redcarpet and enabled &lt;code>with_toc_data&lt;/code>. This generates id tags on the &lt;code>&amp;lt;h1&amp;gt;&lt;/code>, &lt;code>&amp;lt;h2&amp;gt;&lt;/code> etc elements that we can use as anchors.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">set&lt;/span> &lt;span class="ss">:markdown&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:tables&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:autolink&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:gh_blockcode&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:fenced_code_blocks&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with_toc_data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="n">set&lt;/span> &lt;span class="ss">:markdown_engine&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:redcarpet&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These ids are generated by sanitizing the text between the tags, but &lt;code>redcarpet&lt;/code> only makes things lowercase and changes spaces to underscores, and unfortunately it doesn&amp;rsquo;t strip out punctuation characters and will result in ids that aren&amp;rsquo;t valid. So I had to change my headers, at least until I can take a look at the redcarpet code in more detail.&lt;/p>
&lt;p>&lt;strong>Update&lt;/strong> This looks like it&amp;rsquo;s fixed in the latest git version of redcarpet, but it hasn&amp;rsquo;t been released as a gem yet.&lt;/p>
&lt;h2 id="helpers-that-parse-the-source-file">Helpers that parse the source file&lt;/h2>
&lt;p>Now that we have the anchors in there, we need to generate the links to those anchors. This can be done by parsing the source file on the article page with a helper. It&amp;rsquo;s a poor man&amp;rsquo;s markdown processor, but it does the job. This code lives in &lt;code>config.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">helpers&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">chapters&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">post&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source_file&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/^##\s(.*)/&lt;/span>
&lt;span class="vg">$1&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we can then use it to generate the list of links:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">%ul.nav.toc
%li= link_to current_article.title, &amp;quot;#top&amp;quot;
- chapters( current_article ).each do |chapter|
%li= link_to chapter, &amp;quot;##{chapter.downcase.gsub( /\s/, &amp;quot;-&amp;quot; )}&amp;quot;
&lt;/code>&lt;/pre>&lt;h2 id="helper-methods-to-do-query-ish-things">Helper methods to do query-ish things&lt;/h2>
&lt;p>The logic to calculate the &lt;em>next&lt;/em> and &lt;em>previous&lt;/em> articles in the series work using the tag system, and it cycles though all of the tags of the current article to find articles with corresponding tags. Rather than showing the same article for multiple tags, I wanted to group the tags together if they all pointed to the same article.&lt;/p>
&lt;p>This is the type of logic that would normally be in a rails Model. Either you&amp;rsquo;d do it directly out of the database, or you would process the results somehow and return something that was easy to iterate over in the view.&lt;/p>
&lt;p>Moving this code into helper method isolated all of that logic out of the views themselves.&lt;/p>
&lt;h2 id="site-data-as-database">Site data as database&lt;/h2>
&lt;p>The other thing I wanted to do was to associate additional data with specific tags. If this was an article, you could put it in the preamble, but since tags are generated dynamically from the article files we need to put them somewhere else. That place is &lt;code>data/topics.yml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">---&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">:howto&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">:title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>Howtos&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">:desc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>In&lt;span class="w"> &lt;/span>which&lt;span class="w"> &lt;/span>we&lt;span class="w"> &lt;/span>go&lt;span class="w"> &lt;/span>through&lt;span class="w"> &lt;/span>step&lt;span class="w"> &lt;/span>by&lt;span class="w"> &lt;/span>step&lt;span class="w"> &lt;/span>to&lt;span class="w"> &lt;/span>achieve&lt;span class="w"> &lt;/span>a&lt;span class="w"> &lt;/span>particular&lt;span class="w"> &lt;/span>goal.&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">:overview&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">:title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>Overviews&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">:desc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>In&lt;span class="w"> &lt;/span>which&lt;span class="w"> &lt;/span>we&lt;span class="w"> &lt;/span>cover&lt;span class="w"> &lt;/span>a&lt;span class="w"> &lt;/span>topic&lt;span class="w"> &lt;/span>in&lt;span class="w"> &lt;/span>depth&lt;span class="w"> &lt;/span>to&lt;span class="w"> &lt;/span>orient&lt;span class="w"> &lt;/span>ourselves&lt;span class="w"> &lt;/span>with&lt;span class="w"> &lt;/span>the&lt;span class="w"> &lt;/span>technology.&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is referenced in views like:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">- data['topics'].each do |k,d|
.track
%h2= link_to d[:title], &amp;quot;/tags/#{k}.html&amp;quot;
&lt;/code>&lt;/pre>&lt;p>This data is also referenced in the tag page as well as the main header. It&amp;rsquo;s only stored in one place, which is nice and DRY. If it got any more complicated than this, where we wanted to filter or sort it in some dynamic way then we implement that code in a helper so it could be shared across the site.&lt;/p>
&lt;h2 id="directory-index-and-url_for">Directory index and url_for&lt;/h2>
&lt;p>To make pretty urls work in the blog, you need to have &lt;code>activate :directory_indexes&lt;/code> &lt;em>after&lt;/em> &lt;code>activate :blog&lt;/code> in your &lt;code>config.rb&lt;/code> file. &lt;em>The order of middleman extensions in the config file matter.&lt;/em>&lt;/p>
&lt;p>The plugin works by changing the way that the &lt;code>link_to&lt;/code> helper works. If you have a link that&amp;rsquo;s generated in another way, you should use the &lt;code>url_for&lt;/code> method to make sure that it get&amp;rsquo;s rewritten. For example&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="o">=&lt;/span> &lt;span class="n">navbar_item&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;title&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">url_for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;/tags/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">topic&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.html&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="not-a-lot-of-tradeoffs">Not a lot of tradeoffs&lt;/h2>
&lt;p>Other than the one issue with redcarpet where I couldn&amp;rsquo;t control the way that the ids were being generated, there hasn&amp;rsquo;t been much that I haven&amp;rsquo;t be able to achieve with a statically generated site. The implementation is different, but overall most of the time was spent fiddling with the CSS rather than fighting the build system.&lt;/p>
&lt;p>Which is how it should be.&lt;/p></description></item><item><title>Dateslice: Writing rails extensions</title><link>https://willschenk.com/articles/2014/dateslice-writing-rails-extensions/</link><pubDate>Sun, 07 Dec 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/dateslice-writing-rails-extensions/</guid><description>&lt;p>Ruby on Rails is a very modular framework since the merging with Merb in 2008. The &lt;em>opinionated conventions&lt;/em> are implemented under using techniques that let you jump in and build your own components, picking and choosing different parts that let you build Rails apps in the same straightforward way you would if using the official modules.&lt;/p>
&lt;p>Let&amp;rsquo;s go through the &lt;a href="https://github.com/HappyFunCorp/dateslices">&lt;code>dateslices&lt;/code> gem&lt;/a> which I wrote to extend active record so that we could better interact with the &lt;code>group by&lt;/code> sql command when dealing with dates. Thanks to &lt;a href="https://github.com/mbrookes">mbrookes&lt;/a> this command now outputs in a format compatible with &lt;a href="http://ankane.github.io/chartkick/">Chartkick&lt;/a> making it a good tool to use when graphing date related things, say user signups, on an admin panel for your application.&lt;/p>
&lt;h2 id="databases">Databases&lt;/h2>
&lt;p>&lt;a href="http://guides.rubyonrails.org/active_record_basics.html">ActiveRecord&lt;/a> is how Rails interacts with the database, this includes both SQL generation, validations, and a whole bunch more. It creates a startardized interface over the many subtle differences between SQL implementations on different databases. Date handling and grouping on dymanic terms is one area where databases differer greatly from one another, and when we want to find counts and sums grouped by different dates we need to tune our SQL for the vagaries of switching to different databases.&lt;/p>
&lt;h2 id="keeping-development-the-same-as-production">Keeping development the same as production&lt;/h2>
&lt;p>I tend to develop locally on Sqlite3 and deploy on Postgres. When we get into something fancy where we want to use some of the amazing features that Postgres has, like &lt;a href="http://www.postgresql.org/docs/9.2/static/libpq-notify.html">LISTEN/NOTIFY&lt;/a> or &lt;a href="http://postgresguide.com/sexy/hstore.html">hstore&lt;/a> , then it makes sense to run a Postgres instance locally. But most of the time it&amp;rsquo;s overkill, and I prefer running with Sqlite3 since I just need to checkout the project, run bundle, and I&amp;rsquo;m in a self contained environment.&lt;/p>
&lt;p>Pub/sub and attribute store are cool enough things to warrant managing a local Postgres instance, grouping by date doesn&amp;rsquo;t cut it in my book.&lt;/p>
&lt;p>If you do already have a Postgres instance running locally, then you should check out the &lt;a href="https://github.com/ankane/groupdate">&lt;code>groupdate&lt;/code> gem&lt;/a>, which is better and worse than &lt;code>dateslice&lt;/code>: better because it supports Timezones which is awesome and difficult to solve well and worse because it doesn&amp;rsquo;t support Sqlite3.&lt;/p>
&lt;h2 id="enter-dataslice">Enter dataslice&lt;/h2>
&lt;p>Lets first take a look at how the SQL differs between the different databases. The basic structure is&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">select&lt;/span> &lt;span class="n">aggregation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aggregation_column&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">timeslice&lt;/span> &lt;span class="k">from&lt;/span> &lt;span class="k">table&lt;/span> &lt;span class="k">group&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="n">timeslice&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Where &lt;code>aggregation&lt;/code> is one of &lt;code>count&lt;/code>, &lt;code>sum&lt;/code>, and &lt;code>avg&lt;/code>.&lt;/p>
&lt;p>&lt;code>aggregation_column&lt;/code> is the column we are counting, summing or averaging. For counts, normally we do &lt;code>count(*)&lt;/code> but we can also do &lt;code>count(distinct(aggregation_column))&lt;/code> if you only want to count the number of unique occurances.&lt;/p>
&lt;p>&lt;code>timeslice&lt;/code> is the time period that we want to look at. The basic idea here is that we convert a &lt;code>datetime&lt;/code> to a string with lower precision (getting rid of the seconds, or minutes, or hours, or days) and then group on that string. We need to select this on the left side of the query, and we also need it as the input of the &lt;code>GROUP BY&lt;/code> on the right.&lt;/p>
&lt;p>For example, if we want to group by day, this is the SQL that we&amp;rsquo;d need for the 3 different database variants we are targetting:&lt;/p>
&lt;table class="table table-bordered table-sm table-striped">
&lt;tr>&lt;th>Database&lt;/th>&lt;th>Time Slice&lt;/th>&lt;/tr>
&lt;tr>&lt;th>Mysql&lt;/th>&lt;td>&lt;code>DATE_FORMAT(#{column}, '%Y-%m-%d 00:00:00 UTC')&lt;/code>&lt;/td>&lt;/tr>
&lt;tr>&lt;th>Sqlite3&lt;/th>&lt;td>&lt;code>strftime( \"%Y-%m-%d 00:00:00 UTC\", #{column} )&lt;/code>&lt;/td>&lt;/tr>
&lt;tr>&lt;th>Postgres&lt;/th>&lt;td>&lt;code>DATE_TRUNC( 'day' , #{column} )&lt;/code>&lt;/td>&lt;/tr>
&lt;/table>
&lt;p>The different variants can be found in the sourecode for &lt;a href="https://github.com/HappyFunCorp/dateslices/blob/master/lib/dateslices/mysql.rb">mysql&lt;/a>, &lt;a href="https://github.com/HappyFunCorp/dateslices/blob/master/lib/dateslices/sqlite.rb">sqlite&lt;/a>, and &lt;a href="https://github.com/HappyFunCorp/dateslices/blob/master/lib/dateslices/postgresql.rb">Postgres&lt;/a>. (Notice how Postgres is better here too!)&lt;/p>
&lt;h2 id="our-api">Our api&lt;/h2>
&lt;p>We want to add &lt;code>group_by_second&lt;/code>, &lt;code>group_by_minute&lt;/code>, &lt;code>group_by_hour&lt;/code>, &lt;code>group_by_day&lt;/code>, &lt;code>group_by_week&lt;/code>, &lt;code>group_by_day_of_week&lt;/code>, &lt;code>group_by_month&lt;/code>, &lt;code>group_by_year&lt;/code> to ActiveRecord classes that we can use either on the model itself:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group_by_day&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or on a scope:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">Post&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">unmoderated&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group_by_day&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And get a resulting hash back like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;2014-07-12 00:00:00 UTC&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;2014-07-18 00:00:00 UTC&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;2014-07-19 00:00:00 UTC&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or, in a &lt;code>rspec&lt;/code> test, something like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">it&lt;/span> &lt;span class="s2">&amp;#34;should return items grouped by day&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="vi">@initial_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span> &lt;span class="s2">&amp;#34;2014-07-19 15:26:48 -0400&amp;#34;&lt;/span>
&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span> &lt;span class="ss">created_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="vi">@initial_time&lt;/span>
&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span> &lt;span class="ss">created_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="vi">@initial_time&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">day&lt;/span>
&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span> &lt;span class="ss">created_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="vi">@initial_time&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">day&lt;/span>
&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span> &lt;span class="ss">created_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="vi">@initial_time&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">week&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group_by_day&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:created_at&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="s2">&amp;#34;2014-07-12 00:00:00 UTC&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;2014-07-18 00:00:00 UTC&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;2014-07-19 00:00:00 UTC&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="building-the-rails-extension">Building the Rails Extension&lt;/h2>
&lt;p>Now that we have an idea of what we want to generate, lets take a look at how we build a rails extension. This is done with the &lt;code>rails plugin new&lt;/code> command. We saw the &lt;code>bundle gem&lt;/code> command before back in the &lt;a href="./making-a-command-line-utility-with-gems-and-thor/">making a command line utility with gems and thor&lt;/a> post, and in many ways they are similar. But the &lt;code>rails plugin new&lt;/code> command creates a gem setup for a rails environment for testing and developing your app.&lt;/p>
&lt;p>&lt;a href="http://seed.happyfuncorp.com/">Happy Seed&lt;/a> also has a rails plugin generator which will setup rspec testing for you, instead of the default &lt;code>TestUnit&lt;/code>. This runs the &lt;code>rails plugin new&lt;/code> command which sets up the rails gem environment and does a few other things you need to do to get rspec working correctly, and HappySeed will do that stuff for you.&lt;/p>
&lt;p>Either way, now you have a new folder with an empty gem that we need to fill out.&lt;/p>
&lt;p>We&amp;rsquo;re going to create a &lt;code>Module&lt;/code>, &lt;code>Datelices::Scope&lt;/code>, with our methods and then register our methods with the &lt;code>ActiveRecord::Base&lt;/code> class. This looks like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:extend&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">Dateslices&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Scopes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will mixin our methods into all of the classes that extend &lt;code>ActiveRecord::Base&lt;/code>.&lt;/p>
&lt;h2 id="metaprogramming-with-ruby">Metaprogramming with Ruby&lt;/h2>
&lt;p>Inside of &lt;code>lib/dateslices.rb&lt;/code> lets define all of the fields that we want to define.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">module&lt;/span> &lt;span class="nn">Dateslices&lt;/span>
&lt;span class="no">FIELDS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:second&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:minute&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:hour&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:day&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:week&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:day_of_week&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:month&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:year&lt;/span> &lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now inside of &lt;code>lib/dateslices/scopes.rb&lt;/code> we can sketch out our scopes method generator:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">module&lt;/span> &lt;span class="nn">Dateslices&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Scopes&lt;/span>
&lt;span class="no">Dateslices&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">FIELDS&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">field&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">define_method&lt;/span> &lt;span class="ss">:&amp;#34;group_by_&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">field&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="ss">&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="c1"># create query based on args, and field&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets go through this for a second. When this code is evaluated, we are going to loop over &lt;code>Dateslices::FIELDS&lt;/code> and call the &lt;code>define_method&lt;/code> function for each type of grouping. These are defined inside of the main &lt;code>Dateslices&lt;/code> module, and we are naming our method &lt;code>:&amp;quot;group_by_#{field}&amp;quot;&lt;/code>. Image that a developer writes &lt;code>User.group_by_day( :updated_at )&lt;/code>, what happens then?&lt;/p>
&lt;p>When that is invoked the Ruby runtime is actually invoking the closure that we are passing into &lt;code>define_method&lt;/code>, which is generated inside of the loop with a different value for &lt;code>field&lt;/code> on each one. In addition to using this inside of the name of the function, this value is available inside of the body. The &lt;code>*args&lt;/code> on the other hand, and in our example it would equal &lt;code>[:updated_at]&lt;/code>, comes from the method invocation as we would expect.&lt;/p>
&lt;p>We are writing code which generates code, and some of the variables are part of our desire &amp;ldquo;not to write 15 of the basically the same methods&amp;rdquo; and some of the variables are there to tweak the functionality of the API.&lt;/p>
&lt;h2 id="the-sql-bit">The SQL Bit&lt;/h2>
&lt;p>The full details can be found in &lt;a href="https://github.com/HappyFunCorp/dateslices/blob/master/lib/dateslices/scopes.rb">the repo&lt;/a> but here&amp;rsquo;s the bit that actually generates the query switching out to the various classes that know how to deal with each of the databases that we saw before.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">args&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dup&lt;/span>
&lt;span class="n">column&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">blank?&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="s1">&amp;#39;created_at&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">aggregation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">blank?&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="s1">&amp;#39;count&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">aggregation_column&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">blank?&lt;/span> &lt;span class="p">?&lt;/span> &lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">sql&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">aggregation&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">(&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">aggregation_column&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">) as count&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">time_filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">adapter_name&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="s1">&amp;#39;SQLite&amp;#39;&lt;/span>
&lt;span class="no">Dateslices&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Sqlite&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time_filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">column&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">field&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="s1">&amp;#39;PostgreSQL&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;PostGIS&amp;#39;&lt;/span>
&lt;span class="no">Dateslices&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Postgresql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time_filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">column&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">field&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="s1">&amp;#39;MySQL&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Mysql2&amp;#39;&lt;/span>
&lt;span class="no">Dateslices&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Mysql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time_filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">column&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">field&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="kp">throw&lt;/span> &lt;span class="s2">&amp;#34;Unknown database adaptor &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">adapter_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">sql&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">time_filter&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> as date_slice&amp;#34;&lt;/span>
&lt;span class="n">slices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">select&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">sql&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">not&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">column&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">nil&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;date_slice&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;date_slice&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The full code does a bit more to figure out how you want to see the data, but that&amp;rsquo;s the tricky stuff.&lt;/p>
&lt;h2 id="testing-a-rails-plugin-that-talks-to-many-databases">Testing a rails plugin that talks to many databases&lt;/h2>
&lt;p>The first thing that&amp;rsquo;s a little strange when testing a plugin is that you can test your gem in two different contexts: one in a basic ruby context, and your tests go into &lt;code>spec/&lt;/code>, and the other in a rails context. The plugin generator will create a sample rails app inside of &lt;code>spec/dummy&lt;/code> (or &lt;code>test/dummy&lt;/code> if you are using &lt;code>rails plugin new&lt;/code> without our fancy rspec stuff).&lt;/p>
&lt;p>Let&amp;rsquo;s take a look now at how to test a gem that talks to many different databases. Normally when we start up a rails environment, test or otherwise, it connects to a database and that&amp;rsquo;s that. However, we need to run the same test suite over 3 different databases making sure that the gem behaves in exactly the same way for each one.&lt;/p>
&lt;p>Here&amp;rsquo;s our &lt;code>spec/dummy/spec/models/test_spec.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;rails_helper&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;dateslice_tester&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;groupdate_tester&amp;#39;&lt;/span>
&lt;span class="n">databases&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="ss">:adapter&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;mysql&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:database&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;dateslice_test&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:user&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="ss">:adapter&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;postgresql&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:database&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;dateslice_test&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="ss">:adapter&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;sqlite3&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:database&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;db/test.sqlite3&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">formats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;groupdate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;dateslice&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">databases&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">database&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">formats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">format&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="no">RSpec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">describe&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">database&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:adapter&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">titleize&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">format&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:type&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ss">:model&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">include_examples&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">database&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>This code was based on something I cobbled together but cleaned up by &lt;a href="https://github.com/mbrookes">mbrookes&lt;/a>, thanks mbrooks!&lt;/em>&lt;/p>
&lt;p>We first define a set a database configuration for our test databases. We then loop over that, and use the &lt;code>include_examples&lt;/code> feature of &lt;code>RSpec&lt;/code>, passing in the both the output format and the database configuration that we want to test. We have two files of examples, one which defines the &lt;code>groupdate&lt;/code> format, and the other which defines the &lt;code>dateslices&lt;/code> format. Once again I&amp;rsquo;d like to point out that if you don&amp;rsquo;t care about SQLite3 support and want Timezone support, the &lt;a href="https://github.com/ankane/groupdate">groupdate&lt;/a> is what you want.&lt;/p>
&lt;p>Lets look at the opening stanzas of &lt;code>spec/dummy/spec/dateslice_tester.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">RSpec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shared_examples&lt;/span> &lt;span class="s2">&amp;#34;dateslice&amp;#34;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">before&lt;/span> &lt;span class="ss">:context&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Setting up &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">establish_connection&lt;/span> &lt;span class="n">config&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Trying to migrate&amp;#34;&lt;/span>
&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Migration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_table&lt;/span> &lt;span class="ss">:users&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:force&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">true&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="ss">:name&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">integer&lt;/span> &lt;span class="ss">:score&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timestamp&lt;/span> &lt;span class="ss">:created_at&lt;/span>
&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timestamp&lt;/span> &lt;span class="ss">:updated_at&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">before&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="no">Dateslices&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">output_format&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:dateslice&lt;/span>
&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delete_all&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">it&lt;/span> &lt;span class="s2">&amp;#34;should return items grouped by day&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>RSpec.shared_examples&lt;/code> is the counter part to the &lt;code>include&lt;/code> examples above, and when it gets called the database &lt;code>config&lt;/code> is passed in. We then call &lt;code>ActiveRecord::Base.establish_connection config&lt;/code> to connect &lt;code>ActiveRecord&lt;/code> to the database as part of the &lt;code>before :context&lt;/code> part of the RSpec life cycle.&lt;/p>
&lt;p>Next we need to actually create the database tables that we are going to run tests over.  Since we are switching the databases as part of the testing process itself, it makes no sense to use &lt;code>rake db:create:test&lt;/code> to create the DDL, since which database would that be creating? We need to do 3 different ones, and we certainly don&amp;rsquo;t want to have an elaborate process to start any of the tests if you decide to add an additional migration. So we call a migration directly from the code, turning &lt;code>:force =&amp;gt; true&lt;/code> so even if it already exists we push the current definition there.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Migration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_table&lt;/span> &lt;span class="ss">:users&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:force&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then in the regular &lt;code>before&lt;/code> callback we make sure that the tables are cleared our ready for the next test.&lt;/p>
&lt;h2 id="just-a-bit-of-activerecord">Just a bit of ActiveRecord&lt;/h2>
&lt;p>We&amp;rsquo;ve just gone through an ActiveRecord extention and that barely scratches the surface of what else you can do with Rails. &lt;a href="https://pragprog.com/book/jvrails2/crafting-rails-4-applications">Crafting Rails 4 Applications&lt;/a> is the best resource I&amp;rsquo;ve found to get a sense of what is possible, but when I sat down to work on something there was a lot of trial and error. They through how they created &lt;a href="https://github.com/plataformatec/mail_form">mail_form&lt;/a>, or at least a simplified version of it, that lets you use rails validations from ActiveRecord without having to back up the model with a database. (As you might infer from the name, something that is useful for Contact forms that send out email.) The book also goes through how Rails Engines work, which are very much like rails plugins but with additional integration points into the rails application lifecycle.&lt;/p></description></item><item><title>Pulling data out of Google Analytics</title><link>https://willschenk.com/articles/2014/pulling-data-out-of-google-analytics/</link><pubDate>Thu, 04 Dec 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/pulling-data-out-of-google-analytics/</guid><description>&lt;p>I like staring at the real time stats of &lt;a href="http://www.google.com/analytics/">Google Analytics&lt;/a>. As a dashboard, it&amp;rsquo;s not really as amazing as &lt;a href="https://chartbeat.com">Chartbeat&lt;/a> is, and it doesn&amp;rsquo;t let you drill down into the data as much as &lt;a href="https://mixpanel.com">Mixpanel&lt;/a>. But GA is super simple to setup and it&amp;rsquo;s Google, so everyone uses it.&lt;/p>
&lt;p>Another obsessive/fun thing to do is to see where that spike in inbound traffic is coming from. On &lt;a href="http://happyfuncorp.com">HappyFunCorp&lt;/a> there are days where we get a sudden influx of &lt;a href="http://happyfuncorp.com/#happy-thoughts">Happy Thoughts&lt;/a> which warms our hearts and floods our inboxes. Where did they come from? How do we figure it out?&lt;/p>
&lt;p>Lets look at how we can interact with Google Analytics using &lt;a href="https://github.com/google/google-api-ruby-client">google-api-ruby-client&lt;/a>. At the end of this, we are going to be able to see the current traffic stats, top referrals, see a timeline of when the referals first came in, and do what we can from that information to track down who is talking about us. GA will show us that we are getting a lot of &lt;code>SOCIAL&lt;/code> traffic, but what else can we figure out?&lt;/p>
&lt;h2 id="step-1-setting-it-up-to-access-google-on-behalf-of-the-user">Step 1 Setting it up to access Google on behalf of the user&lt;/h2>
&lt;p>We&amp;rsquo;re going to be using OAuth2 to authorize our script. So head over to the &lt;a href="https://console.developers.google.com/project">Google Developers Console&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;em>Create a Project&lt;/em>. You should name this something that makes sense to you. I called my &lt;em>Social Investigator&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Enable the &lt;em>Analytics API&lt;/em>. This can be done on the side bar, under &lt;strong>APIs and auth &amp;gt; Apis&lt;/strong>. Scroll down to find it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>APIs and auth &amp;gt; Consent Screen&lt;/strong>. Create something here, you&amp;rsquo;ll need to flesh this out later.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>APIs and auth &amp;gt; Create Client ID&lt;/strong>. Select &lt;strong>Installed Application&lt;/strong> with type &lt;em>Other&lt;/em>. This will create the keys for you, and then you &lt;strong>Download JSON&lt;/strong> and save it in a file.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="step-2-getting-an-access-token-and-an-api-file-using-installedappflow">Step 2 Getting an access token and an API file using InstalledAppFlow&lt;/h2>
&lt;p>Working with the Google API is pretty confusing at first, since there&amp;rsquo;s multiple steps that need to happen before you can even figure out how to make a call. Twitter&amp;rsquo;s API, which in every other way is a joke compared to Google&amp;rsquo;s way of doing things, has a &lt;a href="./scripting-twitter">handy way to get a single use access token&lt;/a>. With Google you need to do this yourself. And once that&amp;rsquo;s done, you need to load the API meta data from the API API to be able to access it!&lt;/p>
&lt;p>We&amp;rsquo;re going to be using a few gems to put in your &lt;code>Gemfile&lt;/code> specifically:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">source&lt;/span> &lt;span class="s1">&amp;#39;https://rubygems.org&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;google-api-client&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;thor&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;hirb&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can use the &lt;code>Google::APIClient::InstalledAppFlow&lt;/code> class to open up a web browser, have the user log in as needed to their Google Accounts, and grant access to the API. The code below shows the basics of this. We assume that the file you downloaded in step 1 is called &lt;code>client_secrets.json&lt;/code> and in the same directory, and we are writing out the granted credentials into the &lt;code>analytics-oauth2.json&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="ch">#!/usr/bin/env ruby -KU&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># This code has been adapted from&lt;/span>
&lt;span class="c1"># https://github.com/google/google-api-ruby-client-samples/tree/master/drive&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;thor&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;hirb&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;google/api_client&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;google/api_client/client_secrets&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;google/api_client/auth/file_storage&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;google/api_client/auth/installed_app&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;logger&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;csv&amp;#39;&lt;/span>
&lt;span class="no">API_VERSION&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;v3&amp;#39;&lt;/span>
&lt;span class="no">CACHED_API_FILE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;analytics-&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.cache&amp;#34;&lt;/span>
&lt;span class="no">CREDENTIAL_STORE_FILE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;analytics-oauth2.json&amp;#34;&lt;/span>
&lt;span class="no">CLIENT_SECRETS_FILE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;client_secrets.json&amp;#34;&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">AnalyticsClient&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">file_caches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">client&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">client&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="vi">@client&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="vi">@client&lt;/span>
&lt;span class="vi">@client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Google&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">APIClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:application_name&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;Analyics-CLI&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:application_version&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;1.0.0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># FileStorage stores auth credentials in a file, so they survive multiple runs&lt;/span>
&lt;span class="c1"># of the application. This avoids prompting the user for authorization every&lt;/span>
&lt;span class="c1"># time the access token expires, by remembering the refresh token.&lt;/span>
&lt;span class="c1"># Note: FileStorage is not suitable for multi-user applications.&lt;/span>
&lt;span class="n">file_storage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Google&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">APIClient&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">FileStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">CREDENTIAL_STORE_FILE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">file_storage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authorization&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span>
&lt;span class="n">client_secrets&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Google&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">APIClient&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">ClientSecrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">CLIENT_SECRETS_FILE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># The InstalledAppFlow is a helper class to handle the OAuth 2.0 installed&lt;/span>
&lt;span class="c1"># application flow, which ties in with FileStorage to store credentials&lt;/span>
&lt;span class="c1"># between runs.&lt;/span>
&lt;span class="n">flow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Google&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">APIClient&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">InstalledAppFlow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ss">:client_id&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">client_secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:client_secret&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">client_secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client_secret&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">:scope&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;https://www.googleapis.com/auth/analytics&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="vi">@client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authorization&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">flow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authorize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file_storage&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="vi">@client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authorization&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">file_storage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authorization&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="vi">@client&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">__FILE__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="vg">$0&lt;/span>
&lt;span class="no">AnalyticsClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we run this the first time, you should be prompted to grant access to your application. The second time it should run and exit cleanly &amp;ndash; it has access, but we haven&amp;rsquo;t asked to do anything yet.&lt;/p>
&lt;h2 id="step-3-discover-the-api">Step 3 Discover the API&lt;/h2>
&lt;p>Google takes their software development seriously, and it shows. Not only are there many different APIs available to use, but they all have different versions. These endpoints are all different, and rather than have them all hard coded into the client access library, you use the &lt;em>discover api&lt;/em> to pull in metadata associated with it. The following code will load up this data and cache it to the filesystem so the next access will be faster.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">api&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="vi">@api&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="vi">@api&lt;/span>
&lt;span class="c1"># Load cached discovered API, if it exists. This prevents retrieving the&lt;/span>
&lt;span class="c1"># discovery document on every run, saving a round-trip to API servers.&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exists?&lt;/span> &lt;span class="no">CACHED_API_FILE&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">CACHED_API_FILE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="vi">@api&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Marshal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="vi">@api&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">discovered_api&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;analytics&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">API_VERSION&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">CACHED_API_FILE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;w&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="no">Marshal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vi">@api&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="vi">@api&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-4-finding-a-web-profile">Step 4 Finding a web profile&lt;/h2>
&lt;p>In order to pull data from an analytics account, you need to query the management API to get a list of profiles that you user has access to. We&amp;rsquo;re going to collapse the differences between accounts and properties, and print them all out in a list directly. The key variable we are looking for is going to be the profile &lt;em>id&lt;/em>. This is different from the &lt;em>web property id&lt;/em>, which is what you use in Javascript to add the tracking code (.e.g &lt;code>UA-56296045-1&lt;/code>). We&amp;rsquo;ll also show the &lt;em>websiteUrl&lt;/em> associated with the account since that&amp;rsquo;s what people really know.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">profiles&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ss">api_method&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">management&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">profiles&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">parameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">accountId&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;~all&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">webPropertyId&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;~all&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">print_profiles&lt;/span>
&lt;span class="n">profiles&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">profile&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;%-15d %-15s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">profile&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">profile&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">webPropertyId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">profile&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">websiteUrl&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">__FILE__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="vg">$0&lt;/span>
&lt;span class="no">AnalyticsClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">print_profiles&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-5-querying-with-gaget">Step 5 Querying with ga.get&lt;/h2>
&lt;p>The main end point we are looking at is &lt;code>ga.get&lt;/code>. There&amp;rsquo;s an &lt;a href="https://ga-dev-tools.appspot.com/explorer/">interactive developer tool&lt;/a> that will let you experiment with what is available and how it works. If you load up that tool now, you&amp;rsquo;ll see what we&amp;rsquo;ve written code that will let us find the property id for our query, so we are now ready to start querying.&lt;/p>
&lt;p>The &lt;em>Query Explorer&lt;/em> is really useful because of the dropdowns around &lt;em>dimensions&lt;/em> and &lt;em>metrics&lt;/em>. When you hover over any of the fields, documentation comes up which will explain what each of the fields mean.&lt;/p>
&lt;p>&lt;em>Dimensions&lt;/em> are different ways of slicing up the data. These include things like &lt;em>page title&lt;/em>, &lt;em>referer&lt;/em>, &lt;em>adwords&lt;/em>, and other ways of slicing up the people that came to your site. &lt;em>Metrics&lt;/em> are the actual data for these buckets of users, and include things like &lt;em>sessions&lt;/em>, &lt;em>user counts&lt;/em>, &lt;em>page views&lt;/em> and &lt;em>average session duration&lt;/em>.&lt;/p>
&lt;p>In order to make the query we first need to setup the query parameters. We&amp;rsquo;ve split that off into its own method called &lt;code>query_template&lt;/code>. The required fields are &lt;em>profile id&lt;/em>, &lt;em>start date&lt;/em>, and &lt;em>end date&lt;/em>. We&amp;rsquo;re going to setup some defaults here which we will override in other methods when we use it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">query_template&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">today&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;ids&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;ga:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">profile_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;start-date&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">start_date&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;end-date&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;sort&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;-ga:pageviews&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;dimensions&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;ga:pageTitle&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;metrics&amp;#34;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;ga:pageviews,ga:newUsers,ga:users&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Our default here is that we&amp;rsquo;re slicing on &lt;code>pageTitle&lt;/code>, showing &lt;code>pageviews&lt;/code>, &lt;code>newUsers&lt;/code>, and &lt;code>users&lt;/code> (which include returning users).&lt;/p>
&lt;p>Let&amp;rsquo;s do an actual query with the parameters:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">hotcontent&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">query_template&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ss">api_method&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ga&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">parameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">query&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need a way to print the result. The result that we get back has two different things, &lt;code>columnHeaders&lt;/code> which is a reflection of the &lt;code>query&lt;/code> that we passed in, and the data itself is an array of arrays in &lt;code>row&lt;/code>. We&amp;rsquo;re using &lt;code> Hirb&lt;/code> helper method here to format the result.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">print_query_result&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">columnHeaders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="no">Hirb&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Helpers&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">AutoTable&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">render&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rows&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">headers&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">headers&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s give it a try:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">if&lt;/span> &lt;span class="bp">__FILE__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="vg">$0&lt;/span>
&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">AnalyticsClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="n">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hotcontent&lt;/span> &lt;span class="no">ARGV&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">print_query_result&lt;/span> &lt;span class="n">results&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you&amp;rsquo;ve made note of your profile id above, and we can see what it looks like now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ruby ga.rb &lt;span class="m">93249816&lt;/span>
+--------------------------------------------------+--------------+-------------+----------+
&lt;span class="p">|&lt;/span> ga:pageTitle &lt;span class="p">|&lt;/span> ga:pageviews &lt;span class="p">|&lt;/span> ga:newUsers &lt;span class="p">|&lt;/span> ga:users &lt;span class="p">|&lt;/span>
+--------------------------------------------------+--------------+-------------+----------+
&lt;span class="p">|&lt;/span> Building Sites with Middleman &lt;span class="p">|&lt;/span> Will Schenk &lt;span class="p">|&lt;/span> &lt;span class="m">26&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">11&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">24&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Bootstrap: Advanced Grid Tricks &lt;span class="p">|&lt;/span> Will Schenk &lt;span class="p">|&lt;/span> &lt;span class="m">11&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">7&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">11&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Making a &lt;span class="nb">command&lt;/span> line utility with gems and thor &lt;span class="p">|&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">6&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Will Schenk &lt;span class="p">|&lt;/span> Will Schenk &lt;span class="p">|&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Making Yosemite Faster &lt;span class="p">|&lt;/span> Will Schenk &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">7&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> How to track your coworkers &lt;span class="p">|&lt;/span> Will Schenk &lt;span class="p">|&lt;/span> &lt;span class="m">6&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">6&lt;/span> &lt;span class="p">|&lt;/span>
&lt;span class="p">|&lt;/span> Will Schenk - How to track your coworkers &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
+--------------------------------------------------+--------------+-------------+----------+
&lt;span class="m">7&lt;/span> rows in &lt;span class="nb">set&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-6-adding-more-commands">Step 6 Adding more commands&lt;/h2>
&lt;p>Lets create a &lt;code>Thor&lt;/code> class here for the things that we want to query, and then go through a implement the calls in the &lt;code>AnalyticsClient&lt;/code> class.&lt;/p>
&lt;p>We want to be able to specify the timeframe for when we want the results. It defaults to the current date, but lets add some more options for &lt;strong>today&lt;/strong>, &lt;strong>yesterday&lt;/strong>, &lt;strong>recently&lt;/strong> (last 7 days), and &lt;strong>month&lt;/strong> (last 30 days, which isn&amp;rsquo;t really a month but close enough.)&lt;/p>
&lt;p>We also want to have different output options, so we&amp;rsquo;ll add a &lt;strong>table&lt;/strong> switch, like the &lt;code>Hirb&lt;/code> output above, and &lt;strong>csv&lt;/strong> to make it easier to plug this into other tools.&lt;/p>
&lt;p>We&amp;rsquo;re going to create 4 different ways to query the data.&lt;/p>
&lt;ul>
&lt;li>What content is getting traffic&lt;/li>
&lt;li>Who is linking to your site&lt;/li>
&lt;li>Who is linking to specific pages on your site&lt;/li>
&lt;li>A timeline of when content was published and people started linking to it&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>Commands:
ga.rb profiles # List Account Profiles
ga.rb hotcontent PROFILE_ID # Show hot content for profile id
ga.rb referers PROFILE_ID # Show hot content for profile id
ga.rb content_referers PROFILE_ID # Show hot content for profile id
ga.rb timeline PROFILE_ID # Show a timeline of referers
&lt;/code>&lt;/pre>&lt;p>Here&amp;rsquo;s the CLI code:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">class&lt;/span> &lt;span class="nc">HammerOfTheGods&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Thor&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;profiles&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;List Account Profiles&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">profiles&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">print_profiles&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;hotcontent PROFILE_ID&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show hot content for profile id&amp;#34;&lt;/span>
&lt;span class="n">options&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:yesterday&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:recently&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:month&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:table&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:csv&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">hotcontent&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hotcontent&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">print_result&lt;/span> &lt;span class="n">result&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;referers PROFILE_ID&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show hot content for profile id&amp;#34;&lt;/span>
&lt;span class="n">options&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:yesterday&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:recently&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:month&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:table&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:csv&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">print_result&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;content_referers PROFILE_ID&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show hot content for profile id&amp;#34;&lt;/span>
&lt;span class="n">options&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:yesterday&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:recently&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:month&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:table&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:csv&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">content_referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content_referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">print_result&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;timeline PROFILE_ID&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show a timeline of referers&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">timeline&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timeline&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="kp">private&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">client&lt;/span>
&lt;span class="vi">@client&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">AnalyticsClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">start_date&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:yesterday&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:recently&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:month&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">end_date&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:yesterday&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">print_result&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:csv&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">print_csv_result&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">print_query_result&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">__FILE__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="vg">$0&lt;/span>
&lt;span class="no">HammerOfTheGods&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">ARGV&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-7-lets-implement">Step 7 Lets implement&lt;/h2>
&lt;p>We have the &lt;code>profiles&lt;/code> command and the &lt;code>hotcontent&lt;/code> command, or &lt;strong>what content is getting traffic&lt;/strong> working already. Lets add some code to make the &lt;code>--csv&lt;/code> option work, this goes into the &lt;code>AnalyticsClient&lt;/code> class:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">print_csv_result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">csv_string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">CSV&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">csv&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">csv&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">columnHeaders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">csv&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">row&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">csv_string&lt;/span>
&lt;span class="n">csv_string&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Who is linking to your site&lt;/strong>?
We can find out by looking at &lt;code>ga:source&lt;/code> which is basically the domain, &lt;code>ga:referralPath&lt;/code> which is the path part of the url if it&amp;rsquo;s a link referral, and &lt;code>ga:medium&lt;/code> which will tell you if it&amp;rsquo;s linking from a direct url, social media link, email link, or ad traffic.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">query_template&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">query&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;dimensions&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ga:source,ga:referralPath,ga:medium&amp;#34;&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ss">api_method&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ga&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">parameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">query&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Who is linking to specific pages on your site&lt;/strong> can be dertimined by adding the &lt;code>ga:landingPagePath&lt;/code> dimension to the above query. This now breakdown the source of traffic not to the site as a whole, but to a specific landing page. We&amp;rsquo;re also changing the &lt;code>sort&lt;/code> query parameter to take this additional dimension into effect.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">content_referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">query_template&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">query&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;dimensions&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ga:landingPagePath,ga:source,ga:referralPath,ga:medium&amp;#34;&lt;/span>
&lt;span class="n">query&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;sort&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ga:landingPagePath,-ga:pageviews&amp;#34;&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ss">api_method&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ga&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ss">parameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">query&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This works, but we can change the way it&amp;rsquo;s printed out to be visually more useful. In the &lt;code>HammerOfTheGods&lt;/code> we can flesh it out a bit, so it only prints out your local path once while listing the referals indented so you can scan and see what&amp;rsquo;s going on grouped by page.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;content_referers PROFILE_ID&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show hot content for profile id&amp;#34;&lt;/span>
&lt;span class="n">options&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:today&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:yesterday&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:recently&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:month&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:table&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:csv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:full&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">content_referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content_referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end_date&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:table&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:csv&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">print_result&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="n">last_title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">last_title&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">last_title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34; %-5s %-8s %s%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-8-the-timeline">Step 8 The timeline&lt;/h2>
&lt;p>&lt;strong>A timeline of when content was published and people started linking to it&lt;/strong> can be created by combinding 2 of the methods that we&amp;rsquo;ve already written, &lt;code>hotcontent&lt;/code> and &lt;code>referers&lt;/code>, and looping through and querying them one day at a time.&lt;/p>
&lt;p>We start 30 days ago, and get a list of content for that day. If we haven&amp;rsquo;t seen it before, we say that it was posted that day. We then get a list of referrals for that day. If we haven&amp;rsquo;t seen them before, we print it out. I&amp;rsquo;m also supressing links that have passed in less that 2 visitors, since they tend to be very noisey.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="k">def&lt;/span> &lt;span class="nf">timeline&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">one_month_ago&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">24&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span>
&lt;span class="n">start_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">one_month_ago&lt;/span>
&lt;span class="n">today&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>
&lt;span class="n">seen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_date&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">today&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_date&lt;/span>
&lt;span class="nb">puts&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_date&lt;/span>
&lt;span class="n">contents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">hotcontent&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">contents&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">unless&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]]&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34; Posted: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">title&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">referers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">profile_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="n">start_date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;http://&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}#{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;referral&amp;#39;&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34; %-10s %5s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">url&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">seen&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">to_i&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="n">seen&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">true&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;referral&amp;#39;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">start_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start_date&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">24&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="code">Code&lt;/h2>
&lt;p>The &lt;a href="https://gist.github.com/wschenk/d7f8650d619d8f68730a">full code is available to play with&lt;/a>. The mechanism for talking to Google APIs from a script works everywhere, but if you are going to do this on your server you&amp;rsquo;ll want to get the OAuth2 key using a different process than the &lt;code>InstalledAppFlow&lt;/code>.&lt;/p></description></item><item><title>New HappySeed released</title><link>https://willschenk.com/articles/2014/new-happyseed-released/</link><pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/new-happyseed-released/</guid><description>&lt;h2 id="make-apps-faster">Make apps faster&lt;/h2>
&lt;p>Head on over to the &lt;a href="http://seed.happyfuncorp.com">HappySeed website&lt;/a> to get the latest version of HappyFunCorp&amp;rsquo;s starter application toolkit.&lt;/p>
&lt;p>HappySeed is a set of application templates to help you get started building out new sites. The main section is a rails application template plus a set of rails generators to help you get started with rails appliations quickly. These generators setup the configuration of the application in a standard way, and the full set of generators include many things for setting up a modern rails app and well as middleman apps.&lt;/p>
&lt;p>You can update your command line tools by doing&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ gem install happy_seed
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then create rails apps, plugins, engines, and middleman static sites using the new &lt;code>happy_seed&lt;/code> tool.&lt;/p>
&lt;h2 id="rails-sites">Rails sites&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ happy_seed rails app_name
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="http://seed.happyfuncorp.com/docs/rails.html">Read rails documentation&lt;/a>&lt;/p>
&lt;h2 id="rails-plugins">Rails Plugins&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ happy_seed plugin plugin_name
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="http://seed.happyfuncorp.com/docs/plugin.html">Read plug-in documentation&lt;/a>&lt;/p>
&lt;h2 id="rails-engines">Rails Engines&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ happy_seed engine engine_name
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="http://seed.happyfuncorp.com/docs/plugin.html">Read engine documentation&lt;/a>&lt;/p>
&lt;h2 id="middleman-static-sites">Middleman Static Sites&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ happy_seed static static_site
&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>
$ happy_seed static_blog static_site
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="http://seed.happyfuncorp.com/docs/middleman.html">Read static documentation&lt;/a>&lt;/p>
&lt;h2 id="get-that-code">Get that code&lt;/h2>
&lt;p>Head on over to &lt;a href="https://github.com/HappyFunCorp/happy_seed">github&lt;/a> to check it out!&lt;/p>
&lt;p>&lt;em>Image Credit: &lt;a href="http://consciouslifenews.com">consciouslife news&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Building Sites with Middleman</title><link>https://willschenk.com/articles/2014/building-sites-with-middleman/</link><pubDate>Tue, 25 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/building-sites-with-middleman/</guid><description>&lt;p>I make a lot of websites, and I have a certain toolkit that I use to build them. The most useful things I use are:&lt;/p>
&lt;ul>
&lt;li>layouts and partials so I only need to set things up once&lt;/li>
&lt;li>&lt;code>haml&lt;/code> for writing html, since I don&amp;rsquo;t like closing tags&lt;/li>
&lt;li>&lt;code>Bootstrap&lt;/code> and &lt;code>sass&lt;/code> for writing css&lt;/li>
&lt;li>&lt;code>Markdown&lt;/code> for formatting large blogs of content&lt;/li>
&lt;li>&lt;code>coffeescript&lt;/code> for JavaScript&lt;/li>
&lt;/ul>
&lt;p>Middleman is a static site generator, which means that it takes a bunch of source files, does some stuff with it, and produces static HTML, CSS, Images, and Javascript that can be hosted on a basic server somewhere, including &lt;a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">hosting on S3&lt;/a> or &lt;a href="https://pages.github.com">Github Pages&lt;/a> so you don&amp;rsquo;t need to consider a server.&lt;/p>
&lt;p>Middleman is written in Ruby, so it&amp;rsquo;s our familiar toolset, and unlike &lt;a href="http://jekyllrb.com">Jekyll&lt;/a> it uses &lt;a href="https://github.com/sstephenson/sprockets">Sprockets&lt;/a>, which is the same asset pipelining system that Rails uses. So you get all the benefits of using a robust system that works for Rails apps without having to learn a bunch more things.&lt;/p>
&lt;p>In the node world &lt;a href="http://yeoman.io">Yeoman&lt;/a> does something similar, but I personally have had poor luck getting &lt;a href="http://gruntjs.com">Grunt&lt;/a> to work reliably in practice.&lt;/p>
&lt;h2 id="setting-up-a-simple-static-site-with-middleman">Setting up a simple static site with Middleman&lt;/h2>
&lt;p>One of the problems with starting with Middleman is that there are so many places to start. Lets look at how to setup a basic middleman site with bootstrap-sass, haml, and bower. First thing is to install middleman:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ gem install middleman
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And create an app:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ middleman new static_site
&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>
create static_site/.gitignore
create static_site/config.rb
create static_site/source/index.html.erb
create static_site/source/layouts/layout.erb
create static_site/source/stylesheets
create static_site/source/stylesheets/all.css
create static_site/source/stylesheets/normalize.css
create static_site/source/javascripts
create static_site/source/javascripts/all.js
create static_site/source/images
create static_site/source/images/background.png
create static_site/source/images/middleman.png
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates 4 files in the main directory, &lt;code>Gemfile&lt;/code> and &lt;code>Gemfile.lock&lt;/code>, which we know and love, &lt;code>config.rb&lt;/code> which configures how middleman generates the site, and &lt;code>source&lt;/code> which are the sourcefiles of the site.&lt;/p>
&lt;h2 id="gemfile">Gemfile&lt;/h2>
&lt;p>By default, &lt;code>middleman&lt;/code> installs the &lt;code>middleman-livereload&lt;/code> plugin, so in development mode any browers that have a page open with refresh when you save a file. This makes testing a lot easier. We can install other gems here to add different functionality. Let&amp;rsquo;s add a few of these now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">gem&lt;/span> &lt;span class="s2">&amp;#34;middleman-deploy&amp;#34;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s1">&amp;#39;middleman-bootstrap-navbar&amp;#39;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s2">&amp;#34;bootstrap-sass&amp;#34;&lt;/span>
&lt;span class="n">gem&lt;/span> &lt;span class="s2">&amp;#34;jquery-middleman&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first two gems expand the functionality of middleman, one to add tasks to push the final site build to &lt;code>s3&lt;/code>, &lt;code>gh-pages&lt;/code> and a whole bunch more, and the second to make it easier to build &lt;code>bootstrap&lt;/code> navbars.&lt;/p>
&lt;p>The file two are including &lt;code>bootstrap-sass&lt;/code> &amp;ndash; the same that we use for rails sites &amp;ndash; and &lt;code>jquery&lt;/code>. These get included into the sprockets asset path, so you don&amp;rsquo;t need to maintain them in your project. (We&amp;rsquo;ll also see below how to integrate &lt;code>bower&lt;/code> components into your project.)&lt;/p>
&lt;h2 id="tweaking-middleman">Tweaking Middleman&lt;/h2>
&lt;p>&lt;code>config.rb&lt;/code> is where we configure how middleman itself works.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># For custom domains on github pages&lt;/span>
&lt;span class="n">page&lt;/span> &lt;span class="s2">&amp;#34;CNAME&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">layout&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">false&lt;/span>
&lt;span class="n">set&lt;/span> &lt;span class="ss">:css_dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;stylesheets&amp;#39;&lt;/span>
&lt;span class="n">set&lt;/span> &lt;span class="ss">:js_dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;javascripts&amp;#39;&lt;/span>
&lt;span class="n">set&lt;/span> &lt;span class="ss">:images_dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;images&amp;#39;&lt;/span>
&lt;span class="c1"># Better markdown support&lt;/span>
&lt;span class="c1"># set :markdown, :tables =&amp;gt; true, :autolink =&amp;gt; true, :gh_blockcode =&amp;gt; true, :fenced_code_blocks =&amp;gt; true&lt;/span>
&lt;span class="c1"># set :markdown_engine, :redcarpet&lt;/span>
&lt;span class="c1"># Turn this on if you want to make your url&amp;#39;s prettier, without the .html&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:directory_indexes&lt;/span>
&lt;span class="c1"># Automatic image dimensions on image_tag helper&lt;/span>
&lt;span class="c1"># activate :automatic_image_sizes&lt;/span>
&lt;span class="c1"># Easier bootstrap navbars&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:bootstrap_navbar&lt;/span>
&lt;span class="n">configure&lt;/span> &lt;span class="ss">:development&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:livereload&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Build-specific configuration&lt;/span>
&lt;span class="n">configure&lt;/span> &lt;span class="ss">:build&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="c1"># Any files you want to ignore:&lt;/span>
&lt;span class="n">ignore&lt;/span> &lt;span class="s1">&amp;#39;/admin/*&amp;#39;&lt;/span>
&lt;span class="c1"># For example, change the Compass output style for deployment&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:minify_css&lt;/span>
&lt;span class="c1"># Minify Javascript on build&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:minify_javascript&lt;/span>
&lt;span class="c1"># Enable cache buster&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:asset_hash&lt;/span>
&lt;span class="c1"># Use relative URLs&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:relative_assets&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># This will push to the gh-pages branch of the repo, which will&lt;/span>
&lt;span class="c1"># host it on github pages (If this is a github repository)&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:deploy&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">deploy&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">deploy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">method&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:git&lt;/span>
&lt;span class="n">deploy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">build_before&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets go through this in detail.&lt;/p>
&lt;p>&lt;code>page &amp;quot;CNAME&amp;quot;, layout: false&lt;/code> says to move the file called &lt;code>CNAME&lt;/code> over without wrapping in the main layout. Since this file doesn&amp;rsquo;t have .html in the name, it would otherwise get ignored. This file is for having a custom domain on Github Pages, if that&amp;rsquo;s the sort of thing you are in to.&lt;/p>
&lt;p>The &lt;code>set&lt;/code> commands are there to configure different middleman settings, here to show where the various stylesheet, image, and css directories are.&lt;/p>
&lt;p>&lt;code>activate :directory_indexes&lt;/code> with enable &lt;em>pretty urls&lt;/em>. Directory indexes means that files named &lt;code>about.html&lt;/code> will actually get generated into a file called &lt;code>/about/index.html&lt;/code>, and will rely on the underlying server to have &lt;code>/about&lt;/code> actually show the directory &amp;ldquo;index&amp;rdquo; page, making the urls prettier. This doesn&amp;rsquo;t work on all servers but works on most of them. This plugin will actually rewrite the output of the &lt;code>link_to&lt;/code> tags, so you don&amp;rsquo;t need to adjust your templates to work.&lt;/p>
&lt;p>&lt;code>activate :bootstrap_navbar&lt;/code> is an extension that we added in the Gemfile, which makes it easier to generate bootstrap navbars. Extensions generally work in three ways: they add helper methods, they change the way that the sitemap is processed, or they add different commands to the &amp;ldquo;middleman&amp;rdquo; command.&lt;/p>
&lt;p>We see an example of that at the bottom of the &lt;code>config.rb&lt;/code> file, where we configure the &lt;code>deploy&lt;/code> extension:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">activate&lt;/span> &lt;span class="ss">:deploy&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">deploy&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">deploy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">method&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ss">:git&lt;/span>
&lt;span class="n">deploy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">build_before&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This also takes some configuration, and in this case it set to deploy to github pages, and to make sure that it generates the site before doing so. Here is the &lt;a href="https://github.com/karlfreeman/middleman-deploy">middleman-deploy&lt;/a> github page with documentation.&lt;/p>
&lt;p>There are two sections that each configure a different middleman environment. The first is used when you run &lt;code>middleman server&lt;/code> to look at the site locally:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">configure&lt;/span> &lt;span class="ss">:development&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:livereload&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The final section is configuring the &lt;code>build&lt;/code> process, when you run &lt;code>middleman build&lt;/code> and it creates the generated files in the &lt;code>build&lt;/code> directory. The entry below ignores certain files for the build, and runs minifiers over the css and javascript, and turns on &lt;em>cache busting&lt;/em>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Build-specific configuration&lt;/span>
&lt;span class="n">configure&lt;/span> &lt;span class="ss">:build&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="c1"># Any files you want to ignore:&lt;/span>
&lt;span class="n">ignore&lt;/span> &lt;span class="s1">&amp;#39;/admin/*&amp;#39;&lt;/span>
&lt;span class="c1"># For example, change the Compass output style for deployment&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:minify_css&lt;/span>
&lt;span class="c1"># Minify Javascript on build&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:minify_javascript&lt;/span>
&lt;span class="c1"># Enable cache buster&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:asset_hash&lt;/span>
&lt;span class="c1"># Use relative URLs&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:relative_assets&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="using-bower">Using bower&lt;/h2>
&lt;p>The basic way to use bower is to put this in &lt;code>config.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">sprockets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append_path&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;bower_components&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then you can put things in your &lt;code>all.js&lt;/code> file like&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">//= require &amp;#39;component&amp;#39;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To get all of the assets that are included in the packge, you may need to specify the package in the &lt;code>config.rb&lt;/code> file, such as:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">sprockets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">import_asset&lt;/span> &lt;span class="s1">&amp;#39;jquery&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>More information on the &lt;a href="http://middlemanapp.com/basics/asset-pipeline/">Middleman Asset Pipline documentation&lt;/a>&lt;/p>
&lt;h2 id="using-layouts-and-partials">Using layouts and partials&lt;/h2>
&lt;p>The &lt;code>source&lt;/code> directory is where the actual code for your site lives. Here is an example &lt;code>layouts/layout.haml&lt;/code> file to give you a sense of how to use layouts and include partials:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">!!! 5
%html.no-js.sticky
%head
%meta{ :charset =&amp;gt; 'utf-8' }/
%meta{ 'http-equiv' =&amp;gt; 'X-UA-Compatible', :content =&amp;gt; 'IE=edge,chrome=1' }/
%title This site is amazing!
%meta{ :name =&amp;gt; 'description', :content =&amp;gt; '' }/
%meta{ :name =&amp;gt; 'viewport', :content =&amp;gt; 'width=device-width' }/
= stylesheet_link_tag 'application', &amp;quot;socicons&amp;quot;, &amp;quot;animate&amp;quot;
%body
= partial &amp;quot;layouts/main_header&amp;quot;
~ yield
= partial &amp;quot;layouts/footer&amp;quot;
= partial &amp;quot;layouts/javascripts&amp;quot;
&lt;/code>&lt;/pre>&lt;p>In this usage, this is similar to the way that rails layouts work. I&amp;rsquo;m using the &lt;code>~&lt;/code> HAML operator inside of &lt;code>=&lt;/code> here because I want to make sure that it doesn&amp;rsquo;t do anything wonky with the indention on &lt;code>&amp;lt;pre&amp;gt;&lt;/code> blocks, btw.&lt;/p>
&lt;p>Middleman has a concept of nested layouts, which lets you have wrap an a layout around another one. I think that this is confusing in practice, but as an example you could have a &lt;code>layouts/sidebar_layout.erb&lt;/code> that looked like:&lt;/p>
&lt;pre>&lt;code class="language-erb" data-lang="erb">&amp;lt;% wrap_layout :layout do %&amp;gt;
&amp;lt;div class=&amp;quot;sidebar&amp;quot;&amp;gt;
&amp;lt;%= partial &amp;quot;layouts/sidebar&amp;quot; %&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;
&amp;lt;%= yield %&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="the-yaml-preable-the-preyaml">The YAML preable the preyaml&lt;/h2>
&lt;p>Metadata about the template is included in a block of text at the top of the file, which gets pulled off to set things that the templating system can use later. On the top of this file that I am editing right now, it looks like this&lt;/p>
&lt;pre>&lt;code>---
title: 'Building Sites with Middleman'
subtitle: 'lean publishing'
tags: middleman, ruby, howto
header_image: books.jpg
---
I make a lot of websites, and I have a certain toolkit that I use to build...
&lt;/code>&lt;/pre>&lt;p>The &lt;code>title&lt;/code>, &lt;code>subtitle&lt;/code>, &lt;code>tags&lt;/code> and &lt;code>header_image&lt;/code> attributues are available in the templates as page data, so you can access them like:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml"> %h1= current_article.title
%h2= current_article.data['subtitle']
&lt;/code>&lt;/pre>&lt;p>&lt;em>title&lt;/em> is built into middleman, &lt;em>subtitle&lt;/em> and &lt;em>header image&lt;/em> are just some random things I made up. The &lt;code>tags&lt;/code> attribute is part of the &lt;code>middleman-blog&lt;/code> extension which we will cover below.&lt;/p>
&lt;h2 id="how-the-build-works">How the build works&lt;/h2>
&lt;p>When you run &lt;code>middleman server&lt;/code> or &lt;code>middleman build&lt;/code>, middleman loads up the configuration file in &lt;code>config.rb&lt;/code>. It creates a sitemap based upon the files in the &lt;code>source&lt;/code> directory as well as other directives inside of the config.rb file.&lt;/p>
&lt;p>By default it only includes files like &lt;code>.html.erb&lt;/code> and &lt;code>.js&lt;/code>, but you can set it manually include a non-template file (like our &lt;code>page &amp;quot;CNAME&amp;quot;&lt;/code> above or create other &lt;code>proxy&lt;/code> files. Proxy files are a way of seperating out the templates from the source data.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Assumes the file source/about/template.html.erb exists&lt;/span>
&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;tom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;dick&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;harry&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">proxy&lt;/span> &lt;span class="s2">&amp;#34;/about/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/about/template.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:locals&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">:person_name&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates three entries into the sitemap called &lt;code>/about/tom.html&lt;/code>, &lt;code>/about/dick.html&lt;/code> and &lt;code>/about/harry.html&lt;/code> that use a specific template.&lt;/p>
&lt;p>This data doesn&amp;rsquo;t need to be hardcoded into the &lt;code>config.rb&lt;/code> btw, you can also place &lt;code>json&lt;/code> and &lt;code>yml&lt;/code> files in the &lt;code>data/&lt;/code> directory which middleman will load automatically. For example, &lt;code>data/employees.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">[{&lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Tom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Janitor&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Mary&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;CEO&amp;#34;&lt;/span>&lt;span class="p">}]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then in your &lt;code>config.rb&lt;/code> you could access this as:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">data&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;employees&amp;#39;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">employee&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">proxy&lt;/span> &lt;span class="s2">&amp;#34;/about/&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/about/template.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:locals&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">:person_name&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">employee&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:name&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:title&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">employee&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:title&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then each entry in the sitemap the file is processed (based upon the extension, so scss -&amp;gt; js, haml -&amp;gt; html, etc.) into the build directory. Helper methods are available inside of the templates for things like &lt;code>javascript_include_tag&lt;/code>, &lt;code>stylesheet_link_tag&lt;/code>, &lt;code>link_to&lt;/code> and &lt;code>image_tag&lt;/code> and all of the rest.&lt;/p>
&lt;h2 id="middleman-server">middleman server&lt;/h2>
&lt;p>Starting the server in preview mode will start a local server on port &lt;code>4567&lt;/code> that generates the files on demand. If you have livereload enabled this will automatically trigger a page refresh for any open browsers, so you can tweak and look at things as you go.&lt;/p>
&lt;p>Inside of your templates, &lt;code>config.environment == :development&lt;/code> when you are in preview mode. So, if there are some things that you don&amp;rsquo;t want to push to the live site but are useful for development, you can switch them on and off using that mechanism.&lt;/p>
&lt;h2 id="middleman-build">middleman build&lt;/h2>
&lt;p>This does basically the same thing as the server, but the templates are generally further processed. Cachebusting can be enabled, and you can include tracking code if &lt;code>config.environment == :build&lt;/code> is true. This goes through all of the files in source that look like webfiles and places them in the &lt;code>build&lt;/code> directory.&lt;/p>
&lt;p>And easy way to check out what you have there is by &lt;code>cd&lt;/code>ing into the &lt;code>build/&lt;/code> directory and running a simple webserver to serve the pages. Relative links don&amp;rsquo;t work when you open the file directly in the browser, so you need to use an actual webserver.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ &lt;span class="nb">cd&lt;/span> build
$ python -m SimpleHTTPServer
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then open a new browser on port &lt;code>8000&lt;/code>.&lt;/p>
&lt;h2 id="middleman-deploy">middleman deploy&lt;/h2>
&lt;p>In the basic &lt;code>:git&lt;/code> setting that we have above, middleman deploy will build the site into the &lt;code>build/&lt;/code> directory, switch that directory to the &lt;code>gh-pages&lt;/code> branch, and push it to &lt;code>origin&lt;/code>. Assuming that you are hosting your repo on github, this will publish the static content on github pages.&lt;/p>
&lt;p>If you want to use a &lt;a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/">custom domain&lt;/a> then you need to create a &lt;code>CNAME&lt;/code> file in &lt;code>source/&lt;/code> with the domain name, and set up your DNS records to match.&lt;/p>
&lt;p>One thing to note is that while changes to the pages seem to deploy quickly, it takes a long time for the first push to github pages to show up, on the order of 10-15 minutes.&lt;/p>
&lt;p>More information on &lt;a href="https://github.com/karlfreeman/middleman-deploy">middleman-deploy&lt;/a>.&lt;/p>
&lt;h2 id="building-a-blog">Building a blog&lt;/h2>
&lt;p>There are two good extensions for building a blog with middleman. The default template for blog is sort of confusing in the way that it&amp;rsquo;s laid out, mainly because it gets rid of the &lt;code>layouts/&lt;/code> directory, but let&amp;rsquo;s go through it and see how it&amp;rsquo;s supposed to work:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ gem install middleman-blog
$ middleman new static_blog --template&lt;span class="o">=&lt;/span>blog
create static_blog/.gitignore
create static_blog/config.rb
create static_blog/source
create static_blog/source/2012-01-01-example-article.html.markdown
create static_blog/source/calendar.html.erb
create static_blog/source/feed.xml.builder
create static_blog/source/index.html.erb
create static_blog/source/layout.erb
create static_blog/source/tag.html.erb
create static_blog/source/stylesheets
create static_blog/source/javascripts
create static_blog/source/images
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we have another middleman site, with a bunch of files. It also creates a new command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ middleman article &lt;span class="s2">&amp;#34;This is the title of my article&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s also include the &lt;code>middleman-blog-drafts&lt;/code> gem into the &lt;code>Gemfile&lt;/code>, &lt;code>activate :drafts&lt;/code> in `config.rb, and that will give us a few more commands:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ middleman draft &lt;span class="s2">&amp;#34;This is amazing&amp;#34;&lt;/span>
create source/drafts/this-is-amazing.html.markdown
$ middleman publish source/drafts/this-is-amazing.html.markdown
create source/2014-11-25-this-is-amazing.html.markdown
remove source/drafts/this-is-amazing.html.markdown
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This lets us keep drafts in git and doesn&amp;rsquo;t force us to commit to a date until we are ready to publish it. There are &lt;code>published&lt;/code> and &lt;code>date&lt;/code> attributes that the default blog extension knows about to turn it on and off, and is a good example of something that you can see in development but not production, but that still leaves to moving files around manually to adjust the date.&lt;/p>
&lt;h2 id="what-does-it-add">What does it add&lt;/h2>
&lt;p>In addition to the sitemap, we now have a &lt;code>blog&lt;/code>, &lt;code>article&lt;/code>, and &lt;code>tag&lt;/code> concept inside of the middleman app. Articles are represented as pages (by default using &lt;code>markdown&lt;/code>) but the &lt;code>tag&lt;/code> and &lt;code>calendar&lt;/code> templates are actually more like &lt;code>proxy&lt;/code> templates than file templates, and when the site is generated middleman will iterate over then to produce many output files from one template.&lt;/p>
&lt;p>Part of the &lt;code>index.html.haml&lt;/code> of this site looks like:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml"> - (drafts + page_articles).each do |article|
.post
.post-date
- unless article.is_a? ::Middleman::Blog::Drafts::DraftArticle
%p= article.date.strftime( '%b %e' )
- else
%p.draft Draft
&lt;/code>&lt;/pre>&lt;p>I&amp;rsquo;m putting all of the articles in a list, both drafts and published ones, and only showing the date for articles which have already been published.&lt;/p>
&lt;p>Here&amp;rsquo;s what gets added to the &lt;code>config.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">activate&lt;/span> &lt;span class="ss">:blog&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">blog&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="c1"># This will add a prefix to all links, template references and source paths&lt;/span>
&lt;span class="c1"># blog.prefix = &amp;#34;blog&amp;#34;&lt;/span>
&lt;span class="c1"># blog.permalink = &amp;#34;{year}/{month}/{day}/{title}.html&amp;#34;&lt;/span>
&lt;span class="c1"># Matcher for blog source files&lt;/span>
&lt;span class="c1"># blog.sources = &amp;#34;{year}-{month}-{day}-{title}.html&amp;#34;&lt;/span>
&lt;span class="c1"># blog.taglink = &amp;#34;tags/{tag}.html&amp;#34;&lt;/span>
&lt;span class="c1"># blog.layout = &amp;#34;layout&amp;#34;&lt;/span>
&lt;span class="c1"># blog.summary_separator = /(READMORE)/&lt;/span>
&lt;span class="c1"># blog.summary_length = 250&lt;/span>
&lt;span class="c1"># blog.year_link = &amp;#34;{year}.html&amp;#34;&lt;/span>
&lt;span class="c1"># blog.month_link = &amp;#34;{year}/{month}.html&amp;#34;&lt;/span>
&lt;span class="c1"># blog.day_link = &amp;#34;{year}/{month}/{day}.html&amp;#34;&lt;/span>
&lt;span class="c1"># blog.default_extension = &amp;#34;.markdown&amp;#34;&lt;/span>
&lt;span class="n">blog&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tag_template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;tag.html&amp;#34;&lt;/span>
&lt;span class="n">blog&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">calendar_template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;calendar.html&amp;#34;&lt;/span>
&lt;span class="c1"># Enable pagination&lt;/span>
&lt;span class="c1"># blog.paginate = true&lt;/span>
&lt;span class="c1"># blog.per_page = 10&lt;/span>
&lt;span class="c1"># blog.page_link = &amp;#34;page/{num}&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">activate&lt;/span> &lt;span class="ss">:drafts&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This should be enough to get you started, and more &lt;a href="http://middlemanapp.com/basics/blogging/">documentation is here&lt;/a> . At this point it really becomes a design and development challenge, not figuring out how to use the tool.&lt;/p>
&lt;h2 id="go-get-started">Go get started&lt;/h2>
&lt;p>Middleman gives you all of the front-end developer benefits of using a system like Rails, but outputs static content than can be served anywhere without any dependancies. Many sites don&amp;rsquo;t really require all that for them to run, and it&amp;rsquo;s crazy to me that something as read heavy as a blog often can&amp;rsquo;t perform well under load given that it&amp;rsquo;s just serving up the same old stuff over and over again. You want to have some tooling to make it easier, but it doesn&amp;rsquo;t need to be &lt;em>run time&lt;/em> tooling.&lt;/p>
&lt;p>&lt;em>Image Credit: &lt;a href="https://www.flickr.com/photos/aigle_dore/6365101775/in/photolist-aGsP14-7PozJp-84P71r-dphot9-5qz3ks-eqHuv-6NP8d6-HdurS-aibaen-ix8Rbz-6buevW-7acJMF-8DFBf3-MLnGM-dGa2xi-f4HeM7-zXqL6-88og6h-r7w3U-2qKgwi-mcp7h-4eXcGM-9uv3gC-7BAEiV-5RzRtp-7JKRHh-6iUdMZ-2bUDT-8s4PDi-8pvSWc-dynb6k-zV2x5-4xWMzG-dsxGqc-7Cby3b-9t3zWm-b4jsc2-8YyqSQ-9ggca5-aGsPSg-68SVDi-4PNHrt-7JGpz4-aL22G2-q1ic-sZMVW-84NAEC-8JBSSW-9k6cM-89NBaJ">Moyan Brenn&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Scripting Twitter: Collecting Data and Writing Bots</title><link>https://willschenk.com/articles/2014/scripting-twitter/</link><pubDate>Thu, 20 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/scripting-twitter/</guid><description>&lt;p>Lets build on our &lt;a href="http://willschenk.com/making-a-command-line-utility-with-gems-and-thor">command line url exploring tool&lt;/a> to look at how we can interact with Twitter. We are going to cover how to make a script that will pull information out of twitter, how to deal with its rate limiting, and how to interact with users on Twitter itself.&lt;/p>
&lt;p>Twitter uses &lt;a href="https://dev.twitter.com/oauth/overview/faq">OAuth 1.0A&lt;/a> as a way to authenticate requests. As a script writer, this is super annoying, because you can&amp;rsquo;t just stick a username and password in the environment and go from there. You need to:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://apps.twitter.com">Register you application with twitter&lt;/a>.&lt;/li>
&lt;li>Store the &amp;ldquo;client key&amp;rdquo; for your application.&lt;/li>
&lt;li>Get a user to grant your application access to twitter, and then use that &amp;ldquo;authorization key&amp;rdquo; to access the API.&lt;/li>
&lt;li>Then figure out how to use the API.&lt;/li>
&lt;/ol>
&lt;p>This is a bit overkill for building a simple script, especially since the 3 way process of having your application request access on behalf of a specific user on the twitters servers is a pain for a command line interface. And when you configure your application on twitter you need to specify a &amp;ldquo;callback URL&amp;rdquo;, which a) is different on development, staging and production webapp environments and b) you don&amp;rsquo;t have a web app.&lt;/p>
&lt;p>Luckily for you twitter has a work around.&lt;/p>
&lt;h2 id="firstly-we-create-the-twitter-app">Firstly, we create the Twitter App&lt;/h2>
&lt;ol>
&lt;li>Go to &lt;a href="https://apps.twitter.com/app/new">Create new Twitter App&lt;/a> and fill out the required fields. Specifically, leave &lt;em>callback URL&lt;/em> blank for now.&lt;/li>
&lt;li>Select &lt;em>Keys and Access Tokens&lt;/em>. On this page, create an access token for your user with the &lt;em>Generate Access Token&lt;/em> on the bottom of the page.&lt;/li>
&lt;/ol>
&lt;p>Now we have four variables that our script needs to access twitter on behalf of your user.&lt;/p>
&lt;ol>
&lt;li>The consumer key represents your application.&lt;/li>
&lt;li>The consumer secret represents your application&amp;rsquo;s &amp;ldquo;password&amp;rdquo;.&lt;/li>
&lt;li>The access token represents an authorization that a user has accepted.&lt;/li>
&lt;li>The access token secret is there to make sure that access token is valid.&lt;/li>
&lt;/ol>
&lt;p>Make note of these variables.&lt;/p>
&lt;h2 id="then-we-code-with-the-rest-api">Then, we code with the REST API&lt;/h2>
&lt;p>Make sure you have the twitter gem installed by typing:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ gem install twitter
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We&amp;rsquo;re eventually going to add this code our CLI gem, and that dependency will be created by adding the line&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_dependency&lt;/span> &lt;span class="s1">&amp;#39;twitter&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>OK, lets put this in and see what we get:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;thor&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;twitter&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;httparty&amp;#39;&lt;/span>
&lt;span class="no">TWITTER_APP_KEY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;rzlJXhI8...&amp;#34;&lt;/span>
&lt;span class="no">TWITTER_APP_SECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;euF5bItp9w...&amp;#34;&lt;/span>
&lt;span class="no">TWITTER_ACCESS_TOKEN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;17827...&amp;#34;&lt;/span>
&lt;span class="no">TWITTER_ACCESS_TOKEN_SECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;7NSX...&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">print_user_info&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">u&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;%-20s: %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Screenname&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Full Name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Bio&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">description&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Website&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">website&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Joined&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">created_at&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;%Y-%m-%d&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Location&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">location&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Verified&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">verified?&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Tweets&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tweets_count&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Followers&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">followers_count&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Following&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">friends_count&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Favorites count&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">favorites_count&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">CLI&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Thor&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;user SCREENAME&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Look up info for a specific user.&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">user&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">username&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">print_user_info&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;wschenk&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># We will add more methods here&lt;/span>
&lt;span class="kp">private&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">client&lt;/span>
&lt;span class="vi">@client&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">REST&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">consumer_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_APP_KEY&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">consumer_secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_APP_SECRET&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">access_token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_ACCESS_TOKEN&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">access_token_secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_ACCESS_TOKEN_SECRET&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Only run if the script is called directly&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">__FILE__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="vg">$0&lt;/span>
&lt;span class="no">CLI&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">ARGV&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we run this, we get:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ruby lib/socialinvestigator/client/twitter.rb wschenk
Screenname : wschenk
Full Name : Will Schenk
Bio : Co-Founder of HappyFunCorp.
Website : http://t.co/OA0tQaQiAX
Joined : 2006-12-22
Location : Brooklyn NY
Verified : &lt;span class="nb">false&lt;/span>
Tweets : &lt;span class="m">1674&lt;/span>
Followers : &lt;span class="m">330&lt;/span>
Following : &lt;span class="m">418&lt;/span>
Favorites count : &lt;span class="m">17&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>For those keeping score at home, that&amp;rsquo;s 209 tweets a year.&lt;/em>&lt;/p>
&lt;p>We create a &lt;code>Twitter::REST::Client&lt;/code>, passing in the variables that we got when we created the twitter app. Eventually we&amp;rsquo;ll out grow hardcoding them into the script, but for now replace the dummy values I have above with what you have and try it with some screen names.&lt;/p>
&lt;h2 id="longing-for-oa0tqaqiax">Longing for OA0tQaQiAX&lt;/h2>
&lt;p>If there&amp;rsquo;s one word that describes URL shorteners, that word is &lt;em>rude&lt;/em>. This magical place where anyone can setup shop and link directly to other people now is now infested with middle men, who may indeed be useful but are even less popular than used car salesmen. URL shorteners are services that &lt;em>intermediate&lt;/em> the actual destination of the link in order to better track who clicks on the link. You create many shortened links and give them out to different people, and when the world at large clicks on one of them you know who they got it from.&lt;/p>
&lt;p>The easiest way to resolve the link is to make a &lt;code>HEAD&lt;/code> HTTP request to the shortening service and print where they redirect you to. If there&amp;rsquo;s no location in the response, we&amp;rsquo;ll just return the url that was passed in.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">def&lt;/span> &lt;span class="nf">lookup_url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nil?&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">HTTParty&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span> &lt;span class="n">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">follow_redirects&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">false&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">r&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;location&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">url&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and lets add a Thor command for it too, in the &lt;code>CLI&lt;/code> class, why not:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;lookup URL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Resolve a link&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">lookup&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">lookup_url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can see that&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ruby twitter.rb lookup http://t.co/OA0tQaQiAX
http://happyfuncorp.com
$ ruby twitter.rb lookup http://happyfuncorp.com
http://happyfuncorp.com
&lt;/code>&lt;/pre>&lt;/div>&lt;p>So we can update the website &lt;code>printf&lt;/code> line to be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="nb">printf&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Website&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lookup_url&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">website&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tweets-timelines-mentions-retweets">Tweets timelines mentions retweets&lt;/h2>
&lt;p>With read access, you can pull down some basic stuff.&lt;/p>
&lt;p>Load the recent tweets this user has made:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;user_timeline&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show the authenticated user&amp;#39;s tweets&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">user_timeline&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_timeline&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Show the tweets of people who they are following:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;home_timeline&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show the authenticated user&amp;#39;s timeline&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">home_timeline&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">home_timeline&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Show which of their tweets have been retweeted:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;retweets&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show the authenticated user&amp;#39;s retweets&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">retweets&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">retweets_of_me&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pull down only the tweets that mention the authentication user:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;mentions&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Show the authenticated user&amp;#39;s mentions&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">mentions&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mentions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are building a bot, for example, that you wanted to respond when someone tweets at it, you could use the &lt;code>client.mentions&lt;/code> method to get those tweets in particular. You&amp;rsquo;d need a way to make sure you don&amp;rsquo;t double respond to people each time the bot was run. If you wanted to always have the bot running, look at the Streaming API below. If you want to know how to post to twitter, read on.&lt;/p>
&lt;h2 id="rate-limits-on-the-rest-interface">Rate Limits on the REST interface&lt;/h2>
&lt;p>Unlike Google, who casually has enough computer power to do personalized type ahead search of the &lt;em>entire internet&lt;/em> at &lt;em>a global scale&lt;/em>, Twitter is prickly about &lt;a href="https://dev.twitter.com/rest/public/rate-limiting">you hammering their site&lt;/a>. Personally, I thought that &lt;a href="http://readwrite.com/2008/07/17/the_story_of_the_fail_whale">the fail whale&lt;/a> was really fun. Let&amp;rsquo;s add a another &lt;code>CLI&lt;/code> command to print out the current rate limit status, how many calls you have left, and when your counter for that resource will reset:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;limits&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Print out the current rate limits&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">limits&lt;/span>
&lt;span class="n">resp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;/1.1/application/rate_limit_status.json&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">current_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;span class="n">template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34; %-40s %5d remaining, resets in %3d seconds&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">resp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:resources&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">category&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">resources&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">category&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;span class="n">resources&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="n">template&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:remaining&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:reset&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">current_time&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that I&amp;rsquo;m making the request using &lt;code>client.get&lt;/code> which will make an arbitrary authenticated request to the Twitter api. This &lt;a href="https://dev.twitter.com/rest/reference/get/application/rate_limit_status">particular api call&lt;/a> isn&amp;rsquo;t in the Twitter gem, though the gem is aware of the limits and will throw specific exceptions when you hit those limits.&lt;/p>
&lt;p>The gem provides methods on top of this &lt;code>client.get&lt;/code> interface, which may use more API calls then you expect. Methods like &lt;code>client.user_timeline&lt;/code> and &lt;code>client.followers&lt;/code> return &lt;code>Twitter::Cursor&lt;/code> objects, which you can iterate over in ruby as you&amp;rsquo;d expect, but may trigger multiple API calls throughout the process which you might not expect. You&amp;rsquo;ll potentially get an exception in the middle of things, and you&amp;rsquo;ll need to figure a way around this. In a later post we will get into caching and retry strategies, but since it will dramatically increase the complexity we&amp;rsquo;ll keep things simple for now. &lt;em>Punt!&lt;/em>&lt;/p>
&lt;p>This basic code will catch the &lt;code>TooManyRequests&lt;/code> exception and sleep the process until it&amp;rsquo;s ready to go again. This could take a very very long time.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">follower_ids&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">follower_ids&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;justinbieber&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">begin&lt;/span>
&lt;span class="n">follower_ids&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_a&lt;/span>
&lt;span class="k">rescue&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Error&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">TooManyRequests&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">error&lt;/span>
&lt;span class="c1"># NOTE: Your process could go to sleep for up to 15 minutes but if you&lt;/span>
&lt;span class="c1"># retry any sooner, it will almost certainly fail with the same exception.&lt;/span>
&lt;span class="nb">sleep&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rate_limit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reset_in&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">retry&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="listing-followers">Listing followers&lt;/h2>
&lt;p>To see what that looks like, lets add another &lt;code>CLI&lt;/code> command for listing a person&amp;rsquo;s followers:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;followers SCREENNAME&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Prints out all of the users followers&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">followers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">screenname&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">followers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">screenname&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;@%-15s %-20s %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">description&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And if we run this on someone will a lot of followers, you&amp;rsquo;ll see the &lt;code>Twitter::Error::TooManyRequests&lt;/code> thrown. We can look use our limits command above to see how long we have to wait until it resets. Though, since we don&amp;rsquo;t have any smart retrying logic in place, chances are it will still fail when we try it again.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ruby twitter.rb limits &lt;span class="p">|&lt;/span> grep /followers/list
/followers/list &lt;span class="m">0&lt;/span> remaining, resets in &lt;span class="m">288&lt;/span> seconds
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="searching-for-urls">Searching for URLs&lt;/h2>
&lt;p>There are different types of URLs on twitter. Lets look at a specific tweet of mine, 529342690476179456, to see what there is:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tweet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">529342690476179456&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="c1">#&amp;lt;Twitter::Tweet id=529342690476179456&amp;gt;&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tweet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uris&lt;/span>
&lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="c1">#&amp;lt;Twitter::Entity::URI:0x007ff614b0fce0 @attrs={:url=&amp;gt;&amp;#34;http://t.co/frfwwIqrYB&amp;#34;, :expanded_url=&amp;gt;&amp;#34;http://willschenk.com/bootstrap-advanced-grid-tricks&amp;#34;, :display_url=&amp;gt;&amp;#34;willschenk.com/bootstrap-adva…&amp;#34;, :indices=&amp;gt;[67, 89]}&amp;gt;]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>:url&lt;/code> is the actual link that get&amp;rsquo;s clicked, and in your logs, the one that will show up as the referer.&lt;/p>
&lt;p>&lt;code>:expanded_url&lt;/code> is the end link.&lt;/p>
&lt;p>&lt;code>:display_url&lt;/code> is a shortened version of the end link.&lt;/p>
&lt;p>In the twitter search box we can type in &lt;code>http://willschenk.com/bootstrap-advanced-grid-tricks&lt;/code> and that will match all tweets that go to this URL, regardless of which URL shortening service they use. (To clarify, all those services which Twitter has support for, which for our purposes is all.) If we type in &lt;code>http://t.co/frfwwIqrYB&lt;/code> to the twitter search it won&amp;rsquo;t match the tweet, but if we do &lt;em>an exact search&lt;/em>, with quotes around it like so: &lt;code>&amp;quot;http://t.co/frfwwIqrYB&amp;quot;&lt;/code> we will match the tweet.&lt;/p>
&lt;p>Let&amp;rsquo;s write some code:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;search STRING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Shows all the tweets that match the string&amp;#34;&lt;/span>
&lt;span class="n">options&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:exact&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:user_info&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">search&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:exact&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">reach&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">search&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">created_at&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">followers_count&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">retweet_count&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">reach&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">followers_count&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:user_info&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">print_user_info&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:user_info&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">puts&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> reached &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">reach&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> people.&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will print out the tweet id, when it was created, who tweeted it, how many followers they had, how many times it was retweeted, and the text of the tweet. &lt;em>Whew!&lt;/em> Since there&amp;rsquo;s so much stuff here we made it &lt;code>:&lt;/code> separated on one line, in case you want to parse it with something else.&lt;/p>
&lt;p>The option &lt;code>--exact&lt;/code> will put quotes around the search string, so if you are looking up a tweet from your referrers you can find which tweet sent people to your site.&lt;/p>
&lt;p>The option &lt;code>--user_info&lt;/code> will print out the full information about the user who tweeted.&lt;/p>
&lt;p>Twitter search only returns results from the previous 6-9 days, so better act fast!&lt;/p>
&lt;h2 id="the-streaming-api-filters">The Streaming API: Filters&lt;/h2>
&lt;p>So far we have been looking at the REST API, which lets us interact with the Twitter services much like a user would: in response to something that the user requests. The other API type is called the &lt;a href="https://dev.twitter.com/streaming/userstreams">streaming api&lt;/a>, which lets us open up a single connection and receive information when Twitter has something new. This is useful for a few things:&lt;/p>
&lt;ol>
&lt;li>We can get notified immediately when our search term is seen&lt;/li>
&lt;li>We can get notified if someone mentions us, either with an @reply or, when we have more permissions, with Direct Messages.&lt;/li>
&lt;/ol>
&lt;p>Here&amp;rsquo;s how you can watch twitter for different terms, they can be comma separated. Notice that we&amp;rsquo;ve added another private method, &lt;code>streaming_client&lt;/code> which uses a different interface, and we&amp;rsquo;ll need to &lt;code>^C&lt;/code> the script to start it.&lt;/p>
&lt;p>The method &lt;code>filter&lt;/code> takes a block, and will call that block every time it gets a response from twitter.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;filter TERMS&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Print out tweets that match the terms&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">filter&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">terms&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">streaming_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">track&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">terms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_a?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Tweet&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="kp">private&lt;/span>
&lt;span class="o">[...]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">streaming_client&lt;/span>
&lt;span class="vi">@streaming_client&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Streaming&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">consumer_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_APP_KEY&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">consumer_secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_APP_SECRET&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">access_token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_ACCESS_TOKEN&lt;/span>
&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">access_token_secret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TWITTER_ACCESS_TOKEN_SECRET&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-streaming-api-reacting-to-the-timeline">The Streaming API: Reacting to the timeline&lt;/h2>
&lt;p>We can also watch the timeline come through for the registered user, and do something with it. The pattern is the same as the &lt;code>filter&lt;/code> method, but it passes an Object of one of the following types:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Twitter::Tweet&lt;/code>&lt;/li>
&lt;li>&lt;code>Twitter::DirectMessage&lt;/code>&lt;/li>
&lt;li>&lt;code>Twitter::Streaming::DeletedTweet&lt;/code>&lt;/li>
&lt;li>&lt;code>Twitter::Streaming::Event&lt;/code>&lt;/li>
&lt;li>&lt;code>Twitter::Streaming::FriendList&lt;/code>&lt;/li>
&lt;li>&lt;code>Twitter::Streaming::StallWarning&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>We&amp;rsquo;ll be ignoring most of them:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;listen&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Prints our the authenticated user&amp;#39;s stream as it happens&amp;#34;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">listen&lt;/span>
&lt;span class="n">streaming_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="n">object&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Tweet&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Tweet:@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">DirectMessage&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;DM:@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sender&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">when&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Streaming&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">StallWarning&lt;/span>
&lt;span class="nb">warn&lt;/span> &lt;span class="s2">&amp;#34;Falling behind!&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Running this command will print out tweets and messages as they come in. If you wanted to make an interactive bot, you&amp;rsquo;d put logic in here to respond to the tweets coming in, calling something like&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;@&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> my reply&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">in_reply_to_status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Only, you&amp;rsquo;re not going to get any direct messages, nor are you going to be able to reply, unless you change your application permission settings.&lt;/p>
&lt;h2 id="upgrading-to-the-all-access-pass">Upgrading to the All Access Pass&lt;/h2>
&lt;p>In order to&lt;/p>
&lt;ul>
&lt;li>Update a status&lt;/li>
&lt;li>Read direct messages&lt;/li>
&lt;li>Send direct messages&lt;/li>
&lt;/ul>
&lt;p>You need to change the application permission level. There are three different levels. Read will let you pull things on behalf of the user. If they have a private account, or they have access to a private account, your script will be able to see those things. You will not be able to access or receive direct messages&lt;/p>
&lt;p>Write will let you post public status updates, but not Direct Messages.&lt;/p>
&lt;p>Access direct messages is the third.&lt;/p>
&lt;ol>
&lt;li>Go to the &lt;a href="https://apps.twitter.com">twitter app console&lt;/a> and find your application.&lt;/li>
&lt;li>Go to the &amp;ldquo;Permissions Tab&amp;rdquo;&lt;/li>
&lt;li>Change the settings to &amp;ldquo;Read, Write&amp;rdquo; or &amp;ldquo;Read, Write and Access direct messages&amp;rdquo;&lt;/li>
&lt;li>Go to &amp;ldquo;Keys and Access Settings&amp;rdquo;&lt;/li>
&lt;li>Scroll down and &amp;ldquo;Regenerate My Access Token and Token Secret&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;p>Depending upon what you chose, you can now post on behalf of the user:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;Hello, World&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Read their direct messages:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">direct_messages&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or send a direct message:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_direct_message&lt;/span> &lt;span class="s2">&amp;#34;wschenk&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Hi there&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-code">The Code&lt;/h2>
&lt;p>Here is the &lt;a href="https://gist.github.com/wschenk/86e1e87772e7d589e963">code written for this article&lt;/a>. The github for &lt;a href="https://github.com/sublimeguile/socialinvestigator">socialinvestigator&lt;/a> has a more complete sample that loads and stores the credentials in a file.&lt;/p>
&lt;p>&lt;em>Image Credit &lt;a href="https://www.flickr.com/photos/jurvetson/7408451314/in/photolist-bvcbis-7DN6Sk-7DRVeq-7DRUVq-jB3M44-dhZrKM-atAnS1-bi4yL6-atHJJo-85tMTG-cp5WgS-asg29e-chEftd-6Zex9h-djkSiW-acqro-c7PG79-72SJuQ-7fPiox-avgwDx-bEWnc2-4FAqy9-9mvMsP-8fp27H-chEjh3-66UgvR-6oqRAV-6oqUMD-5zWDAn-9mqRC4-6ov3Mw-6oqRQZ-6ov4bh-avgxEZ-6VXNYF-avgwMM-avjcLf-avjcQ1-avjcLS-avjcPd-avjcTW-avjduE-avgwZK-avjdMm-avjcVy-avjcSU-avgwRt-avjcY1-avjd2d-avgwTv">Steve Jurvetson&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Embedding 3d models on your page</title><link>https://willschenk.com/articles/2014/embedding-3d-models-on-your-page/</link><pubDate>Sun, 16 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/embedding-3d-models-on-your-page/</guid><description>&lt;p>Github has an &lt;a href="https://help.github.com/articles/3d-file-viewer/">embeddable 3d model viewer&lt;/a> that you can use to display a model on your site. The model needs to be hosted in a github repo, and the format is&lt;/p>
&lt;p>&lt;code>&amp;lt;script src=&amp;quot;https://embed.github.com/view/3d/&amp;lt;username&amp;gt;/&amp;lt;repo&amp;gt;/&amp;lt;ref&amp;gt;/&amp;lt;path_to_file&amp;gt;&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code>&lt;/p>
&lt;p>Here&amp;rsquo;s a model of me that we made using the &lt;a href="http://structure.io/">Structure 3d scanner&lt;/a> which is a fun device that plugs into your iPhone or iPad.&lt;/p>
&lt;p>&lt;script src="https://embed.github.com/view/3d/sublimeguile/model_army/master/will%20clean.stl">&lt;/script>&lt;/p>
&lt;p>Pretty fun right?&lt;/p>
&lt;p>The next thing you need to do is to get a 3d printer, so you can create action figures for your office.&lt;/p>
&lt;img src="10514107_312439818930875_824765904_n_large.jpg" class="img-fluid">
&lt;p>End.&lt;/p></description></item><item><title>Personal information from only a URL</title><link>https://willschenk.com/articles/2014/personal-information-from-only-a-url/</link><pubDate>Fri, 14 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/personal-information-from-only-a-url/</guid><description>&lt;p>Ever wonder what you can find out by looking at a url? How about physical addresses, server location, emails, phone numbers, various links to other profiles (which can in turn be structurally scraped), technology stack, and more.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ socialinvestigator net page http://willschenk.com/bio
domain: willschenk.com
created_on: 2014-10-31
expires_on: 2015-10-31
updated_on: 2014-10-31
registrar_name: ENOM, INC.
registrar_url: www.enom.com
registrant_contact:
name: WILL SCHENK
organization: HAPPYFUNCORP
address: &lt;span class="m">18&lt;/span> BRIDGE STREET, 2E
city: BROOKLYN
zip: &lt;span class="m">11201&lt;/span>
state: NY
country_code: US
phone: +91.76976430
email: WSCHENK@GMAIL.COM
server_name: ec2-54-225-218-167.compute-1.amazonaws.com
server_country: United States
server_location: Ashburn, Virginia
server_latitude: 39.0437
server_longitude: -77.4875
server_ip_owner: Amazon Technologies Inc. &lt;span class="o">(&lt;/span>AT-88-Z&lt;span class="o">)&lt;/span>
emails: wschenk@gmail.com, will@happyfuncorp.com
title: Will Schenk
description: The blog of Will Schenk
twitter_author: wschenk
twitter_ids: wschenk
responsive: &lt;span class="nb">true&lt;/span>
rss_feed: /feed.rss
atom_feed: /feed
twitter_links: https://twitter.com/wschenk, http://twitter.com/wschenk
linkedin_links: http://www.linkedin.com/pub/will-schenk/0/266/420/
instagram_links: http://instagram.com/wschenk
github_links: https://github.com/wschenk
technologies: Chartbeat, Font Awesome, Google Analytics, RackCache, Ruby
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Standalone code as &lt;a href="https://gist.github.com/wschenk/7d333acb59b7768f2637">a gist&lt;/a>, the complete socialinvestigator code &lt;a href="https://github.com/sublimeguile/socialinvestigator">available on github&lt;/a> or and is easily installable on your machine as a gem.&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ gem install socialinvestigator
$ socialinvestigator net get_apps_json
$ socialinvestigator net page_info url
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Poking around different urls can give you a sense of the corporate entities behind sites, who is actually involved, and help you track down people when you can&amp;rsquo;t find them otherwise. It&amp;rsquo;s actually hard to figure out which URL to include on this post since the data seems so personal and yet people put it out there. This takes the messy HTML that&amp;rsquo;s out there and returns structured information that you can use to explore profiles on other sites in a way that can be totally automated.&lt;/p>
&lt;h2 id="what-does-it-do">What does it do&lt;/h2>
&lt;p>What this code does is to first search for DNS information to see who owns the domain and if there&amp;rsquo;s any contact information associated with it. It then looks at who owns the IP address and tries to locate where it is geographically.&lt;/p>
&lt;p>It then looks at the page itself to see &lt;a href="http://ogp.me">Open Graph meta data&lt;/a>,&lt;a href="https://dev.twitter.com/cards/overview">Twitter Card meta data&lt;/a> and other basic SEO tags.&lt;/p>
&lt;p>Finally, it looks inside the page for likely looking links to other social networks, and scans the page and HTTP metadata for clues about what underlying technology the site was built in. (The metadata for the technology fingerprinting is from the &lt;a href="https://github.com/ElbertF/Wappalyzer">Wappalyzer project&lt;/a> which I cobbled together a basic ruby engine for.)&lt;/p>
&lt;p>And finally it takes all of the facts that it has collected, figured out which ones take priority, and prints them out.&lt;/p>
&lt;h2 id="finding-domain-info">Finding Domain info&lt;/h2>
&lt;p>The first thing that we do is look for the URL and try to find the domain name. The difference between a hostname and domain name is subtle, partly in some cases they are interchangeable, and partly because DNS is the &lt;a href="http://codex.happyfuncorp.com/slides/93#1">second most amazing thing about the Internet&lt;/a>. (The most truly mind-blowing thing clearly &lt;a href="http://en.wikipedia.org/wiki/Default_route">the default route&lt;/a>, the &lt;em>life, liberty, and pursuit of happiness&lt;/em> of the Internet.) A globe spanning, highly distributed database that lets 2.5 billion internet users look up any of the 4 billion potential server addresses in less than 50ms without any real centralized control isn&amp;rsquo;t exactly straightforward.&lt;/p>
&lt;p>DNS manages this complexity by delegating authority for different branches of the entire namespace. The first level is called the Top Level Domains, most famous being &lt;em>.com&lt;/em>, when you buy a domain name from someone they delegate authority over that name space to you. These can go deep, especially with large global organizations. The first thing we do is look for that &lt;strong>Start of Authority&lt;/strong> (SOA) record for machine named in the URL. If we can&amp;rsquo;t find one for that machine, we look up the chain until we find something.&lt;/p>
&lt;p>This looks like:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;dnsruby&amp;#39;&lt;/span>
&lt;span class="n">hostname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hostname&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">find_domain&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">hostname&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Looking for SOA of &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">hostname&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">dns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Dnsruby&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Resolver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="n">soa&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">hostname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;SOA&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">answer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">rr&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">rr&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_a?&lt;/span> &lt;span class="no">Dnsruby&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">RR&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">IN&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">SOA&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">hostname&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">soa&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="c1"># Go from &amp;#34;news.bbc.co.uk&amp;#34; -&amp;gt; &amp;#34;bbc.co.uk&amp;#34;&lt;/span>
&lt;span class="n">parts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">hostname&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/\./&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kp">nil&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">parts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="n">find_domain&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">parts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once we&amp;rsquo;ve found the domain, we query the &lt;code>whois&lt;/code> databases to find out who has owns the domain name.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;whois&amp;#39;&lt;/span>
&lt;span class="n">whois&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Whois&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lookup&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">domain&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Expires: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">whois&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expires_on&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># Print all contact information we find&lt;/span>
&lt;span class="n">whois&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contacts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="nb">puts&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>One of the challenges here is that there is no standardized format that there is no standardized way of parsing &lt;code>whois&lt;/code> responses. The &lt;code>whois&lt;/code> gem gives it a serious try:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ ls -l &lt;span class="sb">`&lt;/span>bundle show whois&lt;span class="sb">`&lt;/span>/lib/whois/record/parser &lt;span class="p">|&lt;/span> wc -l
&lt;span class="m">209&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>But there&amp;rsquo;s over 500 different whois servers out there, so you won&amp;rsquo;t always get a parseable response. In that case we print out that we can&amp;rsquo;t find a parser, and we store the unparsed response in the data object as &lt;code>unparsed_whois&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">whois&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">p&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="c1"># Check for responses that we couldn&amp;#39;t parse&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="no">Whois&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Record&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Parser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parser_for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">p&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_a?&lt;/span> &lt;span class="no">Whois&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Record&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Parser&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Blank&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Couldn&amp;#39;t find a parser for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&amp;#34;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="nb">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="finding-ip-and-hosting-information">Finding IP and hosting information&lt;/h2>
&lt;p>Now we look at the IP address, and then do a reverse lookup on it to see what the server machine name is.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">ip_address&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Dnsruby&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Resolv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getaddress&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span> &lt;span class="ss">:ip_address&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ip_address&lt;/span>
&lt;span class="k">begin&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span> &lt;span class="ss">:server_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">Dnsruby&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Resolv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getname&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">ip_address&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">rescue&lt;/span> &lt;span class="no">Dnsruby&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">NXDomain&lt;/span>
&lt;span class="c1"># Couldn&amp;#39;t do the reverse lookup&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sometimes interesting things are encoded in the server name, like if it&amp;rsquo;s a Rackspace cloud server vs a Rackspace static server, but we make no attempt to interpret that string.&lt;/p>
&lt;p>Then we try and see where the IP address is located geographically, using &lt;a href="http://freegeoip.net/">freegeoip.net&lt;/a>. If you did a lot of this it would make sense to buy a more detailed database from &lt;a href="https://www.maxmind.com/en/home">Maxmind&lt;/a> but for something quick and dirty this works. Given that you need to follow the rules of the company you are in, it&amp;rsquo;s interesting to see where the servers are located.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">location_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">HTTParty&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http://freegeoip.net/json/&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">ip_address&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span> &lt;span class="ss">:server_country&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">location_info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;country&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span> &lt;span class="ss">:server_location&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="n">location_info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;city&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">location_info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;region_name&amp;#39;&lt;/span>&lt;span class="o">]].&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;, &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span> &lt;span class="ss">:server_latitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">location_info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;latitude&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span> &lt;span class="ss">:server_longitude&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">location_info&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;longitude&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can also do a &lt;code>whois&lt;/code> lookup on the IP address, to see who owns that IP block. This should give us an idea of who is hosting the site. Note that we don&amp;rsquo;t even pretend to parse the &lt;code>whois&lt;/code> response here in a clever way.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">ip_whois&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Whois&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lookup&lt;/span> &lt;span class="n">ip_address&lt;/span>
&lt;span class="n">ip_whois&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each_line&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">=~&lt;/span>&lt;span class="sr">/Organization/&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">org&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/Organization:\s*(.*)\n/&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">another&lt;/span> &lt;span class="ss">:server_ip_owner&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="page-meta-data">Page meta data&lt;/h2>
&lt;p>Now we load up the page, and look for some basic stuff. The first thing that we do is load the &lt;a href="http://en.wikipedia.org/wiki/Meta_element">meta tags&lt;/a> into something more accessible.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">HTTParty&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">url&lt;/span>
&lt;span class="n">parsed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Nokogiri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>
&lt;span class="c1"># Meta tags&lt;/span>
&lt;span class="n">meta&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">parsed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;meta[name]&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">parsed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;meta[property]&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;property&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">value&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we load up some basic SEO info, including if there are any feeds for this site&amp;rsquo;s content.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:author&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;author&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:description&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;description&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:keywords&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;keywords&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:generator&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;generator&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:responsive&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kp">true&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;viewport&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/width=device-width/&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:server&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;server&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:page_title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">parsed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="c1"># RSS Feed:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">feed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">parsed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;link[type=&amp;#34;application/rss+xml&amp;#34;]&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="n">feed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;href&amp;#39;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">value&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:rss_feed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">feed&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Atom Feed:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">feed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">parsed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">css&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;link[type=&amp;#34;application/atom+xml&amp;#34;]&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">first&lt;/span>
&lt;span class="n">feed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">feed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;href&amp;#39;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">value&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:atom_feed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">feed&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="twitter-cards">Twitter Cards&lt;/h2>
&lt;p>&lt;a href="https://dev.twitter.com/cards/overview">Twitter Card meta data&lt;/a> is a way to control how your data gets displayed on twitter, which has the benefit of defining some summary meta data around the social graph. One thing thing to note is that &lt;code>twitter:creator&lt;/code> is the author of this page, while &lt;code>twitter:site&lt;/code> is the twitter account for the overall site.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;twitter:title&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_creator&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;twitter:creator&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="sr">/@(.*)/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;twitter:creator&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">another&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_ids&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$1&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_site_author&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;twitter:site&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="sr">/@(.*)/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;twitter:site&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">another&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_ids&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$1&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_image&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;twitter:image&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_description&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;twitter:description&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="open-graph">Open Graph&lt;/h2>
&lt;p>&lt;a href="http://ogp.me">Open Graph meta data&lt;/a> is really about what your link looks like when someone shares it on Facebook.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:og_title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;og:title&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:og_description&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;og:description&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:og_type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;og:type&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:og_image&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;og:image&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="social-page-links">Social Page Links&lt;/h2>
&lt;p>We search for social links:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Service&lt;/th>
&lt;th>Regex&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Email&lt;/td>
&lt;td>&lt;code>/mailto:(.*@.*\..*)/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Twitter&lt;/td>
&lt;td>&lt;code>/twitter.com\/[^\/]*$/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LinkedIn&lt;/td>
&lt;td>&lt;code>/linkedin.com/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instagram&lt;/td>
&lt;td>&lt;code>/instagram.com/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Facebook&lt;/td>
&lt;td>&lt;code>/facebook.com\/[^\/]*$/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Google+&lt;/td>
&lt;td>&lt;code>/plus.google.com\/[^\/]*$/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Github&lt;/td>
&lt;td>&lt;code>/github.com\/[^\/]*$/&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>For Twitter, Facebook, and Google+ we are only letting through links that have a simple query string, since for the most part this means that it&amp;rsquo;s the user&amp;rsquo;s ID.&lt;/p>
&lt;h2 id="parsing-twitter-shares-and-intents">Parsing Twitter Shares and Intents&lt;/h2>
&lt;p>We then look for Twitter Share links, and try and parse out the user names found in there.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Look for twitter shared links&lt;/span>
&lt;span class="n">twitter_shared&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">matching_links&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">parsed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sr">/twitter.com\/share/&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">twitter_shared&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;data-text&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="c1"># See if there&amp;#39;s a &amp;#34;by @user&amp;#34; in the text&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="sr">/by\s*@([^\s]*)/&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">match&lt;/span> &lt;span class="n">text&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">another&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_ids&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$1&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remember&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_by&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="vg">$1&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Look for all &amp;#34;@usernames&amp;#34; in the text&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">text&lt;/span>
&lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/@\s*/&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">another&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_ids&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slice&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">100&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1"># We don&amp;#39;t want the @&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># See if there&amp;#39;s a via link on the anchor tag&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;data-via&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">another&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_ids&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;data-via&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">possible_via&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="no">URI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;href&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/&amp;amp;amp;/&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">/=&lt;/span>&lt;span class="sr">/ ) }.select { |x| x[0] == &amp;#39;via&amp;#39; }
&lt;/span>&lt;span class="sr"> if possible_via.size &amp;gt; 0
&lt;/span>&lt;span class="sr"> data.another( :twitter_ids, possible_via[0][1] )
&lt;/span>&lt;span class="sr"> end
&lt;/span>&lt;span class="sr">end
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are also twitter intent links:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">twitter_intent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">hrefs&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">matching_links&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">parsed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sr">/twitter.com\/intent/&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">twitter_intent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="no">URI&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">URI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="sr">/, &amp;#34;+&amp;#34; )).query ).split( /&lt;/span>&lt;span class="o">&amp;amp;/&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/via/&lt;/span>
&lt;span class="k">end&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="sr">/via=/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">via&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">another&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="ss">:twitter_ids&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">via&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="technology-finger-prints">Technology Finger Prints&lt;/h2>
&lt;p>The final thing we do is to load the &lt;code>apps.json&lt;/code> file from &lt;a href="https://github.com/ElbertF/Wappalyzer">Wappalyzer&lt;/a> which is a cross-platform utility that uncovers the technologies used on websites. This has a list of regex for the header tags, meta tags, scripts and other parts of the html to make guesses about which technology is in place. What is in place is very rudimentary, but it gives a general sense of what is used to made the site.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>The standalone code as &lt;a href="https://gist.github.com/wschenk/7d333acb59b7768f2637">a gist&lt;/a>, and you can check out the complete &lt;a href="https://github.com/sublimeguile/socialinvestigator">socialinvestigator code on github&lt;/a>. To run this on your machine:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ gem install socialinvestigator
$ socialinvestigator net get_apps_json
$ socialinvestigator net page_info http://willschenk.com/bio
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It may take a while to get the responses. If you want to see everything it&amp;rsquo;s doing, use the &lt;code>--debug&lt;/code> switch&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ socialinvestigator net page_info http://willschenk.com/bio --debug
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The reverse lookup can take a while, and if you want to turn that off:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ socialinvestigator net page_info http://willschenk.com/bio --noreverse
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Bot Design Patterns</title><link>https://willschenk.com/articles/2014/bot-design-patterns/</link><pubDate>Tue, 11 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/bot-design-patterns/</guid><description>&lt;p>In the antediluvian days before Google found everything for us, personal &lt;em>software agents&lt;/em> were going to continuously do our bidding in &lt;em>cyberspace&lt;/em>, tracking down air fares, making stock trades and otherwise doing futuristic things that we soon wouldn&amp;rsquo;t be able to live without. The anxiety of Y2K rose and crested, and the messianic aura of &lt;em>agents&lt;/em> was washed away by more centralized and effective solutions.&lt;/p>
&lt;p>The aspirational residue did yield some nuggets, and the idea has found partial success in the form of the &lt;em>bot&lt;/em>. In the popular imagination bots exist on &lt;a href="http://www.newyorker.com/tech/elements/the-rise-of-twitter-bots">Twitter as art projects&lt;/a> or as &lt;a href="http://www.nytimes.com/2013/08/11/sunday-review/i-flirt-and-tweet-follow-me-at-socialbot.html?_r=0">marketing machines&lt;/a> or as &lt;a href="http://www.radiolab.org/story/137407-talking-to-machines/">the perfect online dating scandal&lt;/a>.&lt;/p>
&lt;p>Bots can be characterized by asking a few questions, and from these answers we can tell something about their implementation and what it takes to build one: &lt;strong>Do they react to messages?&lt;/strong> &lt;strong>Do they know who they are talking to?&lt;/strong> &lt;strong>Can they learn from what was said?&lt;/strong> &lt;strong>Do they know where the conversation is taking place?&lt;/strong> &lt;strong>Do they remember the overall conversation?&lt;/strong>&lt;/p>
&lt;p>From this, we can classify bots into one of six types:&lt;/p>
&lt;ul>
&lt;li>Notifiers&lt;/li>
&lt;li>Reactors&lt;/li>
&lt;li>Space Reactors&lt;/li>
&lt;li>Responders&lt;/li>
&lt;li>Space Responders&lt;/li>
&lt;li>Conversationists&lt;/li>
&lt;/ul>
&lt;p>Each of these have progressively more complex context that the bot is operating in. Most chat mediums have different message types, where message can be directed towards or private to a particular user. Confounding things further, some have a native concept of &lt;em>spaces&lt;/em>, generally called a &lt;em>room&lt;/em> or a &lt;em>channel&lt;/em>, and as we treat people differently in different context the bot will also need to be aware of the difference context that the conversion is taking place. We can call those services &lt;em>Spaced&lt;/em>.&lt;/p>
&lt;table class="table table-sm table-striped table-bordered">
&lt;thead>
&lt;tr>&lt;th>Service&lt;/th>&lt;th>Spaced&lt;/th>&lt;th>Notes&lt;/th>&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>&lt;td>SMS&lt;/td>&lt;td>No&lt;/td>&lt;td>Groups are a dynamic list of people&lt;/td>&lt;/tr>
&lt;tr>&lt;td>Desktop Notifications&lt;/td>&lt;td>No&lt;/td>&lt;td>Stuck on one computer&lt;/td>&lt;tr>
&lt;pre>&lt;code>&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Push Notifications&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;No&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;One way communication&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://www.aim.com&amp;quot;&amp;gt;AIM&amp;lt;a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;No&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Group chat not core usage&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://support.google.com/chat/answer/159495?hl=en&amp;quot;&amp;gt;GChat&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;No&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Group chat not core usage&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://www.apple.com/ios/messages/&amp;quot;&amp;gt;iMessage&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;No&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Groups are a dynamic list of people&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;http://twitter.com/&amp;quot;&amp;gt;Twitter&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;No&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Lists aren't groups&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://www.yammer.com&amp;quot;&amp;gt;Yammer&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Sorta&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/Internet_Relay_Chat&amp;quot;&amp;gt;IRC&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;i&amp;gt;Channels&amp;lt;/i&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://www.hipchat.com&amp;quot;&amp;gt;HipChat&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;i&amp;gt;Rooms&amp;lt;/i&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://slack.com&amp;quot;&amp;gt;Slack&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://campfirenow.com&amp;quot;&amp;gt;Campfire&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;i&amp;gt;Rooms&amp;lt;/i&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&lt;/code>&lt;/pre>
&lt;/table>
&lt;p>&lt;em>Keeping track of User / Space context is more challenging than just User context&lt;/em>&lt;/p>
&lt;h2 id="notifiers">Notifiers&lt;/h2>
&lt;p>&lt;em>Notifiers&lt;/em> are the &amp;ldquo;simplest type&amp;quot;of bots, in the sense that the messaging logic is a minor part of the overall program. As a consequence they are the most common and the most varied.&lt;/p>
&lt;ul>
&lt;li>Broadcast a message based upon an external source&lt;/li>
&lt;li>Don&amp;rsquo;t react to messages, so the answers to all the other questions are irrelevant.&lt;/li>
&lt;/ul>
&lt;p>The trick in &lt;em>Notifiers&lt;/em> is in figuring out what to say, not sending the message.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Twitter Example&lt;/span>
&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, World&amp;#34;&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># AppleScript from the command line example&lt;/span>
$ &lt;span class="nv">MESSAGE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Hello, World&amp;#34;&lt;/span>
$ /usr/bin/osascript -e &lt;span class="s2">&amp;#34;display notification \&amp;#34;&lt;/span>&lt;span class="nv">$MESSAGE&lt;/span>&lt;span class="s2">\&amp;#34;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Using the terminal-notifier gem&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;terminal-notifier&amp;#39;&lt;/span>
&lt;span class="no">TerminalNotifier&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">notify&lt;/span> &lt;span class="s2">&amp;#34;\u2705 green!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:title&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;Hello, World&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These are best implemented by having one program generate the information, and sending that to another program that sends the message to the chat service. This could be a monitoring agent that is checking to see if a URL is responding, and if not, sends an alert. It could be a build process that returns a success or failure message.&lt;/p>
&lt;p>It could be a program that selects &amp;ldquo;the next word&amp;rdquo; from a lists of words and tweets one out every hour. Or it could make a bunch of API calls to different services, correlate that with information from a database, do more complicated calculations, and then post it. There&amp;rsquo;s a bot that monitors the top links on hacker news, so it needs to pull down a list of top content, keep track of if it&amp;rsquo;s tweeted it out before, and then send out the message. The sending part is simple, but the overall bot may not be.&lt;/p>
&lt;h2 id="reactors">Reactors&lt;/h2>
&lt;p>&lt;em>Reactors&lt;/em> take action based upon incoming messages, but have no memory of who it&amp;rsquo;s talking with or what space it&amp;rsquo;s talking in. The who and where maybe in the message headers, and the bot can return the message in the correct place, but there is no bot-persisted memory of them.&lt;/p>
&lt;ul>
&lt;li>Reacts to messages on the chat service&lt;/li>
&lt;li>Doesn&amp;rsquo;t remember anything that was said&lt;/li>
&lt;/ul>
&lt;p>The basic idea is that a reactor gets a message, does something with it, and moves on. A lot of twitter bots follow this pattern, where they are looking at things on the stream and commenting upon them.&lt;/p>
&lt;pre>&lt;code>on_message( message ) = -&amp;gt;
result = act_on_message( message )
message.reply( result )
&lt;/code>&lt;/pre>&lt;p>For example, here&amp;rsquo;s something that listens for tweets matching the string &lt;code>not a feminist&lt;/code> and reacts by tweeting that that user isn&amp;rsquo;t a feminist:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">streaming_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">track&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;not a feminist&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_a?&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">Twitter&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Tweet&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="no">BOT_NAME&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;. @&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> is not a feminist&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It could do something more interesting, like looking for an image url, downloading it, running it through ImageMagick, posting it to S3, and then tweeting it back out. But since the bot itself keeps no message or user state, we consider it a &lt;em>reactor&lt;/em>.&lt;/p>
&lt;h2 id="message-dispatching">Message Dispatching&lt;/h2>
&lt;p>Here we reach a phase change in the level of ambient complexity of the bot. Simple &lt;em>Reactors&lt;/em> respond to all messages the same way, relying on the filter to select messages that it cares about. More complex reactors need to figure out what message it&amp;rsquo;s being sent and reply differently:&lt;/p>
&lt;p>Case loop:&lt;/p>
&lt;pre>&lt;code>on_message( message ) = -&amp;gt;
dispatch( message )
dispach( message ) = -&amp;gt;
case message.text
when /^echo/
do_echo( message )
else
message.reply( &amp;quot;Don't know what you mean&amp;quot; )
do_echo( message ) = -&amp;gt;
message.reply( message )
&lt;/code>&lt;/pre>&lt;p>Command objects:&lt;/p>
&lt;pre>&lt;code>on_message( message ) = -&amp;gt;
dispatch( message )
dispatch( message ) = -&amp;gt;
command = find_command_object( message )
command.execute( message )
echo_command.execute( message ) = -&amp;gt;
message.reply( message )
&lt;/code>&lt;/pre>&lt;p>This can also be done using &lt;em>metaprogramming&lt;/em>, something like this:&lt;/p>
&lt;pre>&lt;code>class Dispatcher
dispatch( message ) = -&amp;gt;
if reponds_to? message.command
self.send( message.command, message )
class MyBotClass &amp;lt; Dispatcher
echo( message ) = -&amp;gt;
message.reply( message )
bot = MyBotClass.new
on_message( message ) = -&amp;gt;
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>That is nonsense pseudo code, but a lot of chat bot libraries focus in on that area doing something very similar to what &lt;code>Thor&lt;/code> does for command line programs.&lt;/p>
&lt;h2 id="space-reactors">Space Reactors&lt;/h2>
&lt;p>&lt;em>Space Reactors&lt;/em>, in addition to having an awesome name, react to incoming messages, and know where they are receiving a message. The bot has memory of the place, and will respond to the user differently depending upon where the conversation was taking place.&lt;/p>
&lt;ul>
&lt;li>Reacts to messages on the chat service&lt;/li>
&lt;li>Knows where its being addressed&lt;/li>
&lt;li>Doesn&amp;rsquo;t remember anything that was said&lt;/li>
&lt;/ul>
&lt;p>When a reactor is run in on Spaced chat medium, it needs to factor in where the message was received. Instead of having &lt;em>user&lt;/em> and &lt;em>message&lt;/em> to work with, it now has &lt;em>user&lt;/em>, &lt;em>message&lt;/em>, and &lt;em>space&lt;/em>.&lt;/p>
&lt;p>You can either find the space within each of the commands:&lt;/p>
&lt;pre>&lt;code>class MyBot &amp;lt; Dispatcher
wtf( message ) = -&amp;gt;
space = find_space_from( message )
commit_message = space.last_commit_message
message.reply( commit_message )
bot = MyBot.new
on_message( message ) = -&amp;gt;
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>Or locate the commands inside of the space, which lets you separate out which commands are available depending the properties of the space.&lt;/p>
&lt;pre>&lt;code>class PublicSpaceReactor &amp;lt; Dispatcher
wtf( message ) = -&amp;gt;
message.reply( &amp;quot;This space has no commits&amp;quot; )
class ProjectSpaceReactor &amp;lt; Dispatcher
wtf( message ) = -&amp;gt;
message.reply( project.last_commit_message )
class SpaceDispatcher &amp;lt; Dispatcher
dispatch( message ) = -&amp;gt;
space = find_space( message )
responder = nil
if space.project?
responder = ProjectSpaceReactor.new( space.project )
else
responder = PublicSpaceReactor.new
responder.dispatch( message )
bot = SpaceDispatcher.new
on_message( message ) = -&amp;gt;
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>If you have a HipChat bot and have a room for each company project, and you want to have the bot respond to &lt;code>wtf&lt;/code> with the last commit message on github. The first thing that you need to do is look at which room the message came from, and correlate that a list of repositories, then make a Github API call, and finally post the commit message back to the room.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby"> &lt;span class="c1"># This is a lita based bot, which provides dispatching&lt;/span>
&lt;span class="c1"># so we find the space inside of the command&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">wtf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">project&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">find_project&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">room&lt;/span>
&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">project&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last_commit_message&lt;/span>
&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reply&lt;/span> &lt;span class="n">message&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>find_project&lt;/code> method implies that you now need to have persistent state associated with the &lt;em>Space&lt;/em>, in this case the unspecified &lt;code>project&lt;/code> object. It&amp;rsquo;s not just a matter of making sure that your reply goes to the correct place, but that what you reply will changed based upon where the person said it.&lt;/p>
&lt;h2 id="responders">Responders&lt;/h2>
&lt;p>&lt;em>Responders&lt;/em> listen for messages and remember what was said to them. They are different from &lt;em>Reactors&lt;/em> because they have persisted User state, and so can learn something from the user.&lt;/p>
&lt;ul>
&lt;li>Reacts to messages&lt;/li>
&lt;li>Knows who they are talking to&lt;/li>
&lt;li>Can learn from what was said&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s natural here to include the dispatching inside of the object that keeps track of the user state. Here&amp;rsquo;s a pseudo example of a bot that lets you update your nickname. First by loading the user inside of the Bot:&lt;/p>
&lt;pre>&lt;code>class NickBot &amp;lt; Dispatcher
nick( message ) = -&amp;gt;
user = User.load_from_datastore( message.user )
user.nickname = message.arg1
user.save
message.reply( &amp;quot;Your nick name has been updated to &amp;quot; + message.arg1 )
bot = NickBot.new
on_message( message ) = -&amp;gt;
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>But it may also make sense to create different types of dispatchers for different users, in this pseudo code there are 3 different types of responders and depending upon who is sending the message different functions are available to them:&lt;/p>
&lt;pre>&lt;code>class AnonymousUserResponder &amp;lt; Dispatcher
nick( message ) = -&amp;gt;
user.nickname = message.arg1
user.save
message.reply( &amp;quot;Your nick name has been updated to &amp;quot; + message.arg1 )
class NamedUserResponder &amp;lt; AnonymousUserResponder
comment( message ) = -&amp;gt;
create_a_comment( user.nickname, message )
message.reply( &amp;quot;Thanks for the message&amp;quot; )
class AdminResponder &amp;lt; NamedUserResponder
restart( message ) = -&amp;gt;
restart_server
message.reply( &amp;quot;You've restarted the server&amp;quot; )
class UserDispatcher &amp;lt; Dispatcher
dispatch( message ) = -&amp;gt;
user = User.load_from_datastore( message.user )
responder = nil
if user.admin?
responder = AdminResponder.new( user )
elseif user.nickname?
responder = NamedUserResponder.new( user )
else
responder = AnonymousUserResponder.new( user )
responder.dispatch( message )
bot = UserDispatcher.new
on_message( message )
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>&lt;em>This example is misleading because in real life direct inherency doesn&amp;rsquo;t scale well, as we&amp;rsquo;ll see below.&lt;/em>&lt;/p>
&lt;h2 id="space-responders">Space Responders&lt;/h2>
&lt;p>&lt;em>Space Responder&lt;/em> learn things about who is talking with them and the context in which they are speaking.&lt;/p>
&lt;ul>
&lt;li>Reacts to messages&lt;/li>
&lt;li>Knows who they are talking to&lt;/li>
&lt;li>Can learn from what was said&lt;/li>
&lt;li>Knows where its being addressed&lt;/li>
&lt;/ul>
&lt;p>The challenge here is how do you juggle the permutations of state. Lets take the example of a user is an admin in one project, where they can send commands to reboot the server, and in another project they can only open new tickets. In the basic case, you can do everything in each of your methods:&lt;/p>
&lt;pre>&lt;code>class ServerBot &amp;lt; Dispatcher
restart( message ) = -&amp;gt;
user = find_user( message )
space = find_space( message )
if space.is_admin?( user )
restart_server
message.reply( &amp;quot;Go go go&amp;quot; )
else
message.reply( &amp;quot;Sorry Charlie, try again&amp;quot; )
ticket( message ) = -&amp;gt;
space = find_space( message )
ticket = space.create_ticket_message( message )
message.reply( ticket.id + &amp;quot; has been created&amp;quot; )
bot = ServerBot.new
on_message( message ) = -&amp;gt;
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>Lets say that we had two different types of users, admins or not, and two different types of spaces, one that mapped to a project and another that mapped to a hangout area. We could expand out idea of the SpaceDispatcher to return a different command object based upon the combinations.&lt;/p>
&lt;pre>&lt;code>class SpaceDispatcher &amp;lt; Dispatcher
dispatch( message ) = -&amp;gt;
space = find_space( message )
user = find_user( message )
if !space.project?
if space.is_admin?( user )
AdminLobbyResponder.new( space, user ).dispatch( message )
else
LobbyResponder.new( space, user ).dispatch( message )
else if space.is_admin?( user )
AdminSpaceResponder.new( space, user ).dispatch( message )
else
ProjectResponder.new( space, user ).dispatch( message )
class LobbyResponder &amp;lt; Dispatcher
vote( message ) = -&amp;gt;
votes = space.tally_term( message )
message.reply( &amp;quot;That totals: &amp;quot; + votes )
class AdminLobbyResponder &amp;lt; LobbyResponder
topic( message ) = -&amp;gt;
space.set_topic( message )
message.reply( &amp;quot;Topic updated&amp;quot; )
class ProjectResponder &amp;lt; LobbyResponder
ticket( message ) = -&amp;gt;
ticket = space.create_ticket( message )
message.reply( ticket.id + &amp;quot; has been created&amp;quot; )
class AdminProjectResponder &amp;lt; ProjectResponder
restart( message ) = -&amp;gt;
restart_server
message.reply( &amp;quot;Server restarted&amp;quot; )
bot = SpaceDispatcher.new
on_message( message ) = -&amp;gt;
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>We&amp;rsquo;re also using inheritance to include all of the methods that the regular user can do into the class that has all of the Admin methods. This pseudocode has turned into an unholey mixture of Ruby and CoffeeScript, so it probably isn&amp;rsquo;t work doing into language details with this. But straight up inheritance doesn&amp;rsquo;t work well for this type of reuse, and in our example project admins won&amp;rsquo;t be able to change the &lt;code>topic&lt;/code>. These commands would better be structured as mixins.&lt;/p>
&lt;h2 id="conversationists">Conversationists&lt;/h2>
&lt;p>The final, and technically most complicated type of bot to write is a &lt;em>Conversationalist&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>Reacts to messages&lt;/li>
&lt;li>Knows who they are talking to&lt;/li>
&lt;li>Can learn from what was said&lt;/li>
&lt;li>Has conversational state&lt;/li>
&lt;li>Knows where its being addressed&lt;/li>
&lt;/ul>
&lt;p>The basic structure is:&lt;/p>
&lt;pre>&lt;code>class Conversation &amp;lt; Dispatcher
# knowledge collected during the course of the conversation #
# state machine mapping conversion state #
dispatch( message ) = -&amp;gt;
# Store incoming message in log
# interpret the response based upon the current state
# print a message on state transition
class ChatBot &amp;lt; Dispatcher
dispatch( message ) = -&amp;gt;
user = find_user( message )
conversation = user.current_conversation
conversation.dispatch( message )
bot = ChatBot.new
on_message(message) = -&amp;gt;
bot.dispatch( message )
&lt;/code>&lt;/pre>&lt;p>The &lt;code>User&lt;/code> object is responsible for keeping track of conversations. &lt;code>current_conversation&lt;/code> can be smart enough to create a new conversation when things are stale or if there user explicitly closed out an active one.&lt;/p>
&lt;p>Here is an example of code from a bot that asks you questions about where you are and what sort of food you are looking for. It searches a number of APIs in the background to see what information it can get from what you say. The code is written with an Adaptor to talk Twitter or GChat, and they both have a different idea of location. Sometimes it can get an accurate enough location the message metadata, but more likely it&amp;rsquo;s too vague and it will ask you to clarify. (&lt;em>Not all of that logic is below, but its useful to demonstrate the use of the state machine&lt;/em>.)&lt;/p>
&lt;p>The knowledge attributes are what the bot knows in the conversation. Below you&amp;rsquo;ll see an example of &lt;em>knowledge of the conversation&lt;/em> from the state machine, &lt;em>knowledge of what as been said&lt;/em> from previous messages, and &lt;em>knowledge of deduction&lt;/em> from the content and context of the messages.&lt;/p>
&lt;pre>&lt;code>class ConversationResponder
# State Machine
workflow do
state :new do
event :process_message, :transitions_to =&amp;gt; :processing_location
end
state :processing_location do
event :needs_location, :transitions_to =&amp;gt; :clarify_location
event :location_clear, :transitions_to =&amp;gt; :has_location
end
state :clarify_location do
event :process_message, :transitions_to =&amp;gt; :processing_location
end
state :has_location do
event :needs_keywords, :transitions_to =&amp;gt; :clarify_keywords
event :has_keywords, :transitions_to =&amp;gt; :processing_keywords
end
state :clarify_keywords do
event :process_message, :transitions_to =&amp;gt; :processing_keywords
end
state :processing_keywords do
event :needs_keywords, :transitions_to =&amp;gt; :clarify_keywords
event :needs_location, :transitions_to =&amp;gt; :clarify_location
event :found_places, :transitions_to =&amp;gt; :refining_selection
event :no_places_found, :transitions_to =&amp;gt; :clarify_keywords
end
state :refining_selection do
event :process_message, :transitions_to =&amp;gt; :processing_keywords
end
end
# Knowledge Attributes
def looking_for_location?
!knows_location? || location_vague?
end
def knows_location?
!lat.blank? &amp;amp;&amp;amp; !lng.blank?
end
def location_vague?
return false if location_range == &amp;quot;ROOFTOP&amp;quot; || location_range == &amp;quot;RANGE_INTERPOLATED&amp;quot;
#Added by Jon so that zip codes are sufficient
return false if location_range == &amp;quot;APPROXIMATE&amp;quot;
#TODO: put more intelligence into this: eg location_range = &amp;quot;GEOMETRIC_CENTER&amp;quot; is good enough for Iowa but not for NYC
true
end
def location_name
if knows_location?
status,address = Geocode.reverse_geocode([lat,lng])
return address
else
return nil
end
end
def looking_for_places?
places.count == 0
end
def have_keyword_messages?
!keyword_messages.nil? &amp;amp;&amp;amp; keyword_messages.length &amp;gt; 0
end
def keyword_messages
@keyword_messages ||= messages.select{ |x| x.looks_like_keyword? &amp;amp;&amp;amp; !x.is_a?( OutgoingMessage ) }
end
def keywords
keyword_messages.collect { |x| x.search_terms }.join( &amp;quot;, &amp;quot;)
end
end
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="thats-the-shape-of-it">Thats the shape of it&lt;/h2>
&lt;p>&lt;em>Notifiers&lt;/em>, &lt;em>Reactors&lt;/em>, &lt;em>Space Reactors&lt;/em>, &lt;em>Responders&lt;/em>, &lt;em>Space Responders&lt;/em>, and &lt;em>Conversationists&lt;/em>. Writing &lt;em>Notifiers&lt;/em> and &lt;em>Reactors&lt;/em> are more playful, and as you get into things later in the list you spend a lot more time dealing with code and logic complexity.&lt;/p>
&lt;p>The distinction between a &lt;em>Spaced&lt;/em> and &lt;em>Global&lt;/em> chat medium is something that makes using chat libraries, and building &lt;strong>Adapters&lt;/strong> to different services difficult. If the library was built with a &lt;em>Spaced&lt;/em> service in mind it&amp;rsquo;s pretty straightforward to make it work for one, but going the other way isn&amp;rsquo;t swimming upstream.&lt;/p>
&lt;hr>
&lt;h2 id="towards-a-taxonomy-of-twitter-bots">Towards a taxonomy of Twitter Bots&lt;/h2>
&lt;p>&lt;a href="http://tinysubversions.com/botsummit/2014/">BotSummit&lt;/a> was a few days ago, and a bunch of people got together to talk about Twitter bots that they made largely as art projects. Here&amp;rsquo;s a draft of a taxonomy of Twitter bots made by &lt;a href="https://twitter.com/tullyhansen">Tully Hanson&lt;/a>. In the parlance of this post, these are mainly &lt;em>Notifiers&lt;/em> and &lt;em>Reactors&lt;/em>, with some possible &lt;em>Responders&lt;/em> thrown in:&lt;/p>
&lt;img alt="Twitter Bot Taxonomy" src="bKXNQ0V.png" class="img-fluid">
&lt;p>&lt;em>Here&amp;rsquo;s the &lt;a href="https://gist.github.com/tullyhansen/7621632">source document&lt;/a>&lt;/em>&lt;/p>
&lt;p>&lt;em>Notifiers&lt;/em> are interesting not because of their technology, but because of what they actually do. Here&amp;rsquo;s a &lt;a href="https://docs.google.com/document/d/1bka4o1RE9RPUeoUzgpTIKRWsgWHzZEKEADialnv7haQ/view">list of ideas that people came up with&lt;/a>.&lt;/p>
&lt;hr>
&lt;h1 id="agents-of-note">Agents of Note&lt;/h1>
&lt;h2 id="hubot-from-github-is-a-company-chat-bot-written-in-node">Hubot from Github is a company chat bot written in Node&lt;/h2>
&lt;img src="HUBOT_large.jpg" class="img-fluid">
&lt;p>&lt;a href="https://hubot.github.com">Hubot from Github&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>GitHub, Inc., wrote the first version of Hubot to automate our company chat room. Hubot knew how to deploy the site, automate a lot of tasks, and be a source of fun in the company. Eventually he grew to become a formidable force in GitHub. But he led a private, messy life. So we rewrote him.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>Image from &lt;a href="https://hubot.github.com">Hubot site&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="lita-is-similar-to-hubot-but-written-in-ruby">Lita is similar to Hubot but written in Ruby&lt;/h2>
&lt;p>&lt;a href="https://www.lita.io">Lita homepage&lt;/a>&lt;/p>
&lt;img src="lita-94f070fbb79e8ec62cc7a21ca39f8448_large.png" class="img-fluid">
&lt;p>&lt;em>Image from &lt;a href="https://www.lita.io">Lita&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="huginn-is-your-agent-standing-by">Huginn is your agent, standing by&lt;/h2>
&lt;img src="Odin.jpg" class="img-fluid">
&lt;p>&lt;a href="https://github.com/cantino/huginn">Huginn&lt;/a> takes a bit to install, but it&amp;rsquo;s a full on &lt;em>software agent&lt;/em> of the old school.&lt;/p>
&lt;blockquote>
&lt;p>Huginn is a system for building agents that perform automated tasks for you online. They can read the web, watch for events, and take actions on your behalf. Huginn&amp;rsquo;s Agents create and consume events, propagating them along a directed graph. Think of it as a hackable Yahoo! Pipes plus IFTTT on your own server. You always know who has your data. You do.&lt;/p>
&lt;p>We&amp;rsquo;re just getting started, but here are some of the things that you can do with Huginn right now:&lt;/p>
&lt;ul>
&lt;li>Track the weather and get an email when it&amp;rsquo;s going to rain (or snow) tomorrow (&amp;ldquo;Don&amp;rsquo;t forget your umbrella!&amp;quot;)&lt;/li>
&lt;li>List terms that you care about and receive emails when their occurrence on Twitter changes. (For example, want to know when something interesting has happened in the world of Machine Learning? Huginn will watch the term &amp;ldquo;machine learning&amp;rdquo; on Twitter and tell you when there is a large spike.)&lt;/li>
&lt;li>Watch for air travel or shopping deals&lt;/li>
&lt;li>Follow your project names on Twitter and get updates when people mention them&lt;/li>
&lt;li>Scrape websites and receive emails when they change&lt;/li>
&lt;li>Connect to Adioso, HipChat, Basecamp, Growl, FTP, IMAP, Jabber, JIRA, MQTT, nextbus, Pushbullet, Pushover, RSS, Bash, Slack, StubHub, translation APIs, Twilio, Twitter, Wunderground, and Weibo, to name a few.&lt;/li>
&lt;li>Compose digest emails about things you care about to be sent at specific times of the day&lt;/li>
&lt;li>Track counts of high frequency events and send an SMS within moments when they spike, such as the term &amp;ldquo;san francisco emergency&amp;rdquo;&lt;/li>
&lt;li>Send and receive WebHooks&lt;/li>
&lt;li>Run arbitrary JavaScript Agents on the server&lt;/li>
&lt;li>Track your location over time&lt;/li>
&lt;li>Create Amazon Mechanical Turk workflows as the inputs, or outputs, of agents. (&amp;ldquo;Once a day, ask 5 people for a funny cat photo; send the results to 5 more people to be rated; send the top-rated photo to 5 people for a funny caption; send to 5 final people to rate for funniest caption; finally, post the best captioned photo on my blog.&amp;quot;)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;em>Image &amp;ldquo;Odin, der Göttervater&amp;rdquo; by Carl Emil Doepler (1824-1905) - Wägner, Wilhelm. 1882. Nordisch-germanische Götter und Helden. Otto Spamer, Leipzig &amp;amp; Berlin. Page 7.. Licensed under Public domain via Wikimedia Commons - &lt;a href="http://commons.wikimedia.org/wiki/File:Odin,_der_G%C3%B6ttervater.jpg#mediaviewer/File:Odin,_der_G%C3%B6ttervater.jpg">Link&lt;/a>&lt;/em>&lt;/p>
&lt;hr>
&lt;p>Let me know cool things you build!&lt;/p></description></item><item><title>Making a command line utility with gems and thor</title><link>https://willschenk.com/articles/2014/making-a-command-line-utility-with-gems-and-thor/</link><pubDate>Sat, 08 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/making-a-command-line-utility-with-gems-and-thor/</guid><description>&lt;p>Some scripts work well because they are self contained and don&amp;rsquo;t have a lot of dependancies, like the &lt;a href="http://willschenk.com/how-to-track-your-coworkers">hosts on your network tracker&lt;/a>.&lt;/p>
&lt;p>Others scripts&lt;/p>
&lt;ul>
&lt;li>have more code than fits into a single file&lt;/li>
&lt;li>multiple options and switches&lt;/li>
&lt;li>have an extensive set of dependancies&lt;/li>
&lt;/ul>
&lt;p>And on those cases, its better to make a gem and use thor&lt;/p>
&lt;h2 id="hammer-of-the-gods">Hammer of the Gods&lt;/h2>
&lt;p>Lets figure out how to make some command line tools and package them up so that they can be shared and used by other people. Being able to write a script for one off tasks or simple automation is often a lot easier than building out a full app. There are a lot of libraries and gems out there that make it easy to get information from out there on &lt;em>the web&lt;/em>, and they generally require a little glue to make it work.&lt;/p>
&lt;p>This article is a walk through in building out a command line utility that will let you pass in a URL that will search &lt;a href="https://news.ycombinator.com">hacker news&lt;/a> for any mentions. In further postings, we&amp;rsquo;ll see how to integrate twitter and google analytics searching.&lt;/p>
&lt;h2 id="first-building-a-beautiful-gem">First, building a beautiful gem&lt;/h2>
&lt;p>&lt;a href="http://rubygems.org">Rubygems&lt;/a> is the standard package manage for ruby, and &lt;a href="http://bundler.io">Bundler&lt;/a> is the best way to manage dependancies for your application. &lt;code>Bundler&lt;/code> is what makes you &lt;code>Gemfile&lt;/code>s work.&lt;/p>
&lt;p>If you don&amp;rsquo;t have the &lt;code>bundler&lt;/code> gem installed, you probably don&amp;rsquo;t have &lt;a href="http://rvm.io">rvm installed.&lt;/a>. You should go ahead and do that.&lt;/p>
&lt;p>&lt;code>bundle gem&lt;/code> is a command that will generate a template for building a gem. It will create a standard directory structure, create a git repo, and make it easy to build out gems, install them locally, and push them up to &lt;a href="http://rubygems.org/">the central gem repository&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle gem socialinvestigator
create socialinvestigator/Gemfile
create socialinvestigator/Rakefile
create socialinvestigator/LICENSE.txt
create socialinvestigator/README.md
create socialinvestigator/.gitignore
create socialinvestigator/socialinvestigator.gemspec
create socialinvestigator/lib/socialinvestigator.rb
create socialinvestigator/lib/socialinvestigator/version.rb
Initializing git repo in /Users/wschenk/src/socialinvestigator
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first file to look at is the &lt;code>socialinvestigator.gemspec&lt;/code>. This defines information about your gem, a description, homepage url, the files that are included, and all of it&amp;rsquo;s dependancies. There are two types of dependencies:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Runtime dependencies&lt;/strong> are what the gem needs to be installed and functional when its running.&lt;/li>
&lt;li>&lt;strong>Development dependencies&lt;/strong> are additional gems needed for building the gem, which normally mean gems needed for testing and building.&lt;/li>
&lt;/ol>
&lt;p>Lets edit the file and add a line&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_dependency&lt;/span> &lt;span class="s1">&amp;#39;thor&amp;#39;&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_dependency&lt;/span> &lt;span class="s1">&amp;#39;httparty&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Giving us something like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># coding: utf-8&lt;/span>
&lt;span class="n">lib&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expand_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;../lib&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">__FILE__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="vg">$LOAD_PATH&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">unshift&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="vg">$LOAD_PATH&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;socialinvestigator/version&amp;#39;&lt;/span>
&lt;span class="no">Gem&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Specification&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">spec&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;socialinvestigator&amp;#34;&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Socialinvestigator&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">VERSION&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;Will Schenk&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;wschenk@gmail.com&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">summary&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sx">%q{Simple command line tool to look at urls.}&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">description&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sx">%q{Simple command line tool to look at urls.}&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">homepage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">license&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;MIT&amp;#34;&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`git ls-files -z`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\x0&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">executables&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">%r{^bin/}&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">basename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">%r{^(test|spec|features)/}&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">require_paths&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;lib&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_dependency&lt;/span> &lt;span class="s1">&amp;#39;thor&amp;#39;&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_dependency&lt;/span> &lt;span class="s1">&amp;#39;httparty&amp;#39;&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_development_dependency&lt;/span> &lt;span class="s2">&amp;#34;bundler&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;~&amp;gt; 1.6&amp;#34;&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_development_dependency&lt;/span> &lt;span class="s2">&amp;#34;rake&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And run &lt;code>bundle&lt;/code> to install.&lt;/p>
&lt;h2 id="creating-a-binary">Creating a binary&lt;/h2>
&lt;p>Now we need to create a binary in the &lt;code>bin&lt;/code> folder, which doesn&amp;rsquo;t yet exist. The line &lt;code>spec.executables&lt;/code> in the &lt;code>.gemspec&lt;/code> is what tells rubygems which files are being included and installed with the gem. The definition that the bundler gem template gives you will include all files in the &lt;code>bin&lt;/code> directory which are checked into &lt;code>git&lt;/code>.&lt;/p>
&lt;p>Lets create &lt;code>bin/socialinvestigator&lt;/code> now:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="ch">#!/usr/bin/env ruby -wU&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;socialinvestigator&amp;#39;&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Hello, world!&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to make it executable,&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">wschenk$ chmod +x bin/socialinvestigator
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="running-the-binary">Running the binary&lt;/h2>
&lt;p>Running this binary now by typing &lt;code>bin/socialinvestigator&lt;/code> will give an error. This is because it&amp;rsquo;s being called in your normal user context. The first line in the file does &lt;code>require 'socialinvestigator'&lt;/code>, which is the &lt;em>gem we are writing&lt;/em>, and that &lt;em>gem hasn&amp;rsquo;t been installed&lt;/em>.&lt;/p>
&lt;p>We can run this in the context of the gem itself, by running&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator
Hello, world!
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should always run your gem this way. The &lt;code>bundle exec&lt;/code> command will load all of the gems specified in the &lt;code>Gemfile.lock&lt;/code> and then start your script in that context. This is also going to be important later on, when you are working on a new version while you have an older version installed.&lt;/p>
&lt;hr>
&lt;h2 id="thor">Thor&lt;/h2>
&lt;p>&lt;a href="http://whatisthor.com">Thor&lt;/a> is a toolkit for building command-line interfaces. The &lt;code>bundle&lt;/code> command itself is implemented in &lt;code>thor&lt;/code>. Thor makes it easy to expose methods in your class, with parameters and options, to the command line. Let&amp;rsquo;s see how it works.&lt;/p>
&lt;p>We are going to add a new file in &lt;code>lib/socialinvestigator&lt;/code> called &lt;code>cli.rb&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;thor&amp;#39;&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Socialinvestigator&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">HammerOfTheGods&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Thor&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;hello NAME&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;This will greet you&amp;#34;&lt;/span>
&lt;span class="n">long_desc&lt;/span> &lt;span class="s">&amp;lt;&amp;lt;-HELLO_WORLD
&lt;/span>&lt;span class="s">&lt;/span>
&lt;span class="sb">`hello NAME`&lt;/span> &lt;span class="n">will&lt;/span> &lt;span class="nb">print&lt;/span> &lt;span class="n">out&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">person&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">choosing&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="no">Brian&lt;/span> &lt;span class="no">Kernighan&lt;/span> &lt;span class="n">actually&lt;/span> &lt;span class="n">wrote&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">first&lt;/span> &lt;span class="s2">&amp;#34;Hello, World!&amp;#34;&lt;/span> &lt;span class="n">program&lt;/span>
&lt;span class="n">as&lt;/span> &lt;span class="n">part&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">documentation&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="no">BCPL&lt;/span> &lt;span class="n">programming&lt;/span> &lt;span class="n">language&lt;/span>
&lt;span class="n">developed&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="no">Martin&lt;/span> &lt;span class="no">Richards&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="no">BCPL&lt;/span> &lt;span class="n">was&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="n">was&lt;/span> &lt;span class="n">being&lt;/span>
&lt;span class="n">developed&lt;/span> &lt;span class="n">at&lt;/span> &lt;span class="no">Bell&lt;/span> &lt;span class="no">Labs&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">few&lt;/span> &lt;span class="n">years&lt;/span> &lt;span class="n">before&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">publication&lt;/span> &lt;span class="n">of&lt;/span>
&lt;span class="no">Kernighan&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="no">Ritchie&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="n">book&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="mi">1972&lt;/span>&lt;span class="o">.&lt;/span>
&lt;span class="ss">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="sr">//s&lt;/span>&lt;span class="n">tackoverflow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">12785204&lt;/span>
&lt;span class="no">HELLO_WORLD&lt;/span>
&lt;span class="n">option&lt;/span> &lt;span class="ss">:upcase&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">hello&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="n">greeting&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="n">greeting&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">upcase!&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:upcase&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="n">greeting&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>The art of naming variables, classes and methods is one that I&amp;rsquo;ve honed over years of progressional software engineering, based largely on both my experience as an inheritor of other&amp;rsquo;s inexplicable code, as well as the practical jokes that I, evidently, liked to play on my future self. Also, I was inspired by &lt;a href="http://static.echonest.com/bonhamizer/go.html?trid=TRSBVUT12F87DF0212">The Bonhamizer&lt;/a>&lt;/em>&lt;/p>
&lt;p>Lets make sure that we require that new file in the main &lt;code>lib/socialinvestigator.rb&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s2">&amp;#34;socialinvestigator/version&amp;#34;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s2">&amp;#34;socialinvestigator/cli&amp;#34;&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Socialinvestigator&lt;/span>
&lt;span class="c1"># Your code goes here...&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now lets change our &lt;code>bin/socialinvestigator&lt;/code> ruby scripts to:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="ch">#!/usr/bin/env ruby -U&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;socialinvestigator&amp;#39;&lt;/span>
&lt;span class="no">Socialinvestigator&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">HammerOfTheGods&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="no">ARGV&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates a class/ &lt;em>bon mot&lt;/em> named &lt;code>Socialinvestigator::HammerOfTheGods&lt;/code> that we can now place our code in. We&amp;rsquo;ve changed our script to call the class method &lt;code>Socialinvestigator::HammerOfTheGods.start( ARGV )&lt;/code>, which passes in the command like arguments into the Thor base class. These arguments are parsed, and Thor looks for public method on our class, with the right number of arguments, to run when passed on the command line.&lt;/p>
&lt;p>Running it with no arguments will print out a list of all the commands available. In our case, only the build in &lt;code>help&lt;/code> command, and our &lt;code>hello&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator
Commands:
socialinvestigator hello NAME &lt;span class="c1"># This will greet you&lt;/span>
socialinvestigator &lt;span class="nb">help&lt;/span> &lt;span class="o">[&lt;/span>COMMAND&lt;span class="o">]&lt;/span> &lt;span class="c1"># Describe available commands or one specific command&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets try running our command with the wrong number of arguments, &lt;em>i.e. none&lt;/em>. Here it will print out the short usage of the command that we specified with the &lt;code>desc&lt;/code> DSL.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator hello
ERROR: &lt;span class="s2">&amp;#34;socialinvestigator hello&amp;#34;&lt;/span> was called with no arguments
Usage: &lt;span class="s2">&amp;#34;socialinvestigator hello NAME&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The built in help command will bring out usage information for the method using the &lt;code>long_desc&lt;/code> if available and the regular description if not. These are optional but why not, right? Notice also how it&amp;rsquo;s smart enough to figure out the command name, in this case &lt;code>socialinvestigator&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator &lt;span class="nb">help&lt;/span> hello
Usage:
socialinvestigator hello NAME
Options:
&lt;span class="o">[&lt;/span>--upcase&lt;span class="o">=&lt;/span>UPCASE&lt;span class="o">]&lt;/span>
Description:
&lt;span class="sb">`&lt;/span>hello NAME&lt;span class="sb">`&lt;/span> will print out a message to the person of your choosing.
Brian Kernighan actually wrote the first &lt;span class="s2">&amp;#34;Hello, World!&amp;#34;&lt;/span> program as part
of the documentation &lt;span class="k">for&lt;/span> the BCPL programming language developed
by Martin Richards. BCPL was used &lt;span class="k">while&lt;/span> C was being developed at
Bell Labs a few years before the publication of Kernighan and Ritchie&lt;span class="err">&amp;#39;&lt;/span>s
C book in 1972.
http://stackoverflow.com/a/12785204
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets now run the command as it was meant to be:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator hello world
Hello, world
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And when passing in an optional tag:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator hello world --upcase
HELLO, WORLD
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="multi-thor">Multi-Thor&lt;/h2>
&lt;p>You can also mount Thor classes inside of other ones. This is handy because generally you want a few top level functions that do broad sweeping things, and then many more very specific method that do fiddly things with an API that you don&amp;rsquo;t often use.&lt;/p>
&lt;p>This is done with the &lt;code>subcommand&lt;/code> method. Inside of &lt;code>lib/socialinvestigator/cli.rb&lt;/code> lets add the lines in the &lt;code>HammerOfTheGods&lt;/code> class:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;thor&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;socialinvestigator/cli/hn&amp;#39;&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">Socialinvestigator&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">HammerOfTheGods&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Thor&lt;/span>
&lt;span class="o">[...]&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;hn COMMANDS&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Hacker News Control Module&amp;#34;&lt;/span>
&lt;span class="n">subcommand&lt;/span> &lt;span class="s2">&amp;#34;hn&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="no">Socialinvestigator&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">CLI&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Hn&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now lets create that new file &lt;code>lib/socialinvestigator/cli/hn.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">module&lt;/span> &lt;span class="nn">Socialinvestigator&lt;/span>
&lt;span class="k">module&lt;/span> &lt;span class="nn">CLI&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Hn&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Thor&lt;/span>
&lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;search URL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Search hn.algolia.com for a url mentioned on Hackernews&amp;#34;&lt;/span>
&lt;span class="n">option&lt;/span> &lt;span class="ss">:tags&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">search&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Looks like you are looking for &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> with tags &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:tags&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we can now see what we have:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator
Commands:
socialinvestigator hello NAME &lt;span class="c1"># This will greet you&lt;/span>
socialinvestigator &lt;span class="nb">help&lt;/span> &lt;span class="o">[&lt;/span>COMMAND&lt;span class="o">]&lt;/span> &lt;span class="c1"># Describe available commands or one specific command&lt;/span>
socialinvestigator hn COMMANDS &lt;span class="c1"># Hacker News Control Module&lt;/span>
$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator &lt;span class="nb">help&lt;/span> hn
Commands:
socialinvestigator hn &lt;span class="nb">help&lt;/span> &lt;span class="o">[&lt;/span>COMMAND&lt;span class="o">]&lt;/span> &lt;span class="c1"># Describe subcommands or one specific subcommand&lt;/span>
socialinvestigator hn search URL &lt;span class="c1"># Search hn.algolia.com for a url mentioned on Hackernews&lt;/span>
$ bundle &lt;span class="nb">exec&lt;/span> bin/socialinvestigator hn search http://google.com --tags post
Looks like you are looking &lt;span class="k">for&lt;/span> http://google.com with tags post
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="api-interlude">API Interlude&lt;/h2>
&lt;p>I wrote a bunch more code and then &lt;em>&lt;a href="https://github.com/sublimeguile/socialinvestigator">checked it in to github&lt;/a>&lt;/em>.&lt;/p>
&lt;hr>
&lt;h2 id="getting-the-gem-out-there-build-install-release">Getting the gem out there: Build install release&lt;/h2>
&lt;p>In order to install the gem, we need to build it:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a gem in the &lt;code>pkg&lt;/code> directory. The version, in our case, is specified in &lt;code>lib/socialinvestigator/version.rb&lt;/code> and will need to bump it up everytime we push a release out.&lt;/p>
&lt;p>Lets install the gem locally, and see if we can access what we need ourside of the working directory:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This takes the gem located in &lt;code>pkg&lt;/code> and installs it as part of our local gem set. Now we can type anywhere on our system:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ socialinvestigator hn search willschenk.com/how-to-track-your-coworkers
&lt;span class="m">1&lt;/span> Hits
How to track your coworkers – Simple passive network surveillance
http://willschenk.com/how-to-track-your-coworkers
&lt;span class="m">40&lt;/span> points
&lt;span class="m">18&lt;/span> comments
https://news.ycombinator.com/item?id&lt;span class="o">=&lt;/span>&lt;span class="m">8541102&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now lets release it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">$ rake release
socialinvestigator 0.0.1 built to pkg/socialinvestigator-0.0.1.gem.
Tagged v0.0.1.
Pushed git commits and tags.
Pushed socialinvestigator 0.0.1 to rubygems.org.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command tags the repo, pushes the commits and tags onto github, and then pushes the code to rubygems.org, where it gets its &lt;a href="http://rubygems.org/gems/socialinvestigator">own shiny page&lt;/a>.&lt;/p>
&lt;p>&lt;em>Image Credit: &lt;a href="https://www.flickr.com/photos/jdhancock/4756872724/in/photolist-7E5DeZ-8fmdwY">JD Hancock&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Making Yosemite Faster</title><link>https://willschenk.com/articles/2014/making-yosemite-faster/</link><pubDate>Fri, 07 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/making-yosemite-faster/</guid><description>&lt;p>Since I&amp;rsquo;ve upgraded to Yosemite my computer has gotten slower and slower. When it first boots up, it is it&amp;rsquo;s old fast self, but after a few hours everything slows down. Remember the days when you needed to restart your computer to keep it working well? I had forgotten, and I wasn&amp;rsquo;t really into remembering it.&lt;/p>
&lt;p>I also upgraded to &lt;a href="http://airmailapp.com">Airmail 2&lt;/a>. I get a ton of email and it used it be a lot faster than using Mail.app, but now I&amp;rsquo;m typing ahead of what the program can handle and it was driving me crazy. My machine is less than a year old and it&amp;rsquo;s basically maxed out, so its preposterous to think that it was the hardware!&lt;/p>
&lt;p>The only evidence I could find was that the &lt;code>WindowServer&lt;/code> process was taking up more CPU as time went on. WindowServer is the part of OSX that is responsible for drawing the display. There seems to be something wrong with it in the current build, and there&amp;rsquo;s something about Airmail&amp;rsquo;s awesomeness that is &lt;a href="https://airmail.tenderapp.com/help/discussions/airmail-beta-259/46-windowserver-40-cpu-os-x-yosemite-becomes-sluggish">exacerbating the problem&lt;/a>.&lt;/p>
&lt;h2 id="reduce-transparency">Reduce Transparency&lt;/h2>
&lt;p>There are two things to do to fix this. First go to &lt;em>System Preferences &amp;gt; Accessibility&lt;/em> and select &lt;em>Reduce Transparency&lt;/em>:&lt;/p>
&lt;img src="Accessibility_large.jpg" class="img-fluid">
&lt;p>Transparency is most noticeable in the menu bar and window titles. It&amp;rsquo;s a nice effect, but this option will go away. This matter less than you think, because instead of staring at the pretty pictures while you are waiting switching between windows, you&amp;rsquo;ll just be &lt;em>doing what you intended to do.&lt;/em>&lt;/p>
&lt;h2 id="displays-have-separate-spaces">Displays have separate spaces&lt;/h2>
&lt;p>Then go to &lt;em>System Preferences &amp;gt; Mission Control&lt;/em> and turn off &lt;em>Displays have separate Spaces&lt;/em>:&lt;/p>
&lt;img src="Mission_Control_large.jpg" class="img-fluid">
&lt;p>You&amp;rsquo;ll need to logout and log back in for the changes to take effect. If you have an external monitor plugged in this will make it into more of a mirrored effect. But it&amp;rsquo;s less memory for the WindowServer to have to deal with but frankly, for this build, it seems like the WindowServer is in over its head.&lt;/p>
&lt;p>&lt;em>Image source: &lt;a href="https://www.flickr.com/photos/enfocalafoca/10281990664/in/photolist-bemZsr-eTiVKj-7mHDny-9Dy4ax-oCTxUN-6ADKkQ-gEzTB7-9JVCCh-9VBzew-e6drjv-81i16E-dZELmS-9W3aAW-fxk247-bUjtvd-5B9RWQ-haJUc-7PGVs-2bhCy-hiECct-9TdDF5-dxPUZS-k4Cqht-Eybma-dfUT1w-nHgvih-fimRJN-kgE-eTifLY-koWW78-9Mi2sf-fCy2Gj-oR5RdZ-aivjjh-YKHt3-nSa2xB-9KrnK7-j3hzch-7Ry3aQ-Be2KQ-7uyD2-aqbv5m-84hTGU-88gVVn-7yf7Ao-nYeUkp-du6QC8-duy9pH-dGMeu2-2ve91">Jose Hidalgo&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Field of Dreams is 25 years old and hasn't aged well</title><link>https://willschenk.com/articles/2014/field-of-dreams-is-25-years-old-and-hasn-t-aged-well/</link><pubDate>Wed, 05 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/field-of-dreams-is-25-years-old-and-hasn-t-aged-well/</guid><description>&lt;p>&lt;img src="fod_medium.jpg" class="float-left mr-2">I&amp;rsquo;m sure you all remember the movie. A man whose normal life is starting to fall apart. He&amp;rsquo;s got the wife, family, mortgage and it&amp;rsquo;s both not enough and slipping away. He needs to do something, something to make him feel alive. And since it was that era of Hollywood film making, he&amp;rsquo;s also got plenty of daddy issues he&amp;rsquo;s working through. He becomes seized by a vision, caught in the grip of an &lt;em>idée fixe&lt;/em> that he needs to go build something that everyone around him thinks is preposterous.&lt;/p>
&lt;p>The movie&amp;rsquo;s tagline is: &lt;em>If you believe the impossible, the incredible can come true.&lt;/em>&lt;/p>
&lt;p>And so he takes a chunk of his farm, and turns it into a baseball diamond for a team that doesn&amp;rsquo;t exist, probably is a delusion brought on by stress and desperation, and that no one is asking to see.&lt;/p>
&lt;p>If you haven&amp;rsquo;t seen this movie in a while and have fuzzy nostalgic memories of seeing it as a kid, I&amp;rsquo;d hold off on seeing it again to rekindle the childhood magic. The movie, as a movie, doesn&amp;rsquo;t really hold up well and unless you are interested in the late 80s from a cultural anthropology perspective, don&amp;rsquo;t ruin the memory. (Unlike, say &lt;em>Bull Durham&lt;/em> or &lt;em>The Princess Bride&lt;/em>, which are actually as good as you remember.)&lt;/p>
&lt;p>There&amp;rsquo;s one thing that everyone remembers about this movie. If there&amp;rsquo;s a reason why I still had fond memories of this movie, it was the signature quote:&lt;/p>
&lt;blockquote class="blockquote">If you build it, he will come.&lt;/blockquote>
&lt;p>In the face of the odds, clearly stacked against you, this phrase captured the emotional experience of &lt;em>keeping the faith&lt;/em> while doing something that wasn&amp;rsquo;t working and no one around was supporting. In that moment of pushing ahead to follow a dream that &lt;em>you can see so clearly&lt;/em>, and even your loved ones &lt;em>don&amp;rsquo;t really get it&lt;/em>, what keeps you going?&lt;/p>
&lt;p>The answer is &lt;strong>courage&lt;/strong>.&lt;/p>
&lt;blockquote class="blockquote">
&lt;p class="mb=0">Scientific progress is measured in units of courage, not intelligence.&lt;/p>
&lt;footer class="blockquote-footer">Paul Dirac&lt;/footer>
&lt;/blockquote>
&lt;p>In order to move forward, to make progress in spite of everything, for you to take you vision to the world, you need to be able to find something deep inside of yourself to keep going. Before things get better there are some dark times. Paul Graham calls it the &lt;em>Trough of Sorrow&lt;/em>. Figuring out how to navigate that emotional experience when you have doubts and are constantly second guessing yourself is major part of being an entrepreneur.&lt;/p>
&lt;hr>
&lt;h2 id="yeah-but-what-about-that-baseball-field-in-the-middle-of-a-corn-field">Yeah, but what about that baseball field in the middle of a corn field&lt;/h2>
&lt;p>Maybe the whole world thinks you are crazy. Or delusional. Maybe no one seems to know what you are talking about. You have a vision, and if you stick to it, if you actually do build the thing, maybe then all of the doubters, the critics who point out of the doer of deeds could have done it better, don&amp;rsquo;t matter. Hell, I still think that a 140-character &amp;ldquo;microblogging platform&amp;rdquo; makes no sense. That didn&amp;rsquo;t stop them, and they built it, and people came.&lt;/p>
&lt;p>People take the wrong moral from this story. The problem isn&amp;rsquo;t that people don&amp;rsquo;t actually persevere in the face of the odds, though that is difficult, is that people don&amp;rsquo;t have a way to hone in on a good idea. Or to jump start people using it. The Twitter folks started out in podcasting, and ended up in, well, whatever Twitter is.&lt;/p>
&lt;p>And check it: using up part of your capital building a baseball diamond for your imaginary friends is actually &lt;em>really stupid&lt;/em>. Everyone told him that it was a bad idea, they weren&amp;rsquo;t merely perplexed, they actually tried their damnest to get his attention to save him from his folly. &lt;em>If you build it, he will come&lt;/em> is magically inspirational, but magical thinking nonetheless.&lt;/p>
&lt;p>This is a myth that people believe. In the start up world, it shows up in thoughts like:&lt;/p>
&lt;ul>
&lt;li>If it just had one more feature, then it would work.&lt;/li>
&lt;li>The reason that we don&amp;rsquo;t have traction is because of a corner-case bug.&lt;/li>
&lt;li>It&amp;rsquo;s not that no one cares, is that it wasn&amp;rsquo;t built right.&lt;/li>
&lt;li>We&amp;rsquo;ll engineer our way out of this marketing and distribution problem.&lt;/li>
&lt;li>It&amp;rsquo;s &lt;em>merely marketing&lt;/em> and once it&amp;rsquo;s built we expect an overnight success.&lt;/li>
&lt;li>Sales is something for &lt;em>suits&lt;/em>, we&amp;rsquo;re doing the real work over here.&lt;/li>
&lt;li>(Sales snobbery in general.)&lt;/li>
&lt;li>Everything needs to be perfect, every bug is critical, and they need to be fixed all at once.&lt;/li>
&lt;li>It &lt;em>does&lt;/em> make sense, the entire world is actually wrong, it&amp;rsquo;s time to double down.&lt;/li>
&lt;/ul>
&lt;p>In other words, &lt;em>if you believe the impossible, you have a problem.&lt;/em> You probably aren&amp;rsquo;t a misunderstood Artiste or the next Steve Jobs. The answer is &lt;em>it simply doesn&amp;rsquo;t make sense&lt;/em>. Maybe it&amp;rsquo;s dumb, or maybe it&amp;rsquo;s ahead of it&amp;rsquo;s time. After all, while Twitter may have abandoned podcasting, &lt;a href="http://nymag.com/daily/intelligencer/2014/10/whats-behind-the-great-podcast-renaissance.html">podcasting is now all the rage&lt;/a>.&lt;/p>
&lt;p>There&amp;rsquo;s a dark side to this courage-in-the-face-of-adversity. It&amp;rsquo;s part of being in the grip of an &lt;em>idée fixe&lt;/em>, where you only hear what you want to hear and filter out everything that is in any way threatening.&lt;/p>
&lt;h2 id="does-the-world-need-your-idea">Does the world need your idea&lt;/h2>
&lt;p>You should sit down with your &lt;em>idée fixe&lt;/em> and have a long talk. What are you actually trying to do with your life? Do you really have a problem that&amp;rsquo;s worth solving? Are you actually trying to do anything worth doing?&lt;/p>
&lt;p>A lot of aspiring entrepreneurs fall in love with their idea and it hurts them when they need to make a business. We say that they fall in love with the product, and don&amp;rsquo;t understand what it means to start a business.&lt;/p>
&lt;blockquote class="blockquote">
&lt;p class="mb=0">Build a better mouse trap, and the world will beat a path to your door&lt;/p>
&lt;footer class="blockquote-footer">not Ralph Waldo Emerson, who is actually awesome but has this dumb-ass platitude associated with his name&lt;/footer>
&lt;/blockquote>
&lt;p>The idea is important, a necessary but not sufficient component of a successful enterprise. How does the idea fit in to the rest of the world? What is it that people actually would like? How would they ever even find out about it, really? If it&amp;rsquo;s not what people want, or not what they need, well, maybe your idea has a happier existence as a very elaborate day-dream. Before you spin up the manufacturing plant, you should check in with some mice before running with that platitude:&lt;/p>
&lt;blockquote class="blockquote">
&lt;p>So with all of these people trying to invent a better mousetrap, the dirty secret of trapping mice is mice are really easy to catch. That's why every inventor thinks that he can do it. Catching a mouse is basically playing against a casino where you always win.&lt;/p>
&lt;p>[...]&lt;p>
&lt;p>The regular, old-fashioned, cheap, little mousetrap, Andy says, will usually catch the mouse in 24 to 48 hours. It will kill it 88% of the time. Other traps that aren't much more expensive have 100% lethality. Mice are easy to kill because mice, unlike rats, are incredibly inquisitive animals.&lt;/p>
&lt;p>[...]&lt;p>
&lt;p class="mb-0">So the problem for the mousetrap inventor is the world doesn't need a better mousetrap. You know that old saying, "Build a better mousetrap and the world will beat its way to your door?" Not true. Andy makes a traditional mousetrap that sells two for $0.99. It does the job just fine. But most inventors never understand this.&lt;/p>
&lt;footer class="blockquote-footer">Ira Glass, &lt;a href="http://www.thisamericanlife.org/radio-archives/episode/366/transcript">This America Life #366&lt;/a>&lt;/footer>
&lt;/blockquote>
&lt;hr>
&lt;h1 id="the-long-game-not-the-long-con">The Long Game, not the Long Con&lt;/h1>
&lt;p>As an aside, I&amp;rsquo;m not really sure that I&amp;rsquo;m smart enough to read Ralph Waldo Emerson, at least the real thing and not the &amp;ldquo;well known quotes&amp;rdquo;. It&amp;rsquo;s all too damn subtle and I find myself drifting off. So many rhythmic sentences that just go on and on, and on, and so on. Nietzsche I&amp;rsquo;m fascinated by, and I&amp;rsquo;ve read most of his books multiple times. Those I can follow. I find something new in them every time. In the beginning of his writing, it&amp;rsquo;s clear that Emerson&amp;rsquo;s essays blew Nietzsche&amp;rsquo;s socks off. He kept his ragged, annotated, school issued copy of the essays with him throughout his life. Based on this alone I&amp;rsquo;m sure good old &lt;em>Waldo&lt;/em> deserves his place in the pantheon but in this go-go-go world I just can&amp;rsquo;t get a grasp on it.&lt;/p>
&lt;p>The actual Emerson quote that the mousetrap thing started our as is:&lt;/p>
&lt;blockquote class="blockquote">If a man has good corn or wood, or boards, or pigs, to sell, or can make better chairs or knives, crucibles or church organs, than anybody else, you will find a broad hard-beaten road to his house, though it be in the woods.&lt;/blockquote>
&lt;p>Such poetry! Such rhythm! Such circumlocution! Yes yes, totally! Not precisely sure what I can take from Emerson here, as like &lt;em>an action item&lt;/em>, but I&amp;rsquo;m certainly jazzed up about it! Just like &lt;em>If you build it, he will come.&lt;/em>&lt;/p>
&lt;p>Compare this nineteenth century poetry to our modern Paul Graham&amp;rsquo;s &lt;a href="http://paulgraham.com/good.html">&lt;em>Build something people want.&lt;/em>&lt;/a> It&amp;rsquo;s not like they are saying anything different (though it&amp;rsquo;s certainly said differently) but one has these emotional overtones that strike a chord right when things are the bleakest. When confronted between the dream and the reality, stuck spinning somewhere between the dream and the soul crushing contingency of the market, how do you move forward?&lt;/p>
&lt;p>Sometimes the problem is the bleakness, where you need to hold on to something for psychological reasons. Sometimes the problem is bullheaded stupidity, a type of hubris where you stubbornly cling to a mistaken belief about how the world works. And in the later cases, using the emotional techniques to keep going is actually hurting you.&lt;/p>
&lt;p>Because your emotions are probably not wrong. They are there for a reason. They&amp;rsquo;ve been honed by a jillion years of evolution (or instilled by a benevolent creator; the net is the same) and if there&amp;rsquo;s something wrong on a gut level you should take a cold hard look at what it is that you are doing. If you&amp;rsquo;re building something as a get rich quick scheme, because you have some sort of &lt;em>angle&lt;/em> any change of the situation will topple the whole scheme. A fundamental trait of an Entrepreneur is to look at the world and see in it&amp;rsquo;s problems an opportunity, and while that has an element of being bold and self-confident enough to say &amp;ldquo;I can do this better&amp;rdquo;, it&amp;rsquo;s not a &lt;em>uber-menchean&lt;/em> dismissal of everyone else. It&amp;rsquo;s better to be clear on your vision and be able to adapt to feedback.&lt;/p>
&lt;p>This is what a lot of startups struggle with. On the one hand, you need to start with a clear idea and vision of what you want to do. On the other hand, you need to start small, see what works, try things out and &lt;em>be able to change your mind as you know more&lt;/em>. But how can you change your mind enough to make it work while also having enough consistency of purpose to make it work?&lt;/p>
&lt;iframe width="100%" style="max-width: 560px" height="315" src="//www.youtube.com/embed/APx2yFA0-B4" frameborder="0" allowfullscreen>&lt;/iframe>
_Honestly, I just wanted an excuse to embed this video_
&lt;h2 id="i-dont-know-the-answer">I dont know the answer&lt;/h2>
&lt;p>And I don&amp;rsquo;t think that Field of Dreams has it either. And blindly absorbing the myth of &lt;em>if you build it, he will come&lt;/em> is overly simplistic and only works in heart-warming sports memoirs. Which is too bad because James Earl Jones was great in it, and it was some vintage Kevin Costner.&lt;/p>
&lt;p>Still, there&amp;rsquo;s always Iowa.&lt;/p>
&lt;blockquote>
&lt;p>John Kinsella: Is this heaven?
Ray Kinsella: It&amp;rsquo;s Iowa.&lt;/p>
&lt;/blockquote>
&lt;img src="iowa.jpg" class="img-fluid">
&lt;p>(Image source: &lt;a href="https://www.flickr.com/photos/54159370@N08/6010329940/in/photolist-aa7vGh-5YUB2z-8i5gyw-8XdesP-4r2QNd-tzwz2-2u3Zn-9tVv1A-gT25Tz-b6ixTD-746UmW-aP33La-5WkwXU-4NEa39-6iGa2w-oxpiPX-9cYvE8-hUcRsF-3Wgmz-bzLcHH-a8h1SU-nT93SB-cdmedf-hT1Xgc-9d2BsG-8u5mxh-8DCzJo-47nSFq-fs6j6i-dXvgqN-b43D94-fQoepV-7fADo-nrE8uT-8sABRF-8rG36o-aE7KjU-hUe2it-hjinhV-6umECH-oJfujc-cpMtrS-i7WL3d-aE7pVu-pyZLUw-7AzhL7-9992tA-nf2TZx-32can-8rnGgp">keeve99a&lt;/a> )&lt;/p>
&lt;hr>
&lt;h2 id="footnotes">Footnotes&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>I originally thought that the Paul Dirac quote was from Richard Hamming, whose talk &lt;a href="http://www.paulgraham.com/hamming.html">You and Your Research&lt;/a> has really stuck with me since I first read it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Here&amp;rsquo;s a whole journal exploring the &lt;a href="http://libarts.wsu.edu/english/Journals/ESQ/emersonandnietzche.html">influence of Emerson on Nietzsche&lt;/a>, which has nothing to do with startups, but is interesting anyway.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Bootstrap: Advanced Grid Tricks</title><link>https://willschenk.com/articles/2014/bootstrap-advanced-grid-tricks/</link><pubDate>Mon, 03 Nov 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/bootstrap-advanced-grid-tricks/</guid><description>&lt;p>We are a big fan of &lt;a href="http://getbootstrap.com/">Bootstrap&lt;/a> here at &lt;a href="http://happyfuncorp.com/">HappyFunCorp&lt;/a>. While there are some arguments to be made if Bootstrap in particular is all that, or if &lt;a href="http://foundation.zurb.com/">Foundation&lt;/a> is better for a given thing, its clear that starting with some sort of CSS framework is smarter than trying to roll everything yourself. [1]&lt;/p>
&lt;p>There are three major complaints with using bootstrap.&lt;/p>
&lt;ol>
&lt;li>All of the sites look the same.&lt;/li>
&lt;li>There are so many classes in the HTML where they don&amp;rsquo;t strictly belong&lt;/li>
&lt;li>It&amp;rsquo;s a whole bunch of stuff that you don&amp;rsquo;t need.&lt;/li>
&lt;/ol>
&lt;p>These are all a reflection of people not really pulling Bootstrap apart enough to understand how to use it as a tool. Sticking a &lt;a href="http://www.bootstrapcdn.com">link to bootstrapcdn&lt;/a> and using standard classes works until it doesn&amp;rsquo;t, and using the &lt;code>LESS&lt;/code> or &lt;code>SASS&lt;/code> version directly gives you a lot more power. You can customize things using variables to make them look the way that you want without fighting the framework. You can get rid of the &amp;ldquo;unnecessary&amp;rdquo; classes to give it some &lt;em>semantic loving&lt;/em>. And, if you so choose, you can only include the parts of it that you want.&lt;/p>
&lt;p>We prefer &lt;code>SASS&lt;/code>, so let&amp;rsquo;s look at how you would lay out a site like this using &lt;a href="https://github.com/twbs/bootstrap-sass">bootstrap-sass&lt;/a>. (At the level that we will be speaking about it, it&amp;rsquo;s the same when using the &lt;code>LESS&lt;/code> version.)&lt;/p>
&lt;img src="lg_grid_forum_large.jpg" class="img-fluid">
&lt;h1 id="the-twelve-column-grid-how-does-it-work">The Twelve Column Grid: How does it work?&lt;/h1>
&lt;p>This design is laid out nicely using the a grid of 12 columns. There&amp;rsquo;s a 2 column side bar, and then a 10 column main content bar with columns inside of that. Bootstrap has a 12 column grid by default. Should be easy right? Read on.&lt;/p>
&lt;p>The way that the Bootstrap grid works to create a set of &lt;code>.col-*&lt;/code> classes, for each column width and each device size. The width is calculated as a percentage, &lt;code>$column / $grid-columns&lt;/code>, and they are &lt;code>float: left&lt;/code> with the left and right margin of &lt;code>$gutter-width / 2&lt;/code>. The width property is basically wrapped in a media query, so that when the view point is out of bounds then it defaults to full width, and the &lt;em>columns become rows&lt;/em>.&lt;/p>
&lt;p>In order for the margins to work on the beginning and end of the rows, you need to wrap everything in a &lt;code>.container&lt;/code> class, put &lt;code>.row&lt;/code>s in side of that, and then put in your content using one of the &lt;code>.col-*&lt;/code> classes to represent columns of certain widths and certain breakpoints. The &lt;code>.row&lt;/code> class defines both a new row as well as a &lt;em>nested grid&lt;/em>. There is negative margin (of &lt;code>$gutter-width / 2&lt;/code> naturally) to make the first and last column line up correctly, and every time you have a &lt;code>.row&lt;/code> the &amp;ldquo;percentage width&amp;rdquo; is effectively recalculated based upon that container.&lt;/p>
&lt;p>The post &lt;a href="http://www.helloerik.com/the-subtle-magic-behind-why-the-bootstrap-3-grid-works">The Subtle Magic Behind Why the Bootstrap 3 Grid Works&lt;/a> has a great visual walk through of what that means.&lt;/p>
&lt;p>In the example above, the over all structure looks like one really big &lt;code>row&lt;/code>, with a &lt;code>col-*-2&lt;/code> side bar, and a &lt;code>col-*-10&lt;/code> main content area. The sidebar height is pretty independent of the content height, so there&amp;rsquo;s no way to split up the content into multiple rows. Inside of the main content area, we want to have a row of &lt;code>col-*-10&lt;/code> and then a bunch of &lt;code>col-*-2&lt;/code> and &lt;code>col-*-8&lt;/code> that match up to the overall grid of the page. Lower down on the page there are &lt;code>col-*-3&lt;/code>, &lt;code>col-*-4&lt;/code> and a &lt;code>col-*-3&lt;/code>.&lt;/p>
&lt;p>The problem is that if we want to have the overall page be 2 - 10, we&amp;rsquo;ll need to define a &lt;code>row&lt;/code> inside of the &amp;ldquo;content&amp;rdquo; area of the site. But if we define a row inside of the huge, page spanning &lt;code>col-*-10&lt;/code> that represents the content area, that will give us a nested grid of twelve columns. And so you&amp;rsquo;ll end up with a wonky 14 column grid, where the &amp;ldquo;first 2 columns&amp;rdquo; are one size, and the other &amp;ldquo;12&amp;rdquo; columns are another size. In other words, the nest grid won&amp;rsquo;t match up with the &amp;ldquo;page grid&amp;rdquo; that we want to lay things out on.&lt;/p>
&lt;p>Here&amp;rsquo;s the outline of what we want to make right, but isn&amp;rsquo;t:&lt;/p>
&lt;pre>&lt;code class="language-haml" data-lang="haml">.container
.row
.col-sm-2
Sidebar content
.col-sm-10
.row
.col-sm-2
avatars and icons
.col-sm-8
comment text
&lt;/code>&lt;/pre>&lt;p>Lets take a look at how we want it to look like, and a couple of different variants. The first row here is the &amp;ldquo;page grid&amp;rdquo; version, which we want to mimic in our design. The three rows below it are attempts to make the bootstrap grid work using the built in classes. None of them really match up:&lt;/p>
&lt;img src="grid___custom___Bootstrap_Sass_Examples_large.jpg" class="img-fluid">
&lt;p>The nest grid doesn&amp;rsquo;t line up with the outer page grid.&lt;/p>
&lt;ol>
&lt;li>Using a nested row, with col-sm-2 and col-sm-8 doesn&amp;rsquo;t work because we are in a 12 column nested grid and so the col-sm-2 is too small, and the col-sm-8 doesn&amp;rsquo;t go to the end of the row.&lt;/li>
&lt;li>The first way of &amp;ldquo;making it add up to 12&amp;rdquo;, 2 + 10, leaves the &amp;ldquo;avatar&amp;rdquo; row too narrow.&lt;/li>
&lt;li>The second way, 3 + 9, leaves the avatar row too wide.&lt;/li>
&lt;/ol>
&lt;p>Maybe for your needs #2 or #3 is good enough. And indeed, if you stick with the stock version of the bootstrap css, these are your two choices. But if we want to make it work exactly right, we&amp;rsquo;ll need to dig deeper into the way that the column classes are defined, and use the Bootstrap mixins to define our layout using &lt;em>semantic classes&lt;/em>.&lt;/p>
&lt;p>This will solve two problems:&lt;/p>
&lt;ol>
&lt;li>We will be using semantic CSS classes so our HTML is cleaner.&lt;/li>
&lt;li>We will actually be able to lay out the page correctly.&lt;/li>
&lt;/ol>
&lt;p>Let&amp;rsquo;s go a little deeper.&lt;/p>
&lt;h2 id="how-col--classes-are-defined">How col- classes are defined&lt;/h2>
&lt;p>When you load up bootstrap, it uses default variables that you can override to build the the CSS. There are many different things that you can tweak, more than are listed out on the &lt;a href="http://getbootstrap.com/customize/">bootstrap customization page&lt;/a>, so learning how to navigate and read the source files is pretty important. The key ones for the grid are:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Variable&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>$grid-columns&lt;/code>&lt;/td>
&lt;td>number of grid columns&lt;/td>
&lt;td>12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$grid-gutter-width&lt;/code>&lt;/td>
&lt;td>space between column content&lt;/td>
&lt;td>30px&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$screen-xs-min&lt;/code>&lt;/td>
&lt;td>xs cut off&lt;/td>
&lt;td>480px&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$screen-sm-min&lt;/code>&lt;/td>
&lt;td>sm cut off&lt;/td>
&lt;td>768px&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$screen-md-min&lt;/code>&lt;/td>
&lt;td>md cut off&lt;/td>
&lt;td>992px&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$screen-lg-min&lt;/code>&lt;/td>
&lt;td>lg cut off&lt;/td>
&lt;td>1200px&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>The main way that bootstrap handles responsive design in the automatic layout system is by &lt;em>collapsing columns&lt;/em>. If the view port is larger than a specific size (as defined in &lt;code>$screen-xs-min&lt;/code>, &lt;code>$screen-sm-min&lt;/code> etc) then the &lt;code>col-&lt;/code> classes have a &lt;code>width&lt;/code> specified as a percentage. If the viewpoint is smaller than this, then there is no &lt;code>width&lt;/code> and it&amp;rsquo;s &lt;code>100%&lt;/code>. In that case, if the browser is smaller than this width it displays the &amp;ldquo;columns&amp;rdquo; on top of each other. These cut off points are defined as &lt;code>$screen-*-min&lt;/code>.&lt;/p>
&lt;p>There are 4 different column &lt;em>types&lt;/em>, each with their own prefix &lt;code>col-xs-&lt;/code>, &lt;code>col-sm-&lt;/code>, &lt;code>col-md-&lt;/code>, and &lt;code>col-lg-&lt;/code>. This means &amp;ldquo;I will be a column on devices this size or bigger, otherwise I&amp;rsquo;m going to be a &amp;lsquo;row&amp;rsquo;.&amp;rdquo;&lt;/p>
&lt;p>These classes work using media queries, and they can be layered: you can also specify multiple column types for a given element. Perhaps on a medium screen you want it three across, while on a small screen two across? &lt;code>&amp;lt;div class=&amp;quot;col-md-4 col-sm-6&amp;quot;&amp;gt;&lt;/code>. When specifying classes on the DOM the order of the &lt;em>-md-&lt;/em> and &lt;em>-sm-&lt;/em> doesn&amp;rsquo;t really matter, but when using the mixins it does.&lt;/p>
&lt;p>If you want a particular element to always be laid out horizontally, specify &lt;code>col-xs-&lt;/code>. In practice, start out with using &lt;code>col-sm-&lt;/code> which makes it a column for devices &amp;gt;768px and rows for smaller devices.&lt;/p>
&lt;h2 id="using-semantic-classes">Using semantic classes&lt;/h2>
&lt;p>How do we translate from the bootstrap classes to something semantic? Let&amp;rsquo;s start first with the bootstrap classes, and then see how to make them semantic.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-sm-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Sidebar
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-sm-10&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-sm-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
avatar area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-sm-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
content area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;row&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-sm-2&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
avatar area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;col-sm-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
content area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets replace the bootstrap classes with something more meaningful, and then write some &lt;code>scss&lt;/code> to have it use the class properties that are defined in bootstrap:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;main_body&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sidebar&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Sidebar
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;main_content&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;avatars&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
avatar area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
content area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;avatars&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
avatar area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
content area
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are two different ways to pull properties from one class to another in SASS. The straightforward was is to have one class &lt;code>@extend&lt;/code> another. The plus side of this is that you don&amp;rsquo;t need to do anything special to make it work, SASS can just figure it out on it&amp;rsquo;s own and when you are writing CSS you don&amp;rsquo;t need to do anything differently. The downside is that if you have a whole set of class properties that need to work together, for example if you are using media queries to change things on different sizes, &lt;code>@extend&lt;/code> may only get you part of what you want.&lt;/p>
&lt;p>Lets use the extend method to turn the above into what we want.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nc">.main_body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@extend&lt;/span> &lt;span class="nc">.row&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nc">.sidebar&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@extend&lt;/span> &lt;span class="nc">.col-sm-2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.main_content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@extend&lt;/span> &lt;span class="nc">.col-sm-10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.item&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@extend&lt;/span> &lt;span class="nc">.row&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nc">.avatars&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@extend&lt;/span> &lt;span class="nc">.col-sm-2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@extend&lt;/span> &lt;span class="nc">.col-sm-10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point, the bootstrap-classes-in-the-html should render the same as the semantic-classes-with-sass-css version. But it&amp;rsquo;s still not what we want.&lt;/p>
&lt;h2 id="mixins">Mixins&lt;/h2>
&lt;p>You can look at the &lt;a href="https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/mixins/_grid.scss">source of the Bootstrap-Sass mixins&lt;/a>, which is what we will be using to make the layout. If you want to understand how the normal grid classes are generated, look at &lt;a href="https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/_grid.scss">the main grid.scss file&lt;/a> and trace the &lt;code>make-grid&lt;/code> method. This follows a slightly different code path than the mixins that we will be using directly, but is helpful to really understand what is going on under the hood.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Mixin&lt;/th>
&lt;th>&amp;ldquo;Standard Class&amp;rdquo;&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>@mixin container-fixed()&lt;/td>
&lt;td>&lt;code>.container&lt;/code>&lt;/td>
&lt;td>Creates a &lt;code>.container&lt;/code>-type class&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@mixin make-row()&lt;/td>
&lt;td>&lt;code>.row&lt;/code>&lt;/td>
&lt;td>Creates a &lt;code>.row&lt;/code>-type class&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@mixin make-xs-column($columns)&lt;/td>
&lt;td>&lt;code>col-xs-$columns&lt;/code>&lt;/td>
&lt;td>Creates &lt;code>col-xs-&lt;/code>-type column of a specific width&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@mixin make-sm-column($columns)&lt;/td>
&lt;td>&lt;code>col-sm-$columns&lt;/code>&lt;/td>
&lt;td>Creates &lt;code>col-sm-&lt;/code>-type column of a specific width&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@mixin make-md-column($columns)&lt;/td>
&lt;td>&lt;code>col-md-$columns&lt;/code>&lt;/td>
&lt;td>Creates &lt;code>col-md-&lt;/code>-type column of a specific width&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@mixin make-lg-column($columns)&lt;/td>
&lt;td>&lt;code>col-lg-$columns&lt;/code>&lt;/td>
&lt;td>Creates &lt;code>col-lg-&lt;/code>-type column of a specific width&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>(&lt;em>There are also mixins for &lt;code>-offset&lt;/code>, &lt;code>-pull&lt;/code>, and &lt;code>-push&lt;/code> variants, you can just layer as many in as you need.&lt;/em>)&lt;/p>
&lt;p>The format in your SASS will look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nc">.main_body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-row&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>@include&lt;/code> method is actually calling a SASS function to generate the properties. We&amp;rsquo;re going to use this to property up our semantic classes:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nc">.main_body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-row&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nc">.sidebar&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.main_content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.item&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-row&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nc">.avatars&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>OK, so this is like our first example above, and it looks like this:&lt;/p>
&lt;img src="grid___custom___Bootstrap_Sass_Examples_large.jpg" class="img-fluid">
&lt;p>So we&amp;rsquo;ve managed to clean up the class names, but we still don&amp;rsquo;t have it working.&lt;/p>
&lt;h2 id="redefining-grid-columns">Redefining grid-columns&lt;/h2>
&lt;p>The trick here is to realize that SCSS is actually evaluated top down, and by the time it gets to our code the previous properties have already been generated. If we change &lt;code>$grid-columns&lt;/code> to &lt;code>10&lt;/code> above the &lt;code>.item&lt;/code> definition and then set it back to &lt;code>12&lt;/code> immediately below, when the functions are called they will recalculate the column width percentages. Like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nc">.main_body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-row&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nc">.sidebar&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.main_content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nv">$grid-columns&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nc">.item&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-row&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nc">.avatars&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.content&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nv">$grid-columns&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which &lt;em>finally&lt;/em> yields:&lt;/p>
&lt;img src="grid___custom___Bootstrap_Sass_Examples_large.jpg" class="img-fluid">
&lt;p>&lt;em>It&amp;rsquo;s almost too easy!&lt;/em>&lt;/p>
&lt;h2 id="ordering-includes">Ordering includes&lt;/h2>
&lt;p>The final thing to mention is that if you want to do something like &lt;code>&amp;lt;div class=&amp;quot;col-md-4 col-sm-6&amp;quot;&amp;gt;&lt;/code> using semantic CSS, you need to make sure that you order the &lt;code>@includes&lt;/code> from small to large to make sure that the correct media query gets triggered:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nc">.awesome-class&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-sm-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">@include&lt;/span>&lt;span class="nd"> make-md-column&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This translates into:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">awesome-class&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">min-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding-left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding-right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">min-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding-left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding-right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">media&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="nt">min-width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">768px&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">awesome-class&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">float&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">left&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">media&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="nt">min-width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">992px&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">awesome-class&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">float&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">left&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">33.3333333333&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you reverse the orders of the &lt;code>@includes&lt;/code>, then the order the of the media queries will be reversed in the CSS, and the &lt;code>col-md-4&lt;/code> would get shadowed. That&amp;rsquo;s why the order is important.&lt;/p>
&lt;h2 id="and-in-conclusion">and in conclusion&lt;/h2>
&lt;p>You need to know how to use your tools. Bootstrap is really a CSS framework that you can use to build your site, and using the SASS or LESS version lets you do almost anything you want. If you just use the standard compiled version, your site will look the same as everyone else&amp;rsquo;s (which is largely fine because it looks pretty good by default) and you will be constrained with what you can do (which is largely lame, having your tools dictate your design.)&lt;/p>
&lt;p>In someways, the documentation of Bootstrap is great,but it&amp;rsquo;s missing a larger, &lt;strong>how do you really use it in the real world&lt;/strong> point of view. This post is excerpted from a &lt;a href="http://bootstrap-sass.happyfuncorp.com/">Bootstrap-Sass book we are writing&lt;/a> for our &lt;a href="http://www.hfcacademy.com">Technology Academy&lt;/a> because we couldn&amp;rsquo;t find a good resource to really show people how to make things work with bootstrap.&lt;/p>
&lt;hr>
&lt;h3 id="footnotes">Footnotes&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>If you do want to roll everything yourself, you would do well to read this post by @fat about &lt;a href="https://medium.com/@fat/mediums-css-is-actually-pretty-fucking-good-b8e2a6c78b06">how fucking good Medium&amp;rsquo;s CSS is&lt;/a>. @fat is one of the authors of Bootstrap.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.helloerik.com/the-subtle-magic-behind-why-the-bootstrap-3-grid-works">The Subtle Magic Behind Why the Bootstrap 3 Grid Works&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>How to track your coworkers</title><link>https://willschenk.com/articles/2014/how-to-track-your-coworkers/</link><pubDate>Fri, 31 Oct 2014 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2014/how-to-track-your-coworkers/</guid><description>&lt;p>How much information do you bleed?&lt;/p>
&lt;p>Ever wonder who is else is using your network? Or,who has actually showed up at the office?&lt;/p>
&lt;h2 id="networking-primer">Networking primer&lt;/h2>
&lt;p>The simplest thing we can do to make this work is to check to see which devices have registered themselves on the network. As devices come and go, they connect automatically, so we will have a pretty good idea if people are there or not. Phones seem to attach and detach quite frequency, probably to conserve battery, so if we are want to answer the question &amp;ldquo;is so-and-so in the office&amp;rdquo; we&amp;rsquo;ll need to add additional logic to determine how far spaced the &amp;ldquo;sighting&amp;rdquo; events are to mean that the person has left the office, rather than the phone has gone to sleep.&lt;/p>
&lt;p>There are a couple of ways to do this. One is to log on you your router and look at the &lt;code>DHCP&lt;/code> routing tables to see which devices have leased an IP address. Have you looked at those router webpages though? Pretty gross. You&amp;rsquo;d need to do some scraping, something different for each of the router types, all together pretty gross.&lt;/p>
&lt;p>Another thing to consider is &lt;code>DNS multicast&lt;/code>, also called &lt;code>Bonjour&lt;/code> or zero-config networking. This is pretty much the standard now for services announcing themselves on the human-used networks. (Server rooms have fancier service discovery mechanisms.) If you want to find a printer, or someone else&amp;rsquo;s iTunes library it works great, but it doesn&amp;rsquo;t do much for phones.&lt;/p>
&lt;p>We are going to do this using ping. This is simple and works everywhere.&lt;/p>
&lt;h2 id="the-plan">The plan&lt;/h2>
&lt;p>The code below using &lt;code>ruby&lt;/code> and &lt;code>redis&lt;/code> to track which devices have been seen. You&amp;rsquo;ll need to have &lt;code>redis&lt;/code> installed and running for this code to work, but it should be easily portable to any Unix system, not just OSX. So if you have a &lt;code>RaspberryPI&lt;/code>laying around, it would be run to run it on there.&lt;/p>
&lt;p>This code does the following things:&lt;/p>
&lt;ol>
&lt;li>Find the local broadcast address. This is normally &lt;code>192.168.1.255&lt;/code> on home routers but could be anything.&lt;/li>
&lt;li>Send 4 pings to the broadcast address and listen for replies. It may take some time to return back,which is why we have multiple pings. Collect those IP addresses as a response.&lt;/li>
&lt;li>Do a reverse DNS lookup on those IP addresses, and mark them as seen in &lt;code>redis&lt;/code>.&lt;/li>
&lt;li>(Commented out) Look at the arp table to see if any other devices have announced themselves. This will discover mode devices, but the ARP cache lasts an unknown amount of time, so this will not correctly track leaving events.&lt;/li>
&lt;li>The &lt;code>def seen&lt;/code> method will set a key in &lt;code>redis&lt;/code> and expire it in &lt;code>30&lt;/code> seconds. The scan runs every &lt;code>10&lt;/code> seconds. So if we having seen a device in 2 or 3 scans then we assume it has left the network. We look at each of the keys in the redis set &lt;code>hosts&lt;/code> to see if it still exists, and if not, assume that the device has left.&lt;/li>
&lt;/ol>
&lt;h2 id="the-code">The Code&lt;/h2>
&lt;p>The only &lt;code>OSX&lt;/code> ism of this script is that its using &lt;code>osascript&lt;/code> to push a notification to the desktop that a device name has come on or left. See below for further things to play with:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="ch">#!/usr/bin/env ruby -wKU&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;resolv&amp;#39;&lt;/span>
&lt;span class="nb">require&lt;/span> &lt;span class="s1">&amp;#39;redis&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">notify&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">text&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">system&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;/usr/bin/osascript -e &lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">display notification &lt;/span>&lt;span class="se">\\\&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\\\&amp;#34;\&amp;#34;&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">scan&lt;/span>
&lt;span class="c1"># Look for the network broadcast address&lt;/span>
&lt;span class="n">broadcast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`ifconfig -a | grep broadcast`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="o">[-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="c1"># puts &amp;#34;Broadcast Address #{broadcast}&amp;#34;&lt;/span>
&lt;span class="k">unless&lt;/span> &lt;span class="n">broadcast&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">broadcast&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> doesn&amp;#39;t look correct&amp;#34;&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Ping the broadcast address 4 times and wait for responses&lt;/span>
&lt;span class="n">ips&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`ping -t 4 &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">broadcast&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/\n/&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=~&lt;/span> &lt;span class="sr">/(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):/&lt;/span>
&lt;span class="vg">$1&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="kp">nil&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">broadcast&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uniq&lt;/span>
&lt;span class="n">dns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Resolv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="c1"># Do a host name lookup on all of the addresses and put in redis&lt;/span>
&lt;span class="n">ips&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">ip&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="nb">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getname&lt;/span> &lt;span class="n">ip&lt;/span>
&lt;span class="n">seen&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># If you want to catch the other devices that don&amp;#39;t respond to pings&lt;/span>
&lt;span class="c1"># but have an arp, you can scan below. However, arp addresses get&lt;/span>
&lt;span class="c1"># cached for a while,&lt;/span>
&lt;span class="c1"># Catch the other devices that don&amp;#39;t respond to pings but have arp addresses&lt;/span>
&lt;span class="c1"># (pinging the broadcast address will help populate the local arp table)&lt;/span>
&lt;span class="c1"># `arp -a`.split( /\n/ ).collect do |x|&lt;/span>
&lt;span class="c1"># if x =~ /^([^\s]*).*\((\d+\.\d+\.\d+\.\d+)\)/&lt;/span>
&lt;span class="c1"># seen( $1 )&lt;/span>
&lt;span class="c1"># end&lt;/span>
&lt;span class="c1"># end&lt;/span>
&lt;span class="c1"># Look through all of the members in redis, and for any ones that have&lt;/span>
&lt;span class="c1"># expired say that they&amp;#39;ve left the system&lt;/span>
&lt;span class="n">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">smembers&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;hosts&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">|&lt;/span>
&lt;span class="k">unless&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="n">host&lt;/span>
&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">srem&lt;/span> &lt;span class="s2">&amp;#34;hosts&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">host&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> left the network&amp;#34;&lt;/span>
&lt;span class="n">notify&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> left the network&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Mark the name as being seen. Create a key with the name and expire it in&lt;/span>
&lt;span class="c1"># 30 seconds. Also add it to the hosts set. If we don&amp;#39;t see the name again&lt;/span>
&lt;span class="c1"># in 3 sweeps, the key will expire.&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">seen&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nb">name&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="nb">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">downcase&lt;/span>
&lt;span class="n">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;span class="k">unless&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span> &lt;span class="nb">name&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> joined the network&amp;#34;&lt;/span>
&lt;span class="n">notify&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> joined the network&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>
&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expire&lt;/span> &lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;30&amp;#34;&lt;/span>
&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sadd&lt;/span> &lt;span class="s2">&amp;#34;hosts&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">name&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c1"># Run forever&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="kp">true&lt;/span>
&lt;span class="nb">scan&lt;/span>
&lt;span class="nb">sleep&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>Other things to play around with:&lt;/p>
&lt;ol>
&lt;li>&lt;code>nmap -O hostname&lt;/code> will do a scan of the device to see what operation system it is. However, this is a little more intrusive, needs to run as root, and takes a while to run so it should be queued.&lt;/li>
&lt;li>Instead of using osascript, post the device joined, left, or presence events to an internal website to make a better UI.&lt;/li>
&lt;li>This would allow you to map multiple device names to a person. For example, I know that &lt;code>willschiphone5s.home&lt;/code> is my phone and &lt;code>combray.home&lt;/code> is my computer, but how do you keep a mapping of those names to people?&lt;/li>
&lt;li>&lt;code>MAC addresses&lt;/code> should be stable for devices once they may contact to the site. We can get this from the &lt;code>arp&lt;/code> tables, and those can&amp;rsquo;t be changed like the computer names can.&lt;/li>
&lt;/ol>
&lt;p>Remember, information can bleed and there&amp;rsquo;s a whole lot you can do to see about the people around you.&lt;/p></description></item></channel></rss>